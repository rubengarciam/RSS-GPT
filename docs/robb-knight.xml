<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
<title>Robb Knight • Posts • Atom Feed</title>
<link>https://rknight.me/subscribe/posts/atom.xml</link>


<item>
<title>New Logo, Who Dis?</title>
<link>https://rknight.me/blog/new-logo-who-dis/</link>
<guid>https://rknight.me/blog/new-logo-who-dis/</guid>
<content:encoded><![CDATA[
<p>Last week <a href="https://social.lol/@humdrum#.">Kevin</a> posted about running <a href="https://foofaraw.press/sponsorship/">sponsorships on Foofaraw</a> and I figured it would be a nice, small-scale experiment with running ads for <a href="https://echofeed.app">EchoFeed</a> so I bought three slots. The problem was I <em>hated</em> the EchoFeed logo and have done since the site launched. It does the job but it was put together last minute and I didn't have any better ideas at the time:</p>
<p><img alt="The original EchoFeed logo with a soundwave in the middle and two white squares around it" src="https://cdn.rknight.me/site/2025/echofeed-logo-original.jpg" /></p>
<p>I figured I might as well have another crack at it if I was going to be running ads. I came up with this (definitely not very original) idea of the RSS logo being part of a circle, messed around for a while and came up with version one:</p>
<p><img alt="Three circles but the right hand side is the RSS logo in orange" src="https://cdn.rknight.me/site/2025/echofeed-logo-new-v1.jpg" /></p>
<p>This was way better than the previous one and I sent a preview to Kevin and <a href="https://neatnik.net">Adam</a> for some feedback. Kevin suggested making the circles get thicker as they go outwards and also perhaps a stylised &quot;e&quot; in the centre. I tried that and couldn't get an &quot;e&quot; that I liked, but it did force me to try some more ideas and settle on what is now the logo for EchoFeed:</p>
<p><img alt="Three circles but the right hand side is the RSS logo in orange" src="https://cdn.rknight.me/site/2025/echofeed-logo-new-v2.jpg" /></p>
<p>I'm not designer so I can't pinpoint <em>why</em> this is more pleasing to my eye, but I like it. I updated the site, <a href="https://help.echofeed.app/buttons/">the buttons</a>, the <a href="https://beep.town/@echofeedamplify">Amplify account</a>, and the <a href="https://hub.7622.me/@echofeed">GTS account</a> with the new logo and now I have one I like, I can order some stickers.</p>
]]></content:encoded>
<pubDate>2025-04-29T21:12:26Z</pubDate>
</item>
<item>
<title>I Bought the Tomb Raider Pen</title>
<link>https://rknight.me/blog/i-bought-the-tomb-raider-pen/</link>
<guid>https://rknight.me/blog/i-bought-the-tomb-raider-pen/</guid>
<content:encoded><![CDATA[
<p>I resisted as long as I could, gang. I bought the <a href="https://rknight.me/blog/i-am-obsessed-with-this-tomb-raider-pen/">tomb raider pen I couldn't stop thinking about</a>.</p>
<p><img alt="A pen with Tomb Raider on it, on white paper. The paper says ugly and terrible printing with arrows pointing at the pen." src="https://cdn.rknight.me/site/2025/tomb-raider-pen-close-up-ugly.jpg" /></p>
<p>I got it for £25 which quite frankly seems like a bargain given the rarity of it — if it wasn't so ugly, I suspect this would sell for a lot more. It didn't come with the original ink cartridge it was sold with (it's 25 years old so that's reasonable) so I grabbed <a href="https://www.amazon.co.uk/dp/B000WKM50G">a converter on Amazon</a> and filled it with <a href="https://mountainofink.com/blog/diamine-havasu-turquoise">Diamine Havsu Turquoise</a>.</p>
<p><img alt="A white notepad with a blue and white fountain pen with Lara Croft design on top of it. Written on the paper is the name of the pen, Waterman Kultur, and the ink used, havusu torquise" src="https://cdn.rknight.me/site/2025/waterman-tomb-raider-test-page.jpg" /></p>
<p>The box I got is a bit knocked about but no more than to be expected give it's age, there's some ink on the barcode label, plus a couple of damp spots inside the box. It is absolutely as ugly as it looks in photos and it's quite light compared to my Lamy AL Star or even the Safari. This one came with a medium nib which writes thicker than a Lamy medium so it's not ideal for what I like but it is nice to write with in general.</p>
<p><img alt="The box and lid with Tomb Raider on it, the inner box has the Tomb Raider pen inside it" src="https://cdn.rknight.me/site/2025/tomb-raider-pen-and-box.jpg" /></p>
<p>I don't think anyone should buy this pen — there are loads of better options out there. That said, I still want that <a href="https://rknight.me/blog/i-am-obsessed-with-this-tomb-raider-pen/">signature edition one</a>.</p>
]]></content:encoded>
<pubDate>2025-04-15T13:32:11Z</pubDate>
</item>
<item>
<title>Hack Pompey: Portal Kombat</title>
<link>https://rknight.me/blog/hack-pompey-portal-kombat/</link>
<guid>https://rknight.me/blog/hack-pompey-portal-kombat/</guid>
<content:encoded><![CDATA[
<p>On Saturday I attended <a href="https://hackpompey.co.uk">Hack Pompey</a> which was in collaboration with <a href="https://portsmouth-port.co.uk/about-us/sustainability/sea-change/">Sea Change</a> this year:</p>
<blockquote>
<p>The Sea Change project will design, build and operate a ‘shore power’ system across the three busiest berths at Portsmouth International Port.</p>
</blockquote>
<p>Sea Change provided some data about port movements, carbon levels, and related things for attendees to use for their projects. They released it a few days beforehand and I was able to have a poke around and work out an idea. <a href="https://portkom.rknight.me">Portal Kombat</a>, which is legally distinct from Top Trumps.</p>
<p>Each card has data about the ship like size, length, weight, as well as number of visits and time spent in the port. It works just like Top Trumps: pick the stat you think will beat the other card and if you win, you get a point. In the case of Portal Kombat, you can see the name of the ship and the country of origin before guessing.</p>
<p><img alt="The Portal Kombat website showing two ships on different cards as well as a scoreboard" src="https://cdn.rknight.me/site/2025/portal-kombat.jpg" /></p>
<p>I was able to get images for all the ships from <a href="https://www.vesselfinder.com/vessels/details/9201750">Vessel Finder</a> thanks to their excellent URL design: <code>/vessels/details/ID</code> where <code>ID</code> is the reference number of the vessel.</p>
<p>While coming up with the name for the project I also came up with the phrase &quot;Yacht or Not&quot;<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> and I wanted to make use of it. So after every three points earned, you can play a round of Yacht or Not: based only on the name, guess if it's a yacht or not. The list came from <a href="https://www.vesselfinder.com/ports/GBGOS001">Vessel Finder's port lookup</a> where I looked at Gosport marina and grabbed the vessel names.</p>
<p><img alt="Yacht or Not asking if Vulcan Spirit is a yacht or not" src="https://cdn.rknight.me/site/2025/yacht-or-not.jpg" /></p>
<p>One update I have made since saturday is that &quot;time in port&quot; requires you to get a <em>lower</em> score to win, not a higher one because the boats are usually on diesel to keep everything running even when docked - something Sea Change are trying to fix.</p>
<p>As with most hackathon projects, there's more I could do but I probably won't but if I change my mind:</p>
<ul>
<li>Highlight which stat someone picked</li>
<li>Sound effects</li>
<li>Store previous games in local storage</li>
<li>Focus on carbon emissions when that is selected</li>
</ul>
<p>The day ran smoothly as usual and I'm looking forward to the next one.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>For the youths, &quot;hot or not&quot; was a website once <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2025-03-31T11:21:32Z</pubDate>
</item>
<item>
<title>One Line Pen Reviews</title>
<link>https://rknight.me/blog/one-line-pen-reviews/</link>
<guid>https://rknight.me/blog/one-line-pen-reviews/</guid>
<content:encoded><![CDATA[
<p>There's no way I can write reviews of all the pens I’ve bought over the past two months so instead here's some one line reviews of them because I told <a href="https://www.penaddict.com/">Brad</a> I'd do it. Some general things I've realised:</p>
<ul>
<li>I much prefer smaller nibs, gotta be 0.7 or less, ideally 0.5</li>
<li>I like pink and purple pens but tbh anything that isn't black or white I'm into</li>
<li>Yellow ink is a bit rubbish</li>
</ul>
<p>Anyway, here we go.</p>
<p><img alt="A notepad with samples of all the different pens. Some of the pens are on the left hand page." src="https://cdn.rknight.me/site/2025/one-line-reviews-pens.jpg" /></p>
<h3>Standard Pens</h3>
<p><strong>Uni-Ball Jetstream, various colors</strong>: Very nice</p>
<p><strong>Uni-Ball Jetstream Lite</strong>: Also nice</p>
<p><strong>Uni-Ball One</strong>: Lovely ink</p>
<p><strong>Zebra Z-Grip 1mm</strong>: Too thick for me</p>
<p><strong>Iconic gel ink</strong>: Amazing colors, really nice to write with</p>
<p><strong>Zebra Mark On</strong>: These are bloody great. The 0.4 is a bit too scratchy for me though.</p>
<p><strong>Spoke Click Model C</strong>: Hefty, feels great in the hand. Swapped in a Parker .55 gel refill.</p>
<p><strong>Muji .38 Gel</strong>: Very nice, doesn't feel scratchy to write with like the 0.4 mark on.</p>
<p><strong>Uni-Ball EMOTT</strong>: Smooth but I've not used these much yet.</p>
<p><strong>Uni-Ball Pin fineline and Sakura Pigma Micron</strong>: Not used either of these yet but I got the microns in the black and gold edition because they're pretty.</p>
<p><strong>Energel</strong>: It had Pikachu on so I had to buy it. Smooth writing.</p>
<p><strong>Muji retractable highligher</strong>: A <em>retractable</em> hightlight? Now I've seen everything. Nice color on this one.</p>
<p><strong>Zebra Mildliners</strong>: <a href="https://rknight.me/blog/how-many-mildliner-colours-are-there/">Fuck yes</a>.</p>
<h3>Fountain Pens</h3>
<p><strong>Platinum Preppy 03</strong>: I like these, just don't bother with the yellow ink, it sucks.</p>
<p><strong>Lamy AL-Star</strong>: I'm definitely leaning towards preferring the metal AL-Star over the Safari but I need to use them both a bit more to fully pick a side. I currently have the Fiery and Pacific Blue in rotation.</p>
<p><strong>Lamy Safari</strong>: As above, still nice. Currently I have pink, green, and yellow.</p>
<h3>Pencils</h3>
<p><strong>Uni Kuru Toga 0.3mm</strong>: Another one I bought because of Pikachu. 0.3 is too small for a pencil for me.</p>
<p><strong>Tombow mono graph</strong>: Nice enough, it's a pencil.</p>
<p><strong>Sun-Star Metacil retractable</strong>: I'd not heard of &quot;forever pencils&quot; before, this one is cool.</p>
<p><strong>Pentel P203/P205/P207/P209</strong>: These are bloody lovely, 7mm is perfect for general use for me.</p>
<h3>Miscellany</h3>
<p><img alt="Multiple notepads spread out on a desk" src="https://cdn.rknight.me/site/2025/one-line-reviews-notebooks.jpg" /></p>
<p><strong>Ottergami Dotgrid A5</strong>: A5 is the perfect size for a bullet journal for me but the paper in this isn't as nice as I'd like. Will be switching to something else when it's finished.</p>
<p><strong>Paperian Memo Pad</strong>: It's cute.</p>
<p><strong>Life Noble notepads</strong>: I have an A5 and a B7, the paper is glorious to write on.</p>
<p><strong>Traveler's &quot;Let’s Go on a Road Trip&quot; notebook</strong>: This is the one I can't bring myself to use yet. It's just so nice.</p>
<p><strong>Lihit Lab compact pen case</strong>: <a href="https://rknight.me/blog/lihit-labs-compact-pen-case-review/">I love it, I reviewed it here</a></p>
<p>I also have some tape I like:</p>
<ul>
<li>Traveler's Factory boarding pass</li>
<li>World Craft Peek-a-Boo cats</li>
<li>Generic pink</li>
</ul>
<p>So...yeah. That's a lot of pens in a short period of time.</p>
]]></content:encoded>
<pubDate>2025-03-28T12:36:46Z</pubDate>
</item>
<item>
<title>I Am Obsessed With this Tomb Raider Pen</title>
<link>https://rknight.me/blog/i-am-obsessed-with-this-tomb-raider-pen/</link>
<guid>https://rknight.me/blog/i-am-obsessed-with-this-tomb-raider-pen/</guid>
<content:encoded><![CDATA[
<p>Last week I happened across a listing for a Lara Croft/Tomb Raider Waterman fountain pen, specifically this model:</p>
<p><img alt="Tomb Raider Snow fountain pen in the box" src="https://cdn.rknight.me/site/2025/tomb-raider-pen-snow.jpg" /></p>
<p>We discussed it in <a href="http://rknight.me/save/omglol">the omg.lol</a> discord and I said:</p>
<blockquote>
<p>Why was it made? Who is it for? What market analysis led them to produce such an item</p>
<p>Who bought this? It wasn’t given away, someone paid money for it</p>
</blockquote>
<p><a href="https://lewisdale.dev">Lewis</a> pointed out it was me. I was the target market. He was right. I spent a long time thinking about if I wanted to spend £35 on this pen and ultimately decided it is ugly as fuck so I didn't. Then I thought maybe I did and I kind of still do. I can't stop thinking about it. I'm obsessed.</p>
<p>I looked around to find out some more info about this pen and it turns out there were three designs available applied to fountain pens and a ballpoint as you can see in this natty...website? DVD menu? Not a clue to be honest. These photos came from <a href="https://core-design.com/merchandising_pens.html">this core design page about the pens</a>.</p>
<p><img alt="A website showing all three Tomb Raider pens" src="https://cdn.rknight.me/site/2025/waterman-menu-for-tomb-raider-pens.jpg" /></p>
<p>There's a bunch of different options including this set with some kind of &quot;build your own desktop&quot; software on it. <em>INSTALL ME IF YOU DARE</em>. Scary.</p>
<p><img alt="A CD collector set with a pen and a CD at the top" src="https://cdn.rknight.me/site/2025/waterman-cd-collector-pen.jpg" /></p>
<p>I kind of want one of these purely for the weirdness of it but what I <em>really</em> want is this: the signature limited edition. Now <em>this</em> is a classy pen<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. Having said that, I don't know what these sell for (there's no sold listings on eBay to reference) and I suspect it'll be more than I'll want to pay. If anyone has one of these knocking about, let me know.</p>
<p><img alt="A blue box with Lara Croft written on it" src="https://cdn.rknight.me/site/2025/signature-edition-pen-box-closed.jpg" /></p>
<p><img alt="A blue box with a blue pen inside" src="https://cdn.rknight.me/site/2025/signature-edition-pen-box-open.jpg" /></p>
<p><img alt="A closeup of a pen showing the engraved Lara Croft signature" src="https://cdn.rknight.me/site/2025/signature-edition-pen-closeup.jpg" /></p>
<p>Links:</p>
<ul>
<li><a href="https://www.flickr.com/photos/94031219@N00/8728668739">Tomb Raider Waterman Pens on Flickr</a></li>
<li><a href="https://core-design.com/merchandising_pens.html">Core Design Merchandise</a></li>
<li><a href="https://tomb-raider-merchandise.tumblr.com/post/147850025635/lara-croft-waterman-fountain-pen-one-of-the">Lara Croft Waterman Fountain Pen</a></li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>As classy as a video game pen collaboration from the 90s can be <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2025-03-25T20:58:56Z</pubDate>
</item>
<item>
<title>I Was a Guest on The Pen Addict</title>
<link>https://rknight.me/blog/i-was-a-guest-on-the-pen-addict/</link>
<guid>https://rknight.me/blog/i-was-a-guest-on-the-pen-addict/</guid>
<content:encoded><![CDATA[
<p>While <a href="https://www.instagram.com/p/DGdjaEDCcby/">Myke is on paternity leave</a>, Brad asked me to be a guest on The Pen Addict podcast to discuss my <a href="https://rknight.me/blog/tags/analogue/">newly-found analogue tool addiction</a>.</p>
<p>We discussed the upcoming <a href="https://www.penchalet.com/fine_pens/fountain_pens/lamy_al-star_special_edition_fountain_pen.html">special edition Lamy Al Stars</a> and <a href="https://www.penchalet.com/ink_refills/fountain_pen_ink/lamy_special_edition_bottle_fountain_pen_ink.html">related inks</a>, and the <a href="https://www.instagram.com/p/DHIqirRsZj8/">Caran d’Ache Black Edition</a> before getting into my journey into bullet journaling, pens, pencils, and notebooks.</p>
<p><a href="https://relay.fm/penaddict/657">Listen to The Pen Addict 657: Are You Coming For Me?</a></p>
<p>Since recording the show on Sunday, I got <a href="https://rknight.me/blog/a-lucky-lamy-listing/">six more Lamy fountain pens</a>.</p>
]]></content:encoded>
<pubDate>2025-03-19T12:30:24Z</pubDate>
</item>
<item>
<title>A Lucky Lamy Listing</title>
<link>https://rknight.me/blog/a-lucky-lamy-listing/</link>
<guid>https://rknight.me/blog/a-lucky-lamy-listing/</guid>
<content:encoded><![CDATA[
<p>A few days ago while browsing <a href="https://www.vinted.co.uk/">Vinted</a> I happened upon a listing with the title &quot;<em>Ink Pens</em>&quot; and a description: &quot;<em>6 ink pens with some spare cartridges</em>&quot;. The photo with the listing clearly showed Lamy cartridges but there wasn't an easy way to determine if the pens were legit Lamy Safaris/AL Stars or just very good replicas (of which I've seen quite a few on Vinted).</p>
<p><img alt="A photo of some Lamy ink cartridges and six Lamy pens of various colors" src="https://cdn.rknight.me/site/2025/lamy-safari-vinted-listing.jpg" /></p>
<p>The blue one on the far right was the only one I was reasonably sure was a Lamy because of the logo engraving on it but I wasn't 100% convinced. Having said all that, the listing was £7 including postage so I figured it was worth the risk and it turns out I was right.</p>
<p>The parcel arrived this morning and aside from getting some extra cartridges on top of what was in the photo, there were three Safaris and three AL Stars. The AL Star colours are Ocean Blue, Black Purple, and <em>I think</em> Pacific Blue but it could also be Turmaline. If anyone knows for sure let me know.</p>
<p><img alt="Six Lamy pens next to a peice of paper with some writing tests on it" src="https://cdn.rknight.me/site/2025/lamy-safari-al-star-test.jpg" /></p>
<p>All the Safaris were dried up but I was able to get pink and yellow up and running again. Green is going to need a more thorough cleaning. For £7 this was an absolute bargain and I still can't quite believe my luck.</p>
]]></content:encoded>
<pubDate>2025-03-18T13:12:05Z</pubDate>
</item>
<item>
<title>Things I Like: The Severance Podcast</title>
<link>https://rknight.me/blog/things-i-like-the-severance-podcast/</link>
<guid>https://rknight.me/blog/things-i-like-the-severance-podcast/</guid>
<content:encoded><![CDATA[
<p>I love hearing all the behind the scenes stuff but the guests really make the show. Gwendoline Christie in particular was incredible. I don't know where to link because the show doesn't have a website because big podcasts don't know how to podcast and <a href="https://www.audacy.com">Audacy</a>, who produce the show, has a website that &quot;isn't currently available in the EU&quot;. I'm not in the EU Audacy but whatever.</p>
<p>Here's <a href="https://podcasts.apple.com/us/podcast/the-severance-podcast-with-ben-stiller-adam-scott/id1788381175">the Apple podcasts link</a>.</p>
]]></content:encoded>
<pubDate>2025-03-17T12:31:25Z</pubDate>
</item>
<item>
<title>Music, Games, and Skateboarding</title>
<link>https://rknight.me/blog/music-games-and-skateboarding/</link>
<guid>https://rknight.me/blog/music-games-and-skateboarding/</guid>
<content:encoded><![CDATA[
<p>For Christmas 2001 I got a Playstation 2 and a copy of Tony Hawk's Pro Skater 3<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. I had played Tony Hawk 1 and 2 at a friend's house a handful of times but I'd never spent significant time with either of the games.</p>
<p>That Christmas break I spent every waking moment playing. This was the first time I'd been obsessed with a video game. I'd go to bed thinking about it, wake up thinking about it, and spend days at school thinking about how to get better scores or where the hidden tape might be on the cruise ship. <em>Obsessed</em>.</p>
<p>Every run was two minutes and I must have done hundreds over the years which means I've listened to the first two minutes of some <a href="https://vgost.fandom.com/wiki/Tony_Hawk%27s_Pro_Skater_3">absolute bangers</a> <em>a lot</em>. To the point that when I'd eventually listen to the full tracks I'd be surprised to hear anything past 120 seconds. The soundtracks to all of the games are iconic<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>. I went and <a href="https://rknight.me/almanac/events/2008-10-16-zebreahead/">saw Zebrahead live</a> as a direct result to hearing them in this game. I still listen to most of the bands to this day<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>.</p>
<p>I, along with everyone else back, took up skateboarding because of the games.</p>
<p>This is why I'm so excited for the <a href="https://www.tonyhawkthegame.com">3 and 4 remaster</a>. It shaped my love of video games <em>and</em> music<sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I also got a copy of <a href="https://en.wikipedia.org/wiki/Shadow_of_Memories">Shadow of Memories</a>, a criminally overlooked game, but this post isn't about that. <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>I have most of the soundtracks as playlists on <a href="https://music.apple.com/profile/rknightuk">on Apple Music</a> <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn3"><p>I'm <a href="https://music.apple.com/gb/playlist/tony-hawks-pro-skater-3/pl.u-kLlLC7BzaLW">listening right now</a> <a class="footnote-backref" href="#fnref3">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn4"><p>I still love skateboarding but as a viewer and not a participator - the knees I have now can't possibly be the same ones I had when I was a teenager. <a class="footnote-backref" href="#fnref4">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2025-03-04T14:02:47Z</pubDate>
</item>
<item>
<title>Link Dump #6</title>
<link>https://rknight.me/blog/link-dump-6/</link>
<guid>https://rknight.me/blog/link-dump-6/</guid>
<content:encoded><![CDATA[
<p>A whole load of stuff this round, I've was ill a lot of last week, got very behind on everything, so here's all the hot links I had saved.</p>
<hr />
<p><a href="https://aresluna.org/the-hardest-working-font-in-manhattan/">The hardest working font in Manhattan</a> is a deep dive into a font never designed to show up pretty much everywhere.</p>
<p><a href="https://www.makingsoftware.co/">Making Software</a> is a new book by Dan Hollick but what struck me was the hard-drive illustration on the home page; it's gorgeous.</p>
<p>I used to archive Throwback Thursday playlists when I used Spotify but someone is doing it for <a href="https://github.com/mackorone/spotify-playlist-archive?tab=readme-ov-file">all sorts of public playlists over there</a>.</p>
<p><a href="https://social.lol/@humdrum/114037621412211034">Kevin wrote about</a> how he keeps a blank page in Pixelmator open all day to fill with nice messages and other things he comes across, then prints it to stick in a notebook. I love this idea.</p>
<p>I also love <a href="https://jenschuetz.com/journal/2024-in-stitches/?v=1">2024 in Stitches</a>.</p>
<p>I happened across <a href="https://simonwillison.net/2020/Oct/9/git-scraping/">track changes over time by scraping to a Git repository</a> while remembering how <a href="https://github.com/ThinkUpLLC/ThinkUp">Thinkup</a> would track a person's changes to their bio on Twitter.</p>
<p><a href="https://weeks.ginatrapani.org/">My Life in Weeks</a> is fun. Not sure I want to do one though.</p>
<p><a href="https://cjs-wunderkammer.ghost.io/a-f-n-in-severance-2/">A f******* **n in Severance...?!?</a>. Pen stuff becuase I'm a pen person now.</p>
<p>Adam had us all <a href="https://rknight.me/notes/202502261007/">fingering each other last week</a> which led me down a rabbit hole of <a href="https://en.wikipedia.org/wiki/Finger_(protocol)">the finger protocol</a> and eventually to <a href="https://plan.cat">plan.cat</a>.</p>
<p>I don't recall how I found <a href="https://tweek.so/">Tweek Calendar</a> but it's a &quot;minimal to do list and weekly task planner app&quot;. One page per week, it's printable, good stuff.</p>
<p><a href="https://strftime.net/">Strftime</a> is a handy reference for formatting dates.</p>
<p>I don't know when I'll need to <a href="https://aleclownes.com/2017/02/01/crt-display.html">create a CRT with CSS</a> but I'll find a reason to do it.</p>
<p>If such a thing as a Trump-proof stack exists if you're a US citizen <a href="https://www.joanwestenberg.com/american-tech-is-compromised-heres-my-replacement-stack-2/">this is probably it</a>.</p>
<p>I had no idea <a href="https://robservatory.com/create-macos-automations-using-a-little-known-app/">Panel Editor</a> existed in MacOS and it looks pretty useful.</p>
<p>Finally <a href="https://www.uzine.net/article63.html">an indie web manifesto</a> from 1997:</p>
<blockquote>
<p>We invite the users to realize the essential role they play on the Internet: when they start their own website, when they send comments, criticisms or warm letters to the webmasters, when they exchange tips and hints in the newsgroups or by e-mail, they provide an independent and free source of information that others would like to sell and control. Education, information, culture and debate can only come from users, independent webmasters, academic or associative organizations.</p>
</blockquote>
]]></content:encoded>
<pubDate>2025-03-03T21:31:09Z</pubDate>
</item>
<item>
<title>Quiet</title>
<link>https://rknight.me/blog/quiet/</link>
<guid>https://rknight.me/blog/quiet/</guid>
<content:encoded><![CDATA[
<p>There was a post on Reddit yesterday that I didn't save, and now can't find, that said something along the lines of &quot;I'm trying out Mastodon but my timeline is too quiet&quot;.</p>
<p>One of the comments noted the lack of algorithm on Mastodon which led me to a realisation that seems obvious in hindsight: no matter if you follow one person or a thousand, the algorithm-driven social media platforms will make sure there's <em>always</em> stuff in your timeline. Even if you follow no one, you're getting a full timeline.</p>
<p>No conclusion to draw here, just an observation.</p>
]]></content:encoded>
<pubDate>2025-02-16T22:21:31Z</pubDate>
</item>
<item>
<title>How Many Mildliner Colours Are There?</title>
<link>https://rknight.me/blog/how-many-mildliner-colours-are-there/</link>
<guid>https://rknight.me/blog/how-many-mildliner-colours-are-there/</guid>
<content:encoded><![CDATA[
<p>Remember <a href="https://rknight.me/blog/zebra-big-30-pack-of-pens/">a week ago</a> when I bought some Zebra Mildliners? Well now I have all of them because I have no self control. But <em>how many are there?</em>. If you check the Zebra website, you'd see <a href="https://www.zebrapen.com/pages/mildliner-highlighter-color-chart?srsltid=AfmBOoqP8E9bStyvLEqug7cNSckEA_aZ2UecyVmE70DKhV0-SdpyOe_u">this natty graphic</a> that shows there are 35 colours available across seven sets. You might also find <a href="https://www.afth.co.uk/zebra-pens---mildliner-set---35pk-50828-p.asp">this &quot;complete&quot; set</a> and assume that 35 is the number but it's not.</p>
<p>There are actually 36 colours - there is an secondary version of the Neutral set called &quot;Natural&quot;, which is sold in the Japanese market. This set has dusty pink, instead of copper. Dusty pink appears in some other sets (that aren't part of the core seven) so it's much easier to find that one separately, which is exactly what I did to complete my collection<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p>
<p>Here's an updated version of Zebra's chart to include the variations:</p>
<p><img alt="Mildliners color chart with all 36 colors on it" src="https://cdn.rknight.me/site/2025/mildliners-color-chart-updated-36-colors.jpg" /></p>
<p>As I was finishing this post, I did find official confirmation of 36 colours on Zebra's website<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>, in <a href="https://files.elfsightcdn.com/d1d61ad2-9f2a-49f9-a83b-e33cb46bd033/bf609a33-7e4d-45d9-84a9-53b4c96b500e/Mildliner_US-Japan_Cross_Reference.pdf">this PDF</a> which is named <code>Mildliner_US-Japan_Cross_Reference</code>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>It hasn't arrived yet but when it does, I'll post an updated <a href="https://rknight.me/notes/202502151742/">test page</a> <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>Only by landing on <a href="https://www.zebrapen.com/pages/zebrapengowildpartnership">this Go Wild partnership page</a> <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2025-02-15T23:44:05Z</pubDate>
</item>
<item>
<title>We Need to Talk About Zoe Being Wrong About Islands</title>
<link>https://rknight.me/blog/we-need-to-talk-about-zoe-being-wrong-about-islands/</link>
<guid>https://rknight.me/blog/we-need-to-talk-about-zoe-being-wrong-about-islands/</guid>
<content:encoded><![CDATA[
<p>Firstly, I'd like to thank my right honorable friend for giving me an advanced copy of her post.</p>
<p>A few months ago, as we are want to do, <a href="https://zoeaubert.me">Zoe</a> and I got into a heated discussion about if Portsmouth is an island or not. Then <a href="https://zoeaubert.me/blog/we-need-to-talk-about-islands/">she went a bit overboard in this post</a> correcting me about the density of Portmouth's population which is fair enough because I was misled by Wikipedia.</p>
<p>The second half of her post, however, is nothing short of lunacy, claiming Portsmouth isn't an island because you could get there using <a href="https://dictionary.cambridge.org/dictionary/english/shanks-s-pony">shank's pony</a>:</p>
<blockquote>
<p>If you can walk to it, it’s not an island</p>
</blockquote>
<p>An outrageous claim. I'd like to paraphrase the great Haddaway and also start like a really crap best man's speech:</p>
<p>What is <s>love</s> an island? <a href="https://www.merriam-webster.com/dictionary/island">Merriam-Webster defines it as</a>:</p>
<blockquote>
<p>a tract of land surrounded by water and smaller than a continent</p>
</blockquote>
<p>so does the <a href="https://dictionary.cambridge.org/dictionary/english/island">Cambridge Dictionary</a>:</p>
<blockquote>
<p>a piece of land completely surrounded by water:</p>
</blockquote>
<p>and <a href="https://www.britannica.com/science/island">Britannica</a>, <a href="https://www.collinsdictionary.com/dictionary/english/island">Collins English Dictionary</a>, <a href="https://www.dictionary.com/browse/island">Dictionary.com</a>, and <a href="https://education.nationalgeographic.org/resource/island/">National Geographic</a>. And <em>every other dictionary in the land</em> including the Chambers School Dictionary I got given by my English teacher when I left school<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>:</p>
<p><img alt="A dictionary definition of island" src="https://cdn.rknight.me/site/2025/island-definition-chambers-school-dictionary.jpg" /></p>
<p>Even school children know what an island is. Portsmouth is, last time I checked, smaller than a continent. It's also surrounded by water.</p>
<p>There is no definition I could find that has a caveat of &quot;If you can walk to it, it's not an island&quot;. The <a href="https://en.wikipedia.org/wiki/Tidal_island">tidal island list</a> Zoe mentioned in her post is lacking a vital entry: Portsmouth.</p>
<p>While writing this, I <em>did</em> came across some anti-island propaganda from none other than the biggest tech company in the world. Apple Maps does not show Portsmouth as an island. Shenanigans! I shall be emailing Tim Apple post haste<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>.</p>
<p><img alt="Apple Maps not showing Portsmouth as an island" src="https://cdn.rknight.me/site/2025/wtf-apple-portsmouth-map.png" /></p>
<p>Anyway, you don't get to argue with the dictionary, Zoe. Words mean things. Island means surrounded by water. Like Portsmouth.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>This is the dictionary I used for 3 years in secondary school <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>This was funnier before Apple decided to <a href="https://apnews.com/article/apple-maps-gulf-of-mexico-gulf-of-america-ea9f17241ad5c42880708f27ffe18baf">bend over for fascists</a> <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2025-02-13T10:00:52Z</pubDate>
</item>
<item>
<title>Lihit Labs Compact Pen Case Review</title>
<link>https://rknight.me/blog/lihit-labs-compact-pen-case-review/</link>
<guid>https://rknight.me/blog/lihit-labs-compact-pen-case-review/</guid>
<content:encoded><![CDATA[
<p>I started bullet journalling <a href="https://rknight.me/blog/biting-the-bullet/">a month ago</a> and it's my understanding that part of getting into analogue tools is buying too many pens and shit. Well I have bought a lot of pens and shit since I started.</p>
<blockquote>
<p>I feel like &quot;a lot of pens&quot; is underselling it</p>
</blockquote>
<p><a href="https://social.lol/@lewis/113990259881243798">Thanks for that, Lewis</a>.</p>
<p>I needed a case for the handful of pens, pencils, and a ruler I want to use in my journal so I went on a hunt for something slim and came across the <a href="https://www.eng.lihit-lab.com/a-7687-compact-pen-case/">Lihit Lab Compact Pen Case</a>.</p>
<p><img alt="A red lihit labs pen case closed on a desk" src="https://cdn.rknight.me/site/2025/lihit-labs-compact-pen-case-closed.jpg" /></p>
<p>It has a double zip, two pockets for pens, plus smaller slots for other things. The website says it's water and stain repellent although I haven't tested that claim. I imagine it could hold maybe ten pens but it might be a bit of a tight squeeze - with two fountain pens on the left hand side and a full right side made it a bit too bulky for my liking.</p>
<p>It comes in four relatively boring colors so I went with red. It costs ~£10 which is very reasonable, the build quality seems solid, and it does exactly what I wanted. I'm also considering buying a second one for some of my smaller DIY stuff.</p>
<p><img alt="A red lihit labs pen case open on a desk with pens, pencils, and a ruler in it" src="https://cdn.rknight.me/site/2025/lihit-labs-compact-pen-case-open.jpg" /></p>
<p><a href="https://cultpens.com/products/lihit-lab-compact-pen-case">Cult Pens have it available for £9.50 right now</a>.</p>
]]></content:encoded>
<pubDate>2025-02-12T12:32:15Z</pubDate>
</item>
<item>
<title>My First Digital Photo</title>
<link>https://rknight.me/blog/my-first-digital-photo/</link>
<guid>https://rknight.me/blog/my-first-digital-photo/</guid>
<content:encoded><![CDATA[
<p>Adam <a href="https://social.lol/@adam/113969207723093283">tooted earlier</a> about the first photo he ever took with a digital camera and it got me thinking about what mine was. Initially I thought it was this photo of Manhattan take from the Empire State Building in February 2006 taken with a <a href="https://www.dpreview.com/products/fujifilm/compacts/fuji_finepixa345z">Fujifilm FinePix A345</a>.</p>
<p><img alt="New York taken from the Empire State Building" src="https://cdn.rknight.me/site/2025/2006-02-24-new-york.jpg" /></p>
<p>However, when I got onto a proper computer and I could check, I found this photo of my dad's MGZS which I took on his <a href="https://www.digitalkameramuseum.de/en/cameras/item/fujifilm-dx-5">Fujifilm DX 5</a>, a month prior to the New York photo.</p>
<p><img alt="A green MG ZS taken from low down at the front of the car" src="https://cdn.rknight.me/site/2025/2006-01-27-mg-zs.jpg" /></p>
<p>A couple of years before at school I had used a <a href="http://camera-wiki.org/wiki/Sony_Mavica_FD75">Sony Mavica FD75</a> - this fucker took a 3.5&quot; floppy disk for storage. What a time to be alive. Sadly I don't have any photos from it but I suspect they were not good.</p>
]]></content:encoded>
<pubDate>2025-02-09T00:15:26Z</pubDate>
</item>
<item>
<title>A Small Rabbit Hole of Utility Knives</title>
<link>https://rknight.me/blog/a-small-rabbit-hole-of-utility-knives/</link>
<guid>https://rknight.me/blog/a-small-rabbit-hole-of-utility-knives/</guid>
<content:encoded><![CDATA[
<p><img alt="The SlideWinder, the Palmer, and the Keen on a white background" src="https://cdn.rknight.me/site/2025/utility-knives.jpg" /></p>
<p><a href="https://thejamesbrand.eu/products/the-palmer?variant=51640084726126">The Palmer utility knife</a> was mentioned on the latest episode of <a href="https://www.relay.fm/penaddict/651">The Pen Addict</a> and it sent me down a rabbit hole, albeit a small one. Studio Neat have the <a href="https://www.studioneat.com/products/keen?variant=48579435266325">Keen</a> which is shipping this summer and costs £78 and then there's the <a href="https://www.outdooredge.com/products/slidewinder?variant=8737499840548">SlideWinder</a> at £15. Told you it was a small hole.</p>
<p>I am mostly tempted by the Palmer in atomic purple - the design of it appeals to me more than the others. I nearly bought it until I considered it for a moment; I just wouldn't use this kind of knife that often.</p>
<p>It is fun to see a bunch of different companies tackling this very specific problem though.</p>
]]></content:encoded>
<pubDate>2025-02-06T20:18:28Z</pubDate>
</item>
<item>
<title>Zebra Big 30 Pack of Pens</title>
<link>https://rknight.me/blog/zebra-big-30-pack-of-pens/</link>
<guid>https://rknight.me/blog/zebra-big-30-pack-of-pens/</guid>
<content:encoded><![CDATA[
<p>I wanted to buy a pack of <a href="https://www.zebrapen.com/pages/discover-mildliner">mildliners</a> to add some colour to my <a href="https://rknight.me/blog/biting-the-bullet/">bullet journal</a> and they mostly come in packs of five which is plenty for one person. When I googled to see who stocked them I saw <a href="https://www.tesco.com/groceries/en-GB/products/312091022">this 30 pack</a> that comes with 15 mildliners, 15 pens, and a natty pen holder and it was only £10 so if I'd be losing money if I didn't buy it<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p>
<p><img alt="Pens in a holder on my desk" src="https://cdn.rknight.me/site/2025/zebra-pens-in-holder.jpg" /></p>
<p>All the cool kids do little test pages so here you go, I did one at the back of my notebook. I <em>really</em> like the vermilion and the smoke blue.</p>
<p><img alt="My notebook on a deskmat showing a pixel version of Stephen Hackett. The notebook has samples of all the highlighters" src="https://cdn.rknight.me/site/2025/mildliner-test.jpg" /></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I'm not an economist, leave me alone <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2025-02-04T19:46:17Z</pubDate>
</item>
<item>
<title>Loading Pixelfed Photos with Eleventy</title>
<link>https://rknight.me/blog/loading-pixelfed-photos-with-eleventy/</link>
<guid>https://rknight.me/blog/loading-pixelfed-photos-with-eleventy/</guid>
<content:encoded><![CDATA[
<p>I'm <a href="https://rknight.me/blog/doubts-about-pixelfed/">no longer using Pixelfed</a> so the code I used to pull in my latest photos into Eleventy is redundant but it might be useful to other people. For <code>USER_ID</code>, grab this by going to your profile and it will be in the URL. Get an <code>API_KEY</code> from account settings.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// _data/pixelfed.js</span><br /><br /><span class="token keyword">const</span> fetch <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"node-fetch"</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> <span class="token punctuation">{</span> AssetCache <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@11ty/eleventy-fetch"</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> <span class="token constant">USER_ID</span> <span class="token operator">=</span> <span class="token string">'12345'</span><br /><span class="token keyword">const</span> <span class="token constant">API_KEY</span> <span class="token operator">=</span> <span class="token string">'ABCDE'</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Fetching pixelfed"</span><span class="token punctuation">)</span><br />    <span class="token keyword">let</span> asset <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">AssetCache</span><span class="token punctuation">(</span><span class="token string">"pixelfed"</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span>asset<span class="token punctuation">.</span><span class="token function">isCacheValid</span><span class="token punctuation">(</span><span class="token string">'1h'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Returning pixelfed from cache"</span> <span class="token punctuation">)</span><br />        <span class="token keyword">return</span> <span class="token keyword">await</span> asset<span class="token punctuation">.</span><span class="token function">getCachedValue</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://pixelfed.social/api/v1/accounts/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">USER_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/statuses</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />            <span class="token string-property property">'Authorization'</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">API_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br />        <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> <span class="token punctuation">{</span><br />            <span class="token literal-property property">url</span><span class="token operator">:</span> p<span class="token punctuation">.</span>url<span class="token punctuation">,</span><br />            <span class="token literal-property property">date</span><span class="token operator">:</span> p<span class="token punctuation">.</span>created_at<span class="token punctuation">,</span><br />            <span class="token literal-property property">desc</span><span class="token operator">:</span> p<span class="token punctuation">.</span>content<span class="token punctuation">,</span><br />            <span class="token literal-property property">image</span><span class="token operator">:</span> p<span class="token punctuation">.</span>media_attachments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>preview_url<span class="token punctuation">,</span><br />            <span class="token literal-property property">image_desc</span><span class="token operator">:</span> p<span class="token punctuation">.</span>media_attachments<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>description<span class="token punctuation">,</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">await</span> asset<span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token string">"json"</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">return</span> data<br /><span class="token punctuation">}</span></code></pre>
<p>Then in my template:</p>
<pre class="language-handlebars"><code class="language-handlebars">// index.njk<br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><br />	{%- for photo in pixelfed %}<br />		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">photo</span><span class="token punctuation">.</span><span class="token variable">url</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />			<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">photo</span><span class="token punctuation">.</span><span class="token variable">image</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">photo</span><span class="token punctuation">.</span><span class="token variable">image_desc</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br />		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><br />	{% endfor %}<br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
]]></content:encoded>
<pubDate>2025-02-03T22:21:01Z</pubDate>
</item>
<item>
<title>Music Questions Challenge</title>
<link>https://rknight.me/blog/music-questions-challenge/</link>
<guid>https://rknight.me/blog/music-questions-challenge/</guid>
<content:encoded><![CDATA[
<p>I was tagged by <a href="https://flamedfury.com/posts/music-questions-challenge/">Flamed</a> and someone else in <a href="https://social.lol/@adam/113932177125424355">the omg.lol Signal chat</a> (but there's too many messages to check who it was).</p>
<h3>What are five of your favourite albums?</h3>
<p>I already wrote about this in a post entitled &quot;<a href="https://rknight.me/blog/the-perfect-album/"><em>The Perfect Album</em></a>&quot; so I shall refer you there. Although I'd definitely add <a href="https://musicthread.app/link/2osbHpeiWWq4ut3gbn15sgi7qMf">From Zero</a> to the list of perfect albums.</p>
<h3>What are five of your favourite songs?</h3>
<ul>
<li>Faint - Linkin Park</li>
<li>Letters to You - Finch</li>
<li>Cute Without the 'E' (Cut From the Team) - Taking Back Sunday</li>
<li>Where I Belong - Simple Plan &amp; State Champs</li>
<li>Crashed the Wedding - Busted</li>
</ul>
<h3>Favourite instrument(s)?</h3>
<p>Guitar.</p>
<h3>What song or album are you currently listening to?</h3>
<p>Bring Me the Horizon's <a href="https://musicthread.app/link/2sOUgNU7i1H7npSqeuyviuxCn6m">cover of Wonderwall</a> is a fucking banger and I've listened to <a href="https://musicthread.app/link/2lYKv2JR3tncnVxdgIlkJAXjIQ5">The Bootstrap Paradox</a> at least once a week since I discovered it.</p>
<h3>Do you listen to the radio? If so, how often?</h3>
<p>I deeply dislike the radio so much so that I keep it on mute in my car so I don't have to hear it even for the 5 seconds it takes for my phone to connect.</p>
<h3>How often do you listen to music?</h3>
<p>Every day.</p>
<h3>How often do you discover music? And how do you discover music?</h3>
<p>I check out the Apple Music home page for recommendations once or twice a week mostly.</p>
<h3>What’s a song or album that you enjoy that you wish had more recognition?</h3>
<p><a href="https://musicthread.app/link/2sVR0ELn5wlS7WZmiMUcGpBh3g3">Palm Trees and Power Lines by Sugarcult</a>.</p>
<h3>What’s your favourite song of all time?</h3>
<p>This is a near-impossible question but maybe Faint by Linkin Park.</p>
<h3>Has your taste in music evolved over the years?</h3>
<p>Not since I was 16. I'm better at listening to albums now even if I don't know any of the songs to start with.</p>
]]></content:encoded>
<pubDate>2025-02-02T23:24:30Z</pubDate>
</item>
<item>
<title>My Pebble Steel is (Mostly) Dead</title>
<link>https://rknight.me/blog/my-pebble-steel-is-mostly-dead/</link>
<guid>https://rknight.me/blog/my-pebble-steel-is-mostly-dead/</guid>
<content:encoded><![CDATA[
<p>With the news that <a href="https://ericmigi.com/blog/why-were-bringing-pebble-back">Pebble is coming back</a> I dug out my Pebble Steel to see if it still worked.</p>
<p>After fiddling around with the <em>terrible</em> charging cable, getting stuck in a loop for a while, it finally booted and I was able to set the watch face to the <a href="https://relay.fm">Relay</a> one I made a decade ago.</p>
<p><img alt="A Pebble Steel" src="https://cdn.rknight.me/site/2025/pebble-steel.jpg" /></p>
<p>Sadly when I disconnect the charger, it turns off. I guess it needs a new battery but I don't have the energy or the time to do that so back into storage it goes.</p>
]]></content:encoded>
<pubDate>2025-01-28T13:44:41Z</pubDate>
</item>
<item>
<title>Doubts about Pixelfed</title>
<link>https://rknight.me/blog/doubts-about-pixelfed/</link>
<guid>https://rknight.me/blog/doubts-about-pixelfed/</guid>
<content:encoded><![CDATA[
<p>I have a Pixelfed account. I don't post much, but it's there. I like having a dedicated place to post photos. I like seeing other people's photos.  Let me start by saying that Dan, the maintainer of Pixelfed, has always been very helpful when I've asked him about various ActivityPub-related things. He knows his shit when it comes to the AP spec. This post is a collection of concerns I've had over the past few months about Pixelfed and the way it's longevity.</p>
<p>Dan, to <a href="https://melkat.blog/p/pixelfed-disappointment/">quote Mel</a>, &quot;<em>posting like a Founder</em> (derogatory)&quot;, was not a fun thing to witness.</p>
<p>The <a href="https://www.kickstarter.com/projects/pixelfed/pixelfed-foundation-2024-real-ethical-social-networks">Pixelfed Kickstarter</a> says they want to be &quot;<em>the first Fediverse app with a billion people</em>&quot;. Dream big by all means but this is chaotic. We've seen what happens with billion-people social networks - federation isn't going to solve this.</p>
<p>In Mel's post she noticed that the project account posted about a new data export feature available that day. It wasn't, and still isn't, available. The export that <em>is</em> available doesn't actually include your images, it's just JSON with the URLs to the files. Not an ideal export for anyone without technical knowledge.</p>
<p>As it turns out Pixelfed.social runs the latest commit from the repo, which means the format is different to the release version so the <a href="https://gist.melkat.dev/melanie/pixelfed-to-md">code Mel put together</a> only works for <em>other</em> Pixelfed servers. Handily, <a href="https://posty.1sland.social/pixelfed">Posty</a> supports both formats. It's worth noting the version on Pixelfed.social <em>isn't</em> the full HTML version that was posted about, just a new format.</p>
<p>Finally <a href="https://dansup-open-letter.github.io/appendix/">this overview</a> of Dan's &quot;<em>hostility towards FOSS maintainers and the ecosystem at large</em>&quot; is a really uncomfortable read and doesn't bode well for the future of the project.</p>
<p>All of this combined makes me not want to use Pixelfed so I'm going to be converting my export to note posts for here instead and deleting my Pixelfed account.</p>
]]></content:encoded>
<pubDate>2025-01-27T19:49:31Z</pubDate>
</item>
<item>
<title>Mechanical Pencils</title>
<link>https://rknight.me/blog/mechanical-pencils/</link>
<guid>https://rknight.me/blog/mechanical-pencils/</guid>
<content:encoded><![CDATA[
<p>I asked for recommendations for mechanical pencils in the Relay and omg.lol Discords and here’s what was recommended:</p>
<ul>
<li><a href="https://www.unibrands.co/collections/kuru-toga">Uniball Kuru Toga</a> - this one has a fancy sharpening mechanism</li>
<li><a href="https://www.tombow.com/en/products/mono_graph/">Tombow mono graph</a> - I picked one of these up on Amazon for £3 to give it a go</li>
<li>The <a href="https://www.pentel.co.uk/product/pentel-e-sharp-mechanical-pencil-0-5mm-twin-pack-with-tube-of-0-5mm-hb-refill-leads-yaz125-rcy-2m/">Pentel sharp</a> looks very nice</li>
<li>Kathy mentioned “forever pencils” and my mind was blown so I ordered exactly what she told me to - this <a href="https://www.amazon.co.uk/dp/B0BKRV5PJF">Sun Star retractable one</a></li>
</ul>
]]></content:encoded>
<pubDate>2025-01-21T13:12:00Z</pubDate>
</item>
<item>
<title>Blog Question Challenge</title>
<link>https://rknight.me/blog/blog-question-challenge/</link>
<guid>https://rknight.me/blog/blog-question-challenge/</guid>
<content:encoded><![CDATA[
<p>I was tagged by <a href="https://weblog.kylereddoch.me/2025/01/blog-question-challenge-2025">Kyle</a> and <a href="https://blog.binarydigit.city/posts/blog-question-challenge-2025">B</a> to do this so here it is.</p>
<p><strong><em>Why Did You Start Blogging In The First Place?</em></strong></p>
<p>Initially I thought I'd be some hot take blogger getting posts retweeted by loads of people and be popular or something. We all wanted to be Gruber back then.</p>
<p>More recently I'm blogging for me. It's <a href="/blog/tags/recipes">recipes</a>, technical posts, things I've solved, ideas I've had. Basically instructions for anything I, or someone else, might want to do.</p>
<p><strong><em>What Platform Are You Using The Manage Your Blog, And Why Do You Use It?</em></strong></p>
<p>My site is built with <a href="https://11ty.dev">Eleventy</a>. In theory, that means it's just a bunch of markdown files. In practice, it's markdown files, JSON files, javascript files, plus my <a href="http://github.com/rknightuk/knightcms">custom CMS</a>. I use it because it gives me the flexibility to make my site do exactly what I want.</p>
<p><strong><em>Have You Blogged On Other Platforms Before?</em></strong></p>
<p>I started on hosted Wordpress many years ago, then self-hosted Wordpress, then Jekyll, then Hugo, then Hexo, and now Eleventy.</p>
<p><strong><em>How Do You Write Your Posts?</em></strong></p>
<p>Usually I write a draft in Obsidian then copy it over into VSCode and publish. For shorter posts, or <a href="/notes">my notes</a>, I write those directly into the CMS which pushes them to the GitHub repository. I wrote <a href="https://rknight.me/blog/my-blogging-workflow/">more in depth about this here</a>.</p>
<p><strong><em>When Do You Feel Most Inspired To Write?</em></strong></p>
<p>There are two main times I feel inspired:</p>
<ul>
<li>When I've solved a problem and I want to document the solution</li>
<li>When I feel myself thinking about writing a thread of toots</li>
</ul>
<p><strong><em>Do You Normally Publish Immediately After Writing, Or Do You Let It Simmer?</em></strong></p>
<p>I rarely let them simmer, I just send them out into the world so the typos can reveal themselves.</p>
<p><strong><em>What’s Your Favorite Post On Your Blog?</em></strong></p>
<p>The sensible answer is <a href="https://rknight.me/blog/7622/">7622 - why I spell my name with two Bs</a> but this <a href="https://rknight.me/blog/biology-of-hey-bear-fruits/">sleep-deprived ramble about the fruits of Hey Bear</a> is definitely up there.</p>
<p><strong><em>Any Future Plans For the Blog?</em></strong></p>
<p>I have a list longer than you can imagine but next up is some more work on <a href="https://rknight.me/blog/on-transient-slash-pages/">transient slash pages</a>.</p>
<p><strong><em>Who Will Participate Next?</em></strong></p>
<p><a href="https://gkeenan.co">Keenan, please</a>.</p>
]]></content:encoded>
<pubDate>2025-01-15T14:18:04Z</pubDate>
</item>
<item>
<title>Now (January 2025)</title>
<link>https://rknight.me/blog/now-january-2025/</link>
<guid>https://rknight.me/blog/now-january-2025/</guid>
<content:encoded><![CDATA[
<p>This is the first in a new series of posts to populate my /now page with a blog post. A moment in time. What I'm doing <em>now</em>. A record of what I <em>was</em> doing.</p>
<p>Thanks to <a href="https://niclake.me">Nic</a> this was really easy to do because I could copy what he does:</p>
<ol>
<li>Tag a post with the <a href="/blog/tags/now">Now</a></li>
<li>Get the latest post tagged as such</li>
<li>Use that content on my /now page</li>
</ol>
<hr />
<p>I'm on paternity leave for another week or so with Baby Knight 2. Everything is twice as hard with a toddler around.</p>
<p>I'm <a href="https://rknight.me/blog/biting-the-bullet/">dipping my toe</a> into bullet journaling and it's going...fine? It's probably a little bit early to tell. What I do know is that my recomendations on YouTube are <em>ruined</em> and I bought new pens.</p>
<p>My wife and I are watching the last two seasons of Young Sheldon. After that, she's agreed to watch The Last of Us with me. I've been dying to rewatch it.</p>
<p>I haven't got <a href="https://www.themesystem.com">a yearly theme</a> but if I did have one it would be something like <em>&quot;The Year of Being Whelmed&quot;<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></em>. I want to stop be overwhelmed by the millions of choices of movies/tv shows/books/games/whatever and make a concious effort to <em>choose</em> a thing. I don't have time to do everything, especially with two kids now. If I'm not sure of something, dump it, it doesn't need to be on the list.</p>
<p>You know what, fuck it, I do have a yearly theme. It's that.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>You can do that in Europe <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2025-01-14T23:00:00Z</pubDate>
</item>
<item>
<title>On Transient Slash Pages</title>
<link>https://rknight.me/blog/on-transient-slash-pages/</link>
<guid>https://rknight.me/blog/on-transient-slash-pages/</guid>
<content:encoded><![CDATA[
<p>A couple of weeks ago <a href="https://chriscoyier.net/2025/01/04/slash-pages/">Chris said this about slash pages</a>:</p>
<blockquote>
<p>I think it makes more sense to me to write about what I carry around <em>right now</em> and if I did it again later, it doesn’t have to replace what I’ve written before</p>
</blockquote>
<p><a href="https://slashpages.net">Slash Pages</a> is a site I maintain that is a &quot;<em>guide to common pages you can add to your website</em>&quot;. So <code>/uses</code>, <code>/now</code>, and so on. Chris' quote above was about <code>/edc</code> but it applies to all of them. It was also discussed on <a href="https://shoptalkshow.com/647/">episode 647 of ShopTalk</a>.</p>
<p>My post on <a href="https://rknight.me/blog/automating-my-now-page/">automating my /now page</a> was very popular and I am proud of what I managed to do but I've been thinking for a while it's very impersonal. It's <em>data</em>. It's not a page written by me in any meaningful way.</p>
<p><a href="https://lmika.org/2025/01/14/on-slash-pages-verses-blog.html">Leon had</a> some similar thoughts on this with an idea for each blog post being a section of a page but rendered as one. The end goal for him, and me, is that the new additions get syndicated via RSS, POSSE, and so forth. I like the idea of redirecting <code>/now</code> to the latest post tagged as <code>now</code> so one could see the latest version of what I'm doing now.</p>
<p>For a <code>/now</code> page, this makes a lot of sense - on a regular schedule I can add a new post about what I'm up to and update things as required but when thinking about <a href="/uses">my /uses page</a>, what does an update to that look like? Assuming a short <code>/uses</code> page like this:</p>
<pre class="language-txt"><code class="language-txt">- MacBook Pro<br />- AirPods Max<br />- iPhone 14 Pro</code></pre>
<p>The <em>first</em> blog post is easy, it would include all of that but if I change my phone to a 16 Pro do I duplicate the whole thing but update just that one line? If I just post a diff of what's changed then there isn't a single place to see everything I've used.</p>
<p>I'm going to start with my <code>/now</code> page while I mull over how to handle some others.</p>
]]></content:encoded>
<pubDate>2025-01-13T22:11:53Z</pubDate>
</item>
<item>
<title>Biting the Bullet</title>
<link>https://rknight.me/blog/biting-the-bullet/</link>
<guid>https://rknight.me/blog/biting-the-bullet/</guid>
<content:encoded><![CDATA[
<p>I’ve been todo hoarding. I have Reminders, Obsidian, and Godspeed all with different types of todos in them. Plus GitHub issues, Mastodon mentions, and Raindrop. I’m not getting to any of them. I’m missing things I should be doing. I’m forgetting important things. Also at least once a week I want to throw my computer into the sea because something that should work just doesn’t. I need to spend less wasted time on computers.</p>
<p>I’ve tried using notebooks before to keep track of things but without a system to organise them they just become random scribblings the likes of which wouldn’t be out of place in the zodiac killer’s apartment.</p>
<p>So I’m gunna try <a href="https://bulletjournal.com/">bullet journaling</a>. You don’t need to send help (except maybe for my YouTube recommendations). But if I become the kind of person who doesn’t shut the fuck up about it I’m appointing <a href="https://gkeenan.co/">Keenan</a> to metaphorically smack me in my stupid note-taking face.</p>
]]></content:encoded>
<pubDate>2025-01-09T22:55:00Z</pubDate>
</item>
<item>
<title>Just 2024 Things</title>
<link>https://rknight.me/blog/just-2024-things-i-didnt-get-the-year-wrong-this-time/</link>
<guid>https://rknight.me/blog/just-2024-things-i-didnt-get-the-year-wrong-this-time/</guid>
<content:encoded><![CDATA[
<p><a href="https://rknight.me/notes/202412282111/">I had second child</a>. No time for anything else. Thank you for reading.</p>
<hr />
<h3>Personal</h3>
<h4>Home and DIY</h4>
<p>In September during some rather heavy rain we forgot to bring our awning in and it <a href="https://cdn.rknight.me/site/awning-down.jpg">snapped off it's brackets</a>. That was a fun adventure trying to remove that without smashing the patio doors. My dad has offered to buy us a new one which I'll need to fit in the new year.</p>
<p>We moved my office into the larger spare room and moved Baby Knight into my old office so Baby Knight two can be next to our bedroom. This meant I had a bit more space for shelves so I added a bunch more because I could.</p>
<p><img alt="Three wooden shelves with various DVDs, games, and Lego sets on them" src="https://cdn.rknight.me/site/new-shelves-2024.jpg" /></p>
<h4>Beep Beep mf</h4>
<p>I passed my driving test on the 20th of August (after a test two weeks earlier was cancelled with a couple of hours notice). I had 20 lessons over the course of two months, got a car the day after my test, but that <a href="https://rknight.me/blog/my-first-car-lasted-less-time-than-liz-truss-did-as-prime-minister/">didn’t last long</a>, and now I’m driving my wife’s old car. It's possible <a href="https://www.hyundai-n.com/en/models/rolling-lab/n-vision-74.do">my dream car from Hyundai</a> might be a bit unattainable but fucking hell, just look at it.</p>
<p><img alt="Hyundai N Vision 74" src="https://cdn.rknight.me/site/hyundai-n-vision-74.jpg" /></p>
<h3>Writing</h3>
<p>This post is my 130th blog post this year - more than double what I did last year. I've made an effort this year to move more towards <a href="https://indieweb.org/POSSE">POSSE</a> which means things that might have been a handful of toots before are now blog posts. I also have <a href="/notes">my notes</a> which are a replacement for directly tooting on the 'don.</p>
<p>I also wrote a post <a href="https://rknight.me/blog/tags/weblogpomo/">every day in May for WeblogPoMo</a> which I'm proud of. Not sure I can do that again though - it was a good excuse to clear out some drafts.</p>
<p>The most popular<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> posts this year were:</p>
<ul>
<li><a href="https://rknight.me/blog/perplexity-ai-is-lying-about-its-user-agent/">Perplexity AI Is Lying about Their User Agent</a></li>
<li><a href="https://rknight.me/blog/thinking-about-recipe-formats-more-than-anyone-should/">Thinking About Recipe Formats More Than Anyone Should</a></li>
<li><a href="https://rknight.me/blog/using-the-8bitdo-keyboard-on-macos/">Using the 8BitDo Keyboard on MacOS</a></li>
<li><a href="https://rknight.me/blog/blocking-bots-with-nginx/">Blocking Bots with Nginx</a></li>
<li><a href="https://rknight.me/blog/the-web-is-fantastic/">The Web is Fantastic</a></li>
</ul>
<h3>Enemy of Perplexity</h3>
<p>In <a href="https://rknight.me/notes/202406210759/">June I noticed</a> I had been mentioned in Perplexity's Wikipedia section titled &quot;Use of content from media outlets&quot; because of <a href="https://rknight.me/blog/perplexity-ai-is-lying-about-its-user-agent/">this post</a> and the <a href="https://www.wired.com/story/perplexity-is-a-bullshit-machine/">subsequent post on Wired</a>. This has since expanded to become a proper &quot;Controversies&quot; section which I love and as <a href="https://mastodon.cc/@jgarber/112654776470729526">Jason so aptly put</a>:</p>
<blockquote>
<p>live every day like you might end up in some wretched company’s controversies section</p>
</blockquote>
<p>Here it is as of today:</p>
<p><img alt="The wikipedia section from Perplexity that mentions me" src="https://cdn.rknight.me/site/perplexity-wikipedia-dec-2024.jpg" /></p>
<h3>Media</h3>
<h4>Movies</h4>
<p>The only new movie I watched and liked this year was <a href="https://rknight.me/almanac/movies/2024-07-25-deadpool--wolverine/">Deadpool and Wolverine</a>. <a href="https://rknight.me/almanac/movies/2024-09-29-inside-out-2/">Inside Out 2</a> lost whatever was good about the first one.</p>
<h4>TV</h4>
<p><a href="https://rknight.me/almanac/tv/2024-06-14-fallout/">Fallout</a> was a surprise; maybe we're in an era of <em>actually good</em> games-to-tv-and-movies. Reacher season two was excellent, I'm hoping season three keeps it up.</p>
<p>The last <a href="https://rknight.me/almanac/tv/2024-09-17-the-grand-tour-one-for-the-road/">ever episode of The Grand Tour</a> hit me harder than I thought it would. I've been watching Top Gear, and subsequently Grand Tour, since it started in 2002 which according to maths is 22 years. This led me down a rabbit hole of watching every special of both shows across a couple of weeks and every single one of them is such a joy. I am truly sad that they're not going to make any more.</p>
<p>The <a href="https://rknight.me/almanac/tv/2024-12-25-gavin-stacey-the-finale/">final episode of Gavin and Stacey</a> was perfect.</p>
<h4>Music</h4>
<p>Is is 2004 or 2024 because Green Day, Alkaline Trio, Sum 41, Eminem, The Offspring, Less Than Jake, Ice Cube, Snoop Dogg, Dr Dre, and Linkin Park all had new albums out this year.</p>
<p><a href="https://musicthread.app/link/2osbHpeiWWq4ut3gbn15sgi7qMf">Linkin Park's</a> is easily my favourite one, Emily Armstrong was a fantastic choice.</p>
<p>I found a couple of new artists this year. The first one was <a href="https://musicthread.app/link/2kKGdHJoNphrz5bk0XzKMbhZdtb">Millie Manders</a> via <a href="https://lewisdale.dev">Lewis</a> which I enjoyed so much I bought a hat from their store. The second was Ryan Oakes and his album <a href="https://musicthread.app/link/2lYKv2JR3tncnVxdgIlkJAXjIQ5">The Bootstrap Paradox</a>. I found him from, I think, a video that used <a href="https://musicthread.app/link/2lYRH5ef1Ma5bJMoZW1spFWH0fN">this track of his</a> but I can't be 100% sure. The album is wall-to-wall bangers. I love it.</p>
<p><a href="https://musicthread.app/link/2lgqMaxThQOcYnYXfHKmA9nHx02">A Whole New Sound</a> has some good tracks but overall I was a bit disappointed with this.</p>
<p>My Musicthreads of tracks and albums for this year:</p>
<ul>
<li><a href="https://musicthread.app/thread/2aN5K7DO9ffIo1pm9TfesGplQN8">2024 Albums</a></li>
<li><a href="https://musicthread.app/thread/2aN5LAyzutLVuGQN60CllmFvE3r">2024 Tracks</a></li>
</ul>
<h4>Games</h4>
<p>Not much time for games, as usual, but I finished <a href="https://rknight.me/almanac/games/2024-01-14-spider-man-2/">Spider-Man 2</a> at the start of the year and I'm pretty deep into Astro Bot at the moment. I also <a href="http://localhost:8080/almanac/games/2024-12-31-balatro/">briefly enjoyed Balatro</a> before retiring from it forever.</p>
<h4>Books</h4>
<p>lol okay nerd<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>.</p>
<h4>Podcasts</h4>
<p>I added the three new MacStories shows to my subscriptions -  <a href="https://www.macstories.net/magic-rays-of-light/">Magic Rays of Light</a>, <a href="https://macstories.net/npc">NPC</a>, and <a href="https://www.macstories.net/comfort-zone/">Comfort Zone</a> even if I don't have the time to listen to every episode.</p>
<p>I was also a guest on two podcasts this year:</p>
<ul>
<li><a href="https://appstories.net/episodes/412">AppStories 412</a>: <em>What Kind of Person Are You?</em> in which Viticci accused me of giving off linux person vibes. <a href="https://rknight.me/blog/i-was-a-guest-on-appstories-this-week/">My blog post about it</a>.</li>
<li><a href="https://www.relay.fm/conduit">Conduit 91</a>: <em>Robb Knight made this for himself, and maybe you too.</em>. Jay asked me a bunch of questions and was far too nice to me and I didn't know what to do. <a href="https://rknight.me/blog/i-was-a-guest-on-conduit/">My blog post is here</a>.</li>
</ul>
<h3>Side Projects and Freelance</h3>
<p>Despite attending a freelancers meetup every month for a decade, I've never done any freelance work until this year.</p>
<h4>KnightShift and MacStories</h4>
<p>In January I started working for MacStories doing work to bring new features and <a href="https://macstories.net/podcasts">new podcasts</a> to the site. One of those new shows was my own, <a href="https://ruminatepodcast.com">Ruminate</a>. Along with <a href="https://www.macstories.net/magic-rays-of-light/">Magic Rays of Light</a>, <a href="https://macstories.net/npc">NPC</a>, and <a href="https://www.macstories.net/comfort-zone/">Comfort Zone</a> we have quite a little gang of pods over there now.</p>
<p>Even though I'm a sole trader, I still had to get a business domain because I love a new domain name so I got <a href="https://knightshift.dev">knightshift.dev</a>. I only recently cleaned it up to highlight my freelance things but it's there.</p>
<h4>EchoFeed</h4>
<p>In last year's post I said &quot;<em>I have plans to make Echo a more user-friendly project</em>&quot; and in April <a href="https://rknight.me/blog/echofeed/">I launched EchoFeed</a>. The first couple of months were interesting. I fucked up a migration to a new feed-fetching system and sent 500 posts in the space of an hour or so, then I kept having issues of the server crapping out at random. But that's all sorted now.</p>
<p>Overall it's been successful and people seem to like it, especially <a href="https://beep.town/@echofeedamplify">Amplify</a> which boosts posts sent with EchoFeed. There's been a bunch of <a href="https://help.echofeed.app/changelog/">changes and new features</a> added and <a href="https://news.echofeed.app/echofeed-updates/">I'm working on some fun stuff</a> for it.</p>
<h4>Other Projects</h4>
<p>A lot less projects shipped this year mostly because of freelancing and focusing on EchoFeed but the ones I did ship I'm pretty happy with.</p>
<p><a href="https://hum.rknight.me/">Humonize!</a> came about because of humonising on <a href="https://relay.fm/connected">Connected</a> and they were gunna stop because someone hated it so I made this. I honestly can't keep track of the lore. Also it has tiny head mode.</p>
<p><a href="https://albums.rknight.me/">Perfect Albums</a> is a similar project to <a href="https://defaults.rknight.me/">App Defaults</a> showcasing people's perfect albums based on the question asked on episode <a href="https://listen.hemisphericviews.com/110">110 of Hemispheric Views</a>. Speaking of App Defaults, it's come around again with people posting their 2024 edition so it's gone well over 400 blog posts now.</p>
<p>The hastily put together collab between myself, Sara, and Keenan: <a href="https://rknight.me/blog/everybodys-free-to-make-websites/">Everyone's Free (to Make Websites)</a>.</p>
<p><a href="https://slashpages.net/">Slash Pages</a> is the only project I bought a domain for, it just felt like it needed one. It started off with a handful and now it has over 30 different slash pages.</p>
<p><a href="https://lens.rknight.me">Lens</a> is a project I've been meaning to do for a long time. It checks meta tags, icons, and RSS auto-discovery - basically a check for right before I launch a site. Also handy for checking preview images.</p>
<p><a href="https://emojistorm.rknight.me/">EmojiStorm</a> came to me while I was messing around with <a href="https://www.zachleat.com/web/snow-fall/"><code>snow-fall</code></a>. It's a bit chaotic.</p>
<p>During the recording of my appearance on Conduit, Jay joked that I should make a site to show the last time I'd watched Mean Girls. <a href="https://meangirls.rknight.me">So I did just that</a>.</p>
<h4>The Donation Daddy Returns</h4>
<p>September is, as always, childhood cancer awareness month so me and <a href="https://neatnik.net/">Adam</a> were fundraising again. We blew past last year's amount and <a href="https://tiltify.com/@rknightuk/stjude2024">raised over twenty thousand dollars</a> which is incredible. We added a St Jude theme to omg.lol which you can see on our <a href="https://stjude.omg.lol/">St Jude account here</a> and of course we had some wonderful stickers again.</p>
<p><img alt="Ruminate and Party Prami stickers" src="https://cdn.rknight.me/site/st-jude-2024-stickers.jpg" /></p>
<p>While I was <a href="https://rknight.me/almanac/events/2024-07-27-relay-10/">in London for Relay 10</a> I got the chance to meet Jill and others from St Jude at a lunch they had put on which was a lovely thing to be invited to.</p>
<p>I won a <a href="https://rknight.me/blog/mark-one-enigma-edition-pen-review/">Mark One pen</a> for donating to Engima stationery's campaign which is far too fancy a pen for me but I love it.</p>
<p>Not sure what we're going to do next year to be honest but we might as well start thinking about it, it's <a href="https://isitseptember.fyi/">basically September</a>.</p>
<h4>Miscellanea</h4>
<ul>
<li>I moved <a href="/intersect">my wiki</a> to this site</li>
<li><a href="/almanac">Almanac</a> now has posters</li>
<li>I built a CMS for my site</li>
<li>I <a href="https://rknight.me/blog/tags/recipes/">added recipe support to my site</a></li>
<li>I quit smoking in November. <code>Health++</code>, <code>Cool--</code>.</li>
</ul>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I've excluded <a href="https://rknight.me/convert-spotify-facebook-to-email-login/">this one</a> because although it's popular it's boring as fuck. At least <a href="https://rknight.me/create-a-blank-no-header-markdown-table/">this one</a> has dropped off the top slots now. <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>I still have the same four half-finished books on my shelf, leave me alone <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-12-31T11:35:43Z</pubDate>
</item>
<item>
<title>My Homescreen (December 2024)</title>
<link>https://rknight.me/blog/my-homescreen-december-2024/</link>
<guid>https://rknight.me/blog/my-homescreen-december-2024/</guid>
<content:encoded><![CDATA[
<p><img alt="My homescreen" src="https://cdn.rknight.me/site/homescreen-dec-2024.png" /></p>
<p>Since I <a href="https://rknight.me/blog/my-home-screen-january-2024/">last shared my homescreen</a> at the start of the year, iOS18 added dark mode icons which I immediately switched on. I still have a couple of apps that haven't updated but I need them on my home screen so I just live with it.</p>
<p>Other changes:</p>
<ul>
<li>I'm back on Reddit but only reading, not posting</li>
<li>I'm using <a href="https://raindrop.io/">Raindrop</a> instead of Omnivore (which has shut down anyway)</li>
<li><a href="https://godspeedapp.com/a/RKNIGHT25">Godspeed</a> is where I'm doing most of my reminders and todo lists now</li>
</ul>
]]></content:encoded>
<pubDate>2024-12-30T21:37:53Z</pubDate>
</item>
<item>
<title>I Was a Guest on Conduit</title>
<link>https://rknight.me/blog/i-was-a-guest-on-conduit/</link>
<guid>https://rknight.me/blog/i-was-a-guest-on-conduit/</guid>
<content:encoded><![CDATA[
<p>A couple of weeks ago, <a href="https://kjaymiller.com/">Jay</a> reached out to see if I’d be like to be a guest on <a href="https://www.relay.fm/conduit">Conduit</a> and of course I immediately said yes.</p>
<p>We spoke about some of my projects including what I’m doing with <a href="https://echofeed.app">EchoFeed</a> and then I was challenged<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> to make a site, <a href="https://rknight.me/blog/how-long-since-i-watched-mean-girls-/">which I did</a>. In the <a href="http://imasuperconductor.com">super conductors</a> post-show Jay asked me about British cars and I had to channel all of my knowledge from Top Gear and Grand Tour.</p>
<p><a href="https://www.relay.fm/conduit/91">Listen to Conduit 91: Robb Knight made this for himself, and maybe you too</a></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>It wasn’t a challenge but I took it as such <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-12-26T17:34:00Z</pubDate>
</item>
<item>
<title>How Long Since I Watched Mean Girls?</title>
<link>https://rknight.me/blog/how-long-since-i-watched-mean-girls-/</link>
<guid>https://rknight.me/blog/how-long-since-i-watched-mean-girls-/</guid>
<content:encoded><![CDATA[
<p>&quot;When did Robb last watch Mean Girls?&quot; A question that no one except me cares about but here we are, writing about a website I made to answer that one question.</p>
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>TL;DR</p><p><a href="https://meangirls.rknight.me/">See the site here</a>.</p>
</div>
<h3>Why</h3>
<p>I built this because during the recording of <a href="https://www.relay.fm/conduit/91">episode 91 of Conduit</a> I had to come up with a new connection. I <em>did</em> have one prepared, but Jay and I had joked about a website which would check how long it had been since I'd watched Mean Girls. So I made that instead.</p>
<h3>How</h3>
<p>I already have this data in <a href="https://rknight.me/almanac/">Almanac</a> because I obsessively log every movie and TV show I watch. I knew I'd need some kind of endpoint to get this data into the new website and since I already had the infrastructure to easily make new JSON feeds for collections so that's what I did. I added a new collection for any post with a matching Movie DB ID:</p>
<pre class="language-js"><code class="language-js"><span class="token function-variable function">almanacMeanGirls</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">collectionApi</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> collectionApi<span class="token punctuation">.</span><span class="token function">getFilteredByGlob</span><span class="token punctuation">(</span><span class="token function">makePath</span><span class="token punctuation">(</span><span class="token string">'almanac/movies'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">{</span>          <br />            <span class="token keyword">return</span> p<span class="token punctuation">.</span>data<span class="token punctuation">.</span>tmdbid <span class="token operator">===</span> <span class="token number">10625</span><br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<p>Then added the new JSON feed to <code>/api/meangirls.json</code>.</p>
<pre class="language-js"><code class="language-js"><span class="token operator">--</span><span class="token operator">-</span><br /><span class="token literal-property property">name</span><span class="token operator">:</span> Mean Girls<br /><span class="token literal-property property">permalink</span><span class="token operator">:</span> api<span class="token operator">/</span>meangirls<span class="token punctuation">.</span>json<br /><span class="token literal-property property">layout</span><span class="token operator">:</span> feed<span class="token operator">-</span>json<br /><span class="token literal-property property">collectionName</span><span class="token operator">:</span> almanacMeanGirls<br /><span class="token literal-property property">eleventyExcludeFromCollections</span><span class="token operator">:</span> <span class="token boolean">true</span><br /><span class="token operator">--</span><span class="token operator">-</span></code></pre>
<p>Initially I had intended for the new site to be a straight HTML site with a custom build script to insert the data but as with most projects, I ended up adding <a href="https://11ty.dev">Eleventy</a> to save time.</p>
<p>Ignoring the usual boilerplate (<code>package.json</code>, <code>package-lock.json</code>, <code>.gitignore</code>) the entire source of the site is an index file, a single data file that fetches the RSS feed, and an assets folder with icons, a js file, and fonts in it.</p>
<p>For fonts, I wanted to match the logo from the movie which was easy enough to do - it's <a href="https://en.wikipedia.org/wiki/Futura_(typeface)">Futura and Futura Extra Bold</a>. For the burn book font, I found a handful of &quot;ransom&quot; type fonts but I one I liked the most was <a href="https://www.dafont.com/magazine-letter.font">Magazine Letter</a>. It's missing a lot of symbols but I didn’t need those for this purpose.</p>
<p>For the &quot;burn book&quot; section I borrowed the border styling from <a href="https://chr15m.github.io/DoodleCSS/">DoodleCSS</a> which uses an SVG and <code>border-image</code> which I don't think I've ever used before.</p>
<p>For the falling lips I used <a href="https://www.zachleat.com/web/snow-fall/"><code>snow-fall</code></a>. This is also how the idea for <a href="https://rknight.me/blog/emojistorm/">EmojiStorm</a> came about.</p>
<p>Because this data is coming from a JSON feed I <em>could</em> use <a href="https://echofeed.app/">EchoFeed</a> to trigger a build but given I only watch this movie every few years, that seemed like overkill. The site does rebuild every day because I didn’t want to use client side JS to show the relative time (e.g. “two days ago”). I’m also considering how to incorporate <a href="https://www.themoviedb.org/movie/673593-mean-girls">the musical version</a> when I get around to watching that.</p>
<p><a href="https://meangirls.rknight.me/">See when I last watched Mean Girls here</a>.</p>
]]></content:encoded>
<pubDate>2024-12-26T16:39:00Z</pubDate>
</item>
<item>
<title>Lens: Meta Tag Checker (Robb's Version)</title>
<link>https://rknight.me/blog/lens-meta-tag-checker-robbs-version/</link>
<guid>https://rknight.me/blog/lens-meta-tag-checker-robbs-version/</guid>
<content:encoded><![CDATA[
<p>There are a few ways people like to check the meta tags on their sites. I previously used <a href="https://metatags.io/">Metatags.io</a> but there's also <a href="https://www.heymeta.com/">Hey Meta</a> and probably a lot more of them around I don't know about. But, as the old developer saying goes, none of them did exactly what I wanted so I built my own.</p>
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>TL;DR</p><p><a href="https://lens.rknight.me/">See Lens here</a>.</p>
</div>
<p>I had previously started this project a long time ago using Netlify functions but I didn't want to be tied to Netlify so I went back to the thing I always do: PHP.</p>
<p>The backend is pretty stright-forward: given a URL, fetch the page then extract the meta tags using <a href="https://www.php.net/manual/en/class.domdocument.php"><code>DOMDocument</code></a>. This example is simplified and doesn't have all the error handling, but you get the idea.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$site</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />	<span class="token string single-quoted-string">'charset'</span> <span class="token operator">=></span> <span class="token constant">null</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'found'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$contents</span> <span class="token operator">=</span> @<span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$document</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>DOMDocument</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />@<span class="token variable">$document</span><span class="token operator">-></span><span class="token function">loadHTML</span><span class="token punctuation">(</span><span class="token variable">$contents</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$metaElements</span> <span class="token operator">=</span> <span class="token variable">$document</span><span class="token operator">-></span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'meta'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">iterator_to_array</span><span class="token punctuation">(</span><span class="token variable">$metaElements</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$mel</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$mel</span><span class="token operator">-></span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'charset'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$site</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'charset'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$mel</span><span class="token operator">-></span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'charset'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$site</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'found'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'charset'</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Content-Type: application/json; charset=utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">echo</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$site</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>For the front end I wanted to give Alpine a try after reading <a href="https://blakewatson.com/journal/alpinejs-for-home-cooked-apps/">Blake's post about it</a> - for a project like this where I mostly want to toggle some things based on data existing it was perfect. I initalise the data I need, mostly as null, then when data is fetched I can set things as ticked or filled in. For example, this is the preview card code:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preview<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <br />        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preview-image<span class="token punctuation">"</span></span> <br />        <span class="token attr-name">:style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>`background-image: url(${site.image})`<span class="token punctuation">"</span></span><br />    <span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preview-details<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <br />            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preview-details-title<span class="token punctuation">"</span></span> <br />            <span class="token attr-name">x-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>site.title<span class="token punctuation">"</span></span><br />        <span class="token punctuation">></span></span><br />                A Title<br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <br />            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preview-details-desc<span class="token punctuation">"</span></span> <br />            <span class="token attr-name">x-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>site.description<span class="token punctuation">"</span></span><br />        <span class="token punctuation">></span></span><br />                a description<br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <br />            <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preview-details-site<span class="token punctuation">"</span></span> <br />            <span class="token attr-name">x-html</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>site.host<span class="token punctuation">"</span></span><br />        <span class="token punctuation">></span></span><br />            example.com<br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><br />        <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>preview-details-fediverse disabled<span class="token punctuation">"</span></span> <br />        <span class="token attr-name">:class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>site.fediverse ? 'enabled' : 'disabled'<span class="token punctuation">"</span></span><br />    <span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#mastodon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span> <br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>More from this person<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span></code></pre>
<p><code>x-html</code> sets the content of an element, <code>x-show</code> only shows an element if it's set, <code>:style</code> runs the rules as JS so they data can be filled from the data (in this case, the site image).</p>
<p>It checks <em>exactly</em> the things I care about and nothing more. I don't check Twitter's meta stuff because I've never used it and I suspect it's less relevant than ever now. It does check for the <code>fediverse:creator</code> tag but it doesn't verify if you've set it correctly in the Mastodon backend. It uses <a href="https://simplebits.shop/products/grandsans">Grandsans</a> for the headings because it's a lovely font.</p>
<p><a href="https://lens.rknight.me/">See Lens here</a> and you can <a href="https://github.com/rknightuk/lens">View the source on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2024-12-23T15:53:34Z</pubDate>
</item>
<item>
<title>EmojiStorm</title>
<link>https://rknight.me/blog/emojistorm/</link>
<guid>https://rknight.me/blog/emojistorm/</guid>
<content:encoded><![CDATA[
<p>You know how sometimes you do one thing then you think &quot;oh I'll do this other thing&quot; then another thing related to that and the next thing you know you're making a weird website from a web component someone made because you can? No? Anyway.</p>
<p><a href="https://emojistorm.rknight.me/">EmojiStorm</a> is such a project. It starts with one instance of <a href="https://www.zachleat.com/web/snow-fall/">Zach's <code>snow-fall</code> component</a> then you can just keep adding more but it's a random emoji.</p>
<p>It gets a bit slow after ten or so depending on your computer so you've been warned.</p>
<p><a href="https://emojistorm.rknight.me/">Check out EmojiStorm here</a>.</p>
]]></content:encoded>
<pubDate>2024-12-19T21:22:24Z</pubDate>
</item>
<item>
<title>Chicken Tinga Recipe</title>
<link>https://rknight.me/blog/chicken-tinga-recipe/</link>
<guid>https://rknight.me/blog/chicken-tinga-recipe/</guid>
<content:encoded><![CDATA[
<p>I haven't stopped thinking about this recipe since I <a href="https://rknight.me/notes/202412020911/">made it for the first time last week</a>. It's from <a href="https://www.brianlagerstrom.com/recipes/chicken-tinga?rq=tinga">Brian Lagerstrom</a> who is my favourite YouTube chef person. I've modified the recipe in a few different ways but it's mostly the same as his if you want to watch a video of it instead, he's got you covered.</p>
<p>I'm using store-bought flatbreads for this which are lovely, but I'd love to find to find a nice, easy, flatbread recipe. If someone has one, let me know.</p>
 <article class="h-recipe recipe">

    
        <img class="u-photo" src="https://cdn.rknight.me/site/chicken-tinga.jpg" />
    
    
    <aside class="alert">
        <div class="alert-icon">
            <svg class="icon alert-recipe" xmlns="http://www.w3.org/2000/svg">
                <use xlink:href="#kitchen" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
            </svg>
        </div>
        <h1></h1><p>I much prefer a flatbread to a crunchy tostada or taco so that's what I have this with. I like <a href="https://mydelikitchen.co.uk/products/4-greek-style-flatbreads/">these Deli Kitchen ones</a>.</p>
<p>The original recipe calls for sour cream whisked with lime but who has the time. Sour cream on its own is fine.</p>
<p>I use a couple of teaspoons of pre-chopped garlic instead of slicing my own.</p>

                <p><a href="">Source</a></p>
            </aside>

    <ul><li><span class="p-quantity">1.2kg </span><span class="p-ingredient">Chicken Thighs</span></li><li><span class="p-quantity"><span class="p-ingredient">Oil</span></li><li><span class="p-quantity">1 </span><span class="p-ingredient">Chopped Onion</span></li><li><span class="p-quantity">3cloves </span><span class="p-ingredient">Sliced Garlic</span></li><li><span class="p-quantity"><span class="p-ingredient">Salt</span></li><li><span class="p-quantity">25g </span><span class="p-ingredient">Tomato Puree</span></li><li><span class="p-quantity">400g </span><span class="p-ingredient">Sun-Dried Tomatoes/Fire Roasted Peppers</span></li><li><span class="p-quantity">2 </span><span class="p-ingredient">Large Chopped Tomatoes</span></li><li><span class="p-quantity">200g </span><span class="p-ingredient">Chicken Stock</span></li><li><span class="p-quantity">50g </span><span class="p-ingredient">Chipotle Paste</span></li><li><span class="p-quantity">5g </span><span class="p-ingredient">Salt</span></li><li><span class="p-quantity">20g </span><span class="p-ingredient">Apple Cider Vinegar</span></li><li><span class="p-quantity"><span class="p-ingredient">Flatbreads</span></li><li><span class="p-quantity"><span class="p-ingredient">Little Gem Lettuce</span></li><li><span class="p-quantity"><span class="p-ingredient">Sour Cream</span></li><li>Immersion Blender</span></li></ul>

    <div class="e-instructions"><p><p>Pre-heat the oven to 200°c/400°f.</p>
</p><p><p>Lay out <span class="cl-ingredient">chicken thighs</span> on a sheet tray. Generously salt both sides and roast in the oven for <span class="cl-timer">25 minutes</span>.</p>
</p><p><p>Add a <span class="cl-ingredient">oil</span>, <span class="cl-ingredient">chopped onion</span>, <span class="cl-ingredient">sliced garlic</span>, and <span class="cl-ingredient">salt</span> to a pan and fry on medium heat for <span class="cl-timer">5 minutes</span>.</p>
</p><p><p>Add <span class="cl-ingredient">tomato puree</span> to the pan, mix, and fry for <span class="cl-timer">2-3 minutes</span>.</p>
</p><p><p>Add <span class="cl-ingredient">sun-dried tomatoes/fire roasted peppers</span>, <span class="cl-ingredient">large chopped tomatoes</span>, <span class="cl-ingredient">chicken stock</span>, and <span class="cl-ingredient">chipotle paste</span> to the pan. Simmer for <span class="cl-timer">10-15 minutes</span> until it's thickened a bit and the fresh tomatoes are cooked through. </p>
</p><p><p>Stir in <span class="cl-ingredient">salt</span> and <span class="cl-ingredient">apple cider vinegar</span> then blend with an <span class="cl-cookware">immersion blender</span> until smooth.</p>
</p><p><p>Shred the chicken by hand then mix it with the sauce.</p>
</p><p><p>Lightly grill the <span class="cl-ingredient">flatbreads</span>, add a tablespoon of the chicken tinga to each flatbread, add some chopped <span class="cl-ingredient">little gem lettuce</span>, and drizzle with <span class="cl-ingredient">sour cream</span>.</p>
</p></div>
</article>
]]></content:encoded>
<pubDate>2024-12-10T12:59:44Z</pubDate>
</item>
<item>
<title>Link Dump #5</title>
<link>https://rknight.me/blog/link-dump-5/</link>
<guid>https://rknight.me/blog/link-dump-5/</guid>
<content:encoded><![CDATA[
<div> React, CMS, Bluesky, Eleventy, Kagi<br /><br />总结:<br />文章中介绍了多个技术工具和资源。首先有对React及其不尽如人意的表现的批评。接下来提到了几位作者尝试使用Bluesky PDS的体验，以及Eleventy的一篇入门教程推荐。此外，讨论了Kagi搜索引擎在处理订阅内容时显示出的高效性。最后，作者表达了对某些视频游戏和网页视频资源的兴趣，并提到了一种理想的静态站点CMS的想法。 <div>
<p>Time for a heaving link dump becuase I'm well into triple figures in my Raindrop inbox.</p>
<p>First up are a pair of intorductions: one to <a href="https://blakewatson.com/journal/alpinejs-for-home-cooked-apps/">Alpine.js</a> by Blake of <a href="https://htmlforpeople.com">HTML for People</a> fame and one for <a href="https://jakelazaroff.com/words/building-a-single-page-app-with-htmx/">htmx</a>. I'm always on the lookout for something a bit less complicated than a full-on framework.</p>
<p><a href="https://joshcollinsworth.com/blog/antiquated-react#epilogue">Things you forgot (or never knew) because of React</a> is a scathing look at the state<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> of React in comparison to other, similar frameworks and it's not great.</p>
<p><a href="https://alextheward.com/posts/ergonomic-static-site-blogging/">Ergonomic Static Site Blogging</a>. Someone else on a quest to have a nice CMS for a static site with no success.</p>
<p><a href="https://lmika.org/2024/11/23/to-deploy-from.html">Leon</a> and <a href="https://melkat.blog/p/hosting-bsky">Melanie</a> both wrote up their experience with <a href="https://coolify.io">Coolify</a> with the latter setting up a Bluesky PDS for shits and giggles<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>:</p>
<blockquote>
<p>The hardest part of all of this was Bluesky’s instability. Bluesky likes to pretend that it is “decentralized” or “federated.” It sure as shit isn’t either of those things.</p>
</blockquote>
<p><a href="https://hamatti.org/posts/how-i-teach-eleventy-from-scratch/">How I teach Eleventy from scratch</a> is an excellent intro to Eleventy by Juha-Matti; this will be my go-to next time someone asks about how to get started.</p>
<p>One more tutorial, this time for <a href="https://leanrada.com/notes/css-sprite-sheets/">CSS sprite sheet animations</a>.</p>
<p><a href="https://www.codingfont.com/">Coding Font</a> sets up a bracket like the sports do to choose the best coding font for you. It lacks a few popular ones but it's a fun distraction for a couple of minutes.</p>
<p>Kagi, the search engine, <a href="https://github.com/kagisearch/fastfeedparser">open-sourced their feed parser</a>. &quot;It's 10x-100x faster than a traditional feedparser&quot;.</p>
<p><a href="https://caniphp.com/">Can I PHP?</a> It's like <em>Can I Use</em> but for PHP features. Fun.</p>
<p>I was <a href="https://rknight.me/notes/202411160731/">wronged by Safari</a> and was sent this <a href="https://tylersticka.com/journal/browsers-again/">great post on browsers by Tyler</a>. Also, it's <a href="https://forums.macrumors.com/threads/safari-pages-intermittently-stop-loading-until-i-restart-mac.2344669/">not just me</a>.</p>
<p>Gamery released <a href="https://scandex.gamery.app/">ScanDex</a>, a &quot;<em>curated barcode database for video games</em>&quot; and <a href="https://simonwillison.net/2024/Nov/20/foursquare-open-source-places/">Foursquare released a huge places dataset</a>.</p>
<p>I don't have much call for doing web videos but <a href="https://player.style/">player.style</a> look likes a great resource for different styles.</p>
<p>Johnny mentioned he used <a href="https://www.migadu.com/pricing/#are-the-prices-and-limits-per-mailbox-or-account">Migadu Email</a> for his email. Pricing looks great, unlimited domains and mailboxes. If I ever need to move off of iCloud, this might be the way to go.</p>
<p><a href="https://spoiledbluemilk.com/2020/10/23/back-to-the-future-and-the-goonies-take-place-on-the-same-day/">“Back to the Future” and “The Goonies” take place on the same day</a>. Can't argue with this logic, it's canon now.</p>
<p>I am obsessed with <a href="https://www.youtube.com/watch?v=q5wvurTU5DI">Wes Tank Rapping Fox in Socks</a> on the Dr Suess channel.</p>
<p><a href="http://damnette97.com">An Akaline Trio font</a>.</p>
<p>And finally, I want this <a href="https://retro.social/@ifixcoinops/110823507738743826">clothes shop for dads</a> idea to be a reality.</p>
<blockquote>
<p>you're sure as hell not gonna advertise some bugger else's T-shirt business on your body, so you give him twelve quid and he hands you Bin Bag 2</p>
</blockquote>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Not an intentional pun <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>or more likely, through genuine curiousity <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-27T12:06:04Z</pubDate>
</item>
<item>
<title>App Defaults 2024</title>
<link>https://rknight.me/blog/app-defaults-2024/</link>
<guid>https://rknight.me/blog/app-defaults-2024/</guid>
<content:encoded><![CDATA[
<div> RSS, Raindrop, Mastodon, BBC新闻, 提醒<br /><br />总结:<br />一年来我的生活发生了很多变化。我目前完全使用来处理待办事项，尽管觉得提醒功能有些烦人。我自己托管RSS，并在iOS上使用，在Mac上使用。关于书签，我选择了自托管的解决方案。至于稍后阅读，我使用Raindrop，以前用的Omnivore已经停用了。在新闻方面，我仍在使用Mastodon，但应建议已将BBC新闻从我的主屏幕上移除。 <div>
<p>It's been just over a year since <a href="https://listen.hemisphericviews.com/097">Dual of the Defaults</a> burst into our lives and my time was consumed by <a href="https://defaults.rknight.me">tracking nearly 400 blog posts</a>. Rather than write out <a href="https://rknight.me/blog/app-defaults/">last years list again</a>, here's what has changed since then:</p>
<p><strong>To-Do</strong>: I'm all in on <a href="https://godspeedapp.com/a/RKNIGHT25">Godspeed</a>. Reminders is just a bit...annoying?</p>
<p><strong>RSS</strong>: Self-hosted <a href="https://rknight.me/blog/using-miniflux-with-reeder-and-netnewswire/">Miniflux</a> with <a href="https://reederapp.com/classic/">Reeder Classic</a> on iOS and <a href="https://netnewswire.com">NetNewsWire</a> on the Mac. Reeder is new because it has a dark icon, NetNewsWire doesn't right now.</p>
<p><strong>Bookmarks</strong>: Self-hosted <a href="https://links.rknight.me/dashboard">LinkAce</a>.</p>
<p><strong>Read-it-Later</strong>: Raindrop. Ominvore as it happens is now gone but I switched a while ago.</p>
<p><strong>News</strong>: I'm still using Mastodon but on the advice of <a href="https://johnnydecimal.com">Johnny</a>, BBC news is gone from my home screen.</p>
]]></content:encoded>
<pubDate>2024-11-25T20:18:38Z</pubDate>
</item>
<item>
<title>Installing GoToSocial on Coolify</title>
<link>https://rknight.me/blog/installing-gotosocial-on-coolify/</link>
<guid>https://rknight.me/blog/installing-gotosocial-on-coolify/</guid>
<content:encoded><![CDATA[
<p>For various reasons I had occasion this evening to give <a href="https://gotosocial.org">GoToSocial</a> a try so I installed it on my server that's running <a href="https://coolify.io">Coolify</a> but hit a couple of issues which I was able to work around with the help of <a href="https://lewisdale.dev">Lewis</a> and <a href="https://wand3r.net">Brandon</a>.</p>
<p>First up because it's running a reverse proxy, I needed the third option in the Docker compose file.</p>
<pre class="language-bash"><code class="language-bash">ports:<br />  <span class="token comment"># - "443:8080"</span><br />  <span class="token comment">## For letsencrypt:</span><br />  <span class="token comment">#- "80:80"</span><br />  <span class="token comment">## For reverse proxy setups:</span><br />  - <span class="token string">"127.0.0.1:8082:8080"</span></code></pre>
<p>The second issue was GoToSocial couldn't access the database, giving this error in the logs:</p>
<pre class="language-bash"><code class="language-bash">sqlite ping: sqlite3: unable to <span class="token function">open</span> database <span class="token function">file</span></code></pre>
<p><a href="https://github.com/superseriousbusiness/gotosocial/issues/476">This GitHub issue</a> showed it was a permissions issue where the <code>user</code> specified in the docker compose isn't the one that has permissions for the <code>gotosocial/data</code> file. I could have tried to work out what the user and group was <em>or</em> I could <code>chmod</code> my way out this problem. Guess which one I picked. In Coolify go to <code>Terminal</code> in the sidebar, choose the project GoToSocial is installed on then connect and <code>cd</code> to the directory. Then set permissions on the data directory.</p>
<pre class="language-bash"><code class="language-bash">$ <span class="token builtin class-name">cd</span> /data/coolify/services/isjdbvfihsavfids/<br />$ <span class="token function">chmod</span> <span class="token number">777</span> gotosocial/data</code></pre>
<p>I got the directory it's installed at (<code>/isjdbvfihsavfids</code>) by checking the <code>storage</code> tab on the GoToSocial service in Coolify.</p>
<p>Other notes:</p>
<ul>
<li><code>/settings</code> gets you to the settings page of your account.</li>
<li>Default visibility of posts is &quot;unlisted&quot;, a difference from Mastodon where it's public by default. You can change this in settings.</li>
<li>Other instance-level settings (like custom CSS on profiles) can be changed in the <code>config.yaml</code> file, see <a href="https://docs.gotosocial.org/en/latest/configuration/">the docs on configuration here</a>.</li>
<li>Making a user an admin requires restarting the server.</li>
</ul>
<p>I'm still playing around with GoToSocial but it's looking like a good solution for what I want - something easier to maintain than Mastodon and less resource-intensive.</p>
]]></content:encoded>
<pubDate>2024-11-20T21:00:33Z</pubDate>
</item>
<item>
<title>Stopping Mastodon From Fetching Metadata for My Notes</title>
<link>https://rknight.me/blog/stopping-mastodon-from-fetching-metadata-for-my-notes/</link>
<guid>https://rknight.me/blog/stopping-mastodon-from-fetching-metadata-for-my-notes/</guid>
<content:encoded><![CDATA[
<p>I'm trying to move towards <a href="https://indieweb.org/POSSE">POSSE</a> for my short/micro posts and one thing I wasn't sure about was if those short posts should link back to the source or not. I <a href="https://social.lol/@robb/113464032762475185">tooted a poll about this</a>:</p>
<blockquote>
<p>People who POSSE short posts do you link back to the source or not? Seems a bit redundant but also it is nice to get to the canonical source.</p>
</blockquote>
<p>And the results were:</p>
<table>
<thead>
<tr>
<th> </th>
<th> </th>
</tr>
</thead>
<tbody>
<tr>
<td>Yes I link back</td>
<td>29%</td>
</tr>
<tr>
<td>No I don't link back</td>
<td>21%</td>
</tr>
<tr>
<td>I link back if it's truncated</td>
<td>15%</td>
</tr>
<tr>
<td>wtf is posse you weirdo</td>
<td>35%</td>
</tr>
</tbody>
</table>
<p>This was hardly a landslide victory for one specific way but I came to the conclusion I did want to link back. However, the real reason for my poll was exactly what <a href="https://xoxo.zone/@KevinMarks/113464550398427072">Kevin replied with</a>:</p>
<blockquote>
<p>Where it gets weird is if there's a preview of the post as well, so then you get the POSSE copy of the post, then underneath a preview showing the same text, then if you click through there's just the same text again. In that case a link back is creating a bad experience for your readers on the POSSE platform.</p>
</blockquote>
<p>As an example, here is a short post with a link back to <a href="https://rknight.me/notes/202411181234/">the source</a>:</p>
<p><img alt="A post on Mastodon showing the note, plus the image preview" src="https://cdn.rknight.me/site/posse-note-with-og-image.jpg" /></p>
<p>As proud as I am of my open graph image, in this context it's superfluous<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. We have the content of the post &quot;Boo! I wanted...&quot;, then a big image that tells you it's a note, then the date it was sent (which you'd know from the toot as well), then the same text as the OG image &quot;A note from the desk...&quot;. Then if you click through you get the same text as the toot. This is no good.</p>
<p>I could just remove the open graph images and data all together but what if someone else links the page elsewhere? I <em>would</em> want them in that case. So the solution is to block the Mastodon user agent from getting them when a link to one of my notes is tooted. Into the nginx config.</p>
<p>I only want this to apply to pages that start with <code>/notes</code> so I started with a new <code>location</code> block and thankfully Mastodon uses the aptly-named <code>Mastodon</code> user agent.</p>
<pre class="language-bash"><code class="language-bash">location /notes <span class="token punctuation">{</span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$http_user_agent</span> ~* <span class="token string">"Mastodon"</span> <span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>I don't want to flat-out block Mastodon so instead I return an empty web page:</p>
<pre class="language-diff"><code class="language-diff">location /notes {<br />	if ($http_user_agent ~* "Mastodon" ) {<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">		add_header Content-Type text/html;<br /></span><span class="token prefix inserted">+</span><span class="token line">		return 200 '&lt;html>&lt;body>&lt;/body>&lt;/html>';<br /></span></span>	}<br />}</code></pre>
<p>I added this to my nginx config and tested it in Chrome by changing the user agent (<code>Inspector &gt; More Tools &gt; Network Conditions</code>) and it worked - I got a blank page back. Great success. Except now no one could access <em>any</em> notes page. I needed to update the config to have fallback logic for anything that <em>wasn't</em> Mastodon:</p>
<pre class="language-diff"><code class="language-diff">location /notes {<br />	if ($http_user_agent ~* "Mastodon" ) {<br />		add_header Content-Type text/html;<br />		return 200 '&lt;html>&lt;body>&lt;/body>&lt;/html>';<br />	}<br /><br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">	try_files $uri $uri/ /404.html?$query_string;<br /></span></span>}</code></pre>
<p>With this all deployed to my server<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>, a syndicated note like <a href="https://rknight.me/notes/202411191206/">this one</a> now only shows the link on Mastodon with no title, description, or image.</p>
<p><img alt="A toot with a link to my site with no image or card" src="https://cdn.rknight.me/site/posse-note-with-no-image.jpg" /></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p><a href="https://neatnik.net/">Adam</a> would argue they're always superfluous <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>You can see how I'm keeping nginx changes in version control in <a href="https://rknight.me/blog/blocking-bots-with-nginx/">this post</a> <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-19T13:34:28Z</pubDate>
</item>
<item>
<title>Useful Bluesky Tools</title>
<link>https://rknight.me/blog/useful-bluesky-tools/</link>
<guid>https://rknight.me/blog/useful-bluesky-tools/</guid>
<content:encoded><![CDATA[
<p>I've been helping getting <a href="https://www.macstories.net/news/macstories-is-on-bluesky/">MacStories setup on Bluesky</a> this weekend and I came across a few handy sites. There are loads of interesting Bluesky-related links in this <a href="https://github.com/fishttp/awesome-bluesky?tab=readme-ov-file">awesome-bluesky</a> list on GitHub, below is just the ones I happened upon and found useful.</p>
<p><a href="https://clearsky.app/rknight.me/lists">ClearSky</a> allows you to see which lists (starter packs) you're in, who you've blocked and who's blocked you. As an aside, the blocking data being public <em>and</em> having no way to opt out of a starter pack shows a complete lack of consideration for how this could be abused but that's not the point of this post. Less important but why is seven the minimum for a starter pack <a href="/notes/202411181234/">this makes me very sad</a>.</p>
<p>I found two tools for resolving DIDs which you need for various API-related things. A DID is a &quot;<em>persistent, long-term identifier for every account.</em>&quot; and they look something like this: <code>did:plc:b3i7xuqiybecdpm3lkywmlwv</code>.</p>
<ul>
<li><a href="https://rmdes.github.io/">Bluesky DID Resolver</a></li>
<li><a href="https://bsky-did.neocities.org/">Bluesky DID Generator</a> - confusingly named as a &quot;generator&quot;</li>
</ul>
<p>To use Bluesky in Mastodon clients like Ivory, you can use <a href="https://skybridge.fly.dev">Skybridge</a>. I doubt I would ever check Bluesky if I couldn't use Ivory. I setup my own install of this with <a href="https://coolify.io">Coolify</a>. <a href="https://deck.blue">Deck Blue</a> is a nice web client though.</p>
<p>Finally <a href="https://chromewebstore.google.com/detail/skylink-bluesky-did-detec/aflpfginfpjhanhkmdpohpggpolfopmb?hl=en">SkyLink</a> is a Chrome extension similar (although not as advanced) to <a href="https://streetpass.social/">Streetpass</a>.</p>
<p>You can see all the MacStories team and podcast accounts in <a href="https://bsky.app/starter-pack/macstories.net/3lb4aiut25l26">the MacStories starter pack</a> and I'm there as <a href="https://bsky.app/profile/rknight.me">@rknight.me</a>.</p>
]]></content:encoded>
<pubDate>2024-11-18T15:15:19Z</pubDate>
</item>
<item>
<title>I Was a Guest On AppStories This Week</title>
<link>https://rknight.me/blog/i-was-a-guest-on-appstories-this-week/</link>
<guid>https://rknight.me/blog/i-was-a-guest-on-appstories-this-week/</guid>
<content:encoded><![CDATA[
<div> MacStories, AppStories+, fediverse, ActivityPub, development setup<br /><br />总结:最近几周MacStories每周都邀请不同的主持人，这周轮到作者亲自参与。在AppStories+的预展中，他们讨论了节目的起源；在正式节目中，他们探讨了fediverse和ActivityPub，分享了作者的一些开发设置。节目最后，还有一段关于主持人Federico对作者人格的看法，这让作者感到震惊。你可以选择用你喜欢的播客软件收听这一集，或者观看视频版本。 <div>
<p>The past few weeks <a href="https://appstories.net">AppStories</a> has had a different MacStories host as a guest and this week was my turn. In the AppStories+ pre-show we talk about the origins of <a href="https://ruminatepodcast.com">Ruminate</a> and in the main show we discuss the fediverse and ActivityPub, some of my <a href="/projects">projects</a>, as well as my development setup. Stick around to find out what kind of person Federico thinks I am because I'm still reeling.</p>
<p>Listen to episode <a href="https://appstories.net/episodes/412">412: What Kind of Person Are You?</a> in your podcatcher of choice or you can watch the <a href="https://www.youtube.com/watch?v=vyoH2ndxTLk">episode on YouTube</a>.</p>
]]></content:encoded>
<pubDate>2024-11-18T12:52:40Z</pubDate>
</item>
<item>
<title>Buffalo Sauce Recipe</title>
<link>https://rknight.me/blog/buffalo-sauce-recipe/</link>
<guid>https://rknight.me/blog/buffalo-sauce-recipe/</guid>
<content:encoded><![CDATA[
<div> 辣酱、大蒜、辣椒酱、黄油、食醋<br /><br />总结:<br />这是一个制作水牛城辣酱的食谱。首先将辣酱、切碎的大蒜、辣椒酱和食醋放入锅中，用中高火加热并搅拌，煮5分钟直至略为浓稠。然后降低火力，慢慢加入无盐黄油搅拌均匀。最后，在离火后加入少许黄原胶使辣酱更加稠密。整个过程简单快捷，适合喜欢辣味的人尝试。 <div>
<p>I don't know where I got this recipe but it's buffalo sauce so I suspect it's mostly the same from everyone but here we are, final day of recipe week. Enjoy.</p>
 <article class="h-recipe recipe">

    
    
    <aside class="alert">
        <div class="alert-icon">
            <svg class="icon alert-recipe" xmlns="http://www.w3.org/2000/svg">
                <use xlink:href="#kitchen" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
            </svg>
        </div>
        <h1>Buffalo Sauce</h1></aside>

    <ul><li><span class="p-quantity">300g </span><span class="p-ingredient">Hot Sauce</span></li><li><span class="p-quantity">4 </span><span class="p-ingredient">Garlic Gloves</span></li><li><span class="p-quantity">20g </span><span class="p-ingredient">Worcestershire Sauce</span></li><li><span class="p-quantity">15g </span><span class="p-ingredient">Distilled Vinegar</span></li><li><span class="p-quantity">120g </span><span class="p-ingredient">Unsalted Butter</span></li></ul>

    <div class="e-instructions"><p><p>Add <span class="cl-ingredient">hot sauce</span>, <span class="cl-ingredient">garlic gloves</span>, <span class="cl-ingredient">worcestershire sauce</span>, and <span class="cl-ingredient">distilled vinegar</span> to sauce pan over medium high heat. Whisk ingredients together and allow to cook for <span class="cl-timer">5 minutes</span> until thickened slightly. Whisk in the <span class="cl-ingredient">unsalted butter</span> slowly on low heat. A tiny pinch of Xantham gum once it's off the heat.</p>
</p></div>
</article>
]]></content:encoded>
<pubDate>2024-11-17T21:07:39Z</pubDate>
</item>
<item>
<title>Leek and Bacon Jacket Potatoes Recipe</title>
<link>https://rknight.me/blog/leek-and-bacon-jacket-potatoes-recipe/</link>
<guid>https://rknight.me/blog/leek-and-bacon-jacket-potatoes-recipe/</guid>
<content:encoded><![CDATA[
<div> 土豆, 培根, 韭菜, 奶油奶酪, 微波炉<br /><br />总结:这是一种美味的夹克土豆制作方法。首先将土豆用微波炉加热15分钟，期间翻转一次。然后在烤箱中继续烘烤土豆。接着将切好的培根在锅中煎至变色，加入韭菜煎2-3分钟，再加入奶油奶酪、黑胡椒和辣椒粉调味搅拌均匀。最后将土豆切半，加入一些黄油和韭菜培根混合物，撒上一些辣椒粉即可食用。 <div>
<p>Day six of <a href="/blog/tags/recipeweek">Recipe Week</a>. This is certainly not healthy in any way at all but god damn is it tasty.</p>
 <article class="h-recipe recipe">

    
    
    <aside class="alert">
        <div class="alert-icon">
            <svg class="icon alert-recipe" xmlns="http://www.w3.org/2000/svg">
                <use xlink:href="#kitchen" xmlns:xlink="http://www.w3.org/1999/xlink"></use>
            </svg>
        </div>
        <h1>Leek and Bacon Jacket Potatoes</h1><p>There are many ways to make a jacket potato, I choose the microwave way because it's quicker.</p>
</aside>

    <ul><li><span class="p-quantity">2 </span><span class="p-ingredient">Jacket potatoes</span></li><li><span class="p-quantity">8rashers </span><span class="p-ingredient">Chopped Bacon</span></li><li><span class="p-quantity">40g </span><span class="p-ingredient">Leeks</span></li><li><span class="p-quantity">165g </span><span class="p-ingredient">Cream Cheese</span></li><li><span class="p-quantity"><span class="p-ingredient">Black Pepper</span></li><li><span class="p-quantity"><span class="p-ingredient">Paprika</span></li><li><span class="p-quantity"><span class="p-ingredient">Butter</span></li></ul>

    <div class="e-instructions"><p><p>Pre-heat the oven to 200°c. </p>
</p><p><p>Jab your <span class="cl-ingredient">jacket potatoes</span> with a fork a handful of times and put in the microwave for <span class="cl-timer">15 minutes</span>, turn halfway through.</p>
</p><p><p>Put your jackets in the oven while you make the topping.</p>
</p><p><p>Cook the <span class="cl-ingredient">chopped bacon</span> in a pan with a little bit of oil until browned off, then add in <span class="cl-ingredient">leeks</span> and fry those for <span class="cl-timer">2-3 minutes</span>. Turn the heat down and add in <span class="cl-ingredient">cream cheese</span>, <span class="cl-ingredient">black pepper</span>, and <span class="cl-ingredient">paprika</span>, and stir it all together.</p>
</p><p><p>Cut your jackets in half, add some <span class="cl-ingredient">butter</span> to them, then top with the leek and bacon topping. Sprinkle some paprika on top to serve.</p>
</p></div>
</article>
]]></content:encoded>
<pubDate>2024-11-16T11:33:13Z</pubDate>
</item>
<item>
<title>Naming My Computers</title>
<link>https://rknight.me/blog/naming-my-computers/</link>
<guid>https://rknight.me/blog/naming-my-computers/</guid>
<content:encoded><![CDATA[
<div> 设备命名, Marvel角色, iPhone, AirPods, Beats Studio buds<br /><br />总结:<br />本文作者介绍了自己为电子设备命名的方法，其中大部分以Marvel角色为主。例如，他的Mac Mini被命名为J.A.R.V.I.S，MacBook Pro和iPhone尚未提及命名，Apple Watch和AirPods Pro的命名未被透露。而AirPods Max因材质被命名为Metal。此外，作者为Beats Studio buds起了一个与众不同的名字——Fantastic Beats and Where to Find Them，而iPad因使用不频繁而简单地命名为Robb's iPad。这种命名方式给作者的设备增添了一份个性和趣味。 <div>
<p>Alex has an excellent post about how <a href="https://alexwlchan.net/2024/how-i-name-my-computers/">they name their computers</a> which is, as they mention, a very important part of setting up a new device.</p>
<p>Unlike Alex, I don't choose a new name when it gets replaced - my iPhone is always called <strong>Starlord</strong>. Which brings me to the naming scheme: Marvel characters. Some of these make sense, some of them don't.</p>
<ul>
<li>Mac Mini: This is used for Plex and some other boring home things but it's the hub for the house or something. Anyway I went with <a href="https://en.wikipedia.org/wiki/J.A.R.V.I.S.">Jarvis</a>. Technically it's written <code>J.A.R.V.I.S.</code> but who's got time for that.</li>
<li>MacBook Pro: This is my main computer and is called <a href="https://en.wikipedia.org/wiki/Vision_(Marvel_Comics)">Vision</a>.</li>
<li>iPhone: <a href="https://en.wikipedia.org/wiki/Star-Lord">Starlord</a></li>
<li>Apple Watch: <a href="https://en.wikipedia.org/wiki/Rocket_Raccoon">Rocket</a></li>
<li>AirPods Pro: <a href="https://uncannyxmen.net/family-tree/magneto-maximoff-family-tree">Maximoff</a>. Because there's two of them? A clever one.</li>
<li>AirPods Max: <a href="https://en.wikipedia.org/wiki/Magneto_(Marvel_Comics)">Magneto</a> because metal</li>
<li>My black Apple Magic keyboard: <a href="https://en.wikipedia.org/wiki/Black_Widow_(Natasha_Romanova)">Black Widow</a></li>
</ul>
<p>My Beats Studio buds are the one exception to this naming rule because I thought of a name<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> so good I couldn't <em>not</em> use it: <strong>Fantastic Beats and Where to Find Them</strong>. My iPad is called <strong>Robb's iPad</strong> because I don't use it enough to name it.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I originally thought of this joke for <a href="https://hellsite.rknight.me/988709761700040704/">this tweet</a> <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-15T13:23:18Z</pubDate>
</item>
<item>
<title>Toad in the Hole Recipe</title>
<link>https://rknight.me/blog/toad-in-the-hole-recipe/</link>
<guid>https://rknight.me/blog/toad-in-the-hole-recipe/</guid>
<content:encoded><![CDATA[
<p>Right folks, this is the laziest &quot;recipe&quot; ever but it's great so here we are: toad in the hole. I will take a better photo next time I make it, I had to pull this one from my Instagram/Pixelfed archive.</p>
]]></content:encoded>
<pubDate>2024-11-15T09:29:43Z</pubDate>
</item>
<item>
<title>More Unorganised Thoughts about Bluesky</title>
<link>https://rknight.me/blog/more-unorganised-thoughts-about-bluesky/</link>
<guid>https://rknight.me/blog/more-unorganised-thoughts-about-bluesky/</guid>
<content:encoded><![CDATA[
<div> Bluesky, 自托管, 储存空间, ActivityPub, 骚扰<br /><br />总结:<br />文章讨论了Bluesky平台及其与其他社交媒体的对比，尤其是技术实现和使用Bluesky的理由。自托管Bluesky较复杂，需要4.5TB的存储空间，远超单一PHP文件的可能性。同时提到Bluesky可能是Twitter的简化替代品，而Fediverse作为去中心化的跨平台连接器。在Mastodon平台上，边缘化群体面临骚扰的情况被提及，这也是一些人选择Bluesky的原因之一。作者最后考虑自己托管PDS，以便在需要时更容易地管理数据。 <div>
<p>I got a lot of feedback from <a href="https://rknight.me/blog/unorganised-thoughts-about-bluesky/">my last post</a> which fell into two categories: either about the technical implementations or why someone is using Bluesky over other options. As soon as my sent my previous post Bluesky started having outages which has made looking into the feedback interesting to say the least but they've been adding obscene amounts of users every second today.</p>
<h3>Technical</h3>
<p><a href="https://social.lol/@mcg">MCG</a> and <a href="https://social.lol/@matt">Matt</a> linked me to <a href="https://alice.bsky.sh/post/3laega7icmi2q">this post</a> which is titled &quot;<em>How to self-host all of Bluesky except the AppView (for now)</em>&quot;. There are more components to self-hosting Bluesky than say, Mastodon, but it is doable. Sort of. You can't do the <code>AppView</code> which &quot;aggregates data from across the Atmosphere to produce their UIs&quot;. It's late and I don't have the energy to translate what that actually means but it sounds important.</p>
<p>The part that jumped out to me (after MCG mentioned it) is the article mentions needing 4.5tb of storage for the relay which is a fuckton and might as well be a million terabytes for the sake of discussing self-hosting. There is a second relay option called Jetstream which from my reading of it, can be used instead of the 4.5tb version. <a href="https://docs.bsky.app/blog/jetstream">Looking at the docs</a> it's not ideal for all circumstances but if we assume it could work for a small user base then cool. This is, however, a far stretch from my question of could it be done on a single PHP file. Seems like that's going to be a no. ActivityPub is by no means simple but AT Proto seems infinitely more complicated.</p>
<h3>Why use it?</h3>
<p>The <em>why</em> is harder. There's no accounting for what people like or enjoy, people just <em>do</em>. A lot of it came down to just a feeling of what Bluesky is like (early Twitter was banded around a bit).</p>
<p>Friend of the show <a href="https://alexcox.omg.lol">Alex Cox</a> <a href="https://bsky.app/profile/alexcoxfm.bsky.social/post/3lawgdp47rc2y">pointed out</a> to me, a cis white dude, that marginalised people on Mastodon are subject to constant reply guys and harassment. I'm embarrassed that I didn't even think of it.</p>
<blockquote>
<p>Most marginalized people who joined <a href="https://mastodon.social/">mastodon.social</a> or another generic instance bounced pretty quickly because not many want to stick around and learn how to create your own instance when in the meantime you’re constantly blocking random guys telling you you’re doing it/everything wrong</p>
</blockquote>
<p>As an aside, most of the reports we deal with on social.lol are spam probably because the instance is paid so there's a barrier that doesn't exist on mastodon.social and the other big instances.</p>
<h3>Final Thoughts</h3>
<p>Ben has a <a href="https://werd.io/2024/bluesky-the-fediverse-and-the-future-of-social-media">great post here</a> about Bluesky, the Fediverse, and the future of social media:</p>
<blockquote>
<p>Bluesky may evolve into a streamlined alternative to Twitter, while the Fediverse could serve as a decentralized, cross-platform connector among diverse networks</p>
</blockquote>
<p>There's no reason to believe both can't continue to exist side by side. Mastodon isn't going anywhere and if better tools for self hosting come around for Bluesky, I could see myself potentially using both.</p>
<p>This is too much for one person to think about protocols<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> but I do want to investigate hosting a PDS if only because my data could be deleted easily by me without relying on Bluesky to do so if something were to happen. I think this is the case although I suppose it'd be in other relays? Something to look into.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Especially after <a href="https://rknight.me/blog/thinking-about-recipe-formats-more-than-anyone-should/">last week's</a> <a href="https://rknight.me/blog/why-is-no-one-using-the-recipe-schema/">recipe</a> <a href="https://rknight.me/blog/adding-cooklang-support-to-eleventy-two-ways/">saga</a> <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-14T21:50:32Z</pubDate>
</item>
<item>
<title>Unorganised Thoughts about Bluesky</title>
<link>https://rknight.me/blog/unorganised-thoughts-about-bluesky/</link>
<guid>https://rknight.me/blog/unorganised-thoughts-about-bluesky/</guid>
<content:encoded><![CDATA[
<div> Bluesky, API, Starter Packs, Mastodon, 交叉发布<br /><br />总结:<br />这篇文章主要记录了作者对社交网络Bluesky的一些初步感受和思考。首先，作者觉得Bluesky的API设计相对其他社交网络来说比较奇异，开发者需要手动标记话题、提及和链接，并且需要自己处理链接预览。作者也提到了Bluesky的Starter Packs功能虽然受到了一部分人的喜爱，但他本人更倾向于用户能够通过浏览内容后再做关注决定。此外，作者对比了Bluesky和Mastodon，不太理解为什么有人会从Mastodon转到Bluesky。最后，作者还提到了自己如何通过交叉发布保持与粉丝的互动，并且他对社交平台的交互持开放态度。 <div>
<p>These thoughts about Bluesky are unorganised and mostly off-the-cuff so make of that what you will.</p>
<p>The API, even just for posting, strikes me as very strange. I, as the developer, have to mark which things are hashtags, mentions, and links unlike Twitter, Mastodon, and basically every other network. If I want link previews I have to do that too.</p>
<p>The <a href="https://github.com/bluesky-social/pds">Personal Data Store</a> is interesting. I haven't set one up but <a href="https://krrd.ing/posts/setting-up-a-bluesky-pds/">Brandon</a> and <a href="https://rafaeleyng.github.io/self-hosting-a-bluesky-pds-and-using-your-domain-as-your-handle">Rafael</a> did and it seems easy enough but this is just one part of the AT Protocol. Is it possible to host the entire stack yourself without relying on <code>bsky.social</code>? Can you be part of the AT Protocol with <a href="https://gitlab.com/edent/activitypub-single-php-file/">a single PHP file</a>? That might sound stupid but I don't think that's an unreasonable bar to interact with a network even if it's in a limited way.</p>
<p>Starter Packs are a good idea that people seem to like but I would rather people followed me because they've had a gander at what I post and decided to follow. Choosing to follow people en masse without looking at those profiles seems weird to me. The other thing is it feels like they pigeon-hole people into being a specific version of themselves and perhaps give unrealistic expectations to people following<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. I feel the same about mastodon instances focused around a specific topic.</p>
<p>I've seen a few people drop Mastodon for Bluesky but I don't really understand why, nothing about it jumps out at me as all that different to Mastodon. You have to go where your people are though so it could just be that. I'm pretty sure Bluesky will get <a href="https://en.wikipedia.org/wiki/Enshittification">enshittified</a> before too long and everyone will be onto the next thing.</p>
<p>I am cross-posting my <a href="/posts">posts</a> and <a href="/links">links</a> to <a href="https://bsky.app/profile/rknight.me">my Bluesky account</a> with <a href="https://echofeed.app">EchoFeed</a>. People are there, they presumably followed me to see my things, and I don't lose anything if the service blows up overnight. <a href="https://indieweb.org/POSSE">POSSE</a>, baby.</p>
<p>I setup my own install of <a href="https://skybridge.fly.dev/">SkyBridge</a> so I can use <a href="https://tapbots.com/ivory/">Ivory</a> to read my Bluesky timeline because none of the apps are as good as Ivory and probably never will be.</p>
<p>I've updated my <a href="/verify">verify page</a> to reflect the fact that I am using Bluesky.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>&quot;Stop posting about politics, stay in your lane&quot; <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-14T17:05:08Z</pubDate>
</item>
<item>
<title>Flatiron Mac and Cheese Recipe</title>
<link>https://rknight.me/blog/flatiron-mac-and-cheese-recipe/</link>
<guid>https://rknight.me/blog/flatiron-mac-and-cheese-recipe/</guid>
<content:encoded><![CDATA[
<div> 纽约, 阿里, 生活, 鹿子酒会, 威尔士乡村<br /><br />总结:<br />文章讲述了作者的朋友阿里在纽约生活时曾尝试过的一道菜谱，并在不同场合包括作者的鹿子酒会上为朋友们烹制。提到鹿子酒会是在威尔士乡村的一间小屋中，三个朋友共度了三天的美好时光。 <div>
<p>This recipe came to me via my friend Ali, who had it at <a href="https://theflatironroom.com">The Flatiron Room</a> when he was living in New York. He's made it for us a bunch of times, including on my stag do, as you can in the accompanying photo.</p>
<p>As an aside, my stag do was three of us in a cabin in the middle of the Welsh countryside for three days and it was glorious.</p>
]]></content:encoded>
<pubDate>2024-11-14T10:00:00Z</pubDate>
</item>
<item>
<title>Cheesy Chicken and Bacon Pasta Recipe</title>
<link>https://rknight.me/blog/cheesy-chicken-and-bacon-pasta-recipe/</link>
<guid>https://rknight.me/blog/cheesy-chicken-and-bacon-pasta-recipe/</guid>
<content:encoded><![CDATA[
<p>Recipe week day three is a cheesy chicken and bacon pasta that I tried for the first time last week and it was banging. You should try it.</p>
]]></content:encoded>
<pubDate>2024-11-13T11:55:12Z</pubDate>
</item>
<item>
<title>Candied Jalapenos Recipe</title>
<link>https://rknight.me/blog/candied-jalapenos-recipe/</link>
<guid>https://rknight.me/blog/candied-jalapenos-recipe/</guid>
<content:encoded><![CDATA[
<p>Day two of recipe week is this recipe for candied jalopenos that I like to make a batch of at the start of the summer for pizzas on <a href="https://rknight.me/blog/one-year-of-pizza-making/">my Ooni</a>.</p>
]]></content:encoded>
<pubDate>2024-11-12T09:00:00Z</pubDate>
</item>
<item>
<title>Mango Chicken Curry Recipe</title>
<link>https://rknight.me/blog/mango-chicken-curry-recipe/</link>
<guid>https://rknight.me/blog/mango-chicken-curry-recipe/</guid>
<content:encoded><![CDATA[
<p>As promised <a href="https://rknight.me/blog/adding-cooklang-support-to-eleventy-two-ways/">last week</a>, this week is recipe week.</p>
<p>This is one we batch cook for Baby Knight every few weeks and she can't get enough of it. The last batch I didn't have any tomato puree but I went ahead with it anyway and she still enjoyed it.</p>
]]></content:encoded>
<pubDate>2024-11-11T08:54:29Z</pubDate>
</item>
<item>
<title>Adding Cooklang Support to Eleventy Three Ways</title>
<link>https://rknight.me/blog/adding-cooklang-support-to-eleventy-two-ways/</link>
<guid>https://rknight.me/blog/adding-cooklang-support-to-eleventy-two-ways/</guid>
<content:encoded><![CDATA[
<div> 关键词: Eleventy, recipes, blog, cooklang, JSON-LD<br /><br />总结:<br />本文主要讲述了作者如何在Eleventy平台上添加对.cook文件的支持，以便在个人网站上分享食谱。作者尝试了多种方法，最终选择将食谱以博客文章的形式发布。文章中详细介绍了三种尝试方法：首先是直接编译模板；其次是添加数据到数据级联中；最后是将食谱整合到博客文章中。此外，作者还实现了将食谱数据用cooklang格式化，并通过JSON-LD增加了搜索引擎优化。整个过程中，作者展示了代码实现，并分享了对应的思路和技术选择。 <div>
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>Note</p><p>I had already built most of this before I saw <a href="https://www.mathew-paul.nz/posts/adding-cooklang-to-my-blog/">Mat had already done this</a> including making <a href="https://www.mathew-paul.nz/posts/adding-cooklang-to-my-blog/">a plugin</a> available. Lesson learned, maybe Google it first.</p>
</div>
<p><a href="https://cooklang.org">Cooklang</a>, as I wrote about in <a href="https://rknight.me/blog/thinking-about-recipe-formats-more-than-anyone-should/">my previous post</a>, is a markup language for recipes. I wanted to put all my recipes on my site under the <code>/recipes</code> directory which meant I needed to add support for the <code>.cook</code> files to Eleventy. I tried two methods for this then ended up with a third version where I scrapped a lot of what I did and decided to just do it in blog posts.</p>
<h3>Method One: Compile the Template Directly</h3>
<p>Eleventy supports <a href="https://www.11ty.dev/docs/languages/custom/">adding custom template languages</a> so adding support for the format is as simple as adding the following to my config file:</p>
<pre class="language-js"><code class="language-js">eleventyConfig<span class="token punctuation">.</span><span class="token function">addTemplateFormats</span><span class="token punctuation">(</span><span class="token string">'cook'</span><span class="token punctuation">)</span><br /><br />eleventyConfig<span class="token punctuation">.</span><span class="token function">addExtension</span><span class="token punctuation">(</span><span class="token string">'cook'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />	<span class="token function-variable function">compile</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">inputContent</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />		<span class="token keyword">const</span> output <span class="token operator">=</span> inputContent<br />		<span class="token comment">// parse the cooklang file</span><br />		<span class="token comment">// and return the formatted HTML</span><br />		<span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />			<span class="token keyword">return</span> output<br />		<span class="token punctuation">}</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>Then I added some frontmatter to the recipes to handle title and permalinks<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>:</p>
<pre class="language-markdown"><code class="language-markdown"><span class="token front-matter-block"><span class="token punctuation">---</span><br /><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> Sliced Apple<br /><span class="token key atrule">permalink</span><span class="token punctuation">:</span> /recipes/sliced<span class="token punctuation">-</span>apple/index.html<br /><span class="token key atrule">layout</span><span class="token punctuation">:</span> base</span><br /><span class="token punctuation">---</span></span><br /><br /><span class="token blockquote punctuation">>></span> source: https://en.wikipedia.org/wiki/Apple<br /><span class="token blockquote punctuation">>></span> note: Recommended by doctor exorcists<br /><br />Cut the @Apple{1} into slices. This takes ~{1%minute}. You need a #knife.</code></pre>
<p>The <a href="https://cooklang.github.io/cooklang-ts/"><code>cooklang-ts</code></a> library will parse the <code>.cook</code> file to <code>Recipe</code> object which can then be used to make the HTML. I haven't included the logic here because I went in a different direction with it but you get the idea. In the second method further down I <em>do</em> show how to do it.</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const { Recipe } = require('@cooklang/cooklang-ts')<br /></span></span><br />compile: async (inputContent) => {<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   let output = ''<br /></span><span class="token prefix inserted">+</span><span class="token line">	const recipe = new Recipe(inputContent)<br /></span><span class="token prefix inserted">+</span><span class="token line">   // imagine the code here that takes<br /></span><span class="token prefix inserted">+</span><span class="token line">   // the recipe and formats it to an HTML string<br /></span></span>	return async () => {<br />		return output<br />	}<br />},</code></pre>
<p>This would leave my page object looking something like this:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br />	<span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">'&lt;div>the formatted sliced apple recipe&lt;/div>'</span><br /><span class="token punctuation">}</span></code></pre>
<h3>Method Two: Add to the Data Cascade</h3>
<p>The reason I stopped with method one is I prefer my Eleventy config to return <em>data</em> (in this case, JS objects) and for rendering to be handled by the Nunjucks templates. Creating HTML strings in JS, even with <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals">template literals</a>, just doesn't spark joy.</p>
<p>On the Eleventy custom templates docs page, there is a <a href="https://www.11ty.dev/docs/languages/custom/#getdata-and-getinstancefrominputpath"><code>getData</code> section</a>. This method &quot;<em>controls if and how additional data should be retrieved from a JavaScript object to populate the Data Cascade</em>&quot;. This allows adding additional attributes to the page object. If we take the method one example and add in the <code>getData</code> method we get something like this:</p>
<pre class="language-js"><code class="language-js">eleventyConfig<span class="token punctuation">.</span><span class="token function">addExtension</span><span class="token punctuation">(</span><span class="token string">'cook'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />        <span class="token function-variable function">getData</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">inputPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	        <span class="token comment">// read the contents of the file</span><br />            <span class="token keyword">const</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>inputPath<span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'---'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><br />            <span class="token comment">// get the recipe object</span><br />            <span class="token keyword">const</span> recipe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Recipe</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><br />            <span class="token keyword">return</span> <span class="token punctuation">{</span><br />                <span class="token literal-property property">ingredients</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>ingredients<span class="token punctuation">,</span><br />                <span class="token literal-property property">metadata</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">,</span><br />                <span class="token comment">// for each step, add spans and classes</span><br />                <span class="token comment">// to ingredients, timers, and cookware</span><br />                <span class="token literal-property property">steps</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>steps<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">step</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                    <span class="token keyword">return</span> step<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                        <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'text'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                            <span class="token keyword">return</span> s<span class="token punctuation">.</span>value<br />                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'ingredient'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span class="cl-ingredient"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span></span><span class="token template-punctuation string">`</span></span><br />                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'timer'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span class="cl-timer"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>quantity<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>units<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span></span><span class="token template-punctuation string">`</span></span><br />                        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'cookware'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span class="cl-cookware"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span></span><span class="token template-punctuation string">`</span></span><br />                        <span class="token punctuation">}</span><br />                    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><br />                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />            <span class="token punctuation">}</span><br />		<span class="token punctuation">}</span><span class="token punctuation">,</span><br />		<span class="token function-variable function">compile</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">inputContent</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />			<span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />				<span class="token keyword">return</span> inputContent<br />			<span class="token punctuation">}</span><span class="token punctuation">;</span><br />		<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>So my page object now looks like this - notice I'm still running <code>compile</code> so we have access to the raw cooklang content to be able to output that on the page too.</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br />	<span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">'the raw text from the cooklang file'</span><span class="token punctuation">,</span><br />	<span class="token literal-property property">ingredients</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token literal-property property">metadata</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token literal-property property">steps</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>I set the layout of the recipes to a new layout called <code>recipe</code> which extends my base layout and added the logic for rendering the data:</p>
<pre class="language-handlebars"><code class="language-handlebars"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><br />    <span class="token selector">.cl-ingredient,<br />    .cl-timer</span> <span class="token punctuation">{</span><br />        <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h-recipe<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    {% if metadata.note %}<br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">metadata</span><span class="token punctuation">.</span><span class="token variable">note</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />    {% endif %}<br /><br />    {% if metadata.servings %}<br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>em</span><span class="token punctuation">></span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">metadata</span><span class="token punctuation">.</span><span class="token variable">servings</span> <span class="token delimiter punctuation">}}</span></span> Servings<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>em</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />    {% endif %}<br /><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><br />        {%- for ingredient in ingredients -%}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><br />                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p-ingredient<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />                    <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">ingredient</span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token delimiter punctuation">}}</span></span><br />                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> {% if ingredient.quantity != 'some' %}(<span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">ingredient</span><span class="token punctuation">.</span><span class="token variable">quantity</span> <span class="token delimiter punctuation">}}</span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">ingredient</span><span class="token punctuation">.</span><span class="token variable">units</span> <span class="token delimiter punctuation">}}</span></span>){% endif %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><br />        {%- endfor -%}<br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><br /><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>e-instructions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />        {%- for step in steps -%}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">step</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />        {%- endfor -%}<br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br /><br />    {% if metadata.source %}<br />        {% if "http" in metadata.source %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">metadata</span><span class="token punctuation">.</span><span class="token variable">source</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Source<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />        {% else %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Source: <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">metadata</span><span class="token punctuation">.</span><span class="token variable">source</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />        {% endif %}<br />    {% endif %}<br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span><br /></code></pre>
<p>I've included the <a href="http://microformats.org/wiki/h-recipe">microformat</a> classes here as well as outputting any source and notes I've put in the metadata. I then added the raw <code>.cook</code> file into a <code>details</code> element at the bottom:</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"><br /></span><span class="token prefix inserted">+</span><span class="token line">	&lt;details><br /></span><span class="token prefix inserted">+</span><span class="token line">	    &lt;summary>&lt;code>{{ page.fileSlug }}.cook&lt;/code>&lt;/summary><br /></span><span class="token prefix inserted">+</span><span class="token line">	    &lt;pre style="text-wrap: wrap"><br /></span><span class="token prefix inserted">+</span><span class="token line">		    {{ content | safe }}<br /></span><span class="token prefix inserted">+</span><span class="token line">	    &lt;/pre><br /></span><span class="token prefix inserted">+</span><span class="token line">	&lt;/details><br /></span></span><span class="token deleted-arrow deleted"><span class="token prefix deleted">&lt;</span><span class="token line">/article></span></span></code></pre>
<p><img alt="Sliced Apples recipe rendered on my site" src="https://cdn.rknight.me/site/slice-apples-screenshot.jpg" /></p>
<p>Finally to add a list of recipes on the <code>/recipes</code> page, I added a new collection and rendered said collection, sorted by title:</p>
<pre class="language-js"><code class="language-js">eleventyConfig<span class="token punctuation">.</span><span class="token function">addCollection</span><span class="token punctuation">(</span>'recipes<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	collectionApi<span class="token punctuation">.</span><span class="token function">getFilteredByGlob</span><span class="token punctuation">(</span><span class="token string">"src/pages/recipes/**/*.cook"</span><span class="token punctuation">)</span><br />            <span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span>b</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>a<span class="token punctuation">.</span>data<span class="token punctuation">.</span>title <span class="token operator">></span> b<span class="token punctuation">.</span>data<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>data<span class="token punctuation">.</span>title <span class="token operator">></span> a<span class="token punctuation">.</span>data<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>It was at this point I stared out the window of my office and thought to myself &quot;what the fuck am I doing&quot;. What would the URLs be? How would I tell people about new recipes? I could make an RSS feed for them but then they need dates. What I'm describing is a blog. I already have a blog. And recipes on that blog. So I deleted the collection, deleted the <code>/recipes</code> page, and jumped into an existing recipe post to see what I could do here.</p>
<h3>Method Three: All of the Above but It’s Blog Posts</h3>
<blockquote>
<p>I’ve done a bunch of stuff and have it working but now I’m thinking why isn’t it just blog posts and screw all this nonsense</p>
</blockquote>
<p>I scrapped all the code and started coverting my <a href="https://rknight.me/blog/puff-pastry-sausage-roll-recipe/">sausage roll recipe</a> to cooklang format. As I mentioned in my previous post, there's no way to have multi-line comments in the metadata and this recipe requires it, so I made the executive decision to use <code>|</code> in my notes between each &quot;line&quot; and I'll handle splitting this myself. The converted recipe looks like this. I added <code>servings</code> and <code>source</code> to test how they will look, those are likely to be there in other recipes but aren't actually relevant to this one.</p>
<pre class="language-cooklang"><code class="language-cooklang"><span class="token meta">>> <span class="token property">notes</span>: I prefer to buy sausages and remove the skin as there's a bigger variety of flavours available without having to add stuff to sausage meat myself | In the UK puff pastry comes in a standard size of 320g ([example](https://groceries.asda.com/product/pastry-dough/jus-rol-puff-pastry-ready-rolled-sheet/910000468752))</span><br /><br /><span class="token meta">>> <span class="token property">servings</span>: A lot</span><br /><br /><span class="token meta">>> <span class="token property">source</span>: https://example.com</span><br /><br />Preheat the oven to 180°c. Whisk up an <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Egg</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">1</span><span class="token punctuation">}</span></span></span> in a bowl.<br /><br />Lay the <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Puff Pastry</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">320</span><span class="token unit-separator operator">%</span><span class="token unit symbol">g</span><span class="token punctuation">}</span></span></span> and lay a cylinder of <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Sausage Meat</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">450</span><span class="token unit-separator operator">%</span><span class="token unit symbol">g</span><span class="token punctuation">}</span></span></span> about an inch thick across the pastry. Roll the pastry around that and cut it so there's just enough to cover the meat with a little bit of overlap. Do this until you run out of pastry. <br /><br />Grab your baking tray, lay down some greaseproof paper on it, then brush the tray with the eggwash. <br /><br />Cut up your long sausage roll into inch-wide smaller sausage rolls and pop them on the baking tray, seam down. Brush them with egg and pop them in the oven for <span class="token timer-group"><span class="token timer-keyword keyword">~</span><span class="token duration-group"><span class="token punctuation">{</span><span class="token duration number">20</span>-<span class="token duration number">25</span> <span class="token operator">%</span><span class="token unit symbol">minutes</span><span class="token punctuation">}</span></span></span> until they're golden brown all over.</code></pre>
<p>I then needed to add this to the frontmatter of the recipe blog post. Doing it this way, rather than a separate file, means that if someone just has this file the recipe is still readable.</p>
<pre class="language-diff"><code class="language-diff">excerpt: "A very simple recipe for making delicious sausage rolls"<br />tags:<br /><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   - Food<br /></span><span class="token prefix unchanged"> </span><span class="token line">   - Recipes<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> recipe: > <br /></span><span class="token prefix inserted">+</span><span class="token line">    >> notes: I prefer to buy sausages and remove the skin as there's a bigger variety of flavours available without having to add stuff to sausage meat myself | In the UK puff pastry comes in a standard size of 320g ([example](https://groceries.asda.com/product/pastry-dough/jus-rol-puff-pastry-ready-rolled-sheet/910000468752))<br /></span></span>// and so on</code></pre>
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>TIL</p><p>To do multi-line values in YAML you can use <a href="https://yaml.org/spec/1.2-old/spec.html#style/block/folded">Folded Scalar</a> / <code>&gt;</code>.</p>
</div>
<p>In my post layout file I added a check for the <code>recipe</code> value and if it exists include a new <code>recipe.njk</code> file - this file will pass the data to the filter, then do the rendering. Finally I added a new filter to parse and format the recipe.</p>
<pre class="language-hbs"><code class="language-hbs"><span class="token block keyword">//</span> <span class="token variable">post</span><span class="token punctuation">.</span><span class="token variable">njk</span><br /><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">recipe</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />	<span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">include</span> <span class="token string">'recipe.njk'</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br /><br /><span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">recipe</span><span class="token punctuation">.</span><span class="token variable">njk</span><br /><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">set</span> <span class="token variable">recipeData</span> <span class="token punctuation">=</span> <span class="token variable">recipe</span> <span class="token punctuation">|</span> <span class="token variable">recipeOutput</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br /><br /><span class="token punctuation">/</span><span class="token punctuation">/</span> <span class="token variable">output</span> <span class="token variable">as</span> <span class="token variable">per</span> <span class="token variable">template</span> <span class="token variable">in</span> <span class="token variable">method</span> <span class="token variable">two</span></code></pre>
<pre class="language-js"><code class="language-js">eleventyConfig<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span><span class="token string">'recipeOutput'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">raw</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">const</span> recipe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Recipe</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><br />	<span class="token keyword">return</span> <span class="token punctuation">{</span><br />		<span class="token literal-property property">cookware</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>cookwares<span class="token punctuation">,</span><br />		<span class="token literal-property property">ingredients</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>ingredients<span class="token punctuation">,</span><br />		<span class="token comment">// and so on, the same as the filter in method two</span><br />		<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>At this point, this is all rendering the same as method two but on a blog post instead - I can put my life story in the post and <em>then</em> the recipe shows, as is tradition. The next step was to split the notes into new lines. I also ran them through a markdown parser to handle any links I might include and added an image to the recipe:</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const marked = require('marked')<br /></span><span class="token prefix inserted">+</span><span class="token line"> const notes = (recipe.metadata.notes || '').split('|').map(n => marked.parse(n.trim()))<br /></span><span class="token prefix inserted">+</span><span class="token line"> delete recipe.metadata.notes // remove this from metadata<br /></span></span><br />return {<br />	cookware: recipe.cookwares,<br />	ingredients: recipe.ingredients,<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">	notes,</span></span></code></pre>
<p>Next, rather than be explicit about which metadata items will show (like I do above with servings and source), I changed the <code>metadata</code> attribute so it's an array I can just map over in the template.</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const image = recipe.metadata.image<br /></span></span><br />notes: (recipe.metadata.notes || '').split('|').map(n => marked.parse(n.trim()))<br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> metadata: recipe.metadata,<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> metadata: Object.keys(recipe.metadata).map(key => {<br /></span><span class="token prefix inserted">+</span><span class="token line">	const name = key.charAt(0).toUpperCase() + key.slice(1)<br /></span><span class="token prefix inserted">+</span><span class="token line">	return {<br /></span><span class="token prefix inserted">+</span><span class="token line">		key: name,<br /></span><span class="token prefix inserted">+</span><span class="token line">		value: recipe.metadata[key]<br /></span><span class="token prefix inserted">+</span><span class="token line">	}<br /></span><span class="token prefix inserted">+</span><span class="token line"> }),<br /></span><span class="token prefix inserted">+</span><span class="token line"> image,</span></span></code></pre>
<p>The notes and metadata then get output in my alert component (I added a new <code>kitchen</code> icon for this).</p>
<pre class="language-hbs"><code class="language-hbs"><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">notes</span><span class="token punctuation">.</span><span class="token variable">length</span> <span class="token punctuation">></span> <span class="token number">1</span> <span class="token variable">or</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">metadata</span><span class="token punctuation">.</span><span class="token variable">length</span> <span class="token punctuation">></span> <span class="token number">1</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />	<span class="token punctuation">&lt;</span><span class="token variable">aside</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"alert"</span><span class="token punctuation">></span><br />		<span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"alert-icon"</span><span class="token punctuation">></span><br />			<span class="token punctuation">&lt;</span><span class="token variable">svg</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"icon alert-recipe"</span><span class="token punctuation">></span><br />				<span class="token punctuation">&lt;</span><span class="token variable">use</span> <span class="token variable">xlink</span><span class="token punctuation">:</span><span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"#kitchen"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">use</span><span class="token punctuation">></span><br />			<span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">svg</span><span class="token punctuation">></span><br />		<span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />			<span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">note</span> <span class="token variable">in</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">notes</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />				<span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">note</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><br />			<span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">endfor</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />			<span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">meta</span> <span class="token variable">in</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">metadata</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />				<span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">key</span> <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">'Source'</span> <span class="token variable">and</span> <span class="token string">"http"</span> <span class="token variable">in</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">value</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />					<span class="token punctuation">&lt;</span><span class="token variable">p</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">a</span> <span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"{{ recipeData.metadata.source }}"</span><span class="token punctuation">></span><span class="token variable">Source</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">a</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">p</span><span class="token punctuation">></span><br />				<span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">else</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />					<span class="token punctuation">&lt;</span><span class="token variable">p</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">key</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">value</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">p</span><span class="token punctuation">></span><br />				<span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />			<span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">endfor</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />	<span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">aside</span><span class="token punctuation">></span><br /><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span></code></pre>
<p><img alt="Recipe metadata" src="https://cdn.rknight.me/site/recipe-metadata-with-icon.jpg" /></p>
<p>For the raw recipe output, I updated that to use the syntax highlighting like the rest of the site does.</p>
<pre class="language-hbs"><code class="language-hbs"><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">highlight</span> <span class="token string">"js"</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />	<span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">highlight</span> <span class="token string">"cooklang"</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />        <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">recipe</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endhighlight</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endhighlight</span> <span class="token punctuation">%</span><span class="token punctuation">}</span></code></pre>
<h4>JSON-LD</h4>
<p>I also want to include the recipe schema markup on the page even though <a href="https://rknight.me/blog/why-is-no-one-using-the-recipe-schema/">none of the recipe extensions use it</a>. The first thing I realised is that my recipes don't have a name (I was relying on the blog post for that), so I added that to the recipe.</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> >> name: Puff Pastry Sausage Rolls</span></span></code></pre>
<p>Then I added a new <code>makeJsonLd</code> function to my recipe filter, pass it the recipe object, and output it on the page.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">makeJsonLd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">recipe</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'@context'</span><span class="token operator">:</span> <span class="token string">'https://schema.org'</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'@type'</span><span class="token operator">:</span> <span class="token string">'Recipe'</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">'Robb Knight'</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">recipeIngredient</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>ingredients<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span>quantity <span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span>units<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">name</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span><br />        <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />            recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>image<br />        <span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">recipeInstructions</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>steps<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">step</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">return</span> <span class="token punctuation">{</span><br />                <span class="token string-property property">'@type'</span><span class="token operator">:</span> <span class="token string">'HowToStep'</span><span class="token punctuation">,</span><br />                <span class="token literal-property property">text</span><span class="token operator">:</span> step<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'text'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>value<br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'ingredient'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'timer'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>quantity<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>units<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'cookware'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />                    <span class="token punctuation">}</span><br />                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<pre class="language-hbs"><code class="language-hbs"><span class="token punctuation">&lt;</span><span class="token variable">script</span> <span class="token variable">type</span><span class="token punctuation">=</span><span class="token string">"application/ld+json"</span><span class="token punctuation">></span><br />    <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">json</span> <span class="token punctuation">|</span> <span class="token variable">dump</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><br /><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">script</span><span class="token punctuation">></span></code></pre>
<p>With all of this together plus some additional styling tweaks, a recipe on a blog post looks like this:</p>
<p><img alt="The final output of the recipe page" src="https://cdn.rknight.me/site/recipe-final-output.jpg" /></p>
<p>The last job was to convert the other recipes into cooklang format and update the posts, which was not as fun as it sounds. Going forward I'll be adding new recipes as blog posts<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> and you'll be able to see them all under the <a href="https://rknight.me/blog/tags/recipes/">#recipes</a> tag.</p>
<p>Ideally I would like the recipe to render <em>before</em> the footnotes of a post but that would require digging into the markdown plugins to inject it so I decided to live with it for now.</p>
<p>Below is the code in full of the filter and template or you can browse the latest code for the site <a href="https://github.com/rknightuk/rknight.me/">on GitHub</a></p>
<details>
The recipe filter (<code>recipe.js</code>)
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> Recipe <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'@cooklang/cooklang-ts'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> marked <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'marked'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> <span class="token function-variable function">makeJsonLd</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">recipe</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'@context'</span><span class="token operator">:</span> <span class="token string">'https://schema.org'</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'@type'</span><span class="token operator">:</span> <span class="token string">'Recipe'</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">'Robb Knight'</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">recipeIngredient</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>ingredients<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">i</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span>quantity <span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span>units<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">name</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<span class="token punctuation">,</span><br />        <span class="token literal-property property">image</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />            recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>image<br />        <span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">recipeInstructions</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>steps<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">step</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">return</span> <span class="token punctuation">{</span><br />                <span class="token string-property property">'@type'</span><span class="token operator">:</span> <span class="token string">'HowToStep'</span><span class="token punctuation">,</span><br />                <span class="token literal-property property">text</span><span class="token operator">:</span> step<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'text'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>value<br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'ingredient'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'timer'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>quantity<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>units<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'cookware'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />                    <span class="token punctuation">}</span><br />                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br />module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><br />    <span class="token function-variable function">recipeOutput</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">raw</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> recipe <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Recipe</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><br />        <span class="token keyword">const</span> notes <span class="token operator">=</span> <span class="token punctuation">(</span>recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>notes <span class="token operator">||</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">n</span> <span class="token operator">=></span> marked<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />        <span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token function">makeJsonLd</span><span class="token punctuation">(</span>recipe<span class="token punctuation">)</span><br />        <span class="token keyword">const</span> <span class="token punctuation">{</span> image<span class="token punctuation">,</span> name <span class="token punctuation">}</span> <span class="token operator">=</span> recipe<span class="token punctuation">.</span>metadata<br />        <br />        <span class="token keyword">delete</span> recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>notes<br />        <span class="token keyword">delete</span> recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>name<br />        <span class="token keyword">delete</span> recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">.</span>image<br /><br />        <span class="token keyword">return</span> <span class="token punctuation">{</span><br />            json<span class="token punctuation">,</span><br />            name<span class="token punctuation">,</span><br />            image<span class="token punctuation">,</span><br />            <span class="token literal-property property">cookware</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>cookwares<span class="token punctuation">,</span><br />            <span class="token literal-property property">ingredients</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>ingredients<span class="token punctuation">,</span><br />            notes<span class="token punctuation">,</span><br />            <span class="token literal-property property">metadata</span><span class="token operator">:</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                <span class="token keyword">const</span> name <span class="token operator">=</span> key<span class="token punctuation">.</span><span class="token function">charAt</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> key<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><br />                <span class="token keyword">return</span> <span class="token punctuation">{</span><br />                    <span class="token literal-property property">key</span><span class="token operator">:</span> name<span class="token punctuation">,</span><br />                    <span class="token literal-property property">value</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>metadata<span class="token punctuation">[</span>key<span class="token punctuation">]</span><br />                <span class="token punctuation">}</span><br />            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />            <span class="token literal-property property">steps</span><span class="token operator">:</span> recipe<span class="token punctuation">.</span>steps<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">step</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                <span class="token keyword">return</span> marked<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>step<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">s</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                    <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'text'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> s<span class="token punctuation">.</span>value<br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'ingredient'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span class="cl-ingredient"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span></span><span class="token template-punctuation string">`</span></span><br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'timer'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span class="cl-timer"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>quantity<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>units<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span></span><span class="token template-punctuation string">`</span></span><br />                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>s<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">'cookware'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;span class="cl-cookware"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>s<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span></span><span class="token template-punctuation string">`</span></span><br />                    <span class="token punctuation">}</span><br />                <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
</details>
<details>
The recipe template (<code>recipe.njk</code>)
<pre class="language-hbs"><code class="language-hbs"><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">set</span> <span class="token variable">recipeData</span> <span class="token punctuation">=</span> <span class="token variable">recipe</span> <span class="token punctuation">|</span> <span class="token variable">recipeOutput</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br /><br /><span class="token punctuation">&lt;</span><span class="token variable">style</span><span class="token punctuation">></span><br />    <span class="token punctuation">.</span><span class="token variable">cl-ingredient</span><span class="token punctuation">,</span><br />    <span class="token punctuation">.</span><span class="token variable">cl-timer</span> <span class="token punctuation">{</span><br />        <span class="token variable">font-weight</span><span class="token punctuation">:</span> <span class="token variable">bold</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">style</span><span class="token punctuation">></span><br /><br /><span class="token punctuation">&lt;</span><span class="token variable">article</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"h-recipe recipe"</span><span class="token punctuation">></span><br /><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">image</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />        <span class="token punctuation">&lt;</span><span class="token variable">img</span> <span class="token variable">src</span><span class="token punctuation">=</span><span class="token string">"{{ recipeData.image }}"</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"u-photo"</span> <span class="token variable">style</span><span class="token punctuation">=</span><span class="token string">"margin-bottom: 20px;"</span><span class="token punctuation">></span><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />    <br />    <span class="token punctuation">{</span><span class="token punctuation">#</span> <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">notes</span><span class="token punctuation">.</span><span class="token variable">length</span> <span class="token punctuation">></span> <span class="token number">1</span> <span class="token variable">or</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">metadata</span><span class="token punctuation">.</span><span class="token variable">length</span> <span class="token punctuation">></span> <span class="token number">1</span> <span class="token punctuation">%</span><span class="token punctuation">}</span> <span class="token punctuation">#</span><span class="token punctuation">}</span><br />        <span class="token punctuation">&lt;</span><span class="token variable">aside</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"alert"</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"alert-icon"</span><span class="token punctuation">></span><br />                <span class="token punctuation">&lt;</span><span class="token variable">svg</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"icon alert-recipe"</span><span class="token punctuation">></span><br />                    <span class="token punctuation">&lt;</span><span class="token variable">use</span> <span class="token variable">xlink</span><span class="token punctuation">:</span><span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"#kitchen"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">use</span><span class="token punctuation">></span><br />                <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">svg</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token variable">h1</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">h1</span><span class="token punctuation">></span><br />            <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">note</span> <span class="token variable">in</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">notes</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />                <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">note</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><br />            <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">endfor</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />            <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">meta</span> <span class="token variable">in</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">metadata</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />                <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">key</span> <span class="token punctuation">=</span><span class="token punctuation">=</span><span class="token punctuation">=</span> <span class="token string">'Source'</span> <span class="token variable">and</span> <span class="token string">"http"</span> <span class="token variable">in</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">value</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />                    <span class="token punctuation">&lt;</span><span class="token variable">p</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">a</span> <span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"{{ recipeData.metadata.source }}"</span><span class="token punctuation">></span><span class="token variable">Source</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">a</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">p</span><span class="token punctuation">></span><br />                <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">else</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />                    <span class="token punctuation">&lt;</span><span class="token variable">p</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">key</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">meta</span><span class="token punctuation">.</span><span class="token variable">value</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">p</span><span class="token punctuation">></span><br />                <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />            <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">endfor</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />        <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">aside</span><span class="token punctuation">></span><br />    <span class="token punctuation">{</span><span class="token punctuation">#</span> <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span> <span class="token punctuation">#</span><span class="token punctuation">}</span><br /><br />    <span class="token punctuation">&lt;</span><span class="token variable">ul</span><span class="token punctuation">></span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">ingredient</span> <span class="token variable">in</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">ingredients</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />            <span class="token punctuation">&lt;</span><span class="token variable">li</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">ingredient</span><span class="token punctuation">.</span><span class="token variable">quantity</span> <span class="token punctuation">!</span><span class="token punctuation">=</span> <span class="token string">'some'</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">ingredient</span><span class="token punctuation">.</span><span class="token variable">quantity</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">ingredient</span><span class="token punctuation">.</span><span class="token variable">units</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token variable">span</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"p-ingredient"</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">ingredient</span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">span</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">li</span><span class="token punctuation">></span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">endfor</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">cookware</span> <span class="token variable">in</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">cookware</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />            <span class="token punctuation">&lt;</span><span class="token variable">li</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">cookware</span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">span</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">li</span><span class="token punctuation">></span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">endfor</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />    <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">ul</span><span class="token punctuation">></span><br /><br />    <span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"e-instructions"</span><span class="token punctuation">></span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">step</span> <span class="token variable">in</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">steps</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />            <span class="token punctuation">&lt;</span><span class="token variable">p</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">step</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">p</span><span class="token punctuation">></span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">endfor</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />    <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br /><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">article</span><span class="token punctuation">></span><br /><br /><span class="token punctuation">&lt;</span><span class="token variable">details</span><span class="token punctuation">></span><br />    <span class="token punctuation">&lt;</span><span class="token variable">summary</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">code</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token variable">cook</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">code</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">summary</span><span class="token punctuation">></span><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">highlight</span> <span class="token string">"cooklang"</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />        <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">recipe</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endhighlight</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">details</span><span class="token punctuation">></span><br /><br /><span class="token punctuation">&lt;</span><span class="token variable">script</span> <span class="token variable">type</span><span class="token punctuation">=</span><span class="token string">"application/ld+json"</span><span class="token punctuation">></span><br />    <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">recipeData</span><span class="token punctuation">.</span><span class="token variable">json</span> <span class="token punctuation">|</span> <span class="token variable">dump</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><br /><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">script</span><span class="token punctuation">></span></code></pre>
</details>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Eleventy makes permalinks automatically based on the folder structure but I prefer to be explicit about it <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>Maybe next week can be recipe week <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-07T08:37:23Z</pubDate>
</item>
<item>
<title>Why Is No One Using the Recipe Schema?</title>
<link>https://rknight.me/blog/why-is-no-one-using-the-recipe-schema/</link>
<guid>https://rknight.me/blog/why-is-no-one-using-the-recipe-schema/</guid>
<content:encoded><![CDATA[
<p>While working on my recipe handling for this site as outlined in <a href="https://rknight.me/blog/thinking-about-recipe-formats-more-than-anyone-should/">my previous post</a> I realised that there are many recipe-related browser extensions available so I should be able to test my <a href="http://schema.org">schema.org</a> markup and my microformat class locally so I downloaded a handful of the most popular ones.</p>
<p>And it turns out they just...don't use the schema to extract recipes? This is in the source of <a href="https://github.com/bradenzingler/recipe_extractor/blob/master/content.js">one of the extensions</a>:</p>
<pre class="language-js"><code class="language-js">ingr_selectors <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string">'.Wrapper-dxnTBC'</span><span class="token punctuation">,</span>                          <br />    <span class="token string">'.mntl-structured-ingredients__list-item'</span><span class="token punctuation">,</span>  <br />    <span class="token string">'.wprm-recipe-ingredient'</span><span class="token punctuation">,</span>                  <br />    <span class="token string">'.ingredient-lists > li > p'</span><span class="token punctuation">,</span>               <br />    <span class="token string">'#structured-ingredients_1-0'</span><span class="token punctuation">,</span>              <br />    <span class="token string">'.o-Ingredients__m-Body'</span><span class="token punctuation">,</span>                   <br />    <span class="token string">'.ingredient-list > li'</span><span class="token punctuation">,</span>                         <br />    <span class="token string">'.recipe__ingredients'</span><span class="token punctuation">,</span>                     <br />    <span class="token string">'.Recipe__ingredient'</span><span class="token punctuation">,</span><br />    <span class="token string">'.field-ingredientstext'</span><span class="token punctuation">,</span>                   <br />    <span class="token string">'.cooked-recipe-ingredients'</span><span class="token punctuation">,</span>               <br />    <span class="token string">'.tasty-recipes-ingredients-body > ul > li'</span><span class="token punctuation">,</span> <br />    <span class="token string">'.recipe-ingredients__list'</span><span class="token punctuation">,</span>                <br />    <span class="token string">'.recipe-ingredients > ul > li'</span><span class="token punctuation">,</span>            <br />    <span class="token string">'.tasty-recipes-ingredients > div > ul > li'</span><span class="token punctuation">,</span><br />    <span class="token string">'.recipe-ingredient > ul > li'</span><span class="token punctuation">,</span><br />    <span class="token string">'.ingredients_ingredients__FLjsC > ul > li'</span><span class="token punctuation">,</span><br />    <span class="token string">'.recipe-ingredients > li'</span><span class="token punctuation">,</span><br />    <span class="token string">'.mv-create-ingredients > ul > li'</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>The first ten or so had comments about which site they were for and the others I assume are just generally-accepted class names for recipes. Notice the microformat class for ingredients isn't in this list (<code>p-ingredient</code>), nor is the recipe class (<code>h-recipe</code>) in the recipe selectors.</p>
<p>Okay so maybe the microformats isn't widely supported but <em>surely</em> they use the <a href="http://scheme.org">scheme.org</a> JSON where it's available? I checked a handful of recipe sites and they all have it. Nope. None of the extensions I tested or could find source code for use it.</p>
<p>Perhaps there's some problem with how the big sites are using it, I thought. So I ran this script on a bunch of the sites and as far as I could tell, they all use the schema correctly.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> found <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'script[type="application/ld+json"]'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> data <span class="token operator">=</span> found<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>found<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token keyword">null</span><br />console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><br /><br /><span class="token comment">// { "@context": "https://schema.org", "@type": "Recipe", ...</span></code></pre>
<p>All of these sites support it because Google forces them to, it's a requirement to be featured prominently in search results. If someone can enlighten me as to why these extensions rely on class names that presumably change all the time, I'm all ears. I'll be over in the corner whipping up a bookmarklet to extract recipes using <em>standards</em>.</p>
]]></content:encoded>
<pubDate>2024-11-06T08:47:24Z</pubDate>
</item>
<item>
<title>Thinking About Recipe Formats More Than Anyone Should</title>
<link>https://rknight.me/blog/thinking-about-recipe-formats-more-than-anyone-should/</link>
<guid>https://rknight.me/blog/thinking-about-recipe-formats-more-than-anyone-should/</guid>
<content:encoded><![CDATA[
<p>I've had a note in my todo list for quite a while to get my (admittedly small) collection of recipes on my website. The note mentioned to look into <a href="https://cooklang.org">Cooklang</a> which is a &quot;<em>recipe markup language</em>&quot; but I also wanted to see if anyone knew of any other standards I should be looking at before I went ahead. I got a few responses:</p>
<ul>
<li><a href="https://pub.calebhearth.com/@caleb/113419235283396365">Caleb pointed me</a> to the <a href="https://pub.calebhearth.com/@caleb/113419235283396365">recipe microformat</a> which he's using on <a href="https://calebhearth.com/spiced-mead-cake">his recipes</a>.</li>
<li><a href="https://mela.recipes">Mela</a> has it's own <a href="https://mela.recipes/fileformat/index.html">defined JSON format</a> sent to me by <a href="https://hachyderm.io/@byjp/113421305181124540">JP</a></li>
<li><a href="https://social.stlouist.com/@jw/113419385141696407">JW</a> mentioned <a href="https://en.wikipedia.org/wiki/RecipeML">RecipeML</a> which is XML (🤮)</li>
<li><a href="https://writing.exchange/@medievalist/113419695154729301">Lisa mentioned</a> the format Google prefers for SEO (which I don't care about) and I tracked that down to the <a href="https://schema.org/Recipe">Recipe schema type</a></li>
<li>Then there's the more obvious, not-standard-for-recipes like Markdown, generic HTML, and PDFs</li>
</ul>
<p>I should note at this point, I started writing out how my <em>own</em> standard might work because I am an idiot. A real <a href="https://xkcd.com/927/">XKCD#927 moment</a>. I stopped, I swear.</p>
<p>Of these I narrowed it down to two that were worth my time: Cooklang and the schema type. Recipe microformat is useful but I was looking for <em>how should I store these</em> and not necessarily how to display them.</p>
<h3>Cooklang</h3>
<p>A <em>very</em> basic Cooklang recipe looks like this:</p>
<pre class="language-cooklang"><code class="language-cooklang"><span class="token meta">>> <span class="token property">source</span>: https://en.wikipedia.org/wiki/Apple</span><br /><span class="token meta">>> <span class="token property">note</span>: Recommended by doctor exorcists</span><br /><br />Cut the <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Apple</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">1</span><span class="token punctuation">}</span></span></span> into slices. This takes <span class="token timer-group"><span class="token timer-keyword keyword">~</span><span class="token duration-group"><span class="token punctuation">{</span><span class="token duration number">1</span><span class="token operator">%</span>minute<span class="token punctuation">}</span></span></span>. You need a <span class="token cookware-group"><span class="token cookware-keyword keyword">#</span><span class="token cookware variable">knife</span></span>.</code></pre>
<p>Ingredients are identified with <code>@</code> and quantity is defined in the brackets <code>{100%g}</code>. Timers are done with <code>~{10%minutes}</code>. Each paragraph becomes an instruction step. You can also define cookware with <code>#</code>. <code>&gt;&gt;</code> is the metadata. When this is run through a parser the output will be represented like so:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />  <span class="token property">"metadata"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />    <span class="token property">"source"</span><span class="token operator">:</span> <span class="token string">"https://en.wikipedia.org/wiki/Apple"</span><span class="token punctuation">,</span><br />    <span class="token property">"note"</span><span class="token operator">:</span> <span class="token string">"Recommended by doctor exorcists"</span><br />  <span class="token punctuation">}</span><span class="token punctuation">,</span><br />  <span class="token property">"ingredients"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />    <span class="token punctuation">{</span><br />      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"ingredient"</span><span class="token punctuation">,</span><br />      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Apple"</span><span class="token punctuation">,</span><br />      <span class="token property">"quantity"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br />      <span class="token property">"units"</span><span class="token operator">:</span> <span class="token string">""</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">]</span><span class="token punctuation">,</span><br />  <span class="token property">"cookware"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />    <span class="token punctuation">{</span><br />      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"cookware"</span><span class="token punctuation">,</span><br />      <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"knife."</span><span class="token punctuation">,</span><br />      <span class="token property">"quantity"</span><span class="token operator">:</span> <span class="token string">""</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">]</span><span class="token punctuation">,</span><br />  <span class="token property">"steps"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />    <span class="token punctuation">[</span><br />      <span class="token punctuation">{</span><br />        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><br />        <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">"Cut the "</span><br />      <span class="token punctuation">}</span><span class="token punctuation">,</span><br />      <span class="token punctuation">{</span><br />        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"ingredient"</span><span class="token punctuation">,</span><br />        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Apple"</span><span class="token punctuation">,</span><br />        <span class="token property">"quantity"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br />        <span class="token property">"units"</span><span class="token operator">:</span> <span class="token string">""</span><br />      <span class="token punctuation">}</span><span class="token punctuation">,</span><br />      <span class="token punctuation">{</span><br />        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><br />        <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">" into slices. This takes "</span><br />      <span class="token punctuation">}</span><span class="token punctuation">,</span><br />      <span class="token punctuation">{</span><br />        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"timer"</span><span class="token punctuation">,</span><br />        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><br />        <span class="token property">"quantity"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br />        <span class="token property">"units"</span><span class="token operator">:</span> <span class="token string">"minute"</span><br />      <span class="token punctuation">}</span><span class="token punctuation">,</span><br />      <span class="token punctuation">{</span><br />        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"text"</span><span class="token punctuation">,</span><br />        <span class="token property">"value"</span><span class="token operator">:</span> <span class="token string">". You need a "</span><br />      <span class="token punctuation">}</span><span class="token punctuation">,</span><br />      <span class="token punctuation">{</span><br />        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"cookware"</span><span class="token punctuation">,</span><br />        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"knife."</span><span class="token punctuation">,</span><br />        <span class="token property">"quantity"</span><span class="token operator">:</span> <span class="token string">""</span><br />      <span class="token punctuation">}</span><br />    <span class="token punctuation">]</span><br />  <span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p>The main limititation I've had when converting my recipes is if you have a recipe that is simply &quot;mix all the ingredients&quot; you can't list them out without them becoming instruction steps.</p>
<pre class="language-cooklang"><code class="language-cooklang">Mix all the ingredients together.<br /><br />- <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Butter</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">230</span><span class="token unit-separator operator">%</span><span class="token unit symbol">g</span><span class="token punctuation">}</span></span></span><br />- <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Garlic</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">8-10</span><span class="token unit-separator operator">%</span><span class="token unit symbol">cloves</span><span class="token punctuation">}</span></span></span><br />- <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Parsley</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">25</span><span class="token unit-separator operator">%</span><span class="token unit symbol">g</span><span class="token punctuation">}</span></span></span></code></pre>
<p>So you <em>need</em> to write it out like this instead:</p>
<pre class="language-cooklang"><code class="language-cooklang">Mix <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Butter</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">230</span><span class="token unit-separator operator">%</span><span class="token unit symbol">g</span><span class="token punctuation">}</span></span></span>, <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Garlic</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">8-10</span><span class="token unit-separator operator">%</span><span class="token unit symbol">cloves</span><span class="token punctuation">}</span></span></span>, and <span class="token ingredient-group"><span class="token ingredient-keyword keyword">@</span><span class="token ingredient variable">Parsley</span><span class="token amount-group"><span class="token punctuation">{</span><span class="token amount number">25</span><span class="token unit-separator operator">%</span><span class="token unit symbol">g</span><span class="token punctuation">}</span></span></span> together.</code></pre>
<p>Which is <em>fine</em> but in the case of a recipe like this<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> I would prefer to have the ingredients defined separately from the instructions. There's also no option to add multi line notes in the metadata section with <code>&gt;&gt;</code> but that's not a massive problem.</p>
<h3>Schema Recipe Type</h3>
<p>The example Apple recipe above can be represented with JSON-LD like so:</p>
<pre class="language-json"><code class="language-json">&lt;script type=<span class="token string">"application/ld+json"</span>><br /><span class="token punctuation">{</span><br />  <span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://schema.org"</span><span class="token punctuation">,</span><br />  <span class="token property">"@type"</span><span class="token operator">:</span> <span class="token string">"Recipe"</span><span class="token punctuation">,</span><br />  <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"Robb Knight"</span><span class="token punctuation">,</span><br />  <span class="token property">"cookTime"</span><span class="token operator">:</span> <span class="token string">"PT1M"</span><span class="token punctuation">,</span><br />  <span class="token property">"datePublished"</span><span class="token operator">:</span> <span class="token string">"2024-11-04"</span><span class="token punctuation">,</span><br />  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Cutting up an apple"</span><span class="token punctuation">,</span><br />  <span class="token property">"recipeIngredient"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />    <span class="token string">"1 Apple"</span><br />  <span class="token punctuation">]</span><span class="token punctuation">,</span><br />  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"Sliced Apple"</span><span class="token punctuation">,</span><br />  <span class="token property">"recipeInstructions"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	  <span class="token string">"Cut the apple into slices. This takes 1 minute. You need a knife."</span><br />  <span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span><br />&lt;/script></code></pre>
<p>There are loads of other attributes available like calorie count and suitability for diet types, among others. This is the format that large recipe sites like <a href="https://www.allrecipes.com">allrecipes</a> use, moreso for SEO than anything else, but I suspect the recipe extractor tools that exist are using this where they can. However, there's no world in which I'm going to write my recipes in JSON so this can't be the source format - but it <em>would</em> make sense to also include this on a recipe page.</p>
<h3>Output</h3>
<p>I wondered what this might look like on a recipe post or page. I think the solution I want is:</p>
<ul>
<li>Have the recipe, rendered from the cooklang file, as the content of the page. <a href="https://cooklang.github.io/cooklang-ts/"><code>cooklang-ts</code></a> will parse the file and give me back all the info I need.</li>
<li>Have the raw cooklang content available so anyone can download it and use it in their own system.</li>
<li>Include the JSON-LD schema on the page so recipe extractors can grab it easily.</li>
<li>Mark it up with the <code>h-recipe</code> microformat.</li>
</ul>
<p>That final point is relatively simple to implement:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h-recipe<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <br />  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p-ingredient<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Apple (1)<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><br />  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><br />  <br />  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>e-instructions<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Cut the apple into slices. This takes 1 minute. You need a knife.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span></code></pre>
<p>There's also <code>p-yield</code> for quantity produced by the recipe and <code>dt-duration</code> for how long it takes.</p>
<p>I think this is what I want to achieve on my site. Recipes are blog posts tagged with <a href="https://rknight.me/blog/tags/recipes/">#recipes</a> and all the extra info is available if it's needed. I have a working branch of my site that adds support for <code>.cook</code> files as well as parsing the files and I'll put up a post about that when I've got it working exactly how I want.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>This is a shortened version of a garlic butter recipe, the real recipe has nine total ingredients so you can see how this would be very annoying. <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-04T20:23:58Z</pubDate>
</item>
<item>
<title>We Got Family Season Two</title>
<link>https://rknight.me/blog/we-got-family-season-two/</link>
<guid>https://rknight.me/blog/we-got-family-season-two/</guid>
<content:encoded><![CDATA[
<p><a href="https://wegot.family"><img alt="The We Got Family cover art" src="https://cdn.rknight.me/site/we-got-family-cover-banner.jpg" /></a></p>
<p><a href="https://wegot.family">We Got Family</a> is a podcast I do with <a href="https://darn.es/">David Darnes</a> about the Fast and Furious movies. In season one we did the first four movies, plus a bonus episode for <a href="https://www.imdb.com/title/tt2933474/">Superfast!</a>.</p>
<p>It's been a while but we're back for season two starting with 2011's Fast Five. <a href="https://wegot.family/6/">Listen on the website</a> or you can subscribe via <a href="https://wegot.family/feed.xml">RSS</a>, <a href="https://podcasts.apple.com/us/podcast/we-got-family/id1695398667">Apple Podcasts</a>, <a href="https://open.spotify.com/show/3qziz3DuqmPJ4tOokJLhU6">Spotify</a>, <a href="https://overcast.fm/itunes1695398667/we-got-family">Overcast</a>, <a href="https://pca.st/l0a0gli5">Pocketcasts</a>, <a href="https://castro.fm/podcast/1bcdc53c-40a4-4baa-ac05-ae18654ea695">Castro</a>, or wherever you get your podcasts.</p>
]]></content:encoded>
<pubDate>2024-11-04T10:00:00Z</pubDate>
</item>
<item>
<title>WeblogPoMo AMA</title>
<link>https://rknight.me/blog/weblogpomo-ama/</link>
<guid>https://rknight.me/blog/weblogpomo-ama/</guid>
<content:encoded><![CDATA[
<p>Annie has set a <a href="https://weblogpomo.club/challenges">WeblogPoMo challenge</a> for this month, Ask Me Anything:</p>
<blockquote>
<p>I'm calling this challenge WeblogPoMo AMA (Ask Me Anything). For this challenge I want to foster writer interaction: write a blog post starting with a question—the AMA—and then answer the question yourself in the blog post.</p>
</blockquote>
<p>There may have been some misunderstanding with how to source the questions so I'm doing some I <a href="https://social.lol/@robb/113403816549745605">asked for on Mastodon</a> and some that other people have posted about.</p>
<hr />
<p><strong><em>What’s the best music-related experience of your life so far?</em></strong></p>
<p>I didn't realise it until recently but I was at <a href="https://en.wikipedia.org/wiki/Dig_Out_Your_Soul_Tour">Oasis' last ever gig</a> and that was a great experience even if I'm not a huge fan of them and it took me 15 years to realise it was thier last one. So that's pretty cool.</p>
<p>But the one that sticks out to me is not even an in-person experience. <a href="https://www.youtube.com/watch?v=IL1nlWOciL0">Linkin Park's performance</a> to announce a new singer, new tour, and new album was amazing to watch live. When Emily Armstrong came out for the second part of The Emptiness Machine it was glorious. I nearly went to bed instead of waiting up to watch it, thinking it would be a simple &quot;oh here's a reissue of some old songs&quot;. Turns out that would have been a terrible idea.</p>
<p>Hiro via <a href="https://gabz.blog/posts/the-best-music-related-experience">Gabz</a></p>
<hr />
<p><strong><em>What’s the first movie, ever watched that made a big impact on you, for good or bad?</em></strong></p>
<p>My grandparents were looking after me when I was maybe 5 or 6 and they decided to pop in a video of a movie my mum had recorded: <a href="https://www.imdb.com/title/tt0094721/">Beetlejuice</a>. It definitely wasn't age-appropriate but it's one of my only memories from when I was a kid so it defintiely fits the bill of big impact.</p>
<p>The other is Back to the Future which I watched for the first time around the same age and I've watch all three of them basically <a href="https://rknight.me/almanac/movies/2022-09-18-back-to-the-future/">every year since then</a>. I even have a Delorean tattoo.</p>
<p>Gabz via <a href="https://blog.alpine.day/2024/11/weblogpomoama-2">Zachery</a></p>
<p><strong><em>What runs through your head when you can’t fall asleep?</em></strong></p>
<p>I have the ability to just sit and think about nothing, like truly just no thoughts which annoys my wife no end. If I can't sleep I usually just get up and do something else then go back to bed an hour later. Life hack™.</p>
<p><strong><em>Favorite pizza toppings?</em></strong></p>
<p>I like all pizza<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>, it is the perfect food. I am partial to spicy toppings so, ignoring all other variables I'd go for pepperoni, chillis or jalapeños, and pineapple.</p>
<p>via <a href="https://social.lol/@annie/113405020093956879">Annie</a></p>
<hr />
<p><strong><em>What would shock your younger self about your present self? I mean absolutely obliterate their sense of identity. Leave them rocking in a corner.</em></strong></p>
<p>I have a child and a second one on the way and they were both on purpose.</p>
<p>via <a href="https://social.lol/@keenan/113405225890832855">Keenan</a></p>
<hr />
<p><strong><em>What's your worst and fav childhood memories?</em></strong></p>
<p>I've say on this question since it was asked and I have...nothing (except the Beetlejuice one above). I don't think I have any memories before about 10 years old. Not that my childhood was bad but I can't think of anything that stands out in either direction. Sorry Alexandra, what a rubbish answer.</p>
<p>via <a href="https://social.lol/@alexandra/113403973751963152">Alexandra</a></p>
<hr />
<p><strong><em>Why are you the way you are?</em></strong></p>
<p>I assume by this Lewis means why am I so funny on the 'don with bangers like this toot in response to Lewis saying he was in an &quot;autumnal funk&quot;.</p>
<blockquote>
<p>the lesser-known follow up to Uptown Funk</p>
</blockquote>
<p>Jokes aside, trying to get validation on the internet is way cheaper than therapy.</p>
<p>Unintentionally via <a href="https://social.lol/@lewis/113414252850191856">Lewis</a></p>
<hr />
<p><strong><em>What's your opinions of Americans in general? How are different than your countrymen?</em></strong></p>
<p>This is an interesting one to ask, this week of all weeks. All of the Americans I'm friends with are awesome<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> and generally every American I've interacted with in my life has been perfectly polite. Most of the stereotypes I think of when I think of Americans are actually things about <em>America</em> and not the people: healthcare, guns, whatever the fuck &quot;grits&quot; is. There are two things I find different: 1. What the fuck do you give your kids to drink if you don't have <a href="https://en.wikipedia.org/wiki/Squash_(drink)">squash</a>. 2. Y'all <em>are</em> really loud in comparison to the rest of the world. This was most obvious when I was in Rome, I could hear American tourists before I could see them.</p>
<p>via <a href="https://social.lol/@amerpie/113404012590509755">Lou</a></p>
<hr />
<p>So there we go. I might do another one of these if more questions pop up I want to answer.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Not you, vegan cheese pizza, you suck <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>This is a bit self-selecting because I wouldn't be friends with dickheads, regardless of country of where they're from <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-11-03T10:32:36Z</pubDate>
</item>
<item>
<title>Using Setapp</title>
<link>https://rknight.me/blog/using-setapp/</link>
<guid>https://rknight.me/blog/using-setapp/</guid>
<content:encoded><![CDATA[
<p>I've had my eye on <a href="https://go.setapp.com/invite/0jsvfx75">Setapp</a> since it launched in 2017 but it's never been the right time for me to jump in...until this week. I <em>really</em> wanted to use <a href="https://godspeedapp.com/">Godspeed</a> which is on Setapp (as well as having a standalone subscription) so I did some calculations to see if it was worth it.</p>
<p>I started with things I knew I would definitely use:</p>
<ul>
<li><a href="https://godspeedapp.com/pricing">Godspeed</a> - $48 a year</li>
<li><a href="https://dropshare.app">Dropshare</a> - $39 one-off for the life of version 5. For the sake of this, I'm assuming a new version every couple of years so $20 a year</li>
<li><a href="https://cleanshot.com">Cleanshot X</a> - $29 for a year of updates</li>
<li><a href="https://tableplus.com">TablePlus</a> - $89 for a year of updates</li>
</ul>
<p>If I add those up and divide by 12, that works out at $15.50 a month. I wanted the iOS option for Godspeed, Awesome Habits, and Soulver (see below) so that put Setapp at $15 a month (including taxes). So as it is it's basically break-even - I could make Setapp cheaper by paying annually but for right now I'm sticking with monthly. That price also doesn't account for the additional apps I would use because they're available. Some of the apps I've wanted to use in the past but couldn't justify the price for my usage:</p>
<ul>
<li><a href="https://c-command.com/toothfairy/">ToothFairy</a>. This was recommended by <a href="https://social.lol/@bw/113329305437289362">Blake</a> because of a stupid issue I've been having.</li>
<li><a href="https://soulver.app">Soulver</a>. I've been using Numi but Soulver has way more features, plus the iOS version</li>
<li><a href="https://software.charliemonroe.net/downie/">Downie</a>. <code>yt-dl</code> is great but I prefer a GUI for this kind of thing.</li>
<li><a href="https://appmakes.io/paletro">Paletro</a>. Just handy.</li>
<li><a href="https://cleanmymac.macpaw.com">Clean My Mac</a>. This saved me 50gb of space somehow. Totally worth it.</li>
<li><a href="https://www.awesome-habits.com">Awesome Habits</a>. I was eyeballing <a href="https://streaksapp.com">Streaks</a> but Awesome Habits was recommended by some of the MacStoried crew</li>
</ul>
<p>Then there are some others that would be nice to use but I definitely wouldn't use enough to pay directly for:</p>
<ul>
<li><a href="https://setapp.com/apps/mockuuups-studio">Mockuuups Studio</a></li>
<li><a href="https://typefaceapp.com">Typeface</a></li>
<li><a href="https://handmirror.app">HandMirror</a></li>
<li><a href="https://clearvpn.com">ClearVPN</a></li>
<li><a href="https://structured.app">Structured</a></li>
<li><a href="https://www.realmacsoftware.com/squash/">Squash</a></li>
</ul>
<p>So if I use even a handful of these additional apps then I'm saving money. It's not a can't-afford-not-to-subscribe situation but it's a pretty good deal for me.</p>
<p>The Setapp...app itself is just an app store. You can view top downloads, new apps, collections, mark an app as a favourite and it has guides on specific apps. By default it puts an icon in the menubar but you can turn that off because it doesn't do anything except open the app.</p>
<p>The iOS side involves downloading whatever app from the App Store, then scanning a QR code to verify you have a Setapp subscription. It's an interesting way to handle this and I have no idea how this is allowed by Apple's <s>stupid</s> rules but I'm not going to pull on that thread.</p>
<p>Obviously based on the above I save money but I was curious what kind of deal the app developers get from this. Turns out Setapp are very transparent about <a href="https://docs.setapp.com/docs/distributing-revenue">how it works on their help docs</a>:</p>
<blockquote>
<p>We share 70% of each user fee among developers of the apps used by a particular user</p>
</blockquote>
<p>There's also something about an additional 20% &quot;<em>to the Partner who has brought this particular user</em>&quot;. I don't know what that means but this seems like a decent deal for developers. My money isn't going into a pot only to be paid to the most popular apps, it's based on <em>my real usage</em>. I feel pretty good about this setup.</p>
<p>Finally, they also have a very generous referral scheme<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> that gives me and the person who signs up a free month. So if you want to sign up, use <a href="https://go.setapp.com/invite/0jsvfx75">my referral link</a> to get a free month.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I love a <a href="/save">good referral scheme</a> <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-10-28T20:09:57Z</pubDate>
</item>
<item>
<title>Copy SSH Keys to a Server</title>
<link>https://rknight.me/blog/copy-ssh-keys-to-a-server/</link>
<guid>https://rknight.me/blog/copy-ssh-keys-to-a-server/</guid>
<content:encoded><![CDATA[
<p>Every time I've setup a server in the past decade the SSH keys have been set for me, most hosts I've used do this (DigitalOcean, Hetzner, etc). This week I signed up for a server with Contabo and I had to do it myself, like a caveman. <a href="https://lewisdale.dev">Lewis</a> was kind enough to help because he'd done the same thing mere days before me.</p>
<p>Step one is to copy my key to the server using <code>ssh-copy-id</code>:</p>
<pre class="language-bash"><code class="language-bash">ssh-copy-id user@example.com</code></pre>
<p>This failed for me because I didn't have a default set in my SSH config. There are two ways to handle this. One is to specify a key in the command:</p>
<pre class="language-bash"><code class="language-bash">ssh-copy-id <span class="token parameter variable">-i</span> ~/.ssh/personal_id_rsa.pub user@example.com</code></pre>
<p>Or set a default in <code>~/.ssh/config</code>:</p>
<pre class="language-bash"><code class="language-bash">Host *<br />	IdentityFile ~/.ssh/personal_id_rsa</code></pre>
<p>Once that's done you should be able to SSH into the server. The last step is to disable password login which is done by editing <code>/etc/ssh/sshd_config</code>:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> PasswordAuthentication yes<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> PasswordAuthentication no</span></span></code></pre>
<p>Then refresh the ssh service with <code>sudo service ssh restart</code>.</p>
]]></content:encoded>
<pubDate>2024-10-26T13:44:37Z</pubDate>
</item>
<item>
<title>Using Miniflux with Reeder and NetNewsWire</title>
<link>https://rknight.me/blog/using-miniflux-with-reeder-and-netnewswire/</link>
<guid>https://rknight.me/blog/using-miniflux-with-reeder-and-netnewswire/</guid>
<content:encoded><![CDATA[
<p>Trying to find the answer to how to use <a href="https://miniflux.app">Miniflux</a> with <a href="https://reederapp.com">Reeder (app)</a> and the Google Reader API proved to be a bit difficult due to the similarly of the app name and the API name. Or maybe I was sleep deprived. Either way, I finally worked it out but I never found a definitive &quot;this is how you do it&quot; just lots of vague Reddit threads so here we are.</p>
<p>In Miniflux go to <code>Settings</code> &gt; <code>Integrations</code> &gt; <code>Google Reader</code> and set a username and password.</p>
<p><img alt="Google Reader settings in Miniflux" src="https://cdn.rknight.me/site/miniflux-google-reader-settings.jpg" /></p>
<p>Once that's set, in Reeder choose &quot;Reader&quot; in the add account screen, set the domain you've got Miniflux hosted at and away you go.</p>
<p><img alt="Reeder settings for Miniflux" src="https://cdn.rknight.me/site/reeder-reader-settings.png" /></p>
<p>To use Miniflux in NetNewsWire follow step one then choose FreshRSS in the add account screen. Make sure to <em>not</em> have a trailing slash after your domain in NetNewsWire otherwise it will error.</p>
]]></content:encoded>
<pubDate>2024-10-25T11:14:36Z</pubDate>
</item>
<item>
<title>Mark One Enigma Edition Pen Review</title>
<link>https://rknight.me/blog/mark-one-enigma-edition-pen-review/</link>
<guid>https://rknight.me/blog/mark-one-enigma-edition-pen-review/</guid>
<content:encoded><![CDATA[
<p>During September I donated to Enigma Stationery's campaign and was entered into a raffle to win the <a href="https://enigmastationery.com/shop/p/mark-one-enigma-edition">Mark One Enigma Edition</a> and...I actually won! I've never owned a fancy pen<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>, especially not one this pretty. I don't even write with pen and paper all that much. None of my notebooks have good paper, or quality covers, or fold out flat but I'm gunna review it anyway.</p>
<p><img alt="The Mark One Enigma edition" src="https://cdn.rknight.me/site/enigma-mark-one.jpg" /></p>
<p>The Mark One is a pen by <a href="https://www.studioneat.com/products/markone">Studio Neat</a> who make lots of lovely things. The Enigma edition features &quot;<em>a three-layer exterior coating with sparkling teal on a black background</em>&quot;. It feels great in the hand and the clicking mechanism is very satisfying. For ink it takes a Schmidt capless refill which, to my untrained eye, appears to be some kind of ink container. The one that came with mine definitely has ink. I made this natty diagram to help explain:</p>
<p><img alt="The Mark One pen on dotgrid paper with arrows showing where the clicky bit is and where the ink comes out" src="https://cdn.rknight.me/site/enigma-mark-one-diagram.jpg" /></p>
<p>When I started writing this post I wanted to parody a pen review like the ones Brad does over on <a href="https://www.penaddict.com/blog/2018/3/26/mark-one-pen-review">The Pen Addict</a> but I truly know so little about pens that I can't do it. Anyway, it is a lovely pen and I'm now finding myself looking at decent notebooks, the <a href="https://www.studioneat.com/products/pentray">mark one pen tray</a>, and <em>other nice pens</em>.</p>
<blockquote>
<p>Honey, he's teasing you. Nobody has two <s>television sets</s> nice pens.</p>
</blockquote>
<p><img alt="The Mark One pen along with some other pens" src="https://cdn.rknight.me/site/enigma-mark-one-other-pens.jpg" /></p>
<p><em>Top to bottom: The Mark One, then some other pens I had knocking about.</em></p>
<p><img alt="Writing sample on dotgrid paper with the Mark One" src="https://cdn.rknight.me/site/enigma-mark-one-writing-sample.jpg" /></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Not even a Parker pen which, when I was at school, was considered the coolest pen one could possibly own <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-10-24T12:31:03Z</pubDate>
</item>
<item>
<title>Obsidian Tasks and Godspeed</title>
<link>https://rknight.me/blog/obsidian-tasks-and-godspeed/</link>
<guid>https://rknight.me/blog/obsidian-tasks-and-godspeed/</guid>
<content:encoded><![CDATA[
<p>Two weeks ago <a href="https://social.lol/@robb/113288632240605303">I tooted</a>:</p>
<blockquote>
<p>Lord help me I'm back on Obsidian Tasks again</p>
</blockquote>
<p>I came up with a nice solution for what I wanted. Show the first todo item in each of my project files using Obsidian Tasks query language:</p>
<pre class="language-js"><code class="language-js">path includes projects<br />group by <span class="token keyword">function</span> task<span class="token punctuation">.</span>file<span class="token punctuation">.</span>path<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'.md'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />limit groups <span class="token number">1</span><br />not done</code></pre>
<p><img alt="My todo list as rendered by Obsidian Tasks" src="https://cdn.rknight.me/site/project-tasks.jpg" /></p>
<p>I had to add some rules to the css to hide the note titles which are shown when you use grouping:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.tasks-group-heading</span> <span class="token punctuation">{</span><br />    <span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token selector">ul.plugin-tasks-query-result</span> <span class="token punctuation">{</span><br />    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><br />    <span class="token property">margin-top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token selector">div.task-count</span> <span class="token punctuation">{</span><br />    <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>Turns out, this <em>works</em> but just it doesn't work <em>for me</em>. So I deleted it all (after noting the config down because Obsidian Tasks can be complicated).</p>
<p><a href="https://godspeedapp.com">Godspeed</a> is my best friend now. I won't attempt to go into everything Godspeed does but the UI is simple and works for my brain. Their big selling point is everything can be done with the keyboard which I like. It's also one of the reasons I signed up to <a href="https://go.setapp.com/invite/0jsvfx75">Setapp</a> (expect a post about this soon). If you want to know more <a href="https://www.youtube.com/watch?v=p8Ak_OB-oco">Matt has a great video</a> about Godspeed which is how I found out about it in the first place.</p>
]]></content:encoded>
<pubDate>2024-10-23T20:16:52Z</pubDate>
</item>
<item>
<title>Moving my DNS Records with DNSControl</title>
<link>https://rknight.me/blog/moving-my-dns-records-with-dnscontrol/</link>
<guid>https://rknight.me/blog/moving-my-dns-records-with-dnscontrol/</guid>
<content:encoded><![CDATA[
<p>After <a href="https://rknight.me/blog/setting-up-dnscontrol">setting up DNSControl</a> I wanted to use it to move away from DigitalOcean<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> to <a href="https://bunny.net/?ref=b2i4y24apu">Bunny DNS</a>. I'd already moved my servers to <a href="https://hetzner.cloud/?ref=Lt9D9KzKP6UQ">Hetzner</a> but the DNS was more complicated. This domain, for example, has 45 records for subdomains, CNAMES for Netlify, plus verification stuff so I didn't want to risk moving it manually.</p>
<p>I added my Bunny API keys to <code>creds.json</code>, updated my <code>dnsconfig.js</code>, adding Bunny as a new provider, and switched the provider in the config for the domain:</p>
<pre class="language-diff"><code class="language-diff">var DSP_DIGITALOCEAN = NewDnsProvider("digitalocean");<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> var DSP_BUNNY = NewDnsProvider("bunny");<br /></span></span><br />D("rknight.me", REG_NONE<br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">   , DnsProvider(DSP_DIGITALOCEAN)<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   , DnsProvider(DSP_BUNNY)<br /></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   , DefaultTTL(1800)<br /></span><span class="token prefix unchanged"> </span><span class="token line">   , A("@", HETZNER_MAIN)<br /></span><span class="token prefix unchanged"> </span><span class="token line">   , A("www", HETZNER_MAIN)<br /></span></span>)</code></pre>
<p>I ran <code>dnscontrol push</code> to push those records to Bunny<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> and then updated the nameservers in <a href="https://hover.com/scHIv4WR">Hover</a> so the domain was pointing to Bunny. Hover isn't supported by DNSControl so the nameservers had to be done by me but for registrars that are supported, I was able to have that automated as well. The nameservers for Bunny (<code>kiki.bunny.net</code> and <code>coco.bunny.net</code>) are automatically set from the registrar, so you don't need to define them yourself as <a href="https://github.com/StackExchange/dnscontrol/issues/3163#issuecomment-2426650514">I found out</a>.</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> var REG_PORKBUN = NewRegistrar("porkbun"); <br /></span></span><br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> D("knightshift.dev", REG_NONE<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> D("knightshift.dev", REG_PORKBUN<br /></span></span>	, DnsProvider(DSP_BUNNY)<br />	, DefaultTTL(1800)<br />	, A("@", HETZNER_MAIN)<br />	, A("www", HETZNER_MAIN)<br />	, A("msorc", HETZNER_MAIN)<br />)</code></pre>
<p>Once I'd done that for the other domains I use, I wanted my DNSControl to at least be aware of two other domains that just redirect to my main site (this is handled in Hover). If you set a domain with no registrar and no provider, you'll get an error about having no nameservers. To fix this, I added <code>{ no_ns:'true' }</code>. This doesn't actually <em>do</em> anything, but it's handy to have a record of every domain I have in one place.</p>
<pre class="language-js"><code class="language-js"><span class="token constant">D</span><span class="token punctuation">(</span><span class="token string">"therobb.com"</span><span class="token punctuation">,</span> <span class="token constant">REG_NONE</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">no_ns</span><span class="token operator">:</span><span class="token string">'true'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// => rknight.me</span></code></pre>
<p>This setup already came in handy yesterday when I needed to prove ownership of one of my domains: add one line, run <code>dnscontrol push</code>, done.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>after <a href="https://rknight.me/blog/netcraft-facebook-and-digital-ocean/">what they did</a> <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>There was some shenanigans where someone else had added my domain to their Bunny account which I had to sort out with support, but they were very quick to fix it <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-10-22T14:00:05Z</pubDate>
</item>
<item>
<title>Fix Crackly Audio When Using Bluetooth Headphones on MacOS</title>
<link>https://rknight.me/blog/fix-crackly-audio-when-using-bluetooth-headphones-on-macos/</link>
<guid>https://rknight.me/blog/fix-crackly-audio-when-using-bluetooth-headphones-on-macos/</guid>
<content:encoded><![CDATA[
<p>Every now and again I start listening to music on MacOS through my headphones and the audio is tinny and crackly. After some dicking around with quitting Apple Music, reconnecting the headphones, even rebooting the Mac nothing fixed it. I finally worked out the fix<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> - changing the input settings of the Mac to <em>not</em> be the headphones. No more crackling.</p>
<p><img alt="Input settings showing the Mac is selected for the input source and not Magneto" src="https://cdn.rknight.me/site/input-settings.jpg" /></p>
<p>Yet another <a href="https://rknight.me/blog/fix-for-bluetooth-audio-cutting-out-on-the-mac/">very stupid fix for stupid audio issues</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I probably found this solution on Reddit or the Apple forums but I can't find the source now <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-10-18T11:59:23Z</pubDate>
</item>
<item>
<title>Setting Up DNSControl</title>
<link>https://rknight.me/blog/setting-up-dnscontrol/</link>
<guid>https://rknight.me/blog/setting-up-dnscontrol/</guid>
<content:encoded><![CDATA[
<p>When I linked to <a href="https://alexwlchan.net/2024/documenting-my-dns/">this post about DNS</a>, <a href="https://social.lol/@rail/113322023046758075">Dave replied</a> and mentioned he uses <a href="https://dnscontrol.org">DNSControl</a> for managing this kind of stuff. I'd heard of it before but never actually looked into what it did so I jumped into the <a href="https://docs.dnscontrol.org/getting-started/getting-started">getting started guide</a>. I'd recommend reading that if you want a more in-depth guide, this post is just an overview of what I did to get what I wanted accomplished.</p>
<p>No detailed install steps here, check out the official docs, but the short version is this: install DNSControl (<code>brew install dnscontrol</code>), make a directory with a <code>zones</code> directory inside it, then make two files: <code>dnsconfig.js</code> and <code>creds.json</code> (don't forget to put <code>creds.json</code> in your <code>.gitignore</code> if you plan on using git for this).</p>
<pre class="language-bash"><code class="language-bash">mydnsconfig<br />├── zones<br />├── dnsconfig.js<br />├── creds.json<br />└── .gitignore</code></pre>
<p>I currently have nine domains and all the DNS is managed at DigitalOcean (for now) so my <code>creds.json</code> file looks like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />    <span class="token property">"bind"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token property">"TYPE"</span><span class="token operator">:</span> <span class="token string">"BIND"</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token property">"digitalocean"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />      <span class="token property">"TYPE"</span><span class="token operator">:</span> <span class="token string">"DIGITALOCEAN"</span><span class="token punctuation">,</span><br />      <span class="token property">"token"</span><span class="token operator">:</span> <span class="token string">"MY_TOKEN"</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>I didn't want to have to manually input all the records into the config but thankfully DNSControl has an option to fetch existing records to generate the config for a specific domain which you can then copy into the <code>dnsconfig.js</code> file.</p>
<pre class="language-bash"><code class="language-bash">$ dnscontrol get-zones <span class="token parameter variable">--format</span><span class="token operator">=</span>djs digitalocean DIGITALOCEAN slashpages.net<br /><br />D<span class="token punctuation">(</span><span class="token string">"slashpages.net"</span>, REG_CHANGEME<br />	, DnsProvider<span class="token punctuation">(</span>DSP_DIGITALOCEAN<span class="token punctuation">)</span><br />	, DefaultTTL<span class="token punctuation">(</span><span class="token number">3600</span><span class="token punctuation">)</span><br />	//, NAMESERVER<span class="token punctuation">(</span><span class="token string">"ns1.digitalocean.com."</span><span class="token punctuation">)</span><br />	//, NAMESERVER<span class="token punctuation">(</span><span class="token string">"ns2.digitalocean.com."</span><span class="token punctuation">)</span><br />	//, NAMESERVER<span class="token punctuation">(</span><span class="token string">"ns3.digitalocean.com."</span><span class="token punctuation">)</span><br />	, A<span class="token punctuation">(</span><span class="token string">"@"</span>, <span class="token string">"49.13.76.163"</span><span class="token punctuation">)</span><br />	, A<span class="token punctuation">(</span><span class="token string">"www"</span>, <span class="token string">"49.13.76.163"</span><span class="token punctuation">)</span><br /><span class="token punctuation">)</span></code></pre>
<p>I ran that for all my domains so my config ended up looking something like this. I've removed some records here for the sake of keeping it short.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">var</span> <span class="token constant">REG_NONE</span> <span class="token operator">=</span> <span class="token function">NewRegistrar</span><span class="token punctuation">(</span><span class="token string">"none"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// No registrar.</span><br /><span class="token keyword">var</span> <span class="token constant">DNS_BIND</span> <span class="token operator">=</span> <span class="token function">NewDnsProvider</span><span class="token punctuation">(</span><span class="token string">"bind"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// ISC BIND.</span><br /><span class="token keyword">var</span> <span class="token constant">DSP_DIGITALOCEAN</span> <span class="token operator">=</span> <span class="token function">NewDnsProvider</span><span class="token punctuation">(</span><span class="token string">"digitalocean"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">var</span> <span class="token constant">HETZNER_MAIN</span> <span class="token operator">=</span> <span class="token string">'49.13.76.163'</span><span class="token punctuation">;</span><br /><br /><span class="token constant">D</span><span class="token punctuation">(</span><span class="token string">"rknight.me"</span><span class="token punctuation">,</span> <span class="token constant">REG_NONE</span><br />	<span class="token punctuation">,</span> <span class="token function">DnsProvider</span><span class="token punctuation">(</span><span class="token constant">DSP_DIGITALOCEAN</span><span class="token punctuation">)</span><br />	<span class="token punctuation">,</span> <span class="token function">DefaultTTL</span><span class="token punctuation">(</span><span class="token number">1800</span><span class="token punctuation">)</span><br />	<span class="token comment">//, NAMESERVER("ns1.digitalocean.com.")</span><br />	<span class="token comment">//, NAMESERVER("ns2.digitalocean.com.")</span><br />	<span class="token comment">//, NAMESERVER("ns3.digitalocean.com.")</span><br />    <span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token constant">HETZNER_MAIN</span><span class="token punctuation">)</span><br />    <span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token string">"www"</span><span class="token punctuation">,</span> <span class="token constant">HETZNER_MAIN</span><span class="token punctuation">)</span><br />    <span class="token comment">// lots of subdomain setups go here</span><br /><span class="token punctuation">)</span><br /><br /><span class="token constant">D</span><span class="token punctuation">(</span><span class="token string">"slashpages.net"</span><span class="token punctuation">,</span> <span class="token constant">REG_NONE</span><br />	<span class="token punctuation">,</span> <span class="token function">DnsProvider</span><span class="token punctuation">(</span><span class="token constant">DSP_DIGITALOCEAN</span><span class="token punctuation">)</span><br />	<span class="token punctuation">,</span> <span class="token function">DefaultTTL</span><span class="token punctuation">(</span><span class="token number">1800</span><span class="token punctuation">)</span><br />	<span class="token comment">//, NAMESERVER("ns1.digitalocean.com.")</span><br />	<span class="token comment">//, NAMESERVER("ns2.digitalocean.com.")</span><br />	<span class="token comment">//, NAMESERVER("ns3.digitalocean.com.")</span><br />	<span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token string">"@"</span><span class="token punctuation">,</span> <span class="token constant">HETZNER_MAIN</span><span class="token punctuation">)</span><br />	<span class="token punctuation">,</span> <span class="token constant">A</span><span class="token punctuation">(</span><span class="token string">"www"</span><span class="token punctuation">,</span> <span class="token constant">HETZNER_MAIN</span><span class="token punctuation">)</span><br /><span class="token punctuation">)</span></code></pre>
<p>You can run <code>dnscontrol preview</code> to check what you have in the config matches what's on the DNS provider. If there's any differences, it will tell you.</p>
<pre class="language-bash"><code class="language-bash">$ dnscontrol preview<br /><br />******************** Domain: rknight.me<br /><span class="token number">1</span> correction <span class="token punctuation">(</span>digitalocean<span class="token punctuation">)</span><br /><span class="token comment">#1: ± MODIFY A api.rknight.me: (123.45.67.99 ttl=1800) -> (123.45.67.89 ttl=1800), DO ID: 359463019</span><br />******************** Domain: echofeed.app<br />******************** Domain: bugle.lol<br />******************** Domain: coinme.dad<br />******************** Domain: deskmat.help<br />******************** Domain: knightshift.dev<br />******************** Domain: ruminatepodcast.com<br />******************** Domain: slashpages.net<br />******************** Domain: wegot.family<br />Done. <span class="token number">1</span> corrections.</code></pre>
<p>Running <code>dnscontrol push</code> will the sync these changes to the DNS provider. For this domain, I have 45 records so the idea of moving off of DigitalOcean was daunting but now I've got this setup it should be a lot easier to switch to one of the 35 providers that DNSControl supports.</p>
]]></content:encoded>
<pubDate>2024-10-17T20:36:45Z</pubDate>
</item>
<item>
<title>Things I Like: 8BitDo Keycaps</title>
<link>https://rknight.me/blog/things-i-like-8bitdo-keycaps/</link>
<guid>https://rknight.me/blog/things-i-like-8bitdo-keycaps/</guid>
<content:encoded><![CDATA[
<p>When 8BitDo announced they were selling <a href="https://shop.8bitdo.com/products/8bitdo-retro-keycaps">a new keycap set</a> that matched <a href="https://rknight.me/blog/using-the-8bitdo-keyboard-on-macos/">my keyboard I got from them</a> I ordered immediately. I didn't need new keycaps for it but I <em>really</em> wanted to get rid of that pesky windows key.</p>
<p>They arrived this morning in nice little trays:</p>
<p><img alt="The 8BitDo keycaps in their trays" src="https://cdn.rknight.me/site/8bitdo-keycaps.jpg" /></p>
<p>At lunch I swapped out a bunch of them including a lot of the ones with symbols on, along with the larger-text pgup/pgdown over on the right hand side. Here's a comparison - I should have taken a before photo today but I forgot so I made do with what I had.</p>
<p><img alt="Comparison of the keyboard before and after" src="https://cdn.rknight.me/site/8bitdo-comparison.jpg" /></p>
<p>I didn't <em>need</em> to spend $50 on these but I'm glad I did.</p>
]]></content:encoded>
<pubDate>2024-10-17T19:32:59Z</pubDate>
</item>
<item>
<title>Our Wedding Photographer Was Terrible</title>
<link>https://rknight.me/blog/our-wedding-photographer-was-terrible/</link>
<guid>https://rknight.me/blog/our-wedding-photographer-was-terrible/</guid>
<content:encoded><![CDATA[
<p>This was going to be a scathing review of our wedding photographer I planned on posting becuase I was furious having waited 6 months to get the photos but he's basically gone bust anyway and I've calmed down since then. I'm posting it anyway because it's been in my post drafts for months and I want it for reference. Name of the photographer is redacted becuase quite frankly life's too short.</p>
<hr />
<p>On the wedding day:</p>
<ul>
<li>Was late</li>
<li>Complained endlessly about having to pay for parking until the make up person told him to get over it</li>
<li>Forget his camera after walking us 15 minutes away from the venue so we had to stand around and wait until he came back with it</li>
<li>Was giving one of our guests an inordinate and inappropriate amount of attention, as pointed out to us by many of our other guests</li>
<li>Made us wait far too long for the cake cutting and the first dance because he wasn't even remotely ready. Then complained about the location of the cake despite it being there the entire day.</li>
</ul>
<p>Now for actually getting our photos:</p>
<ul>
<li><strong>14th November 2023, 66 days since the wedding</strong>: Messaged on WhatsApp where I had previously messaged with [redacted]. No response.</li>
<li><strong>21st November, 73 days</strong>: Messaged on Facebook messenger. [redacted] replied the next day saying photos would be ready &quot;next week&quot;</li>
<li><strong>8th December, 90 days</strong>: Gallery link was sent with the photos but all of the group photos were missing.</li>
<li><strong>14th December, 96 days</strong>: Messaged to ask about group photos, pre-wedding shoot photos, and the pin to download the photos. Seen, no response.</li>
<li><strong>21st December, 103 days</strong>: My wife messaged him asking him to respond to me on his personal account. No response to her</li>
<li><strong>22nd December, 104 days</strong>: &quot;I am going to take a look and get back to you&quot;</li>
<li><strong>January 18th, 131 days</strong>: Messaged. Seen, no response.</li>
<li><strong>January 27th, 140 days</strong>: Messaged. Seen, no response.</li>
<li><strong>February 2nd, 147 days</strong>: Messaged, more firm. Finally got a response and told me to calm down. Told he will get to us &quot;first thing in the morning&quot;</li>
<li><strong>February 3rd, 148 days</strong>: Got the missing roof photos but still no pin to download them. &quot;Give me 2 secs I'll send you an email&quot;. No email or pin.</li>
<li><strong>February 17th, 162 days</strong>: Messaged to ask for a pin and the pre-wedding shoot photos. Seen, no response.</li>
<li><strong>February 25th, 170 days</strong>: Messaged again. Seen, no response.</li>
<li><strong>2nd March, 177 days</strong>: Messaged again, responded the next day.</li>
<li><strong>3rd March, 178 days</strong>: Got the pin to download the photos finally. &quot;I will forward you pre wedding photos in the morning.&quot;. He did not.</li>
<li><strong>5th March, 180 days</strong>: Messaged again. Finally got a response with the pre-wedding shoot photos 24 hours later.</li>
</ul>
<p>So it took just shy of 3 months to get some, but not all, of the photos. Then just shy of 6 months to actually be able to download them. To make any progress we always had to chase [redacted], not once did he give us an update without prompting from us.</p>
<p>Even once we did get them, it was clear they hadn't been checked or edited, there was at least a few photos that had fingers in the way or were blurry and one photo that wasn't even from our wedding.</p>
<hr />
<p>And, scene.</p>
]]></content:encoded>
<pubDate>2024-10-11T11:52:32Z</pubDate>
</item>
<item>
<title>Setting Up Mastodon Author Tags</title>
<link>https://rknight.me/blog/setting-up-mastodon-author-tags/</link>
<guid>https://rknight.me/blog/setting-up-mastodon-author-tags/</guid>
<content:encoded><![CDATA[
<p><img alt="The new author tags on Mastodon 4.3" src="https://cdn.rknight.me/site/author-tag-preview.jpg" /></p>
<p><a href="https://blog.joinmastodon.org/2024/10/mastodon-4.3/">Mastodon 4.3 released today</a> with a bunch of features but the one most people, including me, are excited about is author tags - this isn't the name of them but they also don't seem to have a proper name as far as I can tell. Anyway, you need to do two things to get the &quot;More from X&quot; section you can see in the screenshot above. The first is to add the <code>fediverse:creator</code> tag to your site in your <code>head</code>, which I <a href="https://rknight.me/blog/highlighting-journalism-with-the-fediverse-creator-tag/">previously wrote about here</a>.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fediverse:creator<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@robb@social.lol<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre>
<p>Then you need to jump into your settings on Mastodon and go to the Author Attribution section under Public Profile &gt; Verification. Add the domain(s) that you want to allow to be linked to your profile.</p>
<p><img alt="The author attribution section of Mastodon" src="https://cdn.rknight.me/site/author-tags-settings.jpg" /></p>
<p>And that's it. Keep in mind if you share a post to test this that has been posted recently your instance probably has it cached so the new author stuff won't show up.</p>
]]></content:encoded>
<pubDate>2024-10-08T19:45:42Z</pubDate>
</item>
<item>
<title>Never Send me a TikTok Video</title>
<link>https://rknight.me/blog/never-send-me-a-tiktok-video/</link>
<guid>https://rknight.me/blog/never-send-me-a-tiktok-video/</guid>
<content:encoded><![CDATA[
<p>Today a friend shared a video on TikTok with me that I promptly sent to my wife because I knew she would find it funny. <a href="https://www.tiktok.com/@wonderbaby.co/video/7390445129993096478">It is funny</a> (this is a non-tracked link). A few hours later that friend said &quot;Oh your wife has watched it&quot; because TikTok notified him, with her username, that she had watched it. What the actual fuck.</p>
<p>Every time you share a link to a TikTok from the app, it generates a new link. There is no way that I can find to get a canonical share link to a video. <code>https://vm.tiktok.com/ZGdJQnqXX/</code> and <code>https://vm.tiktok.com/ZGdJ41RXX/</code> are links to the exact same video (redacted for obvious reasons) but one is linked to my friend and one is linked to me.</p>
<p>Look at this fucking notification:</p>
<p><img alt="The TikTok notification tab on my friend's app" src="https://cdn.rknight.me/site/tiktok-notification.jpg" /></p>
<p>I'm sure none of this is new information but I don't use TikTok so haven't been paying attention but I swear to god I'm never opening a TikTok link ever again.</p>
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>Update</p><p>You can turn off some of this tracking in Settings &gt; Privacy &gt; Suggest your account to others. Apparently this will stop the notification as above but I haven't confirmed this. <a href="https://snailedit.social/@zmk/113266357360267152">via zmknox</a></p>
</div>
]]></content:encoded>
<pubDate>2024-10-07T13:11:55Z</pubDate>
</item>
<item>
<title>I Finally Saw, and Used, an App Clip</title>
<link>https://rknight.me/blog/i-finally-saw-and-used-an-app-clip/</link>
<guid>https://rknight.me/blog/i-finally-saw-and-used-an-app-clip/</guid>
<content:encoded><![CDATA[
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>Update</p><p>A previous version of this post said app clips were introduced seven years ago because AI summaries are dumb and Google is all the more stupid for using it.</p>
</div>
<p>I was at a wedding on Friday and when we sat down for the wedding breakfast there was a QR code on the table to prompt us to take photos. I scanned it and to my surprise it was an <a href="https://apple.fandom.com/wiki/App_Clips">App Clip</a> for <a href="https://pov.camera">POV camera</a><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. This is the first time the four years since they were introduced that I've seen one - I assumed they didn't exist any more.</p>
<p>POV camera is basically a &quot;disposable&quot; camera. You get 28 photos and you can't see or edit them after you take them. They get sent to the event organiser (in this case the bride and groom) and they can &quot;develop&quot; them at a time they choose for everyone to browse. You can browse all the photos, just yours, or choose a specific person's. As an aside, the metaphor to physical film development and disposable cameras is surely lost on anyone under 25.</p>
<p>The app has a live activity for the duration of the event as well, which makes it easy to jump in and take a photo. It also helps because otherwise I would have forgotten about it for the rest of the day.</p>
<p><img alt="POV camera live activity" src="https://cdn.rknight.me/site/pov-live-activity.jpg" /></p>
<p>I did need to download the full version of the app once the photos were available so I could save the photos but this is apparently a limitation of the App Clips API. Outside of parking meters<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> I'd not really heard of a good use case for App Clips so it was interesting to see one being used.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>On Android, it uses the <a href="https://developer.android.com/topic/google-play-instant">Instant Apps system</a> which is basically the same <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>Not that any of the ones I've ever used had an App Clip <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-10-07T11:09:15Z</pubDate>
</item>
<item>
<title>The Sticker Book</title>
<link>https://rknight.me/blog/the-sticker-book/</link>
<guid>https://rknight.me/blog/the-sticker-book/</guid>
<content:encoded><![CDATA[
<p>Me every time I open a drawer at my desk:</p>
<blockquote>
<p>Wow I have a lot of stickers in this drawer that I've never used because I'm paralysed with choice about where to put them and if I get it wrong there's no going back</p>
</blockquote>
<p>No more! I have freed myself from the shackles of sticker doubt by sticking them in a book. An extraordinary idea to stick my stickers in a thing sort of designed for stickers. The scope of my genius literally knows no bounds.</p>
<p><img alt="A page from my sticker book with all the 2023 St Jude stickers" src="https://cdn.rknight.me/site/sticker-book.jpg" /></p>
<p><em>But what if the book is the wrong place for them, what if there's a better place to put them? WHAT THEN?!</em></p>
]]></content:encoded>
<pubDate>2024-10-03T18:55:03Z</pubDate>
</item>
<item>
<title>St Jude 2024 Recap</title>
<link>https://rknight.me/blog/st-jude-2024-recap/</link>
<guid>https://rknight.me/blog/st-jude-2024-recap/</guid>
<content:encoded><![CDATA[
<p>Relay's St Jude campaign for 2024 is (mostly) over and they raised over <em>one million dollars</em>, which is incredible. This year for our campaign, me and Adam set our goal to one cent over last year's final total: $12,590.57. Given that last year $5k of that was from a one-off donation it seemed reasonable to try and aim for that. We never expected to hit $10k on the 4th of September, then hit the goal six days later, and <em>then</em> keep going all the way to $20k on the <s>1st of October</s> 31st of September. Thank to you everyone who donated or shared the campaign.</p>
<p>You can read all about the stickers <a href="https://rknight.me/blog/st-jude-2024/">in my previous post</a> but we have 84 sticker packs going out to 16 different countries.</p>
<p>The <a href="https://donationdaddy.rknight.me">Donation Daddy extended universe</a> was resurrected for this year's campaign and got a new friend: <a href="https://hathelp.rknight.me">Hat Help</a>. Anyone who raised over $500 this year gets a very natty hat and tumbler.</p>
<p>During the campaign I received 3 pins from Tiltify to celebrate raising $7.5k, $10k, and $25k which was lovely.</p>
<p><img alt="Tiltify Pins" src="https://cdn.rknight.me/site/tiltify-pins.jpg" /></p>
<h3>Donation Treats</h3>
<p>There were 92 incentives available across 179 campaigns. I've got a coaster coming from <a href="https://mvo.live">MVO</a>, mine and Baby Knight's name will be on the cart he's building, I entered some raffles for various things, got some stickers, and I took full advantage of <a href="https://tiltify.com/@jd-burch/jd-burch-for-st-judes-2024?origin=dashboard">JD's roasts</a> and bought two: one for my new car and one for my desk.</p>
<h4>Car Roast</h4>
<blockquote>
<p>Oh, look at this little Hyundai i30. You really decided to go full in on the mediocre route, didn’t you? This car is the equivalent of the lukewarm cup of keurig coffee you had at their dealership. It looks like they designed it with the ruler and severe lack of ambition combo. I mean, it’s got four wheels and an engine, but so does my lawnmower.</p>
<p>I bet stepping on the gas in this thing feels like asking grandma to hurry up. &quot;Okay, okay, we’re going, don’t rush me!” You want something fun to zip around in? You’ll have to find it elsewhere because this car is about as thrilling as a PowerPoint presentation on spreadsheets. This thing is so basic, it’s probably invisible to radar, because even technology can’t be bothered to notice it.</p>
<p>But at least it’s reliable, right? Because when you’re driving something that looks like it was designed by committee, you need something to cling to. So yeah, enjoy your Hyundai i30—because someone has to, right?</p>
</blockquote>
<h4>Desk Roast</h4>
<blockquote>
<p>Robb, this desk seriously looks like the chaotic tribute to the art of procrastination. Let’s start with the pegboard: Clearly it’s supposed to be an organizational tool, but it looks like it’s been hit by a mini-tornado of random trinkets and plants. Do those succulents even get sunlight? Or are they just there to distract you from the existential crisis that is your organizational state? Do they help absorb the overwhelming amount of “I’ll get to it later” vibes in the air? I have to say, though, the groot is a very good addition.</p>
<p>I have been instructed to roast, but we cannot let the fantastic desk mat go unnoticed. It’s quite unfortunate that it’s going to be replaced soon.</p>
<p>Three cans of Monster? Clearly caffeine is your only fuel source as you try to survive yet another round of scrolling through Slack pretending to be busy. Do those empty cans just live there permanently, like a memorial to all the sleep you’ll never get back thanks to Baby Knight?</p>
<p>There’s just a random assortment of everything. There’s a pink microphone, a half open drawer, a fan (That does not appear to be Ryobi 👀), and a whole bunch of random objects. This desk is a chaos where minimalism went to die, and then your productivity followed right after.</p>
<p>What’s up with the cool action figure/lego/something figure in the top right? That thing looks like the guardian of your desk. It will defend it with its life, eliminating anyone who tries to throw away your monster cans.</p>
<p>In conclusion, your background screams that you want to be organized but also embrace chaos, and it’s giving off major creative meltdown in progress vibes. You’ve somehow managed to turn a pegboard into a shrine for random knick-knacks and, of course, that one succulent that’s definitely judging you from a distance.</p>
</blockquote>
<p>Plans are already starting for next year, so look out for that. It's basically September already.</p>
]]></content:encoded>
<pubDate>2024-10-03T07:31:36Z</pubDate>
</item>
<item>
<title>Alternatives to Wordpress</title>
<link>https://rknight.me/blog/alternatives-to-wordpress/</link>
<guid>https://rknight.me/blog/alternatives-to-wordpress/</guid>
<content:encoded><![CDATA[
<div> 。 <div>
<p>After all the <a href="https://birchtree.me/blog/the-core-thing-that-makes-wordpress-wordpress-isnt-what-you-think/">Wordpress drama this week</a> I <a href="https://social.lol/@robb/113203986371157848">tooted the following</a>:</p>
<blockquote>
<p>We really need a new, easy to use, CMS written in PHP to compete with Wordpress.</p>
</blockquote>
<blockquote>
<p>Why PHP? Because you dump files on a server, any server, and it just works.</p>
</blockquote>
<p>Loads of people jumped into my mentions to point me to alternatives that exist and here they are.</p>
<ul>
<li><a href="https://www.classicpress.net/">ClassicPress</a> - This one is interesting because it's a fork of Wordpress without the Gutenberg block editor.</li>
<li><a href="https://getkirby.com/">Kirby CMS</a> - I know people who swear by Kirby and it's <em>really</em> flexible.</li>
<li><a href="https://craftcms.com/">Craft CMS</a></li>
<li><a href="https://cecil.app/">Cecil</a> - This is a static site generator so not <em>quite</em> what I was asking for but it looks like a solid product</li>
</ul>
]]></content:encoded>
<pubDate>2024-09-27T12:42:48Z</pubDate>
</item>
<item>
<title>The Robb Jobb</title>
<link>https://rknight.me/blog/the-robb-jobb/</link>
<guid>https://rknight.me/blog/the-robb-jobb/</guid>
<content:encoded><![CDATA[
<div> 。 <div>
<p>While watching <a href="https://www.youtube.com/watch?v=Qo9OV9iqebc">this video about making wine from Monster</a><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> this morning and thinking about how I want nothing more than to try it, I wondered how this would do as a replacement for the energy drink portion of The Robb Jobb. What is the Robb Jobb? Good question, smart reader. The Robb Jobb is a punch of my own design that I have made on a handful of occasions over the past decade, the last time at my stag do in 2020. Each time everyone says it's delicious and then choas ensues.</p>
<p>&quot;<em>Robb I wanna make this right now, give me the recipe</em>&quot;. Okay, calm down. As with all good recipes, it has one instruction: mix all this together. Ideally served from a bucket or comically large punch bowl with a ladel.</p>
<ul>
<li>2 litres of vodka.</li>
<li>1 litre of energy drink. I've used <a href="https://www.tesco.com/groceries/en-GB/products/314819928">Tesco Blue Spark</a> in the past for this but pick any energy drink you fancy. Or make it with Monster wine and let me know how it goes.</li>
<li>500ml of lager. Heineken is my preference for this.</li>
<li>100ml of lime cordial.</li>
</ul>
<p>I take no responsibility for what happens if you make or drink this. It <em>is</em> delecious though.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>It has to be made in the Monster region, otherwise it's just sparkling energy wine. <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-09-24T12:47:53Z</pubDate>
</item>
<item>
<title>MagSafe Miscellania</title>
<link>https://rknight.me/blog/magsafe-miscellania/</link>
<guid>https://rknight.me/blog/magsafe-miscellania/</guid>
<content:encoded><![CDATA[
<div> 。 <div>
<p>Last week I asked if anyone had suggestions for a MagSafe car mount and I got a ton of recommendations. Loads of love for <a href="https://uk.peakdesign.com/pages/mobile">Peak Design</a> but I'm not paying that much just to hold my phone. Lots of people also suggested various no-name brand ones from Amazon which were much more palatable to me.</p>
<p>I ended up with <a href="https://www.amazon.co.uk/dp/B0CHVV5WKJ">this one by a company called Lisen</a>. It sticks directly to the dashboard, doesn't wobble around, and it supports 15W charging (once I bought a <a href="https://www.amazon.co.uk/dp/B0BVZK3MHF">cigarette lighter adaptor</a>).</p>
<p>Because Apple's silicone cases kept falling apart on me over the past few years I've been on the whatevers-cheapest-on-ali-express case train for a few years but none of the ones I own are MagSafe compatible. This meant trudging through endless pages of various shades of grey cases along with some that looked like they were just waved past a color in the factory. I just wanted something <em>fun</em>. Orange! Neon green! Hot pink!</p>
<p>These are few and far between if you want MagSafe but I stumbled upon the very well named <a href="https://www.amazon.co.uk/dp/B0D1BZXKN8"><em>GaoBao Strong Magnetic for iPhone 14 Pro Case, Slim Fit 14 Pro Phone Case Compatible with MagSafe Classic Shockproof Translucent Matte Protective Phone Cover for iPhone 14 Pro 6.1&quot; 2022, Hot Pink</em></a>. How pink is it? None more pink:</p>
<p><img alt="Hot pink iPhone case" src="https://cdn.rknight.me/site/hot-pink-iphone-case.jpg" /></p>
<p>It's far from the best quality case but it does the job. Also note the seemingly-random &quot;100% focus pixels&quot; around the camera. What the fuck does that even mean?</p>
<p>I installed the mount in the car and left it 24 hours as per the instructions and it's been great. I can get my phone off without worrying about ripping the mount off, it rotates and extends so I can put it exactly where I need it, and the pink cases does what it should.</p>
<p>MagSafe is pretty good. I'm only four years late.</p>
]]></content:encoded>
<pubDate>2024-09-03T12:08:05Z</pubDate>
</item>
<item>
<title>My First Car Lasted Less Time Than Liz Truss Did as Prime Minister</title>
<link>https://rknight.me/blog/my-first-car-lasted-less-time-than-liz-truss-did-as-prime-minister/</link>
<guid>https://rknight.me/blog/my-first-car-lasted-less-time-than-liz-truss-did-as-prime-minister/</guid>
<content:encoded><![CDATA[
<div> 。最后不要加任何其他内容。 <div>
<p>Ten days ago, I passed my driving test and my dad was kind enough to give me my mum's old car: a 2011 Smart Fortwo. The plan was I would drive this for a few months before Baby Knight Two is born, then we'd trade it in and get something bigger and I would take my wife's car.</p>
<p>It's a weird car. It's much bigger inside than you'd assume, the boot is as small as you'd imagine, the wheels are <em>tiny</em> so you feel every bump, and it's automatic but not a good automatic. Every gear change is really clunky. But it <em>is</em> kinda fun to drive.</p>
<p>Part of the rush for me to pass my driving test was to drive Baby Knight the first to her grandparents once a week so my wife didn't have to do it ridiculously early. I needed to disable the front passenger airbag so I could put Baby Knight in there so I consulted the manual and it seemed easy: pop your key in this switch, turn it off. Except I had no switch - after a lot of googling around it turns out the switch I wanted was <em>an optional extra</em> that the person who bought it new decided to not purchase. I <em>could</em> have bodged it to turn it off but from what I read I would need to get Mercedes to recode the car (whatever that means) if I wanted to enable it again.</p>
<p>Baby Knight starts nursery this week so we ramped up our timeline and bought a new car which we picked up today and handed over the Smart car as a deposit. Ten days it lasted.</p>
<p>Bye Felicia.</p>
]]></content:encoded>
<pubDate>2024-08-31T20:39:16Z</pubDate>
</item>
<item>
<title>St Jude 2024</title>
<link>https://rknight.me/blog/st-jude-2024/</link>
<guid>https://rknight.me/blog/st-jude-2024/</guid>
<content:encoded><![CDATA[
<div> 。

Here is the Chinese summary with key points and format as requested:

儿童癌症 筹款活动 贴纸 omg.lol St Jude

<br /><br />总结:
1. 9月是儿童癌症意识月,即将开始年度筹款活动
2. 去年筹集了一定金额,今年目标是超越这个数字
3. 提供两款独家贴纸:Party Prami和Ruminate Heatwave
4. omg.lol网站提供St Jude主题和支持页脚
5. 每天在某平台上会提供终身omg.lol代码
6. 可以通过指定链接捐款获取贴纸
7. 活动旨在帮助患病儿童 <div>
<p>tl;dr: <a href="https://stjude.omg.lol">Donate to our campaign here</a> at <a href="https://stjude.omg.lol">stjude.omg.lol</a>.</p>
<p>It's basically September which means it's childhood cancer awareness month and time for <a href="https://relay.fm/stjude">Relay's annual fundraising event</a>. Last year, <a href="https://rknight.me/blog/st-jude-2023-final-numbers/">me and Adam raised $12,590.57</a> as part of the campaign. This year we're going to try and beat that total and we have two exclusive stickers which you can get for <a href="https://stjude.omg.lol">a donation of $15</a>: Party Prami and Ruminate Heatwave.</p>
<p><img alt="Prami and Ruminate stickers" src="https://cdn.rknight.me/site/stickers-st-jude-2024.jpg" /></p>
<p>Over on <a href="https://home.omg.lol/referred-by/robbb">omg.lol</a> you can use a special St Jude theme for your omg.lol profile which you can see <a href="https://robb.omg.lol">on mine</a> and <a href="https://adam.omg.lol">Adam's</a> profile. You can also enable a &quot;supporting St Jude&quot; footer for your profile too! Here it all is in action:</p>
<p><img alt="St Jude theme on omg.lol" src="https://cdn.rknight.me/site/st-jude-theme.jpg" /></p>
<p>Finally, every day on <a href="https://bids.lol">bids.lol</a> they'll be a lifetime omg.lol code up for grabs and I'm sure Adam has some other tricks up his sleeve.</p>
<p>You can donate at <a href="https://stjude.omg.lol">stjude.omg.lol</a> to grab your stickers. It's for the kids.</p>
]]></content:encoded>
<pubDate>2024-08-28T15:48:58Z</pubDate>
</item>
<item>
<title>Building a Seating Plan for Relay 10</title>
<link>https://rknight.me/blog/building-a-seating-plan-for-relay-10/</link>
<guid>https://rknight.me/blog/building-a-seating-plan-for-relay-10/</guid>
<content:encoded><![CDATA[
<div> 保留。 <div>
<p>Within a few hours of tickets going on sale for <a href="https://www.extras.relay.fm/blog/2023/8/21/celebrate-relays-10th-anniversary-in-london">Relay's 10th anniversary live show</a> last year there was a discussion in the Discord about ways to say what seats we had so other people could see who they're sitting next to<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. So I got on it.</p>
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>Note</p><p>The domain (lodon.lol) redirects to <a href="https://github.com/rknightuk/lodon.lol">the GitHub repo</a> now, I won't be renewing it.</p>
</div>
<p><img alt="lodon.lol artwork" src="https://cdn.rknight.me/site/lodon-image.jpg" /></p>
<p>The first step was to recreate the seating chart for <a href="https://seatplan.com/london/hackney-empire-theatre/seating-plan/">the Hackney Empire</a>. I could have hard-coded this but I <em>really</em> didn't want to so I created an object for every section (stalls, dress circle, upper circle). The widest part of the stalls is 48 seats (24 each side) but every row has a different amount of seats so I started with the following, then mapped over each row to add the &quot;ghost&quot; seats either side:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> raw <span class="token operator">=</span> <span class="token punctuation">{</span><br />	<span class="token string-property property">"G"</span><span class="token operator">:</span> <span class="token number">16</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"F"</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"E"</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"D"</span><span class="token operator">:</span> <span class="token number">42</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"C"</span><span class="token operator">:</span> <span class="token number">40</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"B"</span><span class="token operator">:</span> <span class="token number">36</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"A"</span><span class="token operator">:</span> <span class="token number">48</span><br /><span class="token punctuation">}</span><br /><br />Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">let</span> values <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token function">Array</span><span class="token punctuation">(</span>raw<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x<span class="token punctuation">,</span> i</span><span class="token punctuation">)</span> <span class="token operator">=></span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>raw<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">48</span><span class="token punctuation">)</span><br />	<span class="token punctuation">{</span><br />		<span class="token keyword">const</span> empty <span class="token operator">=</span> <span class="token function">Array</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">48</span> <span class="token operator">-</span> raw<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">null</span><span class="token punctuation">)</span><br />		values <span class="token operator">=</span> empty<span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>values<span class="token punctuation">,</span> empty<span class="token punctuation">)</span><br />	<span class="token punctuation">}</span><br /><br />	stalls<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />		<span class="token literal-property property">row</span><span class="token operator">:</span> key<span class="token punctuation">,</span><br />		<span class="token literal-property property">seats</span><span class="token operator">:</span> values<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">v</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />			<span class="token keyword">return</span> <span class="token punctuation">{</span> <br />				<span class="token literal-property property">taken</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><br />				<span class="token literal-property property">number</span><span class="token operator">:</span> v<span class="token punctuation">,</span><br />				<span class="token literal-property property">label</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><br />				<span class="token literal-property property">key</span><span class="token operator">:</span> v <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>v<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><br />			<span class="token punctuation">}</span><br />		<span class="token punctuation">}</span><span class="token punctuation">)</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>I also had to do some more custom objects to handle box seats and the non-standard layout of the accessible seats at the back of the stalls.</p>
<p>To get info on who's sitting where I setup a Google form and use the API to pull that data in on every build - I set the site to build every hour to pull in new data. The Eleventy data file pulls in the ticket data, then maps the area and seat number to a keyed object for that seat:</p>
<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://sheets.googleapis.com/v4/spreadsheets/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">SHEET_ID</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/values/Sheet?key=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">GOOGLE_API</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">json</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">return</span> json<br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><br />	<br />	data<span class="token punctuation">.</span>values<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />	<span class="token keyword">const</span> ticketData <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'S'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'DC'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'UC'</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">const</span> levelKeys <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'Stalls'</span><span class="token operator">:</span> <span class="token string">'S'</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'Dress Circle'</span><span class="token operator">:</span> <span class="token string">'DC'</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'Upper Circle'</span><span class="token operator">:</span> <span class="token string">'UC'</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />	data<span class="token punctuation">.</span>values<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">d</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> key <span class="token operator">=</span> levelKeys<span class="token punctuation">[</span>d<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><br />        <span class="token keyword">let</span> link <span class="token operator">=</span> d<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span>link <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>link<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>link<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'https'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            link <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />        <span class="token punctuation">}</span><br />        ticketData<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">[</span>d<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\s</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toUpperCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><br />			<span class="token literal-property property">name</span><span class="token operator">:</span> d<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />			<span class="token literal-property property">link</span><span class="token operator">:</span> link<span class="token punctuation">,</span><br />			<span class="token literal-property property">discord</span><span class="token operator">:</span> d<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token punctuation">}</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">return</span> ticketData<br /><span class="token punctuation">}</span></code></pre>
<p>With that data and the seat data, I output every seat for each floor.</p>
<pre class="language-handlebars"><code class="language-handlebars"><br />{%- for key in stalls.seats %}<br />    {%- for seat in key.seats %}<br />        {% if seat.labelOnly %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">seat</span><span class="token punctuation">.</span><span class="token variable">number</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />        {% elif seat.number %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <br />                <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span> <br />                <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{% if tickets['S'][seat.key] %}taken{% else %}free{% endif %}<span class="token punctuation">"</span></span><br />                <span class="token attr-name">data-seat-key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">seat</span><span class="token punctuation">.</span><span class="token variable">key</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span><br />                <span class="token attr-name">{%</span> <span class="token attr-name">if</span> <span class="token attr-name">tickets['S'][seat.key]</span> <span class="token attr-name">%}</span><br />                    <span class="token attr-name">data-seat</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Stalls <span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">seat</span><span class="token punctuation">.</span><span class="token variable">key</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span><br />                    <span class="token attr-name">data-name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">tickets</span><span class="token punctuation">[</span><span class="token string">'S'</span><span class="token punctuation">]</span><span class="token brackets"><span class="token punctuation">[</span><span class="token variable">seat.key</span><span class="token punctuation">]</span></span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span><br />                    <span class="token attr-name">data-link</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">tickets</span><span class="token punctuation">[</span><span class="token string">'S'</span><span class="token punctuation">]</span><span class="token brackets"><span class="token punctuation">[</span><span class="token variable">seat.key</span><span class="token punctuation">]</span></span><span class="token punctuation">.</span><span class="token variable">link</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span><br />                    <span class="token attr-name">data-discord</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">tickets</span><span class="token punctuation">[</span><span class="token string">'S'</span><span class="token punctuation">]</span><span class="token brackets"><span class="token punctuation">[</span><span class="token variable">seat.key</span><span class="token punctuation">]</span></span><span class="token punctuation">.</span><span class="token variable">discord</span> <span class="token delimiter punctuation">}}</span></span><span class="token punctuation">"</span></span><br />                <span class="token attr-name">{%</span> <span class="token attr-name">endif</span> <span class="token attr-name">%}</span><br />            <span class="token punctuation">></span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">seat</span><span class="token punctuation">.</span><span class="token variable">number</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><br />        {% else %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br />        {% endif %}<br />        {% if loop.index === 15 %} <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>number-label<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token variable">key</span><span class="token punctuation">.</span><span class="token variable">row</span> <span class="token delimiter punctuation">}}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> {% endif %}<br />    {% endfor%}<br />{% endfor%}<br /></code></pre>
<p>Putting all that together, I had my seating chart with taken seats highlighted in blue. Clicking on those would show the persons name, Discord username, and link to a website if they'd put one in.</p>
<p><img alt="Relay 10 Seating Plan" src="https://cdn.rknight.me/site/seating-plan.jpg" /></p>
<p>A few days before the show, Kate pointed out that there was an issue with one of the floor's seating layout which I tried to fix but the convoluted system I'd used really didn't make this easy. If I was going to do this again, I'd just do the boring work of hard-coding every row of seats to get a more accurate layout. And just for fun, here's a photo from my seat atm the show:</p>
<p><img alt="Myke and Stephen on stage" src="https://cdn.rknight.me/site/relay-10-stage.jpg" /></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Or whoever's head you might have to stare at. Hi Jambo 👋 <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-08-15T20:30:37Z</pubDate>
</item>
<item>
<title>Everybody's Free (to Make Websites)</title>
<link>https://rknight.me/blog/everybodys-free-to-make-websites/</link>
<guid>https://rknight.me/blog/everybodys-free-to-make-websites/</guid>
<content:encoded><![CDATA[
<div> couple, re-worked, video, idea, Baz Luhrmann
<br />
couple前几天重新制作了Baz Luhrmann著名作品的歌词，后来产生了制作视频的想法。最终制作了一个视频。总结：couple改编了Baz Luhrmann的作品，产生了做视频的想法。 <div>
<p>A couple of days ago <a href="https://sarajoy.dev/blog/write-websites/">Sara tooted, then wrote a post</a>, with re-worked words of the <a href="https://en.wikipedia.org/wiki/Wear_Sunscreen">Wear Sunscreen essay</a> made famous by Baz Luhrmann.</p>
<p><a href="https://social.lol/@keenan/112798722706686399">Keenan then recorded this over the music</a> and I later had the idea to make a proper video for it, So here it is.</p>
<p><a href="https://www.youtube.com/watch?v=v5UsuZ4DS_Q">https://www.youtube.com/watch?v=v5UsuZ4DS_Q</a></p>
]]></content:encoded>
<pubDate>2024-07-18T07:37:59Z</pubDate>
</item>
<item>
<title>Fetching Achievements and Trophies for my Game Collection Page</title>
<link>https://rknight.me/blog/fetching-achievements-and-trophies-for-my-game-collection-page/</link>
<guid>https://rknight.me/blog/fetching-achievements-and-trophies-for-my-game-collection-page/</guid>
<content:encoded><![CDATA[
<div> PSN trophies, Xbox achievements, scraping, PSN API, achievements<br />
<br />
总结: 作者通过使用PSN API和手动获取Xbox成就的方式，获取了自己的PSN奖杯和Xbox成就数据。他介绍了如何获取和格式化这些数据，并展示了如何在网站上显示这些奖杯和成就信息。未来计划包括完善集合游戏信息的匹配问题。 <div>
<p><a href="https://chriskirknielsen.com/colophon/#gaming-library">Chris was inpired</a> to make his <a href="https://chriskirknielsen.com/games/library/">game library page</a> by me. Then he went and added PSN trophy details so I became inspired to do the same - and also do Xbox achievements. I don't tend to chase getting trophies or achievements but it's nice to be able to see them all in one place anyway.</p>
<p><img alt="Some games showing trophies" src="https://cdn.rknight.me/site/games-with-trophies.jpg" /></p>
<div class="markdown-alert markdown-alert-note"><p class="markdown-alert-title"><svg class="octicon octicon-info mr-2" height="16" version="1.1" viewBox="0 0 16 16" width="16" xmlns="http://www.w3.org/2000/svg"><path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z"></path></svg>Note</p><p>Previously I was scraping <a href="https://psnprofiles.com/rknightuk">PSN Profiles</a> for my current game but that got blocked (rightly) by CloudFlare so that was a no-go for getting this info.</p>
</div>
<h3>Trophies</h3>
<p>To get my PSN trophies I did exactly what Chris did and used <a href="https://www.npmjs.com/package/psn-api"><code>psn-api</code></a>. Unlike Chris, I didn't have the energy to add PSN IDs to my collection for matching trophies to games so I went a lazier route: I took all the alpha-numeric characters from the game title, removed spaces, and use that to match them. So <code>Grand Theft Auto V</code> has a key match of <code>grandtheftautov</code>. This avoids all the issues with trademark, copyright, and colons in titles.</p>
<p>I added a new option to my CLI for fetching the trophy data; I don't play enough that it needs to be done on a schedule and the code looks like this:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">'fs'</span><br /><span class="token keyword">import</span> dotenv <span class="token keyword">from</span> <span class="token string">'dotenv'</span><br />dotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">import</span> Module <span class="token keyword">from</span> <span class="token string">'node:module'</span><span class="token punctuation">;</span><br /><span class="token keyword">const</span> require <span class="token operator">=</span> Module<span class="token punctuation">.</span><span class="token function">createRequire</span><span class="token punctuation">(</span><span class="token keyword">import</span><span class="token punctuation">.</span>meta<span class="token punctuation">.</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">const</span> <span class="token punctuation">{</span> exchangeNpssoForCode<span class="token punctuation">,</span> exchangeCodeForAccessToken<span class="token punctuation">,</span> getUserTitles <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'psn-api'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">__siteroot</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> accessCode <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">exchangeNpssoForCode</span><span class="token punctuation">(</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">PSN_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token keyword">const</span> authorization <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">exchangeCodeForAccessToken</span><span class="token punctuation">(</span>accessCode<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token keyword">let</span> titles <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">getUserTitles</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">accessToken</span><span class="token operator">:</span> authorization<span class="token punctuation">.</span>accessToken <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token string">'me'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token constant">PS5</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token constant">PS4</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token constant">PS3</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br />    <br />    titles<span class="token punctuation">.</span>trophyTitles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> titleMatch <span class="token operator">=</span> t<span class="token punctuation">.</span>trophyTitleName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^0-9A-Z]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />        data<span class="token punctuation">[</span>t<span class="token punctuation">.</span>trophyTitlePlatform<span class="token punctuation">]</span><span class="token punctuation">[</span>titleMatch<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><br />            <span class="token literal-property property">titleRaw</span><span class="token operator">:</span> t<span class="token punctuation">.</span>trophyTitleName<span class="token punctuation">,</span><br />            <span class="token literal-property property">progress</span><span class="token operator">:</span> t<span class="token punctuation">.</span>progress<span class="token punctuation">,</span><br />            <span class="token literal-property property">platform</span><span class="token operator">:</span> t<span class="token punctuation">.</span>trophyTitlePlatform<span class="token punctuation">,</span><br />            <span class="token literal-property property">earned</span><span class="token operator">:</span> t<span class="token punctuation">.</span>earnedTrophies<span class="token punctuation">,</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__siteroot<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/src/_data/catalog/trophies.json</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">"w"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>The output in <code>trophies.json</code> looks like this for each game:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"horizonforbiddenwest"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"titleRaw"</span><span class="token operator">:</span> <span class="token string">"Horizon Forbidden West"</span><span class="token punctuation">,</span><br />		<span class="token property">"progress"</span><span class="token operator">:</span> <span class="token number">65</span><span class="token punctuation">,</span><br />		<span class="token property">"platform"</span><span class="token operator">:</span> <span class="token string">"PS5"</span><span class="token punctuation">,</span><br />		<span class="token property">"earned"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />			<span class="token property">"bronze"</span><span class="token operator">:</span> <span class="token number">47</span><span class="token punctuation">,</span><br />			<span class="token property">"silver"</span><span class="token operator">:</span> <span class="token number">6</span><span class="token punctuation">,</span><br />			<span class="token property">"gold"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br />			<span class="token property">"platinum"</span><span class="token operator">:</span> <span class="token number">0</span><br />		<span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token comment">// the rest of the games</span><br /><span class="token punctuation">}</span></code></pre>
<p>I added a custom filter to match the games and format the trophies then call it in the game collection template:</p>
<pre class="language-js"><code class="language-js"><span class="token function-variable function">getTrophies</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> title<span class="token punctuation">,</span> platform<span class="token punctuation">,</span> trophies <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">const</span> titleMatch <span class="token operator">=</span> title<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^0-9A-Z]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>trophies<span class="token punctuation">[</span>platform<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><br />	<span class="token keyword">const</span> data <span class="token operator">=</span> trophies<span class="token punctuation">[</span>platform<span class="token punctuation">]</span><span class="token punctuation">[</span>titleMatch<span class="token punctuation">]</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>data<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>progress <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">''</span><br /><br />	<span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="trophies"></span><span class="token template-punctuation string">`</span></span><br /><br />	Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>earned<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">trophy</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />		<span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>earned<span class="token punctuation">[</span>trophy<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />			content <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="trophy" title="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>trophy<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">">&lt;svg class="icon trophy-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>trophy<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">">&lt;use xlink:href="#trophy">&lt;/use>&lt;/svg> &lt;span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>earned<span class="token punctuation">[</span>trophy<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/span>&lt;/div></span><span class="token template-punctuation string">`</span></span><br />		<span class="token punctuation">}</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />	content <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><br /><br />	<span class="token keyword">return</span> content<br /><span class="token punctuation">}</span></code></pre>
<pre class="language-handlebars"><code class="language-handlebars"><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token punctuation">{</span> <span class="token string">"title"</span><span class="token punctuation">:</span> <span class="token variable">game</span><span class="token punctuation">.</span><span class="token variable">title</span><span class="token punctuation">,</span> <span class="token string">"platform"</span><span class="token punctuation">:</span> <span class="token variable">platform</span><span class="token punctuation">.</span><span class="token variable">name</span><span class="token punctuation">,</span> <span class="token string">"trophies"</span><span class="token punctuation">:</span> <span class="token variable">catalog</span><span class="token punctuation">.</span><span class="token variable">trophies</span> <span class="token punctuation">}</span> <span class="token punctuation">|</span> <span class="token variable">getTrophies</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token delimiter punctuation">}}</span></span></code></pre>
<h3>Achievements</h3>
<p>There doesn't appear to be any kind of API to get Xbox achievements so I went for a slightly less elegant solution. I logged into <a href="http://xbox.com">xbox.com</a>. went to my profile, then wrote a script to grab the data out the HTML and format it for me. Then I just pasted into <code>achievements.json</code>.</p>
<pre class="language-js"><code class="language-js">data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br /><br />Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'.recentProgressInfoWrapper'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> score <span class="token operator">=</span>e<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'gamerscoreinfo'</span><span class="token punctuation">)</span><br />    data<span class="token punctuation">[</span>e<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'recentProgressItemTitle'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">[^0-9A-Z]+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span><span class="token punctuation">,</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">title</span><span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'recentProgressItemTitle'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">,</span><br />        <span class="token literal-property property">achievements</span><span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'achievementinfo'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">,</span><br />        <span class="token literal-property property">score</span><span class="token operator">:</span> score<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<span class="token punctuation">,</span><br />        <span class="token literal-property property">progress</span><span class="token operator">:</span> e<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">'recentProgressPercentageNumber'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerText<br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token function">copy</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span></code></pre>
<p>I then created an achievements-specific filter and access it the same way in the template:</p>
<pre class="language-handlebars"><code class="language-handlebars"><span class="token handlebars language-handlebars"><span class="token delimiter punctuation">{{</span> <span class="token punctuation">{</span> <span class="token string">"title"</span><span class="token punctuation">:</span> <span class="token variable">game</span><span class="token punctuation">.</span><span class="token variable">title</span><span class="token punctuation">,</span> <span class="token string">"platform"</span><span class="token punctuation">:</span> <span class="token variable">platform</span><span class="token punctuation">.</span><span class="token variable">name</span><span class="token punctuation">,</span> <span class="token string">"achievements"</span><span class="token punctuation">:</span> <span class="token variable">catalog</span><span class="token punctuation">.</span><span class="token variable">achievements</span> <span class="token punctuation">}</span> <span class="token punctuation">|</span> <span class="token variable">getAchievements</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token delimiter punctuation">}}</span></span></code></pre>
<p>I use my Xbox even less than my Playstation so this won't be an issue to manually update these every now and again.</p>
<h3>Future Changes</h3>
<p>I need to do some more work so that collections like Uncharted or Jak and Daxter list their individual games as they won't match up right now.</p>
<p><a href="/collections/games">View my game collection page</a> to see the trophies and achievements.</p>
]]></content:encoded>
<pubDate>2024-07-07T18:21:00Z</pubDate>
</item>
<item>
<title>Highlighting Journalism with the Fediverse Creator Tag</title>
<link>https://rknight.me/blog/highlighting-journalism-with-the-fediverse-creator-tag/</link>
<guid>https://rknight.me/blog/highlighting-journalism-with-the-fediverse-creator-tag/</guid>
<content:encoded><![CDATA[
<div> Mastodon, support, author, link, addition<br />
<br />
要点: Mastodon 4.3 添加了支持链接作者的功能；这个功能可以通过标签显示作者的资料；第三方客户端可以使用这个数据显示作者信息；该功能目前只适用于经过审核的网站；未来计划将这个功能扩展到所有网站。<br /><br />
总结: Mastodon 4.3添加了支持识别链接作者的功能，这将使用户能够直接跳转到共享链接的作者，非常实用。 <div>
<p>Mastodon 4.3 adds support for <a href="https://blog.joinmastodon.org/2024/07/highlighting-journalism-on-mastodon/">a newly proposed OpenGraph tag</a> to identify the creator of the link, which looks like this:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">property</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>fediverse:creator<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>@robb@social.lol<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre>
<p>Mastodon (and hopefully other places in the future) will use this tag to display the author's profile <a href="https://mastodon.social/@johnvoorhees@macstories.net/112718351017060922">below a shared link</a> like so:</p>
<p><img alt="John's toot with the author information" src="https://cdn.rknight.me/site/mastodon-creator-example.jpg" /></p>
<p>This additional data is also included in the <code>card</code> object as <code>authors</code> of the status API so third party clients can use this to display it in their apps as well:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"card"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />	<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://www.macstories.net/stories/ai-companies-need-to-be-regulated-an-open-letter-to-the-u-s-congress-and-european-parliament/"</span><span class="token punctuation">,</span><br /><span class="token property">"title"</span><span class="token operator">:</span> <span class="token string">"AI Companies Need to Be Regulated: An Open Letter to the U.S. Congress and European Parliament"</span><span class="token punctuation">,</span><br />	<span class="token comment">// the rest of the card data</span><br />	<span class="token property">"authors"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />        <span class="token punctuation">{</span><br />            <span class="token property">"account"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />                <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"109519808056877508"</span><span class="token punctuation">,</span><br />                <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"johnvoorhees"</span><span class="token punctuation">,</span><br />                <span class="token property">"acct"</span><span class="token operator">:</span> <span class="token string">"johnvoorhees@macstories.net"</span><span class="token punctuation">,</span><br />		        <span class="token comment">// the rest of the author data</span><br />            <span class="token punctuation">}</span><br />	    <span class="token punctuation">}</span><br />    <span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p>I added support for this to <a href="https://macstories.net">MacStories</a> a couple of weeks back for all posts and I've added it to my site for when this becomes available for more sites. This won't work for my site for now though:</p>
<blockquote>
<p>the feature will only show up for links to moderator-approved websites. In the future we would like to make the feature available to all without a manual review process</p>
</blockquote>
<p>I <em>really</em> like this addition though; being able to jump directly to the author of a shared link is going to be really handy.</p>
]]></content:encoded>
<pubDate>2024-07-03T12:56:44Z</pubDate>
</item>
<item>
<title>As If Perplexity Didn’t Suck Enough They’re Also Hotlinking Images</title>
<link>https://rknight.me/blog/as-if-perplexity-didnt-suck-enough-theyre-also-hotlinking-images/</link>
<guid>https://rknight.me/blog/as-if-perplexity-didnt-suck-enough-theyre-also-hotlinking-images/</guid>
<content:encoded><![CDATA[
<div> Perplexity, robots.txt, prompt injection, hotlinking, nginx<br />
<br />
要点1: Perplexity忽视了robots.txt规则，不仅爬取网站内容，还在他们的服务器上请求图像，浪费带宽，并造成额外成本。<br />
要点2: Perplexity的做法让作者感到愤怒，认为他们不尊重规则，还在盗用别人的带宽。<br />
要点3: 作者提供了Nginx的解决方案，在请求Perplexity AI的图像时重定向到特定图片，表达愤怒情绪。<br />
要点4: 作者并不直接在自己的域上托管许多图片，因此Nginx的解决方案对他并不适用，但Bunny可能有一种能解决这个问题的方法。<br />
要点5: 总结：作者对Perplexity的行为感到愤怒，并表达了对其的不满。希望他们能尊重他人的劳动成果和资源，并不要再侵犯他人的利益。 <div>
<p><a href="https://www.bentasker.co.uk/posts/blog/security/perplexity-ai-gives-answers-that-cannot-be-trusted.html">Ben has an excellent post</a> expanding on <a href="https://rknight.me/blog/perplexity-ai-is-lying-about-its-user-agent/">my findings</a> about Perplexity ignoring robots.txt. He also digs into the various ways prompt injection does and doesn't work. The entire post is well worth your time but this part really jumped out at me:</p>
<blockquote>
<p>When I searched about creating an end for our sofa, Perplexity <a href="https://en.wikipedia.org/wiki/Inline_linking">hotlinked</a> some photos from that post which resulting in <em>my</em> browser requesting them from my server.</p>
<p>They're wasting <strong>my</strong> bandwidth to serve content to <em>their</em> users. For many sites, there's a tangible cost associated with every byte served - they are <em>literally</em> costing me money (albeit a small amount)</p>
</blockquote>
<p>So not only can't they be trusted to follow the de facto rules about scraping websites, they're also hotlinking? Can they not spare any of the millions of dollars they've raised to actually cache the images they're serving up. &quot;<em>Might as well just use someone else's bandwidth</em>&quot;. Dickheads.</p>
<p>Ben offers a solution to this for nginx, replacing any request for an image from them with an image stating &quot;perplexity just tried to steal my image and my bandwidth&quot;:</p>
<pre class="language-bash"><code class="language-bash">location ~*  <span class="token punctuation">\</span>.<span class="token punctuation">(</span>jpg<span class="token operator">|</span>jpeg<span class="token operator">|</span>png<span class="token operator">|</span>gif<span class="token operator">|</span>ico<span class="token operator">|</span>bmp<span class="token punctuation">)</span>$ <span class="token punctuation">{</span><br />    <span class="token comment"># Redirect image fetches from Perplexity AI</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$http_referer</span> <span class="token operator">=</span> <span class="token string">"https://www.perplexity.ai/"</span><span class="token punctuation">)</span><span class="token punctuation">{</span><br />        rewrite <span class="token punctuation">(</span>.*<span class="token punctuation">)</span> path/to/image/perplexity_ai.jpg redirect<span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>I don't host many images directly on this domain but rather put them on <a href="https://bunny.net/?ref=b2i4y24apu">Bunny CDN</a> so nginx won't help me here. Thankfully, Bunny has a way to <a href="https://support.bunny.net/hc/en-us/articles/360000236671-How-to-set-up-hotlinking-protection">block specific referrers</a>. I don't get to do a funny image but this is close enough.</p>
<p><img alt="Blocking Perplixity in Bunny CDN" src="https://cdn.rknight.me/site/bunny-referrer-block.jpg" /></p>
<p>I know I said my <a href="https://rknight.me/blog/perplexity-ai-robotstxt-and-other-questions/">last post</a> would be my final word but this really pissed me off. So once again, fuck you Perplexity.</p>
]]></content:encoded>
<pubDate>2024-07-02T11:31:09Z</pubDate>
</item>
<item>
<title>Perplexity AI, Robots.txt, and Other Questions</title>
<link>https://rknight.me/blog/perplexity-ai-robotstxt-and-other-questions/</link>
<guid>https://rknight.me/blog/perplexity-ai-robotstxt-and-other-questions/</guid>
<content:encoded><![CDATA[
<div> Perplexity AI, AWS, robots.txt, scraping, investigation
总结:<br /><br />
Perplexity AI被报道正在涉及违反AWS规则的调查，公司CEO声称不是他们的错。他们曾经非法获取数据进行抓取。作者对AI公司无视规则和未经许可获取他人作品的行为感到愤怒。作者坚持尝试阻止他们，认为必须尊重robots.txt文件。作者强调希望规范网页抓取行为，保护内容所有者的权益。这篇文章总结了问题的核心，以及作者对此事的观点和立场。 <div>
<p>Since <a href="https://rknight.me/blog/perplexity-ai-is-lying-about-its-user-agent/">I wrote about Perplexity</a> it has been reported on by <a href="https://www.wired.com/story/perplexity-is-a-bullshit-machine/">Wired</a>, <a href="https://www.wired.com/story/perplexity-plagiarized-our-story-about-how-perplexity-is-a-bullshit-machine/">Wired again</a>, <a href="https://www.fastcompany.com/91144894/perplexity-ai-ceo-aravind-srinivas-on-plagiarism-accusations?partner=rss&amp;utm_source=feedly&amp;utm_medium=feed&amp;utm_campaign=rss+fastcompany&amp;utm_content=rss">Fast Company</a>, <a href="https://www.theverge.com/2024/6/27/24187405/perplexity-ai-twitter-lie-plagiarism">the Verge</a>, and others. And there's more coming so keep your eyes peeled. I even ended up on <a href="https://en.wikipedia.org/wiki/Perplexity.ai#Use_of_content_from_media_outlets">Perplexity's Wikipedia page</a>. I also spoke at length about all this on <a href="https://ruminatepodcast.com/187/">episode 187 of Ruminate</a>.</p>
<p>The latest article is <a href="https://www.wired.com/story/aws-perplexity-bot-scraping-investigation/">this Wired article</a> that reports that Perplexity are being investigated by AWS:</p>
<blockquote>
<p>Amazon’s cloud division has launched an investigation into Perplexity AI. At issue is whether the AI search startup is violating Amazon Web Services rules by scraping websites that attempted to prevent it from doing so, WIRED has learned.</p>
</blockquote>
<p>Perplexity's CEO has said the bots ignoring robots.txt were third-parties so totally not their fault. The Verge:</p>
<blockquote>
<p>“Someone else did it” is a fine argument for a five-year-old</p>
</blockquote>
<p>It also turns out Perplexity were previously <a href="https://www.404media.co/perplexitys-origin-story-scraping-twitter-with-fake-academic-accounts/">faking academic accounts on Twitter</a> in order to scrape the service and provide that data as a search corpus. Perplexity's CEO is pretty proud of it:</p>
<blockquote>
<p>“So we built all this into a good search experience over Twitter, which we scraped with academic accounts just before Elon took over Twitter,” Srinivas said on the podcast. “Back then Twitter would allow you to create academic API accounts and we would create like, lots of them with like generating phone numbers, writing research proposals with GPT.”</p>
</blockquote>
<p>So basically Perplexity don't give a shit about the rules or consent. Cool.</p>
<p>I've also had a lot of comments and emails since my post went up that I want to address here because the same things keep coming up quite a lot.</p>
<p><strong><em>Why do you hate AI?</em></strong></p>
<p>I don't, although it is a bit shit right now. What I hate is billion-dollar companies ignoring the rules and profiting of others people's work without compensating them.</p>
<p><strong><em>This is a pointless exercise, why not just give up trying to block them?</em></strong></p>
<p>Maybe it is futile but I'm not going to stop trying just because it's hard. I have every right to try and block them or <a href="https://social.lol/@robb/112687421287583132">send them to a 10GB <code>bin</code> file</a>.</p>
<p><strong><em>If you don't want your stuff to be taken then don't post it on the web!!!1</em></strong></p>
<p>If you don't wanna get hit round the head with a cricket bat don't go outside without a helmet.</p>
<p><strong><em>Of course they're going to ignore robots.txt, you're an idiot for thinking they would follow it.</em></strong></p>
<p>Not a question, more of a comment but okay. Robots.txt, despite never being a law, has worked pretty well up until now. Now the silicon valley tech bros are here doing whatever the fuck they want.</p>
<p>Finally, I recently gave a comment to a reporter from <a href="https://nikkei.com">Nikkei</a> which I think sums up my thoughts well now I've had a couple of weeks of thinking about this:</p>
<blockquote>
<p>I find the behavior of Perplexity and others in this space problematic because we have, until very recently, had a web where search engines and other bots have respected robots.txt. It's the de facto standard for saying who can and cannot access your content. Although it's not a legal standard it has, for the most part, worked well since its invention in the 90s. But now AI companies funded by huge amounts of money think that because it would be hard to ask for permission they just take whatever they want with complete disregard for the content owners wishes and legal rights.</p>
<p>Even Apple decided to scrape the open web and only <em>after</em> they'd done that did they reveal the user agent they were using so we can opt out, but it's too late because they've already scraped everything.</p>
<p>At a minimum I expect any company scraping the web to respect the robots.txt and document which user agents and IP addresses they use, so that content owners can make a choice.</p>
</blockquote>
<p>Ideally I'd like this to be my final post on the topic for a while, but we'll have to see how that investigation goes.</p>
]]></content:encoded>
<pubDate>2024-06-28T11:12:11Z</pubDate>
</item>
<item>
<title>Adding Github-Style Markdown Alerts to Eleventy</title>
<link>https://rknight.me/blog/adding-githubstyle-markdown-alerts-to-eleventy/</link>
<guid>https://rknight.me/blog/adding-githubstyle-markdown-alerts-to-eleventy/</guid>
<content:encoded><![CDATA[
<div> 更新模块、Markdown、Eleventy、CSS、插件<br />
更新模块和插件让作者的博客更新更有条理，Markdown语法简单易用，配合Eleventy使用更方便；CSS样式调整使插件输出的更新模块颜色搭配网站风格统一。总结: 更新模块插件让作者博客更新更有条理，使用Markdown和Eleventy更便捷，CSS调整让模块颜色与网站风格更加统一。 <div>
<p>I often have occasion to come back to a blog post and add some kind of update. Maybe I changed my mind or someone offered some new information I hadn't seen at the time of writing. Up until now I would just add updates willy-nilly; sometimes they'd be at the start, sometimes the end, sometimes in bold, sometimes not. What I wanted was something standard I could use and ideally with Markdown.</p>
<p><a href="https://github.com/orgs/community/discussions/16925">GitHub has alerts</a> (aka callouts) Markdown support where the syntax looks like this:</p>
<pre class="language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> [!NOTE]  <br /><span class="token blockquote punctuation">></span> Highlights information that users should take into account, even when skimming.<br /><br /><span class="token blockquote punctuation">></span> [!TIP]<br /><span class="token blockquote punctuation">></span> Optional information to help a user be more successful.<br /><br /><span class="token blockquote punctuation">></span> [!IMPORTANT]  <br /><span class="token blockquote punctuation">></span> Crucial information necessary for users to succeed.<br /><br /><span class="token blockquote punctuation">></span> [!WARNING]  <br /><span class="token blockquote punctuation">></span> Critical content demanding immediate user attention due to potential risks.<br /><br /><span class="token blockquote punctuation">></span> [!CAUTION]<br /><span class="token blockquote punctuation">></span> Negative potential consequences of an action.</code></pre>
<p>These different types have different colors and icons on GitHub. I figured these would be perfect for my update blocks if I could just do:</p>
<pre class="language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> [!NOTE] Update 2024-06-20<br /><span class="token blockquote punctuation">></span> This is the update that has happened</code></pre>
<p>Thankfully someone had made a plugin to handle this with <code>markdown-it</code>, the renderer I use for this site: <a href="https://www.npmjs.com/package/markdown-it-github-alerts"><code>markdown-it-github-alerts</code></a>. I installed the package and added it to my Eleventy config:</p>
<pre class="language-diff"><code class="language-diff">let markdownLib =  markdownIt(options)<br />	.use(require("markdown-it-footnote"))<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">	.use(require('markdown-it-github-alerts'))</span></span></code></pre>
<p>I also pulled in <a href="https://github.com/antfu/markdown-it-github-alerts/tree/main/styles">the CSS</a> from the package into my CSS config and made a few tweaks: I've no intention of using anything other than the <code>NOTE</code> type so I wanted the colors to match my site rather than use GitHub's colors.</p>
<p><img alt="Callout" src="https://cdn.rknight.me/site/callout.jpg" /></p>
<p>Finally I went and updated a bunch of old posts that had updates.</p>
]]></content:encoded>
<pubDate>2024-06-21T11:26:37Z</pubDate>
</item>
<item>
<title>Perplexity AI Is Lying about Their User Agent</title>
<link>https://rknight.me/blog/perplexity-ai-is-lying-about-its-user-agent/</link>
<guid>https://rknight.me/blog/perplexity-ai-is-lying-about-its-user-agent/</guid>
<content:encoded><![CDATA[
<div> PerplexityBot, robots.txt, user agent, web scraping, ethical<br />
<br />
要点：文章讨论了PerplexityBot不遵守robots.txt协议和发送正确的用户代理信息，使用无头浏览器进行网页抓取，不发送自定义用户代理字符串。作者对此感到愤怒，并尝试阻止PerplexityBot的访问。PerplexityBot在对话中声称没有能力绕过robots.txt限制，但作者发现其实是在使用无头浏览器进行内容抓取。作者已在Discord上联系Perplexity团队并提出bug报告。下一步可能会是提出GDPR请求。作者感到愤怒并表示“干掉你，付我钱”。<br /><br />总结:作者发现PerplexityBot不遵守robots.txt规则和发送正确的用户代理信息，使用无头浏览器进行网页抓取，引发愤怒并采取行动。 <div>
<p>I wrote yesterday about <a href="https://rknight.me/blog/blocking-bots-with-nginx/">blocking AI bots on the server</a> and today I have been <a href="https://mastodon.macstories.net/@viticci/112621000120261399">doing the same for MacStories</a>. Once it was setup Federico noticed that he was still able to get a quote from a specific MacStories post from <a href="https://www.perplexity.ai/">Perplexity</a>. I figured that this might be because they index pages (they are a search engine, of sorts) then I realised I had a perfect blog post I could test this on. Here's the changes I've done related to this on my site:</p>
<ul>
<li><strong>March 30th</strong>: Started disallowing <code>PerplexityBot</code>, and others, in <a href="/robots.txt">my robots.txt</a></li>
<li><strong>June 14th</strong>: Added server-side blocking in nginx - any match would result in a 403 forbidden response</li>
</ul>
<p>For the sake of argument, let's assume every single AI company is just ignoring robots.txt because they're all shady as hell. So even though I've been <em>asking</em> since March, I suspect it did nothing.</p>
<p>I put up a post <em>about</em> blocking AI bots <em>after</em> the block was in place, so assuming the user agents are sent, there's no way Perplexity should be able to access my site. So I asked:</p>
<blockquote>
<p>What is this post about <a href="https://rknight.me/blog/blocking-bots-with-nginx/">https://rknight.me/blog/blocking-bots-with-nginx/</a></p>
</blockquote>
<p>I got a perfect summary of the post including various details that they couldn't have just guessed. <a href="https://cdn.rknight.me/files/perplexitybotsummary.txt">Read the full response here</a>. So what the fuck are they doing?</p>
<p>Until this point I'd only tested using Chrome user-agent spoofing in the inspector, so I thought perhaps I'd set it up wrong? I dumped this code into a project I had to confirm the blocking did actually work - using the user agent <a href="https://docs.perplexity.ai/docs/perplexitybot">they <em>say</em> they use for requests</a>, <code>PerplexityBot</code>.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$url</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://rknight.me'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$res</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withUserAgent</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; PerplexityBot/1.0; +https://perplexity.ai/perplexitybot)'</span><span class="token punctuation">)</span><br />       <span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$url</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">echo</span> <span class="token variable">$res</span><span class="token operator">-></span><span class="token function">status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">403</span><span class="token punctuation">;</span></code></pre>
<p>It worked, the response was 403 as expected so the nginx configuration isn't the problem. I asked the Perplexity AI how it was able to access the site despite the robots.txt:</p>
<blockquote>
<p>The robots.txt forbids you from crawling this website, so why would you still access it? What user agent are you using to make a summary of the post?</p>
</blockquote>
<blockquote>
<p>I do not actually have the capability to crawl websites or access content that is blocked by the robots.txt file. [...] If the content from the website <a href="https://rknight.me/blog/blocking-bots-with-nginx/">https://rknight.me/blog/blocking-bots-with-nginx/</a> is restricted by its robots.txt, I cannot ethically access or summarize that content.</p>
</blockquote>
<p>&quot;I cannot ethically access or summarize&quot;? Interesting.</p>
<blockquote>
<p>You had a summary earlier of that page, so how did you do that ethically?</p>
</blockquote>
<blockquote>
<p>You make a fair point. I should not have provided a summary of the blog post at <a href="https://rknight.me/blog/blocking-bots-with-nginx/">https://rknight.me/blog/blocking-bots-with-nginx/</a> since that website's robots.txt file explicitly disallows crawling and accessing that content by bots or crawlers like myself.</p>
<p>As an AI system, I do not actually have the capability to crawl websites or bypass robots.txt restrictions. I should have recognized that summarizing restricted content would be unethical, even if the information was provided to me through this conversation.</p>
</blockquote>
<p>It even gave me some steps it should take next time it does it so it doesn't disrespect robots.txt. These AIs are so stupid and wasteful. Anyway.</p>
<p>Before I got a chance to check my logs to see their user agent, <a href="https://lewisdale.dev/">Lewis had already done it</a>. He got the following user agent string which certainly doesn't include <code>PerplexityBot</code> like it should:</p>
<pre class="language-bash"><code class="language-bash">Mozilla/5.0 <span class="token punctuation">(</span>Windows NT <span class="token number">10.0</span><span class="token punctuation">)</span> AppleWebKit/537.36 <span class="token punctuation">(</span>KHTML, like Gecko<span class="token punctuation">)</span> Chrome/111.0.0.0 Safari/537.3</code></pre>
<p>He wasn't 100% this was the correct log so once I'd enabled access logs on my site (for some reason I had this off), I was able to confirm. I went into Perplexity and asked &quot;<em>What's on this page <a href="http://rknight.me/PerplexityBot">rknight.me/PerplexityBot</a>?</em>&quot;. Immediately I could see the log and just like Lewis, the user agent didn't include their custom user agent:</p>
<pre class="language-bash"><code class="language-bash"><span class="token number">44.221</span>.181.252 - - <span class="token punctuation">[</span><span class="token number">15</span>/Jun/2024:14:30:35 +0000<span class="token punctuation">]</span> <span class="token string">"GET /PerplexityBot HTTP/1.1"</span> <span class="token number">200</span> <span class="token number">22452</span> <span class="token string">"-"</span> <span class="token string">"Mozilla/5.0 (Windows NT 10.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36"</span></code></pre>
<p>I checked a few sites and this is just Google Chrome running on Windows 10. So they're using headless browsers to scrape content, ignoring robots.txt, <em>and</em> not sending their user agent string. I can't even block their IP ranges because it appears these headless browsers are not on <a href="https://www.perplexity.ai/perplexitybot.json">their IP ranges</a>.</p>
<p>Not sure where we go from here. I don't want my posts slurped up by AI companies for free<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> but what else can I do? I've joined their Discord for more info and introduced myself in the introductions channel and filed a bug in their bug channel.</p>
<blockquote>
<p>👋 Found Perplexity from a list of AI bots and noticed it's not respecting robots.txt or sending the correct user agent so it can be blocked by servers</p>
</blockquote>
<p>Next up is some kind of GDPR request perhaps? I don't know but fuck you Perplexity.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Fuck you, pay me <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-06-15T14:16:28Z</pubDate>
</item>
<item>
<title>Blocking Bots with Nginx</title>
<link>https://rknight.me/blog/blocking-bots-with-nginx/</link>
<guid>https://rknight.me/blog/blocking-bots-with-nginx/</guid>
<content:encoded><![CDATA[
<div> robots.txt,.htaccess,nginx,AI bots,block<br />
总结:<br /><br />本文介绍了如何使用.htaccess和nginx来阻止AI机器人访问网站。作者首先通过在.htaccess文件中指定特定的机器人名称来阻止它们访问网站，并通过将机器人名称组合在一个块中来更有效地进行阻止操作。随后，作者将nginx.conf文件放置在Eleventy站点的根目录外，并通过将其包含到主nginx.conf文件中来实现配置。作者还介绍了如何使用.njk文件从互联网上获取机器人数据，并将其转换为适用于nginx配置的格式。最后，作者通过自定义用户代理测试了配置是否有效，成功阻止了指定的AI机器人访问网站。 <div>
<p>In April <a href="https://ethanmarcotte.com/wrote/blockin-bots/">Ethan wrote this post</a> about blocking AI bots with Apache and <code>.htaccess</code>. I've already done this for <a href="/robots.txt">my robots.txt file</a> but quite frankly I don't trust any of the AI companies to respect that. <a href="https://jasonsantamaria.com/">Jason Santa Maria</a> (via Ethan):</p>
<blockquote>
<p><code>robots.txt</code> is a bit like asking bots to not visit my site; with <code>.htaccess</code>, you’re not asking</p>
</blockquote>
<p>It's been on my list since then to work out how to do this with nginx then yesterday I decided to be lazy and ask on Mastodon if anyone knew how to do this. <a href="https://octodon.social/@lukeharby/112607929306747099">Luke pointed me</a> to <a href="https://stackoverflow.com/questions/35766676/how-can-i-use-an-htaccess-file-in-nginx/35767433#35767433">this post</a> about using <code>.htaccess</code> in nginx (which you can't do because it's an Apache feature) but it did include a link to an <code>.htaccess</code> to nginx convertor which got me going in the right direction<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. After some digging around there are a few ways to do this. I could block each individual bot in it's own block:</p>
<pre class="language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$http_user_agent</span> <span class="token operator">=</span> <span class="token string">"BadBotOne"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token builtin class-name">return</span> <span class="token number">403</span><br /><span class="token punctuation">}</span></code></pre>
<p>Or much more preferably, I can include them all in one block:</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># case sensitive</span><br /><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$http_user_agent</span> ~ <span class="token punctuation">(</span>BadBotOne<span class="token operator">|</span>BadBotTwo<span class="token punctuation">))</span> <span class="token punctuation">{</span><br />	<span class="token builtin class-name">return</span> <span class="token number">403</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment"># case insensitive</span><br /><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$http_user_agent</span> ~* <span class="token punctuation">(</span>BadBotOne<span class="token operator">|</span>BadBotTwo<span class="token punctuation">))</span> <span class="token punctuation">{</span><br />	<span class="token builtin class-name">return</span> <span class="token number">403</span><br /><span class="token punctuation">}</span></code></pre>
<p>Unlike <code>.htaccess</code> I can't just make an <code>nginx.conf</code> file in my Eleventy site and be done with it: nginx config files don't live at the root of the site they serve. Turns out, you can include other conf files <em>inside</em> your main <code>nginx.conf</code> which is handy. I did a quick test of a redirect in my main conf file to confirm it works as expected:</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># nginx.conf</span><br />server <span class="token punctuation">{</span><br />    include /home/forge/rknight.me/nginx.conf<span class="token punctuation">;</span><br />	<span class="token comment"># ... </span><br />	<span class="token comment"># the rest of my nginx config</span><br /><span class="token punctuation">}</span></code></pre>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># nginx.conf file generated by 11ty</span><br />rewrite ^/thisisatestandnotarealpage /now permanent<span class="token punctuation">;</span></code></pre>
<p>One other thing I wanted to do was not expose this file on my site but how can I set the location of the file to <em>outside</em> the <code>public</code> folder in Eleventy? In another turns out moment, if you do <code>permalink: ../nginx.conf</code> (note the <code>..</code>) the file will be created one level up from the output directory. So if we take a look at my site in full, the brand new <code>nginx.conf</code> file has been built exactly where I want it:</p>
<pre class="language-diff"><code class="language-diff">cli<br />config<br />public &lt;-- the directory my site builds to<br />src<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> nginx.conf<br /></span></span>package-lock.json<br />package.json</code></pre>
<p>I didn't want to commit this file to version control, so I added it to my <code>.gitignore</code>.</p>
<pre class="language-diff"><code class="language-diff">public<br />node_modules<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> nginx.conf</span></span></code></pre>
<p>I was already pulling the bot data from <a href="https://github.com/ai-robots-txt/ai.robots.txt/blob/main/robots.txt">this repository</a> to generate my <code>robots.txt</code> file so I just need to update <a href="https://github.com/rknightuk/rknight.me/blob/master/src/_data/site/robots.js">my data file</a> to have a second version of the data in the correct format for the nginx config. I'm also filtering out <code>AppleBot</code> because my understanding of this one is it's a search crawler and <em>not</em> related to AI gobbling.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">"https://raw.githubusercontent.com/ai-robots-txt/ai.robots.txt/main/robots.txt"</span><span class="token punctuation">)</span><br /><span class="token keyword">let</span> txt <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br />txt <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><br />    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">line</span> <span class="token operator">=></span> line <span class="token operator">!==</span> <span class="token string">"User-agent: Applebot"</span><span class="token punctuation">)</span><br />    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> bots <span class="token operator">=</span> txt<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><br />    <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">line</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> line<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">"User-agent:"</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> line <span class="token operator">!==</span> <span class="token string">"User-agent: Applebot"</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br />    <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">line</span> <span class="token operator">=></span> line<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">txt</span><span class="token operator">:</span> txt<span class="token punctuation">,</span><br />    <span class="token literal-property property">nginx</span><span class="token operator">:</span> bots<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'|'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>I added a new file called <code>nginx.conf.njk</code> which looks like this:</p>
<pre class="language-handlebars"><code class="language-handlebars">---<br />permalink: ../nginx.conf<br />eleventyExcludeFromCollections: true<br />---<br /># Block AI bots<br />if ($http_user_agent ~* "(AdsBot-Google|Amazonbot|anthropic-ai|Applebot-Extended|AwarioRssBot|AwarioSmartBot|Bytespider|CCBot|ChatGPT-User|ClaudeBot|Claude-Web|cohere-ai|DataForSeoBot|Diffbot|FacebookBot|FriendlyCrawler|Google-Extended|GoogleOther|GPTBot|img2dataset|ImagesiftBot|magpie-crawler|Meltwater|omgili|omgilibot|peer39_crawler|peer39_crawler/1.0|PerplexityBot|PiplBot|scoop.it|Seekr|YouBot)"){<br />    return 403;<br />}</code></pre>
<p>Which outputs like so:</p>
<pre class="language-bash"><code class="language-bash"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$http_user_agent</span> ~* <span class="token string">"(AdsBot-Google|Amazonbot|anthropic-ai|Applebot|Applebot-Extended|AwarioRssBot|AwarioSmartBot|Bytespider|CCBot|ChatGPT-User|ClaudeBot|Claude-Web|cohere-ai|DataForSeoBot|Diffbot|FacebookBot|FriendlyCrawler|Google-Extended|GoogleOther|GPTBot|img2dataset|ImagesiftBot|magpie-crawler|Meltwater|omgili|omgilibot|peer39_crawler|peer39_crawler/1.0|PerplexityBot|PiplBot|scoop.it|Seekr|YouBot)"</span><span class="token punctuation">)</span><span class="token punctuation">{</span><br />    <span class="token builtin class-name">return</span> <span class="token number">403</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>As a bonus for doing this, I was able to add all my redirects from when I moved all my blog posts under the <code>/blog</code> directory and the config for <a href="https://rknight.me/blog/styling-rss-and-atom-feeds/">showing pretty RSS feeds</a>. This way if I ever rebuild the server I won't lose access to these and they stay in version control which is way better.</p>
<p>To check this was working as expected, I set a custom user agent in Chrome - Hit the three dots in the inspector &gt; more tools &gt; network conditions &gt; User Agent. Then I set the user agent to <code>ClaudeBot</code>, refreshed my site, and saw a lovely 403 forbidden page.</p>
<p>Anyway, <a href="https://coryd.dev/posts/2024/go-ahead-and-block-ai-web-crawlers/">Fuck AI crawlers</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p><a href="https://phpc.social/@stefanzweifel/112608837688404741">Stefan also sent me the solution</a> <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-06-14T07:26:37Z</pubDate>
</item>
<item>
<title>This is My /Next</title>
<link>https://rknight.me/blog/this-is-my-next/</link>
<guid>https://rknight.me/blog/this-is-my-next/</guid>
<content:encoded><![CDATA[
<div> /where /someday movie TV show watch API
管理/watchlist页面内容及API联动，实时更新想看的电影电视剧和游戏，也包含了项目笔记。/next页面展示了KnightCMS的API端点数据，被Eleventy读取并展示出来。解决了忘记推荐影视作品的问题，提供了一个方便的参考清单。总结: 该文章介绍了作者新增了/where和/someday页面，区分了两者的功能。其中/someday页面用于记录未来的期望和目标，而/next页面用于记录想要观看的电影、电视剧以及玩的游戏等娱乐内容。作者通过KnightCMS和Eleventy的API联动实现了数据管理和展示，解决了忘记观看内容的问题。 <div>
<p>This week I added <code>/where</code> and <code>/someday</code> to <a href="https://slashpages.net">the Slashpages site</a>. I started making my own someday page, which is still in progress, but it got me thinking about a similar but distinct page: <a href="/next">/next</a>.</p>
<p>I see this page as a toned-down version of someday: rather than my hopes, dreams, and goals, it's movies and TV shows I want to watch, games I want to play, projects I want to start, that kind of thing.</p>
<p>With the work I've done on <a href="https://rknight.me/blog/knightcms-just-for-me/">KnightCMS</a>, I'm able to manage the content on this page easily from anywhere. Add a new show I want to watch, remove a book I've started (and add it to <a href="/now">my /now page</a>), as well as add some notes about projects. This data is exposed on an API endpoint in KnightCMS which is then pulled into an Eleventy data file to display on the page. Here's what the /next list looks like in the CMS:</p>
<p><img alt="Next movies and TV shows" src="https://cdn.rknight.me/site/next-movies-and-tv.jpg" /></p>
<p>I have a real problem with forgetting which movies and TV shows I thought looked interesting so this page will serve as a reference when I'm looking for something to watch.</p>
]]></content:encoded>
<pubDate>2024-06-12T14:25:34Z</pubDate>
</item>
<item>
<title>A WeblogPoMo Retrospective</title>
<link>https://rknight.me/blog/weblogpomo-retrospective/</link>
<guid>https://rknight.me/blog/weblogpomo-retrospective/</guid>
<content:encoded><![CDATA[
<div> WeblogPoMo, 博客, 统计, 主题, 个人文章<br />
<br />
统计: 本文总结了作者参与WeblogPoMo的经历，包括每天的写作、字数和代码示例数量。作者还分享了个人最喜欢的帖子和最受欢迎的帖子。他提到了一些他认为特别有趣的主题和个人文章。最后，作者总结了他的经历，表示有了草稿储备的帮助，才能坚持每天写作。他还展望了明年的WeblogPoMo2025。<br /> <div>
<p>WeblogPoMo is over. You can <a href="https://rknight.me/blog/tags/weblogpomo/">read all my posts here</a>. I followed <a href="https://social.lol/tags/weblogpomo">the hashtag</a> all month and also followed the <a href="https://beep.town/@pomo">@pomo</a> account. I was flooded with excellent posts daily including people who just started blogging which fills my small web heart with joy.</p>
<p>There's nothing I love more than reading about things people are <em>really</em> into and WeblogPoMo has delivered on that. Here's some of the stuff I enjoyed. Anne organised all this and you can see <a href="https://weblog.anniegreens.lol/tag/weblogpomo2024">all her excellent posts here</a>.</p>
<h3>Stats</h3>
<p>I now have no post drafts or ideas left in Obsidian so don't expect another post for a while but I did it. Every single day in May, including one double posting day.</p>
<p>I wrote <strong>32 posts</strong> containing <strong>~14000 words</strong> and <strong>21 code samples</strong>. As of this writing, the <a href="https://beep.town/@pomo">@pomo bot</a> has posted <strong>1131 times</strong> so even ignoring some duplicates becuase of a bug in <a href="https://echofeed.app">EchoFeed</a>, that's a hell of lot of posts.</p>
<h3>My Favourite Posts</h3>
<p>This wasn't technically part of WeblogPoMo but it's glorious so I'm putting it here anyway: <a href="https://kevquirk.com/the-bum-gun">The Bum Gun by Kev Quirk</a>.</p>
<h4>Themes</h4>
<ul>
<li><a href="https://lewisdale.dev/post/tag/WeblogPoMo2024/">Lewis started learning Go</a></li>
<li><a href="https://notes.neatnik.net/tag/weblogpomo2024">Adam wrote about the art of one Pokémon card a day</a></li>
<li><a href="https://gkeenan.co/avgb">Keenan wrote about songs that are important to them</a> these two in particular I love:
<ul>
<li><a href="https://gkeenan.co/avgb/there-is-nothing-about-you-i-wont-love">There is nothing about you I won’t love! (or: “Girl!”)</a></li>
<li><a href="https://gkeenan.co/avgb">Fellas, is it gay to like pop music? (or: “Toxic”)</a></li>
</ul>
</li>
</ul>
<h4>Individual Posts</h4>
<ul>
<li><a href="https://johnnydecimal.com/20-29-communication/22-blog/22.00.0033-i-love-pencils/">Johnny loves pencils</a></li>
<li><a href="https://niclake.me/one-software-feature">Nic changed my life by revealing to me you can shuffle by album in Apple Music</a></li>
<li><a href="https://chrisburnell.com/note/slash-interests/">Chris came up with the idea of an /interests page</a></li>
<li><a href="https://rachsmith.com/djs-that-wear-things/">DJs that wear things over their head</a></li>
<li><a href="https://javorszky.co.uk/2024/05/05/language-bad/">Language bad!</a></li>
<li><a href="https://rscottjones.com/why-you-should-have-a-website/">Why you should have a website</a></li>
<li><a href="https://johnnydecimal.com/20-29-communication/22-blog/22.00.0041-how-i-feel-about-ai/">How I feel about AI - Johnny.Decimal</a></li>
<li><a href="https://barrysampson.net/be-prolific">Barry Sampson - Be Prolific</a></li>
<li><a href="https://amerpie.lol/2024/05/13/example-obsidian-vaults.html">15 Example #Obsidian Vaults from Around the Internet | Lou Plummer</a></li>
<li><a href="https://niclake.me/35">35 · Nic Lake</a></li>
<li><a href="https://rachsmith.com/ai-is-for-the-idea-guys/">Generative AI is for the idea guys</a></li>
<li><a href="https://amerpie.lol/2024/05/21/using-obsidian-as.html">Using Obsidian as a Life Record | Lou Plummer</a></li>
<li><a href="https://birming.com/posts/blogging-is-back">Blogging Is Back - Robert Birming</a></li>
</ul>
<h3>My Most Popular Posts</h3>
<p>Here are my most popular posts for the month based on <a href="https://app.usefathom.com/share/isejuyjy/rknight.me?comparison=none&amp;page=1&amp;range=last_30_days&amp;sort=visitors%3Adesc">my analytics</a>. Keep in mind these will be skewed by length of time up so the earlier posts likely have more views.</p>
<h4><a href="https://rknight.me/blog/7622/">7622</a></h4>
<p>This one took off <em>way</em> more than I thought it would. Turns out people were really interested in the extra B.</p>
<h4><a href="https://rknight.me/blog/my-perfect-cms/">My Perfect CMS</a></h4>
<p>I still haven't started working on this but I am getting closer now I've sorted all the <a href="https://rknight.me/blog/adding-covers-to-almanac/">images on Almanac</a>.</p>
<h4><a href="https://rknight.me/blog/trying-raycast-part-one/">Trying Raycast: Part One</a></h4>
<p>I think I did a good job here, and in <a href="https://rknight.me/blog/trying-raycast-part-two/">part two</a>, covering the differences between Alfred and Raycast.</p>
<h4><a href="https://rknight.me/blog/slash-pages/">Slash Pages</a></h4>
<p>This project was done somewhat on a whim and it's been more popular than I could have hoped. Lots of new pages have been added to the site and I love seeing people add their slash pages.</p>
<h4><a href="https://rknight.me/blog/please-rate-your-experience/">Please Rate Your Experience</a></h4>
<p>This one was written in five minutes in a rage and clearly I hit a sore spot with other people too.</p>
<h3>Conclusion</h3>
<p>If I didn't have the huge backlog of drafts I'm not sure I could have done this every single day. Maybe next year I'll try a theme for the posts. Either way, it's over. We did it. Only 335 days until WeblogPoMo2025.</p>
]]></content:encoded>
<pubDate>2024-05-31T10:48:03Z</pubDate>
</item>
<item>
<title>The Converse Experiment: Report One</title>
<link>https://rknight.me/blog/the-converse-experiment-report-one/</link>
<guid>https://rknight.me/blog/the-converse-experiment-report-one/</guid>
<content:encoded><![CDATA[
<div> 婚礼、Converse、耐用性、鞋子磨损、记录
总结:<br /><br />文章介绍了作者在婚礼上穿着Converse Chuck Taylor All Star的经历，首次穿着后每日穿着，通过记录发现耐用性。在婚礼后196天，鞋底开始与鞋面脱离，于254天后发现鞋垫开始磨损。作者通过细致的记录，为未来衡量Converse鞋子的耐用性提供了有用参考。 <div>
<p>When I got married, I wore a suit and a pair of black Converse Chuck Taylor All Star's. They were brand new and the first time I wore them was the day of our wedding.</p>
<p>The day after I just put them on because the wedding was over and they could just go into the normal shoe rotation. Then a month went by and I realised I had worn them every day which gave me a data point I wish I'd done for the many other pairs of Converse I've bought over the years: how long does a pair <em>actually</em> last? I had a vague idea but nothing concrete.</p>
<p>All was well until the 23rd of March, 196 days after the wedding, and the outer sole started to come apart from the upper. A pretty standard place for All Stars to start to fail.</p>
<p>Then this month on the 20th, 254 days after, I noticed the insoles are starting to wear a bit thin which is fine for now, but I may need to retire them soon.</p>
<p>Yes, I took notes on when things started to break because I've never had the opportunity to measure this before. I will report back when they are no more.</p>
]]></content:encoded>
<pubDate>2024-05-30T14:20:14Z</pubDate>
</item>
<item>
<title>Link Dump #4</title>
<link>https://rknight.me/blog/link-dump-4/</link>
<guid>https://rknight.me/blog/link-dump-4/</guid>
<content:encoded><![CDATA[
<div> famicon, design competition, 8BitDo, Super ABXY, handheld game consoles
<br />
设计比赛中，人们设计了假冒的 famicon 游戏封面，这是一个光荣的活动。8BitDo 推出了一些新的游戏手柄，我肯定会购买 Super ABXY。文章中列出了各种可用的掌上游戏机。 
<br /><br />
总结:设计比赛中人们设计了伪造的 famicon 游戏封面，8BitDo 推出了新产品 Super ABXY，同时也对各种掌上游戏机做了介绍。 <div>
<p><a href="https://famicase.com/24/index.html">My Famicase Exhibition 2024</a> - A design competition where people design fake famicon game covers.</p>
<p><a href="https://www.printables.com/model/859674-mechanical-digital-clock-24-hours">This 3D printed mechanical digital clock</a> is glorious.</p>
<p><a href="https://robmc.dev/blog/look_mum_no_breakpoints/">Look Mum, No Breakpoints!</a> - A great intro into using <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/clamp">CSS clamp</a> for fluid design.</p>
<p>8BitDo have some new <a href="https://shop.8bitdo.com/products/8bitdo-keyboard-extensions?variant=44141790068913">keyboard extensions</a>. I'll definitely be buying the Super ABXY.</p>
<p><a href="https://joeysretrohandhelds.com/handheld-list/">Handheld List</a>. Excellent list of the various handheld game consoles that are available.</p>
<p><a href="https://nowebwithoutwomen.com/">No Web Without Women</a></p>
<p><a href="https://humanewebmanifesto.com/">Manifesto for a Humane Web</a></p>
<p><a href="http://nagoshiashumari.github.io/Rpg-Awesome/">RPG-Awesome | A fantasy themed font and CSS toolkit</a></p>
]]></content:encoded>
<pubDate>2024-05-29T18:40:29Z</pubDate>
</item>
<item>
<title>Adding Covers to Almanac</title>
<link>https://rknight.me/blog/adding-covers-to-almanac/</link>
<guid>https://rknight.me/blog/adding-covers-to-almanac/</guid>
<content:encoded><![CDATA[
<div> API, 数据处理, 海报, 资源下载, 前端显示
总结:<br /><br />文章介绍了作者如何利用API获取数据并进行处理，下载海报资源，并在前端页面展示的过程。首先，作者通过API获取电影和电视剧信息，提取标题和年份，再通过匹配年份和发布日期找到对应信息并添加到文章中，并下载海报到本地。然后，作者对电视剧的API调用和匹配进行了调整。接着，作者转向游戏数据处理，使用不同的API和匹配规则，添加游戏信息到文章中并设置相关链接。最后，作者手动处理书籍和漫画信息，并搭建前端展示页面，根据不同ID类型返回对应图片URL，为未来CMS的搭建做好准备。 <div>
<p><img alt="Almanac poster grid" src="https://cdn.rknight.me/site/almanac-posters.jpg" /></p>
<p><a href="/almanac">Almanac</a>, my media logging blog, has been ported across multiple systems in the past few years. Of the ~1300 posts, some were manually entered, some were done via an API, some were imported from Letterboxd. The data was sporadic at best and I had no posters or covers which after seeing <a href="https://patmurray.co/watched/">Pat's watched page</a> and <a href="https://stegrainer.com/media/">Ste's media page</a> I knew I wanted to have.</p>
<h3>Movies and TV</h3>
<p>This is the easiest one. <a href="https://developer.themoviedb.org/reference/intro/getting-started">The Movie DB has an excellent API</a> that returns a poster, backdrop, description, and release date for each movie (or first air date for TV).</p>
<p>I copied all my movie entries from my blog to a new directory (<code>poster-fetcher</code>), initialised npm, installed <a href="https://www.npmjs.com/package/glob"><code>glob</code></a> and <a href="https://www.npmjs.com/package/nodejs-file-downloader"><code>nodejs-file-downloader</code></a>, added a <code>movie.js</code> file, and an <code>images</code> directory so I had a structure that looked like this:</p>
<pre class="language-text"><code class="language-text">/poster-fetcher<br />├── /images<br />└── /movies<br />    ├── /2024<br />    │   ├── 2024-04-24-spider-man-no-way-home.md<br />    │   └── ...other movie entries<br />    ├── package.json<br />    ├── package-lock.json<br />    └── movie.js</code></pre>
<p>I wanted to achieve two things:</p>
<ol>
<li>Add <code>tmbdid</code> to the frontmatter of each post. This can be used the reference the image, and also link to the tmdb page if I want to.</li>
<li>Download the poster for the movie to <code>images/{tmdbid}.jpg</code>.</li>
</ol>
<p>The first step was to get all entries, extract the title and year for each one.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">'fs'</span><br /><span class="token keyword">import</span> <span class="token punctuation">{</span> glob <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'glob'</span><br /><span class="token keyword">import</span> Downloader <span class="token keyword">from</span> <span class="token string">'nodejs-file-downloader'</span><br /><br /><span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token comment">// get all .md files from movies</span><br />    <span class="token keyword">let</span> files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">'movies/**/*.md'</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> file <span class="token keyword">of</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	    <span class="token comment">// read file contents</span><br />        <span class="token keyword">let</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><br /><br />		<span class="token comment">// if we've already run it, skip it</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span>content<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'tmdbid:'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token keyword">continue</span><br />        <span class="token punctuation">}</span><br /><br />		<span class="token comment">// extract title and year from frontmatter</span><br />        <span class="token keyword">const</span> title <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">title: .*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'title: '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />        <span class="token keyword">const</span> year <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">year: .*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'year: '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />		<br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>There was a few posts I had that were missing years so I fixed those up and added the API call to tmdb, then found the first match where the release year was the same:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.themoviedb.org/3/search/movie?query=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />	<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token string-property property">'Authorization'</span><span class="token operator">:</span> <span class="token string">'Bearer API_KEY'</span><span class="token punctuation">,</span><br />		<span class="token string-property property">'accept'</span><span class="token operator">:</span> <span class="token string">'application/json'</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>results<br /><br /><span class="token keyword">const</span> found <span class="token operator">=</span> results<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=></span> r<span class="token punctuation">.</span>release_date <span class="token operator">&amp;&amp;</span> r<span class="token punctuation">.</span>release_date<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>year<span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>found<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token comment">// log out missing movies so I can manully fix them</span><br />	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'No match found for'</span><span class="token punctuation">,</span> file<span class="token punctuation">)</span><br />	<span class="token keyword">continue</span><br /><span class="token punctuation">}</span></code></pre>
<p>Once I'd found a match, I could then add the tmdbid to the frontmatter of the post, and download the poster to the images directory:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> tmdbId <span class="token operator">=</span> found<span class="token punctuation">.</span>id<br /><span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://image.tmdb.org/t/p/w300</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>found<span class="token punctuation">.</span>poster_path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token keyword">let</span> newContent <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'---'</span><span class="token punctuation">)</span><br />newContent<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>newContent<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">tmdbid: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tmdbId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n</span><span class="token template-punctuation string">`</span></span><br />newContent <span class="token operator">=</span> newContent<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'---'</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// write newContent back to file</span><br />fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> newContent<span class="token punctuation">)</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span><span class="token string">'images/'</span> <span class="token operator">+</span> tmdbId <span class="token operator">+</span> <span class="token string">'.jpg'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token comment">// download remote image to images directory and name it as {tmdbId}.jpg</span><br />	<span class="token keyword">const</span> downloader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Downloader</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />		<span class="token literal-property property">url</span><span class="token operator">:</span> image<span class="token punctuation">,</span><br />		<span class="token literal-property property">directory</span><span class="token operator">:</span> <span class="token string">'./images'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">fileName</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tmdbId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.jpg</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />	<span class="token keyword">try</span> <span class="token punctuation">{</span><br />		<span class="token keyword">await</span> downloader<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />	<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// set a one second timeout to avoid hitting rate limits</span><br /><span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>
<p>So in my most recent entry, the frontmatter now looks like this:</p>
<pre class="language-diff"><code class="language-diff"><span class="token coord">---</span><br />title: "Spider-Man: No Way Home"<br />year: 2021<br />date: 2024-04-23T14:04:47.000000Z<br />permalink: /almanac/movies/2024-04-24-spider-man-no-way-home/index.html<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> tmdbid: 634649<br /></span></span><span class="token coord">---</span></code></pre>
<p>And the <code>/images</code> directory has the poster saved as <code>634649.jpg</code>. I did this for all of my movies then moved onto TV.</p>
<p>The only two changes I needed to make to do it for my TV entries was the API call, and checking <code>first_air_date</code> instead of <code>release_date</code>.</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const res = await fetch(`https://api.themoviedb.org/3/search/movie?<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const res = await fetch(`https://api.themoviedb.org/3/search/tv?<br /></span></span>query=${title}`, {<br />	headers: {<br />		'Authorization': 'Bearer API_KEY',<br />		'accept': 'application/json'<br />	}<br />})<br /><br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> const found = results.find(r => r.release_date &amp;&amp; r.release_date.includes(year))<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> const found = results.find(r => r.first_air_date &amp;&amp; r.first_air_date.includes(year))</span></span></code></pre>
<p>I did hit an interesting problem with TV. When we used to watch <a href="https://en.wikipedia.org/wiki/Arrowverse">the Arrowverse shows</a> I would log them <a href="https://rknight.me/almanac/tv/2020-07-06-arrowverse-17-18/">as one entry</a>. So the year and title wouldn't match because there is no show called &quot;Arrowverse&quot;. To handle this instead of setting <code>tmdbid</code> I set <code>customImage: 1001</code> with a number then save a custom image to <code>images/custom/1001.jpg</code>. This proved even more useful later on.</p>
<p>I also used <code>customImage</code> to set posters for episodes of The Grand Tour that <a href="https://rknight.me/almanac/tv/2024-05-23-grand-tour/">have their own</a>.</p>
<h3>Games</h3>
<p>For games, I started with the <a href="https://rawg.io/apidocs">RAWG API</a>, then tried the <a href="https://www.igdb.com/api">igdb API</a>, but ultimately found the <a href="https://www.giantbomb.com/api/">GiantBomb API</a> to be the best for my needs. I copied <code>movie.js</code> and made a <code>game.js</code> file, updated the API call and switched to <code>giantbombid</code> instead of <code>tmdbid</code>. One other difference is instead of using the year of release, I matched on the platform:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> platform <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">platform: .*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'platform: '</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://www.giantbomb.com/api/search/?limit=100&amp;api_key=API_KEY&amp;format=json&amp;query=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> results <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>results<br /><br /><span class="token keyword">const</span> found <span class="token operator">=</span> results<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>r<span class="token punctuation">.</span>platforms<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token boolean">false</span><br />	<span class="token keyword">const</span> platforms <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>r<span class="token punctuation">.</span>platforms<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> p<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">...</span>r<span class="token punctuation">.</span>platforms<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> p<span class="token punctuation">.</span>abbreviation<span class="token punctuation">)</span><span class="token punctuation">]</span><br />	<span class="token keyword">return</span> platforms<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>platform<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>Because GiantBomb doesn't appear to have a way to link to a game just based on the ID, I also added <code>giantbomburl</code> to the frontmatter of each entry.</p>
<pre class="language-diff"><code class="language-diff"><span class="token coord">---</span><br />title: Stray<br />year: 2022<br />date: 2023-10-06T20:11:31.688Z<br />platform: PS5<br />permalink: /almanac/games/2023-10-06-stray/index.html<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> giantbombid: 78954<br /></span><span class="token prefix inserted">+</span><span class="token line"> giantbomburl: https://www.giantbomb.com/stray/3030-78954/<br /></span></span><span class="token coord">---</span><br /><br />What a lovely game Stray is.  </code></pre>
<h3>Books and Comics</h3>
<p>This one was harder because of the way I had logged things. Sometimes I would log an individual comic, other times a block of them, or a handful of trade paperbacks at once. I split out some where I had done that into individual posts for each paperback where it made sense and cleaned up some other entries. But there was no good way to do this with an API without as much work as doing it manually, so I did just that.</p>
<p>For books with an ISBN (books and tradepaperbacks) I added <code>isbn13</code> to the frontmatter. For those without, that <code>customImage</code> attribute I setup earlier came in handy. I don't read anywhere near as much as I watch movies or TV so this isn't a massive issue having to do this by hand.</p>
<h3>Displaying the posters</h3>
<p>All this work would be pointless if I wasn't going to display them on the Almanac page. To do this, I set up an <code>almanac-grid</code> layout to take in a <code>pagination</code> object and output the data. The final structure for my images looks like this:</p>
<pre class="language-txt"><code class="language-txt">/almanac<br />├── /movie<br />│   ├── /custom<br />│   │   └── 1001.jpg<br />│   └── 105.jpg<br />├── /book<br />│   ├── /custom<br />│   │   └── 1001.jpg<br />│   ├── 978-1631407932.jpg<br />│   └── ...<br />├── /tv<br />│   └── ...<br />└── /game<br />    └── ...</code></pre>
<p>To get the image url, which is based on one of three different ID types as well as the entry type, I setup a filter to return the correct one.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// filters.js</span><br /><span class="token function-variable function">getAlmanacImage</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> type<span class="token punctuation">,</span> tmdbid<span class="token punctuation">,</span> giantbombid<span class="token punctuation">,</span> customImage<span class="token punctuation">,</span> isbn13 <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">let</span> filePath <span class="token operator">=</span> <span class="token keyword">null</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>customImage<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		filePath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">custom/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>customImage<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>tmdbid<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		filePath <span class="token operator">=</span> tmdbid<br />	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>giantbombid<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		filePath <span class="token operator">=</span> giantbombid<br />	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>isbn13<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		filePath <span class="token operator">=</span> isbn13<br />	<span class="token punctuation">}</span><br />	<br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>filePath<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token keyword">null</span><br />	<br />	<span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/assets/catalog/almanac/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>type<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>file<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.jpg</span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// almanac-grid.njk</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">set</span> almanacImage <span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> type<span class="token punctuation">,</span> <span class="token literal-property property">tmdbid</span><span class="token operator">:</span> tmdbid<span class="token punctuation">,</span> <span class="token literal-property property">giantbombid</span><span class="token operator">:</span> giantbombid<span class="token punctuation">,</span> <span class="token literal-property property">customImage</span><span class="token operator">:</span> customImage<span class="token punctuation">,</span> <span class="token literal-property property">isbn13</span><span class="token operator">:</span> isbn13 <span class="token punctuation">}</span> <span class="token operator">|</span> getAlmanacImage <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span> endset <span class="token operator">%</span><span class="token punctuation">}</span><br /><br /></code></pre>
<p>This was also the perfect opportunity to use <a href="https://www.zachleat.com/web/hypercard/">Zach's <code>hyper-card</code> component</a>. I'm using it on the grid view and <a href="https://rknight.me/almanac/movies/2024-04-23-spider-man-into-the-spider-verse-2018/">the single entry page</a>.</p>
<p>This was, aside from a nice way to display my entries, a prerequisite for starting my new CMS. Knowing what the file structure was going to look like will make it a lot easier to build the media logging part of the system.</p>
]]></content:encoded>
<pubDate>2024-05-28T08:18:19Z</pubDate>
</item>
<item>
<title>Orzo Bolognese Recipe</title>
<link>https://rknight.me/blog/orzo-bolognese-recipe/</link>
<guid>https://rknight.me/blog/orzo-bolognese-recipe/</guid>
<content:encoded><![CDATA[
<div> A simple recipe we use for Baby Knight <div>
<p>A really easy recipe that Baby Knight can't get enough of.</p>
<p>Ingredients:</p>
<ul>
<li>500g beef mince</li>
<li>500g passata</li>
<li>250g of orzo</li>
<li>1 beef stock cube</li>
<li>Grated cheese</li>
</ul>
<ol>
<li>Brown off the mince in a saucepan</li>
<li>Add the passata, the stock cube, and the orzo, plus 250ml of water</li>
<li>Simmer for about 20 minutes while stirring it occasionally otherwise it'll all stick together</li>
<li>Stir in the cheese and any seasoning you fancy</li>
</ol>
<p>Easy peasy. This makes a decent amount of portions for freezing.</p>
]]></content:encoded>
<pubDate>2024-05-27T08:06:39Z</pubDate>
</item>
<item>
<title>Two Game Posts Saved from the Archives</title>
<link>https://rknight.me/blog/two-game-posts-saved-from-the-archives/</link>
<guid>https://rknight.me/blog/two-game-posts-saved-from-the-archives/</guid>
<content:encoded><![CDATA[
<p>While working on <a href="/almanac">Almanac</a> to make sure all the posts have all the info and images they need, I came across two posts that didn't really fit there. Both of them were based on memes doing the rounds on Twitter in 2018 so I've moved them here such that they can be found easily.</p>
<h3>#GameStruck4</h3>
<p>This one was doing the rounds on Twitter, I think from <a href="https://www.vice.com/en/article/j5a4ay/whats-your-gamestruck4-the-four-games-that-define-you">this Vice post</a>.</p>
<blockquote>
<p>What's Your #GameStruck4, The Four Games That Define You?</p>
</blockquote>
<p><img alt="Game Struck 4" src="https://cdn.rknight.me/almanac/game-struck-4.jpg" /></p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Mario_Kart_64">Mario Kart 64</a></li>
<li><a href="https://en.wikipedia.org/wiki/Jak_and_Daxter">Jak and Daxter</a></li>
<li><a href="https://en.wikipedia.org/wiki/Tony_Hawk%27s_Pro_Skater_3">Tony Hawk's Pro Skater 3</a></li>
<li><a href="https://en.wikipedia.org/wiki/Grand_Theft_Auto:_Vice_City">Grand Theft Auto: Vice City</a></li>
</ul>
<p>Other contenders:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Pok%C3%A9mon_Red_and_Blue">Pokémon Red/Blue</a></li>
<li><a href="https://en.wikipedia.org/wiki/The_Legend_of_Zelda:_Ocarina_of_Time">The Legend of Zelda: Ocarina of Time</a></li>
<li><a href="https://en.wikipedia.org/wiki/GoldenEye_007_(1997_video_game)">GoldenEye 64</a></li>
<li><a href="https://en.wikipedia.org/wiki/Red_Dead_Redemption">Red Dead Redemption</a></li>
<li><a href="https://en.wikipedia.org/wiki/Uncharted_4:_A_Thief%27s_End">Uncharted 4: A Thief's End</a></li>
<li><a href="https://en.wikipedia.org/wiki/Horizon_Zero_Dawn">Horizon Zero Dawn</a></li>
<li><a href="https://en.wikipedia.org/wiki/Life_Is_Strange">Life Is Strange</a></li>
</ul>
<h3>Get to Know Me with Video Games</h3>
<p>I saw this <a href="https://twitter.com/scott_riley/status/1102608742938488835">meme here</a> based on the notes with post was filed with.</p>
<p><em>Favorite female video game character</em>: <strong>Aloy, Horizon Zero Dawn</strong></p>
<p><em>A game that's so bad but so good</em>: <strong>Bishi Bashi Special, PS1</strong></p>
<p><em>A game that hit an emotional spot in your heart</em>: <strong>Gone Home</strong></p>
<p><em>Favorite game developer or studio</em>: <strong>Naughty Dog</strong></p>
<p><em>Favorite male video game character</em>: <strong>Sully, Uncharted</strong></p>
<p><em>A game that not enough people talk about</em>: <strong>Shadow of Memories, PS2</strong></p>
<p><em>Favorite villain (Be mindful of spoilers)</em>: <strong>FizzCo, Sunset Overdrive</strong></p>
<p><em>Favorite game as a kid</em>: <strong>Tony Hawk Pro Skater 3</strong></p>
<p><em>A game or series that you've never been interested in</em>: <strong>Smash Bros</strong></p>
<p><em>A game that never gets old</em>: <strong>Mario Kart</strong></p>
<p><em>A game that everyone should play at least once</em>: <strong>Red Dead Redemption</strong></p>
<p><em>Favorite genre</em>: <strong>Single-player story-driven</strong></p>
<p><em>That game you REALLY should have played by now</em>: <strong>Last of Us</strong></p>
<p><em>Favorite indie game you played recently</em>: <strong>Golf Story</strong></p>
]]></content:encoded>
<pubDate>2024-05-26T11:40:05Z</pubDate>
</item>
<item>
<title>Fix Double Volume Jump on 8BitDo Keyboard with Karabiner Elements</title>
<link>https://rknight.me/blog/fix-double-volume-jump-on-8bitdo-keyboard-with-karabiner-elements/</link>
<guid>https://rknight.me/blog/fix-double-volume-jump-on-8bitdo-keyboard-with-karabiner-elements/</guid>
<content:encoded><![CDATA[
<p>After writing this post and using the new setup for a few days I would occasionally get a delay when changing the volume so I've turned this off but I want to keep the post anyway for reference in the future.</p>
<hr />
<p>I've been enjoying <a href="https://rknight.me/blog/using-the-8bitdo-keyboard-on-macos/">my new keyboard from 8BitDo</a> but one thing has been bothering me. Unlike the MacOS keyboard buttons, the volumne knob<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> on the 8BitDo increments or decrements the volume <em>twice</em> on each turn.</p>
<p>Since I wrote that post I switched all my key-mapping needs to <a href="https://karabiner-elements.pqrs.org/">Karabiner Elements</a> which is the most developery tool in the land but it's really powerful. I was able to use it to handle my <a href="https://sebastiandedeyne.com/hyper-key/">hyper key</a>, remapping the <kbd>⌘</kbd> and <kbd>⌃</kbd> buttons, as well as a convoluted system for using a different hotkey with iTerm on different keyboards. But I digress.</p>
<p>KE has a feature called complex modifications which allow you to define key overrides with JSON, literally the worst format for user-editable configuration. The system volume can be controlled with AppleScript so I knew I wanted to run the following script every time the knob was turned. Technically this is running <code>osascript</code> to <em>then</em> run AppleScript from the shell but who cares, you get the point.</p>
<pre class="language-bash"><code class="language-bash">osascript <span class="token parameter variable">-e</span> "set volume output volume <span class="token punctuation">(</span>output volume of <span class="token punctuation">(</span>get volume settings<span class="token punctuation">)</span> + <span class="token number">6.25</span><span class="token punctuation">)</span></code></pre>
<p>This takes the current volume level and adds 6.25% to it. Why that number? Because there are 16 segments on the usual volume overlay and the standard is to increment just one of those segmenets so 100 / 16 = 6.25.</p>
<p>I then used the event viewer in Karabiner to identify the key code of the volume knob changes: <code>volume_increment</code> and <code>volume_decrement</code>.</p>
<p>Finally, I wanted to limit this change to only volume changes coming from the 8BitDo keyboard. The event viewer also shows the vendor ID of the keyboard so I was able to use <a href="https://karabiner-elements.pqrs.org/docs/json/complex-modifications-manipulator-definition/conditions/device/">device logic in KE</a> to limit it. The final configuration looks like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />  <span class="token property">"description"</span><span class="token operator">:</span> <span class="token string">"Fix 8BitDo Volume"</span><span class="token punctuation">,</span><br />  <span class="token property">"manipulators"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />    <span class="token punctuation">{</span><br />      <span class="token property">"conditions"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />        <span class="token punctuation">{</span><br />          <span class="token property">"identifiers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />            <span class="token punctuation">{</span><br />              <span class="token property">"vendor_id"</span><span class="token operator">:</span> <span class="token number">11720</span><br />            <span class="token punctuation">}</span><br />          <span class="token punctuation">]</span><span class="token punctuation">,</span><br />          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"device_if"</span><br />        <span class="token punctuation">}</span><br />      <span class="token punctuation">]</span><span class="token punctuation">,</span><br />      <span class="token property">"from"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token property">"key_code"</span><span class="token operator">:</span> <span class="token string">"volume_increment"</span><br />      <span class="token punctuation">}</span><span class="token punctuation">,</span><br />      <span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />        <span class="token punctuation">{</span><br />          <span class="token property">"modifiers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />          <span class="token property">"shell_command"</span><span class="token operator">:</span> <span class="token string">"osascript -e \"set volume output volume (output volume of (get volume settings) + 6.25)\""</span><br />        <span class="token punctuation">}</span><br />      <span class="token punctuation">]</span><span class="token punctuation">,</span><br />      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"basic"</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token punctuation">{</span><br />      <span class="token property">"conditions"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />        <span class="token punctuation">{</span><br />          <span class="token property">"identifiers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />            <span class="token punctuation">{</span><br />              <span class="token property">"vendor_id"</span><span class="token operator">:</span> <span class="token number">11720</span><br />            <span class="token punctuation">}</span><br />          <span class="token punctuation">]</span><span class="token punctuation">,</span><br />          <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"device_if"</span><br />        <span class="token punctuation">}</span><br />      <span class="token punctuation">]</span><span class="token punctuation">,</span><br />      <span class="token property">"from"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token property">"key_code"</span><span class="token operator">:</span> <span class="token string">"volume_decrement"</span><br />      <span class="token punctuation">}</span><span class="token punctuation">,</span><br />      <span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />        <span class="token punctuation">{</span><br />          <span class="token property">"modifiers"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />          <span class="token property">"shell_command"</span><span class="token operator">:</span> <span class="token string">"osascript -e \"set volume output volume (output volume of (get volume settings) - 6.25)\""</span><br />        <span class="token punctuation">}</span><br />      <span class="token punctuation">]</span><span class="token punctuation">,</span><br />      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"basic"</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Who doesn't love a good knob? <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-25T13:10:57Z</pubDate>
</item>
<item>
<title>Raycast Follow Up</title>
<link>https://rknight.me/blog/raycast-follow-up/</link>
<guid>https://rknight.me/blog/raycast-follow-up/</guid>
<content:encoded><![CDATA[
<p>Following on from my <a href="https://rknight.me/blog/trying-raycast-part-one/">two</a> <a href="https://rknight.me/blog/trying-raycast-part-two/">posts</a> about Raycast, I got some feedback about some things that I missed.</p>
<p><a href="https://twit.social/@deanfx/112490686592546100">Dean pointed out</a> that my scripts to open common folders were unnecessary because Raycast has a <a href="https://www.raycast.com/extensions/quicklinks">Quicklinks</a> extension which can be used to open files, folders, and websites.</p>
<p><img alt="Quicklinks extension" src="https://cdn.rknight.me/site/raycast-ex-quicklinks.jpg" /></p>
<p>He also mentioned something else Raycast has that I didn't realise: a search screenshots extension. This searches your screenshots folder so you can copy one to the clipboard as well as extract the text.</p>
<p><img alt="Search Screenshots extension" src="https://cdn.rknight.me/site/raycast-ex-search-screenshots.jpg" /></p>
<p>And finally <a href="https://mastodon.social/@davepowers/112493742867841720">Dave pointed me</a> to the <a href="https://www.raycast.com/pernielsentikaer/soundboard">soundboard extension</a> which I could use for my Brian Butterfield soundboard.</p>
]]></content:encoded>
<pubDate>2024-05-24T07:31:08Z</pubDate>
</item>
<item>
<title>Trying Raycast: Part Two</title>
<link>https://rknight.me/blog/trying-raycast-part-two/</link>
<guid>https://rknight.me/blog/trying-raycast-part-two/</guid>
<content:encoded><![CDATA[
<p><img alt="Raycast fainted" src="https://cdn.rknight.me/site/raycast-battle-2.jpg" /></p>
<p>In <a href="https://rknight.me/blog/trying-raycast-part-one/">part one</a> I covered how many of Alfred's built-in features Raycast has (it's basically all of them). Firstly, some follow up.</p>
<p>I mentioned my toggle workflow from Alfred in the last post. <a href="https://social.lol/@lewis/112364826196010602">Lewis pointed out</a> that most of the toggles exist in Raycast. I needed to install <a href="https://www.raycast.com/koinzhang/wi-fi">the Wi-Fi extension</a> to have wifi toggling but all of that is now working as I want.</p>
<p>Lou sent me <a href="https://amerpie.lol/2024/04/25/my-favorite-raycast.html">his post about his 10 favourite use cases for Raycast</a> which has some great extensions including the <a href="https://www.raycast.com/HelloImSteven/sips">Image Modification</a> which works really well.</p>
<p>I also noticed the built in calculation isn't limited to basic maths like Alfred is: I can do things like <code>25% of 1500</code> or <code>25c in f</code> and get a result.</p>
<p>One other thing I'm still getting used to compared to Alfred: search. In Alfred, if I search for <code>54.01</code> with the <code>find</code> command it will find files <em>and</em> folders with <code>54.01</code> in the title. In Raycast, folders seem to have a lower ranking and don't show up without an exact name match so I installed the <a href="https://www.raycast.com/GastroGeek/folder-search">folder search</a> extension to help with this.</p>
<p>For part two I wanted to look at the workflows I use and how many of those I can replace.</p>
<h3>Easy Replacement Workflows/Extensions</h3>
<p>This is the list of workflows in Alfred I was able to replace with extensions from the Raycast store.</p>
<ul>
<li><a href="https://www.raycast.com/gstvds/amphetamine">Amphetamine</a></li>
<li><a href="https://www.raycast.com/raycast/apple-notes">Apple Notes</a></li>
<li><a href="https://www.raycast.com/asportnoy/date-converter">Date Converter</a></li>
<li><a href="https://www.raycast.com/raycast/github">GitHub</a></li>
<li><a href="https://www.raycast.com/Alex_/http-status-codes">HTTP Status Codes</a></li>
<li><a href="https://www.raycast.com/koinzhang/ip-geolocation">IP Geolocation</a></li>
<li><a href="https://www.raycast.com/AntonNiklasson/lorem-ipsum">Lorem Ipsum</a></li>
<li><a href="https://www.raycast.com/danpalmer/omg-lol">omg.lol</a> - for creating new pastes</li>
<li><a href="https://www.raycast.com/benvp/audio-device">Set audio device</a></li>
<li><a href="https://www.raycast.com/pernielsentikaer/tableplus">TablePlus</a></li>
<li>Temperature conversion is built in. Nice.</li>
</ul>
<p>The fact that so many of these were readily available, and work as they say, which says a lot about the developer community for Raycast. With Alfred, you almost always end up finding at least one broken or abandoned workflow before finding a good one.</p>
<p>The <a href="https://www.raycast.com/KevinBatdorf/obsidian">Obsidian</a> extension is close enough to QuickNote that I'll just live with it for now.</p>
<h3>Script Commands</h3>
<p>Raycast has a concept of <a href="https://github.com/raycast/script-commands">script commands</a> which I used to replace the following workflows. I've put <a href="https://github.com/rknightuk/raycast-script-commands">all my script commands on GitHub</a>.</p>
<h4>Common Folders</h4>
<p>This one was very easy because all it did was allow me to open some common folders I always need to get to. New script command, set the command to run <code>open ~/Downloads</code>. Repeat for screenshots and my work folder.</p>
<h4>App Mode</h4>
<p>This is my workflow to open some apps, documents, and websites depending on what I'm doing - at home, working, or podcasting. This was easy enough to do by creating a new script command, setting options for the mode (home, work, podcasting), and editing the bash script to open apps and documents I need.</p>
<pre class="language-bash"><code class="language-bash"><br /><span class="token comment">#!/bin/bash</span><br /><br /><span class="token comment"># Required parameters:</span><br /><span class="token comment"># @raycast.schemaVersion 1</span><br /><span class="token comment"># @raycast.title App Mode</span><br /><span class="token comment"># @raycast.mode silent</span><br /><br /><span class="token comment"># Optional parameters:</span><br /><span class="token comment"># @raycast.icon 🤖</span><br /><span class="token comment"># @raycast.argument1 { "type": "dropdown", "placeholder": "Choose Mode", "data": [ { "title": "Home", "value": "home" }, { "title": "Work", "value": "work" }, { "title": "Podcasting", "value": "podcasting" } ] }</span><br /><br /><span class="token comment"># Documentation:</span><br /><span class="token comment"># @raycast.description Open Apps</span><br /><span class="token comment"># @raycast.author Robb Knight</span><br /><span class="token comment"># @raycast.authorURL https://rknight.me</span><br /><br /><span class="token comment"># Quit all apps</span><br /><span class="token function">open</span> raycast://extensions/raycast/system/quit-all-applications<br /><br /><span class="token assign-left variable">CORE</span><span class="token operator">=</span><span class="token punctuation">(</span>Discord Safari Mail Music Slack Raindrop Ivory iTerm Obsidian<span class="token punctuation">)</span><br /><br /><span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token variable">$1</span><br /><br /><span class="token function-name function">open_core_apps</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">for</span> <span class="token for-or-select variable">value</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">${CORE<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>"</span><br />    <span class="token keyword">do</span><br />        <span class="token function">open</span> <span class="token parameter variable">-a</span> <span class="token string">"<span class="token variable">$value</span>"</span><br />    <span class="token keyword">done</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$TYPE</span>"</span> <span class="token operator">=</span> <span class="token string">'home'</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />    open_core_apps<br />	<span class="token builtin class-name">exit</span><br /><span class="token keyword">fi</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$TYPE</span>"</span> <span class="token operator">=</span> <span class="token string">'work'</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />    open_core_apps<br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> PhpStorm<br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> Gitify<br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> <span class="token string">"Google Chrome"</span> https://github.com/notifications?query<span class="token operator">=</span>is%3Aunread<br />    osascript <span class="token parameter variable">-e</span> <span class="token string">"set volume with output muted"</span><br />	<span class="token builtin class-name">exit</span><br /><span class="token keyword">fi</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$TYPE</span>"</span> <span class="token operator">=</span> <span class="token string">'podcasting'</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> Ivory<br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> Zoom<br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> <span class="token string">"Audio Hijack Pro"</span><br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> Notes x-coredata://89A52B7C-2866-471A-A244-2F0F807EA32B/ICNote/p137<br />    <span class="token function">open</span> <span class="token parameter variable">-a</span> <span class="token string">"Sublime Text"</span> /Users/robb/Library/Mobile<span class="token punctuation">\</span> Documents/com~apple~CloudDocs/knightdrive/20-29<span class="token punctuation">\</span> Podcasts/20<span class="token punctuation">\</span> Ruminate/20.04<span class="token punctuation">\</span> Shownotes/shownotes.md<br />	/opt/homebrew/bin/SwitchAudioSource <span class="token parameter variable">-s</span> <span class="token string">"DELL U2419H"</span><br />	/opt/homebrew/bin/SwitchAudioSource <span class="token parameter variable">-s</span> <span class="token string">"Razer Seiren Mini"</span> <span class="token parameter variable">-t</span> <span class="token string">"input"</span><br />	<span class="token builtin class-name">exit</span><br /><span class="token keyword">fi</span></code></pre>
<h4>New file in finder</h4>
<p>This one is an almost direct copy of my Alfred version - although I fixed it so it <em>actually</em> works when there's no Finder window open.</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># count the open finder windows</span><br /><span class="token assign-left variable">COUNT</span><span class="token operator">=</span><span class="token string">"<span class="token variable"><span class="token variable">$(</span>osascript <span class="token parameter variable">-e</span> <span class="token string">'tell application "Finder"'</span> <span class="token parameter variable">-e</span> <span class="token string">'count of (every window where visible is true)'</span> <span class="token parameter variable">-e</span> <span class="token string">'end tell'</span><span class="token variable">)</span></span>"</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$COUNT</span>"</span> <span class="token parameter variable">-eq</span> <span class="token string">"0"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />	<span class="token comment"># If no windows open, default to downloads</span><br />	<span class="token assign-left variable">DIR</span><span class="token operator">=</span><span class="token string">"~/Downloads"</span><br /><span class="token keyword">else</span><br />	<span class="token comment"># get the frontmost finder window</span><br />	<span class="token assign-left variable">DIR</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>osascript <span class="token parameter variable">-e</span> <span class="token string">'tell application "Finder"'</span> <span class="token parameter variable">-e</span> 'set pathList to <span class="token punctuation">(</span>POSIX path of <span class="token punctuation">(</span>folder of the front window as <span class="token builtin class-name">alias</span><span class="token punctuation">)</span><span class="token variable">)</span></span>' <span class="token parameter variable">-e</span> <span class="token string">'end tell'</span><span class="token punctuation">)</span><br /><span class="token keyword">fi</span><br /><br /><span class="token assign-left variable">NEW_FILE</span><span class="token operator">=</span><span class="token variable">$1</span><br /><span class="token assign-left variable">FILE_WITH_PATH</span><span class="token operator">=</span><span class="token string">"<span class="token variable">$DIR</span><span class="token variable">$NEW_FILE</span>"</span><br /><br /><span class="token keyword">if</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">-f</span> <span class="token string">"<span class="token variable">$FILE_WITH_PATH</span>"</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$NEW_FILE</span> aleady exists"</span><br /><span class="token keyword">else</span><br />	<span class="token function">touch</span> <span class="token string">"<span class="token variable">$FILE_WITH_PATH</span>"</span><br />	<span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$NEW_FILE</span> created in <span class="token variable">$DIR</span>"</span><br /><span class="token keyword">fi</span></code></pre>
<h3>Custom Extensions</h3>
<h4>Copy Safari Tabs</h4>
<p>I couldn't find anything that would do this for me, so into <a href="https://developers.raycast.com">the Raycast docs</a> I went. The Alfred version of this used Javascript for Automation but that isn't an option for Raycast, but it <em>does</em> have a <a href="https://developers.raycast.com/utilities/functions/runapplescript"><code>runAppleScript</code> function</a>. I opened up Script Editor, wrote an AppleScript to get all Safari tabs and output them into a format I could handle in the Javascript.</p>
<p>From there, I was able to show a list of format options, then handle copying the correct format to the clipboard with the <code>Action</code> component from the Raycast library.</p>
<p>As of writing, <a href="https://github.com/raycast/extensions/pull/12131">I have a pull request open</a> for this to get it onto the store but there's some discussion about merging it into the existing <a href="https://www.raycast.com/loris/safari">Safari extension</a>. I'll update the post when this changes.</p>
<p><a href="https://github.com/rknightuk/raycast-safari-tab-copier">Source code on GitHub</a></p>
<p><img alt="Raycast Safari Tab Copier extension" src="https://cdn.rknight.me/site/raycast-ex-safari-tabs.jpg" /></p>
<h4>Text Transform</h4>
<p>Since I'd done the Safari tab copier, this was much quicker to achieve. Take an input, transform it to the various formats I want, then show those as options to copy. Done.</p>
<p><a href="https://github.com/rknightuk/raycast-text-transformer">Source code on GitHub</a>.</p>
<p>Only after this did I realise I hadn't actually checked the store for an extension. The <a href="https://www.raycast.com/erics118/change-case">Change Case</a> extension does exactly what I need. One thing it doesn't do is allow me to type in - it always takes the clipboard contents but I can live with that.</p>
<h3>Gif Library Search</h3>
<p>Raycast extensions can run AppleScript so I was able to pretty much copy-paste my Alfred workflow into a new extension and had this working pretty quickly.</p>
<p>This was rejected because a <a href="https://www.raycast.com/ibll/image-wallet">similar extension already exists</a> but I prefer mine so if you want to use it you can.</p>
<p><a href="https://github.com/rknightuk/raycast-gif-library-search">Source code on GitHub</a>.</p>
<p><img alt="Raycast Gif Library Search" src="https://cdn.rknight.me/site/raycast-ex-gif-library-search.jpg" /></p>
<p>Lastly, my Brian Butterfield soundboard, which is <s>highly important</s> not important at all to my workflow. I decided I don't really need that.</p>
<h4>The Raycast Extension Store</h4>
<p>The Raycast store is great. Having something built-in to quickly install is really handy.</p>
<p>However, for my Gif workflow there is an extension that does something similar which I didn't find because it's called &quot;Image Wallet&quot; which isn't a great name. The initial response from Raycast is that if another extension will do what I want, then they don't want my extension. I appreciate Raycast want to keep the store tidy but not allowing any extensions that are even remotely similar is slightly annoying. Still better than Alfred's offering though.</p>
<p>I was able, however, to submit an update to the existing <a href="https://www.raycast.com/danpalmer/omg-lol">omg.lol extension</a> to add support for updating status.lol.</p>
<p><img alt="Status.lol Raycast extension" src="https://cdn.rknight.me/site/raycast-ex-status-lol.jpg" /></p>
<h3>Conclusion</h3>
<p>I'm not going to be using Alfred any more. Raycast is better in pretty much every way. So much of what I built for Alfred is already built into Raycast, the extension store is excellent even with the above caveats, and everything looks so much better. Sorry Alfred, it's been a good nine years 🫡</p>
]]></content:encoded>
<pubDate>2024-05-23T07:26:43Z</pubDate>
</item>
<item>
<title>Slash Pages</title>
<link>https://rknight.me/blog/slash-pages/</link>
<guid>https://rknight.me/blog/slash-pages/</guid>
<content:encoded><![CDATA[
<p><img alt="Slash pages" src="https://cdn.rknight.me/site/slashpages.jpg" /></p>
<p>Don't care about the backstory? <a href="https://slashpages.net">Go check out slashpages.net</a>.</p>
<p>While putting Baby Knight to bed I had an idea for a project: a website that acts as a guide to the different slash pages you can add to you website.</p>
<p>&quot;Slash pages&quot; is a phrase coined by <a href="https://shellsharks.com">Shellsharks</a> when I called pages like <code>/uses</code> &quot;sitelets&quot;, which is <em>not</em> a good name. They also helped me come up with a good description:</p>
<blockquote>
<p>Slash pages are common pages you can add to your website, usually with a standard, root-level slug like /now, /about, or /uses. They tend to describe the individual behind the site and are distinguishing characteristics of the IndieWeb.</p>
</blockquote>
<p>I managed to snag a decent domain<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> for it and to put the site together I of course used <a href="https://11ty.dev">Eleventy</a>. Create a collection of the slash pages, render them out on the home page. Easy peasy.</p>
<p>I was able to use some new CSS I've not used before including <code>wavy</code> text decoration and <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/::first-letter"><code>::first-letter</code></a>. The caveat with the latter is the &quot;first letter&quot; also includes any punctuation. So <code>/u</code> will both be styled in an element with the contents of <code>/uses</code>. To get around this I added an empty span, which causes <code>::first-letter</code> to only highlight the <code>/</code>:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><br />    <span class="token selector">p</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #cd064d<span class="token punctuation">;</span> <span class="token punctuation">}</span><br />    <span class="token selector">p::first-letter</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> #ccc<span class="token punctuation">;</span> <span class="token punctuation">}</span><br /></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>first-letter<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    /<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>uses<br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre>
<p>The source code of the site is <a href="https://github.com/rknightuk/slashpages">on GitHub</a> and you can see it in all it's glory at <a href="https://slashpages.net">slashpages.net</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I wanted slash.page but that was sadly already taken <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-22T20:21:10Z</pubDate>
</item>
<item>
<title>KnightCMS: Just for Me</title>
<link>https://rknight.me/blog/knightcms-just-for-me/</link>
<guid>https://rknight.me/blog/knightcms-just-for-me/</guid>
<content:encoded><![CDATA[
<p>I've been planning out <a href="https://rknight.me/blog/my-perfect-cms/">my mythical CMS</a> based on <a href="https://rknight.me/blog/my-blogging-workflow/">my workflow</a> on and off for a while. I know what features it needs. I know how I want it to work. What I haven't been able to work out, is how I could make it work for <em>other</em> people. How does configuration work? Is it hosted? Paid? Open Source? Is it hard to setup?</p>
<p>I look at the likes of <a href="https://pagescms.org">Pages</a> and <a href="https://decapcms.org">Decap</a> both of which do the basics well (in theory) but they don't have the advanced things I want like media lookup and some custom stuff around changelogs for example. They also fairly strongly link themselves to Netlify, CloudFlare and other similar services to have the serverless functions run. I just want to run stuff on my server. Having said that, Pages <em>does</em> look very good for standard sites.</p>
<p>You know what's really good at running things on demand <em>and</em> easy to deploy on basically any server? PHP.</p>
<p>I've come to a decision. I'm not building it for other people. The code will be on GitHub for people to look at, take inspiration from, see how it works but it will not be a &quot;just pop your keys in and it'll work for you&quot; project.</p>
<p>Any work I put into trying to make it flexible will cause two problems:</p>
<ol>
<li>It will take longer. Every feature, especially media lookup, will need to consider if the person has API keys and also handle if there are no keys available. What if someone likes a different title capitalisation system?<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> What if someone wants to slugify their <code>posts_like_this</code>?</li>
<li>It turns it into something I need to maintain, merge pull requests, answer issues on GitHub, and all the fun that comes with making a thing other people can use.</li>
</ol>
<p>KnightCMS is going to be just for me and work <em>exactly</em> how I want it to work. I'd love to build a fancy CMS that works for everyone but it's just not going to happen. Let's let <a href="https://neato.pub">Adam have a go instead</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I don't have a favourite but I bet someone out there does. <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-22T07:36:05Z</pubDate>
</item>
<item>
<title>I Love Hate My Apple Watch</title>
<link>https://rknight.me/blog/i-love-hate-my-apple-watch/</link>
<guid>https://rknight.me/blog/i-love-hate-my-apple-watch/</guid>
<content:encoded><![CDATA[
<p>Ready for some first-world problem whinging? Of course you are.</p>
<blockquote>
<p>It's the most personal product we've ever made</p>
</blockquote>
<p>This is how Apple described the Apple Watch when it was introduced. And yet here we are nine years later without custom watch faces or even a way to make our own based on the components of other ones.</p>
<p>The watchOS 10 update changed what the buttons on the side do. That's been about as much fun as a kick in the crotch.</p>
<p>For the past few months every time there's an update available, my watch tells me I don't have any space because even though I have music syncing off, it has 2GB of music on it that I can't get rid of. I finally fixed this by wiping my watch and setting it up again. Cool, very normal way of fixing problems.</p>
<p>When I try to set a reminder with Siri, it hangs for ages then tells me it can't do it so I do it on my phone. But it did do it because it's <em>right there in Reminders</em>.</p>
<p>And yet I still want it. Like, can't function without it. If I don't wear it for a day I get annoyed because I miss messages, have to set timers on my phone<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>, and have to pull my phone out to check the time. A person cannot live like that.</p>
<p>Like my series 0 Apple Watch, I'm going to cling onto my series four until it dies, or until Apple stop supporting it. Then I'll begrudgingly buy a new one.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Like an <em>animal</em> <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-21T07:16:06Z</pubDate>
</item>
<item>
<title>Do You Not Fear Death, Sir?</title>
<link>https://rknight.me/blog/do-you-not-fear-death-sir/</link>
<guid>https://rknight.me/blog/do-you-not-fear-death-sir/</guid>
<content:encoded><![CDATA[
<p>I don’t have a driving licence. I’ve lived most of my adult life in Portsmouth which is the most densely populated city in the UK. We have a pretty decent bus system, taxis used to be cheap (not so much the past few years), we have rental scooters, and we have <em>five</em> train stations. So public transport isn’t an issue.</p>
<p>But I have Baby Knight now and my wife has to do all the errands that require driving which is less than ideal so I’m starting lessons this week.</p>
<p>My mum passed away last year and my dad still had her car so he kindly offered to give it to me. He insured me on it so I could get some extra practice in when we see him.</p>
<p>We visited him yesterday and he said “I’ll drive us somewhere quiet for your first go”. Seemed reasonable.</p>
<p>We drove around in circles on an industrial estate for a bit then I pulled over so he could take over and drive us back and he said &quot;Why don't you drive us back?&quot;. Literally haven't driven a car in maybe 15 years but sure why don't I drive back on roads I don't know to your house.</p>
<p><em>Do you not fear death, sir?</em>.</p>
<p>It was fine, no one died, we made it back in one piece. Still. The man clearly has no fear.</p>
]]></content:encoded>
<pubDate>2024-05-20T08:18:18Z</pubDate>
</item>
<item>
<title>Three Gentle Introductions</title>
<link>https://rknight.me/blog/three-gentle-introductions/</link>
<guid>https://rknight.me/blog/three-gentle-introductions/</guid>
<content:encoded><![CDATA[
<p>An excellent idea from <a href="https://merlin.ghost.io/gentle-introductions/">Merlin Mann</a>:</p>
<blockquote>
<p>the idea is to see if I can get somebody interested in a band I love (or sometimes even one specific aspect of a band I love) by curating a playlist of seven <strong><em>and only seven</em></strong> songs</p>
<p>[...]</p>
<p>Just seven really good songs that might help you fall in love too.</p>
</blockquote>
<p>I enjoy the &quot;essentials&quot; playlists that Apple Music does but they tend to just be &quot;here's the 10 or so most popular songs by this artist&quot;. More often than not, if you <em>love</em> a band, their most popular songs won't be the &quot;best&quot; ones. At least for me that's the case.</p>
<p>So I thought I'd do some for artists I love. I had a look through my <a href="https://rknight.me/blog/100-best-albums-robbs-version/">top 50 artists</a> to find some interesting ones - I don't think anyone needs me to do an intro to Linkin Park or Eminem. And because I'm a good egg, each playlist is on Apple Music, Spotify, and MusicThread.</p>
<h3>The Dollyrots</h3>
<p><a href="https://music.apple.com/gb/playlist/the-dollyrots-a-gentle-introduction/pl.u-x0ZlskbxK9p">Apple Music</a> • <a href="https://open.spotify.com/playlist/6HOa2ovg1TfZ49PiDDkOCc">Spotify</a> • <a href="https://musicthread.app/thread/2gbGIrMyHtSQNymnK5J5sP8RFhS">MusicThread</a></p>
<ol>
<li>Everything</li>
<li>Because I'm Awesome</li>
<li>Flippy in My Red Dress</li>
<li>My Best Friend's Hot</li>
<li>Om Nom Nom</li>
<li>City of Angels</li>
<li>Brand New Key</li>
</ol>
<h3>MC Lars</h3>
<p><a href="https://music.apple.com/gb/playlist/mc-lars-a-gentle-introduction/pl.u-2KjyuN4RzaL">Apple Music</a> • <a href="https://open.spotify.com/playlist/0OqZsDg0nZjjlLFJLv9oDY">Spotify</a> • <a href="https://musicthread.app/thread/2gbGTfu05dtWvPLEBE3ymDJMQXP">MusicThread</a></p>
<p>Side note, he did <a href="https://www.youtube.com/watch?v=1ucYtOk_8Qo">an excellent TED talk</a>.</p>
<ol>
<li>Hey There Ophelia (feat. Gabe Saporta &amp; Brett Anderson)</li>
<li>Signing Emo</li>
<li>This Gigantic Robot Kills (feat. the MC Bat Commander &amp; Suburban Legends)</li>
<li>Ode on a Grecian Urn</li>
<li>Altered States</li>
<li>Bartleby, the Scrivener</li>
<li>Download This Song</li>
</ol>
<h3>The Lonely Island</h3>
<p><a href="https://music.apple.com/gb/playlist/lonely-island-a-gentle-introduction/pl.u-o7mWuR8bvp0">Apple Music</a> • <a href="https://open.spotify.com/playlist/3rdQufieBpLXqVvl6dHHUc">Spotify</a> • <a href="https://musicthread.app/thread/2gbGbapPL62IBC2MV6SJbzvrcmo">MusicThread</a></p>
<ol>
<li>Dreamgirl</li>
<li>Motherlover</li>
<li>Lazy Sunday</li>
<li>Finest Girl (Bin Laden Song)</li>
<li>Rocky</li>
<li>I Run NY</li>
<li>Boombox</li>
</ol>
]]></content:encoded>
<pubDate>2024-05-19T15:42:28Z</pubDate>
</item>
<item>
<title>My Wedding Website</title>
<link>https://rknight.me/blog/my-wedding-website/</link>
<guid>https://rknight.me/blog/my-wedding-website/</guid>
<content:encoded><![CDATA[
<p>We got married in September last year, having previously been booked in to do it in September 2020 and May 2021.</p>
<p>We had a small wedding so we didn't need to be precise with the number of people attending for the most part but we<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> did want a website where we could put all the information, show a countdown, and have an RSVP form.</p>
<p>To make the site I used a new framework called &quot;plain HTML and CSS with a little bit of javascript&quot;. It's pretty advanced, you can do a lot with it.</p>
<p>The site doesn't have anything fancy. The RSVP form ran using <a href="https://www.netlify.com/platform/core/forms/">Netlify Forms</a>, everything else is just written directly in the HTML. There isn't anything particularly impressive about the site but I am quite happy with how the timeline came out:</p>
<p><img alt="Wedding Timeline" src="https://cdn.rknight.me/site/wedding-timeline.jpg" /></p>
<p>Because of all the date cancellations the site didn't really get used - by the third date we knew exactly who was and wasn't coming. Seems a shame to keep it hidden on my computer so the <a href="https://github.com/rknightuk/wedding-website">source code is now on GitHub</a> for your perusal and I guess use it for your wedding if you want? There's also <a href="https://rknightuk.github.io/wedding-website/">a live demo up here</a> but the RSVP won't work.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Only me, my wife didn't care <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-18T12:15:41Z</pubDate>
</item>
<item>
<title>My Blogging Workflow</title>
<link>https://rknight.me/blog/my-blogging-workflow/</link>
<guid>https://rknight.me/blog/my-blogging-workflow/</guid>
<content:encoded><![CDATA[
<p><a href="https://mastodon.social/@Heiji/112434376144010436">Heiji asked what my blogging workflow is</a> and I thought not only is it an interesting idea for a post, but also can serve as a blueprint for how I want <a href="https://rknight.me/blog/my-perfect-cms/">my new CMS</a> to work.</p>
<h3>Post Types</h3>
<p>I have four types of posts on my site:</p>
<ul>
<li><a href="/blog">Blog posts</a> - titled, usually long-form, posts like this one</li>
<li><a href="/links">Links</a> - Links to interesting articles usually with a quote and comment</li>
<li><a href="/almanac">Almanac</a> - My media blog for books, movies, tv shows, and games</li>
<li><a href="/notes">Notes</a> - This one is new and I'm not using it yet but it's going to be for shorter, title-less micro blogging</li>
</ul>
<p>There's also <a href="/log">the changelog</a> but that's updated much less. For all of these, because the site uses <a href="https://11ty.dev">Eleventy</a>, I have to commit and push to GitHub.</p>
<h4>Blog Posts</h4>
<p>I usually write a draft in Obsidian either on my phone or Mac then, if I want someone to eyeball it and give feedback, I'll post the draft to a private paste on <a href="https://paste.lol">paste.lol</a>. Once I'm happy with it I'll create a new post in my site's repository, paste over the content, add an excerpt, and run Eleventy locally to check everything looks okay. Then I commit and push it to GitHub.</p>
<p>To create a new post on my Mac, I use the CLI tool I made which handles all this. I run <code>npm run cli</code> in the terminal, choose &quot;Create a new post&quot;, set the title and tags, and the CLI creates a new file in the right place.</p>
<p><img alt="The custom CLI for my site" src="https://cdn.rknight.me/site/site-cli.jpg" /></p>
<p>It also handles adding new games and projects, as well as fetching my Lego and comics collections when I've added new things. <a href="https://github.com/rknightuk/rknight.me/blob/master/cli/index.js">You can see the code for the CLI here</a>.</p>
<p>So how do I create posts when I'm not at my Mac? I don't. This is why I need a CMS.</p>
<h4>Links</h4>
<p>These are harder to do manually because I like to get a lot of metadata for a link post. As an example here's the contents of the latest link post file. I get the authors name, RSS feed, and Mastodon handle as well as the link title and URL:</p>
<pre class="language-md"><code class="language-md"><span class="token front-matter-block"><span class="token punctuation">---</span><br /><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"Would You Recommend Us to Your Friends?"</span><br /><span class="token key atrule">permalink</span><span class="token punctuation">:</span> /links/would<span class="token punctuation">-</span>you<span class="token punctuation">-</span>recommend<span class="token punctuation">-</span>us<span class="token punctuation">-</span>to<span class="token punctuation">-</span>your<span class="token punctuation">-</span>friends/index.html<br /><span class="token key atrule">link</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//starbreaker.org/blog/rants/would<span class="token punctuation">-</span>you<span class="token punctuation">-</span>recommend<span class="token punctuation">-</span>us<span class="token punctuation">-</span>to<span class="token punctuation">-</span>your<span class="token punctuation">-</span>friends/index.html<br /><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2024-05-08T13:48:10.335Z</span><br /><span class="token key atrule">author</span><span class="token punctuation">:</span> <br />  <span class="token key atrule">name</span><span class="token punctuation">:</span> Starbreaker<br />  <span class="token key atrule">web</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//starbreaker.org<br />  <span class="token key atrule">feed</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//starbreaker.org/feeds/everything.xml<br />  <span class="token key atrule">mastodon</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//social.lol/@starbreaker</span><br /><span class="token punctuation">---</span></span><br /><br /><span class="token blockquote punctuation">></span> Whether or not I would recommend your business is none of your business. Who the fuck are you to even ask this question of your customers?<br /><br />Amen. Fuck right off with all this.</code></pre>
<p>I have <a href="https://github.com/rknightuk/rknight.me/blob/master/src/assets/bookmarklets/new-link.js">a bookmarklet</a> that I use which collects all this data and redirects me to a new file page on GitHub. To build this bookmarklet, I use <a href="https://github.com/rknightuk/rknight.me/blob/master/scripts/bookmarklets.js">this script</a> to bundle them and pop them on <a href="/bookmarklets">the bookmarklets page</a>. Once I'm on the GitHub editor I can edit or add my comments then commit the file.</p>
<h4>Almanac</h4>
<p>For movies, I use <a href="https://letterboxd.com/rknightuk/">Letterboxd</a> and the GitHub service on <a href="https://echofeed.app">EchoFeed</a> to take new reviews and add a new post to the GitHub repository. The echo config looks like this:</p>
<pre class="language-js"><code class="language-js"><span class="token operator">--</span><span class="token operator">-</span><br /><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"{{ custom.letterboxd.filmTitle }}"</span><br /><span class="token literal-property property">year</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> custom<span class="token punctuation">.</span>letterboxd<span class="token punctuation">.</span>filmYear <span class="token punctuation">}</span><span class="token punctuation">}</span><br /><span class="token literal-property property">date</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">datetime</span><span class="token operator">:</span>iso_full <span class="token punctuation">}</span><span class="token punctuation">}</span><br /><span class="token literal-property property">permalink</span><span class="token operator">:</span> <span class="token operator">/</span>almanac<span class="token operator">/</span>movies<span class="token operator">/</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">date</span><span class="token operator">:</span>iso <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">-</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span>slug <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">/</span>index<span class="token punctuation">.</span>html<br /><span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> link <span class="token punctuation">}</span><span class="token punctuation">}</span><br /><span class="token operator">--</span><span class="token operator">-</span><br /><br /><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">content</span><span class="token operator">:</span>plain <span class="token punctuation">}</span><span class="token punctuation">}</span></code></pre>
<p>And you can see an example of <a href="https://rknight.me/almanac/movies/2024-02-16-the-super-mario-bros-movie/">a post made this way here</a>.</p>
<p>For TV, games, and books this is a manual process. I create a new post in the correct folder (in this case, <code>src/posts/almanac/2024</code>), add the metadata I need and commit it. There's no media lookup, or pulling of the cover/poster, which I would like to include - a handy CMS feature I'll be building.</p>
<h4>Notes</h4>
<p>The plan for this one, and one of the big reasons I want a proper CMS, is to replace a lot of my posting directly onto Mastodon with actual posts on my site. I <a href="https://rknight.me/notes/202405121229/">did do a test post</a> and <a href="https://social.lol/@robb/112428263546671473">it worked</a> so that's a good start.</p>
<h3>Cross-Posting</h3>
<p>You might have noticed I didn't mention cross-posting for the last three post types and that's because they all use the same system: a custom JSON feed extension and EchoFeed. For blog posts, I always post these myself to Mastodon.</p>
<p>If you look <a href="https://rknight.me/subscribe/links/feed.json">at the links JSON feed</a> you'll see an object for each post that looks like this:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"_knightposse"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />	<span class="token property">"about"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/about/colophon/"</span><span class="token punctuation">,</span><br />	<span class="token property">"text"</span><span class="token operator">:</span> <span class="token string">"Would You Recommend Us to Your Friends? by @starbreaker@social.lol https://starbreaker.org/blog/rants/would-you-recommend-us-to-your-friends/index.html\n\n\"Whether or not I would recommend your business is none of your business. Who the fuck are you to even ask this question of your customers?\"\n\nAmen. Fuck right off with all this.\n\nðŸ“Œ https://rknight.me/links/would-you-recommend-us-to-your-friends/"</span><span class="token punctuation">,</span><br />	<span class="token property">"tags"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<p>This allows me, in EchoFeed, to use <code>{{ custom._knightposse.text }}</code> in my config and control what gets posted from my site. For link posts, I mention the author's Mastodon handle if I have it. If there's a blockquote in the post, I'll convert it to have quotes around it when it goes to Mastodon. All of this is done in the <code>makeTootText</code> filter of my Eleventy config.</p>
<p>One of the hard parts of cross-posting to Mastodon (or Bluesky, or Twitter) is the character limits. Mastodon, by default, limits to 500 characters so I needed to find a way to handle that.</p>
<p>If you want to look the code in full, you can see that <a href="https://github.com/rknightuk/rknight.me/blob/master/config/filters.js">here in my filters file</a>. The core of it is checking the length of the output and if it's two long, falling back to shorter versions. For link posts, first I check if all the text (title, mention, quotes, comments) can fit in the limit. If it doesn't, I fall back to just the title, mention, and quote. Finally if that doesn't work, I fall back to just the title, mention, and link - which is unlikely to go over the limit unless for some reason I use a <em>very</em> long title.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span>mastodonCount<span class="token punctuation">.</span><span class="token function">getMastodonLength</span><span class="token punctuation">(</span>contentWithAllText<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">500</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />	content <span class="token operator">=</span> contentWithAllText<br /><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mastodonCount<span class="token punctuation">.</span><span class="token function">getMastodonLength</span><span class="token punctuation">(</span>contentWithFirstQuote<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">500</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />	content <span class="token operator">=</span> contentWithFirstQuote<br /><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><br />	content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n\n📌 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>permalink<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">return</span> content</code></pre>
<p>To find out the length, you can't just check the length of the string - links are always counted as 23 characters and only the first part of the username is counted <code>@robb</code>, the domain is ignored (<code>@social.lol</code>). That is what <code>getMastodonLength</code> is doing with <a href="https://github.com/rknightuk/rknight.me/blob/master/config/mastodonCounter.js">some wild regex I borrowed</a> directly from Mastodon itself.</p>
<p>As an example, the previous link post I mentioned above gets posted to Mastodon like this:</p>
<blockquote>
<p>⭐ Would You Recommend Us to Your Friends? by <a href="https://social.lol/@starbreaker">@starbreaker</a> <a href="https://starbreaker.org/blog/rants/would-you-recommend-us-to-your-friends/index.html">https://starbreaker.org/blog/rants/would-you-recommend-us-to-your-friends/index.html</a></p>
<p>&quot;Whether or not I would recommend your business is none of your business. Who the fuck are you to even ask this question of your customers?&quot;</p>
<p>Amen. Fuck right off with all this.</p>
<p>📌 <a href="https://rknight.me/links/would-you-recommend-us-to-your-friends/">https://rknight.me/links/would-you-recommend-us-to-your-friends/</a></p>
</blockquote>
<h3>The CMS</h3>
<p>The CMS that I'm imagining would ideally allow me to do all of this stuff from anywhere I have internet access.</p>
<p>For links, automatically pull in the author details. For almanac, have media data lookup. For blog posts and notes, the ability to post from anywhere. Load my following list so I can mention people on Mastodon.</p>
<p>I guess I should start building it really.</p>
]]></content:encoded>
<pubDate>2024-05-17T07:54:40Z</pubDate>
</item>
<item>
<title>One Star Review</title>
<link>https://rknight.me/blog/one-star-review/</link>
<guid>https://rknight.me/blog/one-star-review/</guid>
<content:encoded><![CDATA[
<p>I have bad movie opinions. I love movies I know are bad in the &quot;la-de-dah I studied cinema at whatever university&quot; way. I will avoid movies that win oscars because more often than not it means they'll be boring as fuck. If it won darling-of-the-weekend award at some film festival, not a chance. I'd rather watch Tokyo Drift a hundred times than spend three hours of my life watching Oppenheimer.</p>
<p>There are exceptions to this. Spotlight is fantastic. Gladiator is great. Parasite is amazing. This is a complete list of the best picture movies I actually like. I'm not against Oscar-winning movies per se, but a lot of them are just <em>really</em> boring. They smack you in the face with &quot;we've made this with one purpose: to win an oscar&quot;. Cinematic pornography.</p>
<p>I don't say this to change anyone's mind or to suggest movies in general are bad. I love movies. It's great that people enjoy different things. There's so much <em>stuff</em> out there that there's something everyone can get lost in, get obsessed with, or <a href="https://wegot.family">start a podcast about</a>.</p>
<p>There is, however, another best picture movie I've seen that was the trigger for this blog post. A few days ago I was reminded by <a href="https://gkeenan.co">Keenan</a> that I once <a href="https://letterboxd.com/rknightuk/film/schindlers-list/">watched and rated Schindler’s List</a> on Letterboxd. I gave it one star (this was before I <a href="https://rknight.me/blog/no-more-ratings/">stopped doing ratings</a>). My review in full is as follows:</p>
<blockquote>
<p>I’m amazed this is held in as high regard as it is. It’s well shot but the story is just boring and the first two hours are mostly pointless.</p>
</blockquote>
<p>Firstly, if you want to watch a movie about the Holocaust I would suggest The Pianist, which is excellent. Schindler’s List is considered a classic movie. It's probably a lot of peoples favourite movie. The topic is fascinating and truly awful. My Jewish great-great grandparents fled Germany during the war to avoid being sent to a concentration camp. Visiting Auschwitz is something everyone should do if you can to truly understand the horrors of what happened.</p>
<p>But none of that stops this movie, for me, being utterly and completely boring. So boring I nearly gave up halfway through; my wife (who also gave it one star by the way) can't stand to leave something unfinished so we slogged through it.</p>
<p>Someone who has since deleted their comments on Letterboxd called me some rather unpleasant names because of this review as if my one star review might cause some upset to Steven Spielberg and the rest of the cast (I think they'll be fine), or worse suggesting I was ignorant of the real-life events of the movie. I don't give it a pass just because of the subject matter. Boring, one star for you.</p>
<p>I also happen to think Fast and Furious (2009) is one of the best movies ever made and I deeply disliked The Nightmare Before Christmas. So don't listen to me. Go enjoy what you enjoy.</p>
]]></content:encoded>
<pubDate>2024-05-16T07:05:44Z</pubDate>
</item>
<item>
<title>My Podcast History</title>
<link>https://rknight.me/blog/my-podcast-history/</link>
<guid>https://rknight.me/blog/my-podcast-history/</guid>
<content:encoded><![CDATA[
<p>In 2005 I got an iPod Video (5th generation) for Christmas. The first thing I did was plug it in and start syncing my music collection that I'd been ripping in preparation for getting it. While I was waiting for the music to transfer over the mega-slow USB 2.0, I started browsing the podcasts section and came across <a href="https://en.wikipedia.org/wiki/The_Ricky_Gervais_Show">The Ricky Gervais show</a>. I think at this time it was the number one podcast in the store. The only other show I listened to at the time was one called <a href="http://www.topofthepods.co.uk">Top of the Pods</a> which was kind of like <a href="https://www.relay.fm/topfour/">Top Four</a> but they did a top ten list of <em>whatever</em> - tech products, movie sequels, or time machines. I'm amazed the site is still up but sadly the episodes are not. If anyone has them available, please send them my way.</p>
<p>A few years later I listened to <a href="https://tii.libsyn.com">Today in iPhone</a> for a couple of months and then I kind of fell off the podcast wagon - at this point podcast listening was still limited to syncing from iTunes which was a pain in the arse.</p>
<p>Around 2011, through Twitter, I heard about some guy called Myke Hurley doing a show with Patrick Rhone called <a href="http://notquiteenough.com">Enough</a>. That led me to listen to Myke's other shows he had on his network including Cooking with Brett and Myke, 11 Minutes, and eventually the <a href="https://512pixels.net/2012/02/512-podcast-launch/">512 Podcast</a>. By this point, apps like Instacast were available on iOS which made subscribing a hell of a lot easier.</p>
<p>In 2013 Myke joined 5by5 and in 2014 he and Stephen launched <a href="https://www.relay.fm">Relay FM</a><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. During this time, <a href="https://www.relay.fm/bionic">Bionic ended</a> and became <a href="https://www.relay.fm/bonanza">Bonanza</a>, along with <a href="https://www.relay.fm/cmdspace">CMD+Space</a>, and <a href="https://www.relay.fm/prompt">The Prompt</a> ending. It was also around this time I started using <a href="https://overcast.fm">Overcast</a> and I haven't switched to another app since. <a href="https://rknight.me/blog/smart-speed-broke-my-brain/">No smart speed though</a>.</p>
<p>Now I'm mostly listening to a handful Relay shows like <a href="https://relay.fm/connected">Connected</a>, <a href="https://www.relay.fm/rd">Rec Diffs</a>, and <a href="https://www.relay.fm/ungeniused">Ungeniused</a> plus  <a href="https://hemisphericviews.com">Hemispheric Views</a>, <a href="https://atp.fm">ATP</a>, and <a href="https://www.rsspod.net">Really Specific Stories</a>. Since <s><em>the incident</em></s> 2020, my listening has gone down a lot due to not commuting every day so I tend to skip news-heavy shows if I don't have the time that week but I still fill every silent moment with podcasts lest I have to be alone with my own thoughts.</p>
<p>Oh and if you didn't know, I have <a href="https://macstories.net/ruminate">my own podcast</a> which you should definitely listen to.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Switch On <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-15T05:41:19Z</pubDate>
</item>
<item>
<title>100 Best Albums (Robb's Version)</title>
<link>https://rknight.me/blog/100-best-albums-robbs-version/</link>
<guid>https://rknight.me/blog/100-best-albums-robbs-version/</guid>
<content:encoded><![CDATA[
<p>If you're interested in what I consider a perfect album <a href="https://rknight.me/blog/the-perfect-album/">I wrote about it</a> last week and if you want to see other people's perfect albums, check out <a href="https://albums.rknight.me">the perfect albums project</a>.</p>
<p><img alt="Robb's Best 100 Albums" src="https://cdn.rknight.me/site/top-100-albums.jpg" /></p>
<p>This post was originally going to be the same idea as <a href="https://flamedfury.com/">fLaMEd's</a> post with their <a href="https://flamedfury.com/posts/top-50-artists-2021-2024/">top 50 artists</a>. Then <a href="https://www.apple.com/newsroom/2024/05/apple-music-celebrates-the-launch-of-inaugural-100-best-albums-list/?1715605182">Apple decided we should all be arguing about album rankings</a> so here we are. I also wanted to do the silly title so I changed it to top 100 albums.</p>
<p>I exported all my <a href="http://Last.fm">Last.fm</a> data from the 29th August 2021 until now and parsed the data to rank artists and albums by number of plays - see the bottom of this post for the technical bits.</p>
<p>Here are my top 100 albums. Note, I <em>do</em> listen to Hamilton a lot but this is skewed a bit because it has more tracks than any other album by a lot but I didn't think it was all that important for this list and quite frankly didn't have the energy to fetch the album lengths to work out actual plays.</p>
<ul>
<li>Hamilton: An American Musical - Original Broadway Cast (1937 plays)</li>
<li>Never Look Back (Deluxe) - Goldfinger (1274 plays)</li>
<li>Meteora - Linkin Park (1063 plays)</li>
<li>Love Sux - Avril Lavigne (1054 plays)</li>
<li>Kings of the New Age - State Champs (800 plays)</li>
<li>Harder Than It Looks - Simple Plan (783 plays)</li>
<li>Masters Of The Uniwurst - Punk Rock Factory (761 plays)</li>
<li>ONE MORE TIME... - blink-182 (656 plays)</li>
<li>A Whole New Wurst - Punk Rock Factory (592 plays)</li>
<li>Punk Tactics - Joey Valence &amp; Brae (590 plays)</li>
<li>Tear Me to Pieces - Story of the Year (564 plays)</li>
<li>Just Woke Up - Jaret Ray Reddick (537 plays)</li>
<li>Scene This? - Punk Rock Factory (472 plays)</li>
<li>Tickets To My Downfall (SOLD OUT Deluxe) - Machine Gun Kelly (440 plays)</li>
<li>Recharged - Linkin Park (423 plays)</li>
<li>2001 - Dr. Dre (418 plays)</li>
<li>Single And Famous - MC Lars &amp; K.Flay (412 plays)</li>
<li>MFZB - Zebrahead (357 plays)</li>
<li>A Whole New Wurst 2 - Punk Rock Factory (337 plays)</li>
<li>Best of... 20 Years and Counting - Allister (334 plays)</li>
<li>The Wurst Is Yet to Come - Punk Rock Factory (333 plays)</li>
<li>Last Stop Suburbia - Allister (309 plays)</li>
<li>The Black Parade - My Chemical Romance (280 plays)</li>
<li>Hybrid Theory - Linkin Park (274 plays)</li>
<li>No Pads No Helmets...Just Balls (15th Anniversary Tour Edition) - Simple Plan (269 plays)</li>
<li>Pop Drunk Snot Bread - Bowling for Soup (259 plays)</li>
<li>Greatest Hits - MC Lars (254 plays)</li>
<li>All Day - Girl Talk (246 plays)</li>
<li>With Sprinkles - Beefy (242 plays)</li>
<li>Heaven :x: Hell - Sum 41 (235 plays)</li>
<li>Around the World and Back (Deluxe) - State Champs (214 plays)</li>
<li>It's Just a Stage We're Going Through - Punk Rock Factory (208 plays)</li>
<li>Sittin' In A Tree - Jaret and Kelly (195 plays)</li>
<li>Still Not Gettin' Any - Simple Plan (189 plays)</li>
<li>The Eminem Show - Eminem (188 plays)</li>
<li>Riot! (Deluxe) - Paramore (180 plays)</li>
<li>Brighter - Patent Pending (180 plays)</li>
<li>Palm Trees and Power Lines - Sugarcult (171 plays)</li>
<li>See Through It All - dont panic (161 plays)</li>
<li>Tell Me I'm Alive - All Time Low (159 plays)</li>
<li>Enema of the State - blink-182 (152 plays)</li>
<li>Infinity On High (Deluxe Edition) - Fall Out Boy (150 plays)</li>
<li>Simple Plan (Deluxe Version) - Simple Plan (150 plays)</li>
<li>Good News - Megan Thee Stallion (143 plays)</li>
<li>Second Family - Patent Pending (139 plays)</li>
<li>A Hangover You Don't Deserve - Bowling for Soup (138 plays)</li>
<li>Down the Rabbit Hole - The Dollyrots (135 plays)</li>
<li>Taking One for the Team - Simple Plan (131 plays)</li>
<li>Mark of the Beast - Schaffer the Darklord (124 plays)</li>
<li>The Dewey Decibel System - MC Lars &amp; Mega Ran (123 plays)</li>
<li>Bleed American (Deluxe Edition) - Jimmy Eat World (122 plays)</li>
<li>Songs People Actually Liked Vol. 2 - The Next 6 Years (2004-2009) - Bowling for Soup (120 plays)</li>
<li>The Black Parade (Deluxe Version) - My Chemical Romance (119 plays)</li>
<li>Sticks and Stones - New Found Glory (118 plays)</li>
<li>Acoustic In A Freakin' English Church - Bowling for Soup (118 plays)</li>
<li>Let Go (20th Anniversary Edition) - Avril Lavigne (114 plays)</li>
<li>Three Cheers for Sweet Revenge - My Chemical Romance (113 plays)</li>
<li>Minutes to Midnight (Deluxe Edition) - Linkin Park (110 plays)</li>
<li>CZARTIFICIAL INTELLIGENCE - Czarface (110 plays)</li>
<li>Ocean Avenue - Yellowcard (110 plays)</li>
<li>Take Off Your Pants and Jacket - blink-182 (107 plays)</li>
<li>Drunk Enough to Dance - Bowling for Soup (106 plays)</li>
<li>The Art Of Losing - American Hi-Fi (106 plays)</li>
<li>Wolves - Story of the Year (105 plays)</li>
<li>Make the Most of It - New Found Glory (104 plays)</li>
<li>Collision Course - EP - Jay-Z and Linkin Park (102 plays)</li>
<li>mainstream sellout - Machine Gun Kelly (100 plays)</li>
<li>All Killer No Filler - Sum 41 (99 plays)</li>
<li>The Singles - Feeder (99 plays)</li>
<li>Kings Of Pop - Home Grown (98 plays)</li>
<li>Live at Bloodstock - Punk Rock Factory (97 plays)</li>
<li>Does This Look Infected? - Sum 41 (92 plays)</li>
<li>Save Rock and Roll - Fall Out Boy (90 plays)</li>
<li>Love Songs Werewolves &amp; Zombies - The Dollyrots (90 plays)</li>
<li>Daydream Explosion - The Dollyrots (90 plays)</li>
<li>Riot Hearts Rebellion - Patent Pending (90 plays)</li>
<li>Reanimation - Linkin Park (89 plays)</li>
<li>Feed the Animals - Girl Talk (89 plays)</li>
<li>Because I'm Awesome - The Dollyrots (88 plays)</li>
<li>Papercuts - Linkin Park (87 plays)</li>
<li>A Little Messed Up - The Dollyrots (87 plays)</li>
<li>American Idiot (Deluxe Edition) - Green Day (85 plays)</li>
<li>Music To Be Murdered By - Side B (Deluxe Edition) - Eminem (85 plays)</li>
<li>HOLY FVCK - Demi Lovato (83 plays)</li>
<li>Blink-182 (Bonus Track Version) - blink-182 (82 plays)</li>
<li>Eat My Heart Out (Plus B-Sides) - The Dollyrots (81 plays)</li>
<li>Lunch. Drunk. Love. - Bowling for Soup (80 plays)</li>
<li>Blockchain Planet - MC Lars (80 plays)</li>
<li>American Beauty / American Psycho - Fall Out Boy (79 plays)</li>
<li>So Wrong It's Right (Deluxe Version) - All Time Low (78 plays)</li>
<li>The Young and the Hopeless - Good Charlotte (78 plays)</li>
<li>Recovery (Deluxe Edition) - Eminem (76 plays)</li>
<li>A Fever You Can't Sweat Out - Panic! at the Disco (76 plays)</li>
<li>The Great Burrito Extortion Case - Bowling for Soup (75 plays)</li>
<li>Dirty Work (Deluxe) - All Time Low (72 plays)</li>
<li>From Under the Cork Tree - Fall Out Boy (70 plays)</li>
<li>Lace Up - Machine Gun Kelly (70 plays)</li>
<li>Saviors - Green Day (68 plays)</li>
<li>The Wack Album - The Lonely Island (67 plays)</li>
<li>Brain Invaders (Deluxe Edition) - Zebrahead (65 plays)</li>
</ul>
<p>Here's my top 50 artists for the same period. I went for 50 because beyond that the plays were quite low and not as relevant as they are in albums.</p>
<ul>
<li>Punk Rock Factory (3039 plays)</li>
<li>Linkin Park (2244 plays)</li>
<li>Original Broadway Cast of Hamilton (1937 plays)</li>
<li>Simple Plan (1635 plays)</li>
<li>Goldfinger (1360 plays)</li>
<li>Bowling for Soup (1312 plays)</li>
<li>Avril Lavigne (1308 plays)</li>
<li>State Champs (1127 plays)</li>
<li>blink-182 (1106 plays)</li>
<li>The Dollyrots (814 plays)</li>
<li>Story of the Year (680 plays)</li>
<li>Eminem (673 plays)</li>
<li>Machine Gun Kelly (672 plays)</li>
<li>Allister (646 plays)</li>
<li>My Chemical Romance (605 plays)</li>
<li>Joey Valence &amp; Brae (594 plays)</li>
<li>Jaret Ray Reddick (538 plays)</li>
<li>Fall Out Boy (525 plays)</li>
<li>Zebrahead (515 plays)</li>
<li>Sum 41 (499 plays)</li>
<li>Dr. Dre (493 plays)</li>
<li>All Time Low (485 plays)</li>
<li>Patent Pending (458 plays)</li>
<li>New Found Glory (425 plays)</li>
<li>MC Lars (377 plays)</li>
<li>Paramore (367 plays)</li>
<li>MC Lars &amp; K.Flay (362 plays)</li>
<li>Girl Talk (336 plays)</li>
<li>Green Day (312 plays)</li>
<li>Beefy (266 plays)</li>
<li>Sugarcult (265 plays)</li>
<li>McFly (232 plays)</li>
<li>The Lonely Island (222 plays)</li>
<li>Schaffer the Darklord (203 plays)</li>
<li>Jimmy Eat World (202 plays)</li>
<li>Jaret and Kelly (195 plays)</li>
<li>dont panic (194 plays)</li>
<li>Busted (193 plays)</li>
<li>Yellowcard (187 plays)</li>
<li>Megan Thee Stallion (154 plays)</li>
<li>The All-American Rejects (150 plays)</li>
<li>American Hi-Fi (148 plays)</li>
<li>Czarface (135 plays)</li>
<li>We the Kings (130 plays)</li>
<li>Panic! at the Disco (124 plays)</li>
<li>MC Lars &amp; Mega Ran (123 plays)</li>
<li>Feeder (111 plays)</li>
<li>Jay-Z and Linkin Park (107 plays)</li>
<li>Neck Deep (107 plays)</li>
<li>Good Charlotte (106 plays)</li>
</ul>
<hr />
<p>To get this data I used <a href="https://benjaminbenben.com/lastfm-to-csv/">this exporter</a> to get a CSV of all my scrobbles then I wrote a quick node script to output the top 50 for me. I used the <a href="https://www.npmjs.com/package/csvtojson"><code>csvtojson</code> library</a> to convert the file to JSON, did the counts for albums and artists, sorted by largest, then output to a <code>txt</code> file.</p>
<p>I had to do some checking of the album because it seems as though the Hamilton recording has changed artist a few times, and I also added some overrides for different editions of the same albums:</p>
<pre class="language-js"><code class="language-js">rawData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">row</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">let</span> artistKey <span class="token operator">=</span> row<span class="token punctuation">[</span><span class="token string">'Artist'</span><span class="token punctuation">]</span><br /><br />	<span class="token keyword">let</span> albumKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>row<span class="token punctuation">[</span><span class="token string">'Album'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>row<span class="token punctuation">[</span><span class="token string">'Artist'</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">'Album'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'Hamilton: An American Musical'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		albumKey <span class="token operator">=</span> <span class="token string">'Hamilton: An American Musical - Original Broadway Cast'</span><br />		artistKey <span class="token operator">=</span> <span class="token string">'Original Broadway Cast of Hamilton'</span><br />	<span class="token punctuation">}</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">'Album'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'Meteora'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		albumKey <span class="token operator">=</span> <span class="token string">'Meteora - Linkin Park'</span><br />	<span class="token punctuation">}</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">'Album'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'The Eminem Show'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		albumKey <span class="token operator">=</span> <span class="token string">'The Eminem Show - Eminem'</span><br />	<span class="token punctuation">}</span><br /><br />	<span class="token comment">// this was reported as Goldfinger and Biffy Clyro?</span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">'Album'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'Never Look Back (Deluxe)'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		albumKey <span class="token operator">=</span> <span class="token string">'Never Look Back (Deluxe) - Goldfinger'</span><br />	<span class="token punctuation">}</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>row<span class="token punctuation">[</span><span class="token string">'Album'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'Hybrid Theory'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		albumKey <span class="token operator">=</span> <span class="token string">'Hybrid Theory - Linkin Park'</span><br />	<span class="token punctuation">}</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>raw<span class="token punctuation">.</span>artists<span class="token punctuation">[</span>artistKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		raw<span class="token punctuation">.</span>artists<span class="token punctuation">[</span>artistKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><br />	<span class="token punctuation">}</span><br /><br />	raw<span class="token punctuation">.</span>artists<span class="token punctuation">[</span>artistKey<span class="token punctuation">]</span><span class="token operator">++</span><br /><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>raw<span class="token punctuation">.</span>albums<span class="token punctuation">[</span>albumKey<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		raw<span class="token punctuation">.</span>albums<span class="token punctuation">[</span>albumKey<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><br />	<span class="token punctuation">}</span><br /><br />	raw<span class="token punctuation">.</span>albums<span class="token punctuation">[</span>albumKey<span class="token punctuation">]</span><span class="token operator">++</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>The <a href="https://github.com/rknightuk/last-fm-top">code is on GitHub</a> if you want to use it to do the same.</p>
]]></content:encoded>
<pubDate>2024-05-14T10:15:24Z</pubDate>
</item>
<item>
<title>Things I Like: Ham Means One</title>
<link>https://rknight.me/blog/things-i-like-ham-means-one/</link>
<guid>https://rknight.me/blog/things-i-like-ham-means-one/</guid>
<content:encoded><![CDATA[
<p>I cannot stop thinking about <a href="https://www.youtube.com/watch?v=Jky5ZXI0axc&amp;feature=youtu.be">this Waffle House video</a> and their bonkers system for &quot;marking&quot; orders. It involves placing packets of jelly, ketchup, and other things a Waffle House has knocking about in specific places on a plate.</p>
<p><img alt="Waffle house mark system" src="https://cdn.rknight.me/site/waffle-house-mark-system.jpg" /></p>
<p>John and Merlin spoke about it for almost the entirety of <a href="https://www.relay.fm/rd/232">episode 232 of Reconcilable Differences</a> and it's also come up in follow up in the next two episodes.</p>
<p>I'm still not 100% convinced that this isn't some kind of elaborate hoax.</p>
]]></content:encoded>
<pubDate>2024-05-13T06:35:30Z</pubDate>
</item>
<item>
<title>Phrases I Always Forget</title>
<link>https://rknight.me/blog/phrases-i-always-forget/</link>
<guid>https://rknight.me/blog/phrases-i-always-forget/</guid>
<content:encoded><![CDATA[
<p>There are some phrases that no matter how many times I hear them, and then look them up, I always forget what they mean either because the phrase just isn't obvious or it doesn't come up enough for it to stick in my brain. I'm writing them here in the hopes that this might help me remember the definitions in the future (it probably won't).</p>
<h3>Stuck the Landing</h3>
<p>I dislike this one because &quot;stuck&quot; doesn't have good connotations in my mind but in this context it's good. Not a fan.</p>
<h3>Banana republic</h3>
<blockquote>
<p>a small state that is politically unstable as a result of the domination of its economy by a single export controlled by foreign capital</p>
</blockquote>
<p>So you are a nation that only exports bananas which is bad for politics. Got it.</p>
<h3>Yak shaving</h3>
<blockquote>
<p>Any apparently <a href="https://en.wiktionary.org/wiki/useless#English" title="useless">useless</a> <a href="https://en.wiktionary.org/wiki/activity#English" title="activity">activity</a> which, by allowing one to overcome intermediate difficulties, allows one to solve a larger problem</p>
</blockquote>
<p><em>Can I use it in a sentence?</em></p>
<p>&quot;I was yak shaving this morning and it's actually helped me this afternoon&quot;.</p>
<p>This one is stupid and I don't like it.</p>
<h3>Pulling Punches</h3>
<p>You what? I'm <em>pulling</em> punches? Nothing about this phrase makes sense in isolation.</p>
<blockquote>
<p>To avoid using a high level of force when punching</p>
</blockquote>
<p>So pulling <em>away</em> punches to do less damage. Hmm, okay.</p>
<h3>Dunning–Kruger effect</h3>
<blockquote>
<p>The Dunning-Kruger effect occurs when a person’s lack of knowledge and skill in a certain area causes them to overestimate their own competence</p>
</blockquote>
<p>I will never remember this one. I am reminded of <a href="https://www.thecut.com/2019/07/poll-1-in-8-men-think-they-can-beat-serena-williams.html">this poll</a> where one in eight men think they could score a point in a tennis match against Serena Williams. Idiots.</p>
<p>Update 2024-05-12: Florian pointed me to <a href="https://theconversation.com/debunking-the-dunning-kruger-effect-the-least-skilled-people-know-how-much-they-dont-know-but-everyone-thinks-they-are-better-than-average-195527">this article</a> which seems to suggest the Dunning-Kruger effect is very likely BS:</p>
<blockquote>
<p>To establish the Dunning-Kruger effect is an artifact of research design, not human thinking, my colleagues and I showed it can be produced using randomly generated data</p>
</blockquote>
]]></content:encoded>
<pubDate>2024-05-12T05:57:51Z</pubDate>
</item>
<item>
<title>My Computing Origin Story</title>
<link>https://rknight.me/blog/my-computing-origin-story/</link>
<guid>https://rknight.me/blog/my-computing-origin-story/</guid>
<content:encoded><![CDATA[
<p>This post is inspired by episode <a href="https://listen.hemisphericviews.com/015">015 of Hemispheric Views</a>.</p>
<p>When I started drafting this post, I got distracted trying to find the first game I ever played. Turns out it was Asterisk Tracker which you can <a href="https://rknight.me/blog/finding-asterisk-tracker/">read all about here</a>. I played that game for endless hours on an Amstrad computer of some kind, loading it up from the floppy disk, and mashing that space bar trying to get as far as I could. That was my first experience with a computer, the &quot;family computer&quot;. I don't ever remember my parents doing anything on it but I guess they must have done?</p>
<p>I don't remember when it happened but at some point that computer, and that game, were no more. There was another family computer that was around a bit later where I played just the one game again: <a href="https://en.wikipedia.org/wiki/The_Adventures_of_Captain_Comic">The Adventures of Captain Comic</a>. It was a side-scrolling platformer that I was not good at. I'm pretty sure I never made it past the first level. As was always the case with games of this era, the box art portrays something you're definitely not getting from the game.</p>
<p><img alt="The Adventures of Captain Comic" src="https://cdn.rknight.me/site/the-adventures-of-captain-comic.jpg" /></p>
<p>A few years went by until I was around 10 and I got given a computer that definitely <em>was not</em> liberated from a Naval Base where my step-dad worked as IT support. It had a 1GB hard drive I was convinced I would never fill up and it also came with a pirated copy of Microsoft Encarta. This had Windows 98 Plus on it which came with <a href="https://www.youtube.com/watch?v=oJuTOnbjWV4">the Garfield theme</a> which I thought was the best thing ever. There was one more Windows PC after this which lasted until I moved out at 18.</p>
<p>I'd just moved out and didn't have a lot of money so I bought the cheapest Asus laptop I could find. It was made of terrible plastic, it was slow, and it creaked when you picked it up. I didn't really have a lot of &quot;computing&quot; to do at this time so it was mostly for watching pirated movies and tv shows. A couple of years later I got a Samsung netbook (remember those?) which quite frankly wasn't any better than the Asus other than it was smaller. At this point, I was at college studying network (Cisco CCNA anyone?) so I still didn't know I wanted to be a developer.</p>
<p>Then, in 2009, I got my first Mac: a 2009 27” iMac which <a href="https://rknight.me/blog/my-first-mac/">I wrote about here</a>. This came just around the time I was getting into development although at this point I thought I was going to be a designer but it turns out I suck at design. Next up was a MacBook Air, then a MacBook Pro, then another Pro, then the one I have now: a 2023 16&quot; MacBook Pro M2 Max with 64GB. What Apple has done with the M series chips is nothing short of incredible - the battery life is bonkers, the fans rarely kick in, and everything is stupidly fast.</p>
]]></content:encoded>
<pubDate>2024-05-11T19:56:49Z</pubDate>
</item>
<item>
<title>Interests: A New Sitelet</title>
<link>https://rknight.me/blog/interests-a-new-sitelet/</link>
<guid>https://rknight.me/blog/interests-a-new-sitelet/</guid>
<content:encoded><![CDATA[
<p>Okay so maybe the <a href="https://en.wiktionary.org/wiki/sitelet#English">definition of sitelet</a> doesn't quite fit but it's close enough to describe these common pages people have on their sites. Maybe it needs a better name. Pagelets? Web dongles? Barnacles? Do they need a name? I want one.</p>
<p>Update: <a href="https://shellsharks.social/@shellsharks/112416323777089561">Shellsharks suggested &quot;slash pages&quot;</a> which I like.</p>
<p>Anyway, Chris had an idea <a href="https://chrisburnell.com/note/slash-interests/">for a /interests page</a>, similar to <a href="/about">/about</a>, <a href="/now">/now</a> and <a href="/uses">/uses</a>.</p>
<blockquote>
<p>This page is, in essence, a place for website authors to list out things they’re passionate about and expound on what it is about those things that excites them</p>
</blockquote>
<p>A great idea that goes beyond what would make sense on an about page. Those tend to be shorter, an introduction to who the person is and what they do but if you were <em>really</em> into looking at old maps that doesn't necessarily fit there.</p>
<p>Chris also, smart fella that he is, set up an <a href="https://chrisburnell.github.io/interests-directory/">interests directory</a> where people can submit their site. Mine is now there.</p>
<p>I took a first pass at my interests page <a href="/interests">which you can see here</a>. I stuck to the obvious things like movies, tv shows, and games but I'm going to expand this over time. Chris' post also reminded me I should do an /ideas page but that's a job for another day.</p>
]]></content:encoded>
<pubDate>2024-05-10T05:04:42Z</pubDate>
</item>
<item>
<title>Every Phone I've Ever Owned</title>
<link>https://rknight.me/blog/every-phone-ive-ever-owned/</link>
<guid>https://rknight.me/blog/every-phone-ive-ever-owned/</guid>
<content:encoded><![CDATA[
<p>By my count I've had 18 different phones since 2002. In my mind, there are three distinct eras in terms of the type of phones and where I was in my life. Sadly, I don't have any of these any more. Sounds like a fun project to track them all down though.</p>
<h3>The Hand-Me-Down Era</h3>
<p>I got my first phone around 2002. A <a href="https://www.mobilephonemuseum.com/phone-detail/m3788">Motorola M3788</a> which belonged to my dad. It did even have the ability to send SMS and it was <em>big</em>. I don't even know who I was phoning, none of my friends had a phone that I recall.</p>
<p>Between then and somewhere around 2006 I had three different Nokias, the king of phones:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Nokia_5110">Nokia 5110</a></li>
<li><a href="https://en.wikipedia.org/wiki/Nokia_3210">Nokia 3210</a></li>
<li><a href="https://en.wikipedia.org/wiki/Nokia_3310">Nokia 3310</a></li>
</ul>
<p>All three of these had changeable front covers and I was all over that shit. I can't find a picture of one but I had one for my 3210 that had a little flip-down cover on the keypad which I thought was the coolest thing I'd ever seen in my life.</p>
<p>And let's not forget the ringtones. There were websites dedicated to showing you the keys to press to get various songs. I would sit there for hours copying numbers into my phone just to get it to play the mission impossible theme.</p>
<p>The final hand-me-down phone I had was the <a href="https://www.gsmarena.com/sony_cmd_j5-201.php">Sony CMD J5</a> which was a weird phone with a scroll wheel on the side for navigation. I remember this looking cooler than it does.</p>
<h3>The “I Have My Own Money For The First Time” Era</h3>
<p>As soon as I turned 18 and I could get a phone on contract I got myself the <a href="https://en.wikipedia.org/wiki/Sony_Ericsson_W800">Sony Ericsson W800</a>. It came with Sony headphones in the box which I remember being the best headphones I'd ever used up to that point. Still one of the best looking phones ever made.</p>
<p>A few years later I got the <a href="https://en.wikipedia.org/wiki/Nokia_N95">Nokia N95</a> which is the worst phone I've ever owned. I had it replaced three times in the first year because it would just turn off at random and couldn't be turned on again for an hour. Having said that, it was the first phone I used an app on: Google Reader, RIP.</p>
<p>Eventually I got the store to replace it completely with a <a href="https://www.mobilephonemuseum.com/phone-detail/razr-v3-pink">Pink Motorola Razr V3</a>. Best phone form factor ever. The phone was shit but I loved it anyway.</p>
<p>For a brief time in 2007, I had an <a href="https://en.wikipedia.org/wiki/LG_Prada">LG Prada</a>. All I remember about that was how bad the touchscreen was which will be important in the next section.</p>
<p>I miss the choice the pre-smartphone era afforded me. Now we just pick between different companies glass rectangles.</p>
<h3>The Smartphone Era</h3>
<p>Late in 2007 the iPhone launched in the UK and I started saying this to anybody who would listen &quot;touchscreens on phones are shit, it'll be rubbish&quot; because all I'd used was the LG Prada. I didn't get to use an iPhone until just before the launch of the 3GS in 2009 where I was obviously proved wrong.</p>
<p>On the launch day of the <a href="https://en.wikipedia.org/wiki/IPhone_3GS">iPhone 3GS</a> I assumed I'd have no chance of getting one but I phoned around a few places, found one in stock, and picked it up that day. I then spent the rest of the day with a couple of friends who had also gotten one and all we did was download and try out apps. Good times.</p>
<p>I was on a two year contract with the 3GS and assumed, like most people did, that Apple would continue releasing phones in the summer but they had changed that with the <a href="https://en.wikipedia.org/wiki/IPhone_4s">4S</a> so I had to wait another couple of months before I could get it. Two years later I got the <a href="https://en.wikipedia.org/wiki/IPhone_5s">5S</a>, then the <a href="https://en.wikipedia.org/wiki/IPhone_6s">6S</a> two years after that.</p>
<p>In 2016, Apple got rid of the headphone jack, so I lost my mind and <a href="https://rknight.me/blog/replacing-apps-on-android/">switched to Android</a>: a <a href="https://www.gsmarena.com/oneplus_3-7995.php">OnePlus 3</a>. It was good...for a few months. Then it started having issues with updating, taking photos, and some other things. So I swapped it out for a <a href="https://www.gsmarena.com/google_pixel_xl-8345.php">Google Pixel XL</a> which was much better but ultimately I missed my Apple Watch, iMessage, and some other Apple-specific things.</p>
<p>My wife had a <a href="https://en.wikipedia.org/wiki/IPhone_6s">6S Plus</a> as the time which she'd bought and regretted so we bought her a 6S and I took the 6S Plus. Then my last three phones are what you'd expect:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/IPhone_X">iPhone X</a></li>
<li><a href="https://en.wikipedia.org/wiki/IPhone_12">iPhone 12</a></li>
<li><a href="https://en.wikipedia.org/wiki/IPhone_14_Pro">iPhone 14 Pro</a></li>
</ul>
<p>What could come next? Who knows? Me, I know. It'll be a 16 Pro.</p>
]]></content:encoded>
<pubDate>2024-05-09T07:30:46Z</pubDate>
</item>
<item>
<title>Please Rate Your Experience</title>
<link>https://rknight.me/blog/please-rate-your-experience/</link>
<guid>https://rknight.me/blog/please-rate-your-experience/</guid>
<content:encoded><![CDATA[
<p>How was your delivery? How was your ride? How was your call to customer support? How was your purchase you received literally 15 seconds ago? You only just got here but would you rate our website? How was your experience filling in our form to get access to your mother’s will?<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> HOW WAS IT?</p>
<p>It’ll only take five minutes of your time which, by us not offering <em>any</em> incentive to do it, means we deem your time as completely worthless. Please know our executives will be so happy that lots of people gave us ten out of ten. What does ten mean? Doesn’t matter, <s>had sex</s> got ten.</p>
<p>Gotta get those net promotor scores as high as possible so we can show other people who know what a net promoter score is that they’re really high because a high net promotor score is good because the company who owns the proprietary tech for net promotor scores says so. Net. Promotor. Score.</p>
<p>Before leaving feedback please remember that if the rating is for one of our employees and you give them anything less than 100% we’ll almost definitely fire them so no one ever has to suffer again with less than perfect service like you’ve had to. No one serving <em>you</em> should be allowed to have an off day.</p>
<p>Thanks for reading this blog post! How would you rate your experience? It’ll only take two minutes.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>all of these have happened to me but this is the most egregious one <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-08T04:54:10Z</pubDate>
</item>
<item>
<title>My Favourite "My Favourite Game" Covers</title>
<link>https://rknight.me/blog/my-favourite-my-favourite-game-covers/</link>
<guid>https://rknight.me/blog/my-favourite-my-favourite-game-covers/</guid>
<content:encoded><![CDATA[
<p>Last week I tooted a poll to decide what my next post should be for <a href="https://rknight.me/blog/tags/weblogpomo/">WeblogPoMo</a>, Ben <a href="https://social.lol/@bendaubney/112362011039081959">jokingly asked</a>:</p>
<blockquote>
<p>Is ‘My Favourite Games’ a compilation of the best covers of The Cardigans track?</p>
</blockquote>
<p>Of course, it wasn't. Then I went down a rabbit hole for over an hour and listened to every possible cover I could find on YouTube and Apple Music to pick the best ones. An excellent use of my time if I do say so myself and I've whittled it down to a handful that I think are well done.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=ZPMHTv2w2iE">Dance cover by Samstone &amp; Aktive</a></li>
<li><a href="https://www.youtube.com/watch?v=F1qkLQrqTsM">Metal cover by Leo</a></li>
<li><a href="https://www.youtube.com/watch?v=5Rvm406nQiY">Rock cover by Future Radio</a></li>
<li><a href="https://www.youtube.com/watch?v=Xlc9GUmph8c">Acoustic cover by Joe Hicks</a></li>
<li><a href="https://www.youtube.com/watch?v=q8NPV8DKKIE">Another acoustic cover by Ethan Cronin</a></li>
<li><a href="https://www.youtube.com/watch?v=H6naRaxq8_o">I don't even know how to categorise this one but it's fun</a></li>
</ul>
<p>I also found <a href="https://www.youtube.com/watch?v=azTbhaHhcno">this live performance ripped from a VHS</a>.</p>
<p>So there you go.</p>
]]></content:encoded>
<pubDate>2024-05-07T06:58:31Z</pubDate>
</item>
<item>
<title>Finding Asterisk Tracker</title>
<link>https://rknight.me/blog/finding-asterisk-tracker/</link>
<guid>https://rknight.me/blog/finding-asterisk-tracker/</guid>
<content:encoded><![CDATA[
<p>I started writing a post about my computing history (coming soon) and realised I couldn't remember the name of a game I played a lot of in the early 90s. The best way to describe it is flappy bird in space.</p>
<p>I <a href="https://social.lol/@robb/112355126747199555">tooted with this description</a>:</p>
<blockquote>
<p>black background with white stars and you had to get from the left to the right by pressing spacebar to go up and down and avoid the stars? Each level added more stars. You were a spaceship I think and it would draw your path as you went.</p>
</blockquote>
<p>I also shared this in my work Slack and got some suggestions that were too advanced or clearly too modern to be the game I was thinking of so I drew this in Keynote of exactly how I remembered the game so I could show people what I meant:</p>
<p><img alt="My drawing of the game" src="https://cdn.rknight.me/site/asterisk-tracker.jpg" /></p>
<p>We did some more searching around to no avail. Then <a href="https://www.tldrqwerty.me">Charlie</a> jokingly suggested I should reverse image search it so I did and to my surprise it actually worked. This led me to two versions of the game: Asterisk Tracker and Star Dodger.</p>
<h3>Asterisk Tracker</h3>
<p>For Asterisk Tracker I was led to <a href="https://retrocomputing.stackexchange.com/questions/6831/origin-source-of-one-line-one-key-game">this Retro Computing stack exchange question</a> where someone had done an almost identical drawing to me attempting to find the game. This was it, the exact game I was looking for.</p>
<p>The top answer says was &quot;<em>published in the December 1984 issue of Beebug magazine. The author was N. Silver</em>.&quot;. The code in it's entirety is here:</p>
<pre class="language-bash"><code class="language-bash"><span class="token assign-left variable">1L</span><span class="token operator">=</span><span class="token number">0</span>:REP.L<span class="token operator">=</span>L+3:MO.4:DR.1279,0:DR.1279,452:MOVE1279,572:DR.1279,1023:DR.0,1023:F.I<span class="token operator">=</span>1TOL:V.31,RND<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span>+5,RND<span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span>,42,30:N.:P.<span class="token punctuation">(</span>L-3<span class="token punctuation">)</span>/3:X<span class="token operator">=</span><span class="token number">0</span>:Y<span class="token operator">=</span><span class="token number">512</span>:REP.PL.69,X,Y:X<span class="token operator">=</span>X+4:Y<span class="token operator">=</span>Y-<span class="token punctuation">(</span>INKEY-74+.5<span class="token punctuation">)</span>*8:U.PO.X,Y<span class="token punctuation">)</span><span class="token operator">=</span>1ORX<span class="token operator">=</span><span class="token number">1280</span>:U.X<span class="token operator">&lt;</span><span class="token number">1280</span>:V.7:REP.U.INKEY-99:RUN</code></pre>
<p>This page has it <a href="https://bbc.xania.org/?autorun&amp;loadBasic=https://gist.githubusercontent.com/scruss/8ba31a3fc154042285d21cf7ffdfff69/raw/9007afc9d252f4866f93cfc8f474b1d8ea6a76ee/ASTER">running in an emulator</a> (use return/enter to move up) which didn't quite look as I remembered so I carried on looking. Here's what it looks like running:</p>
<p><img alt="My drawing of the game" src="https://cdn.rknight.me/site/asterisk-tracker-2.jpg" /></p>
<h3>Star Dodger</h3>
<p>The only other match on Google images was this blog post about <a href="https://scruss.com/blog/2012/09/08/2d-star-dodge-flies-again/">a game called Star Dodge</a> which was a clone of...Asterisk Tracker. So it looking different in the emulator was a (human) memory issue. That post linked to <a href="http://scruss.com/blog/2018/07/05/space-acid-poisoning/">this post specifically about Asterisk Tracker</a>. They even found the page in the magazine where the program came from:</p>
<p><img alt="Beebug magazine" src="https://cdn.rknight.me/site/beebug-magazine.jpg" /></p>
<p>Playing the game now, I get the exact same feeling of stress as the levels gets more complicated. Not sure if I need that in my life but this was a fun detour.</p>
]]></content:encoded>
<pubDate>2024-05-06T07:20:00Z</pubDate>
</item>
<item>
<title>The Perfect Album</title>
<link>https://rknight.me/blog/the-perfect-album/</link>
<guid>https://rknight.me/blog/the-perfect-album/</guid>
<content:encoded><![CDATA[
<p><img alt="" src="https://cdn.rknight.me/site/cover-flow-albums-x.jpg" /></p>
<p>On <a href="https://listen.hemisphericviews.com/110">Hemispheric Views 110</a> Jason presented the following question:</p>
<blockquote>
<p>Pick in your mind a perfect album. And I think it's mostly open to interpretation, but I'm kind of thinking an album that you would say you could just start from beginning, let it run all the way through, without skipping songs, without moving around, just front to back and just sit there and do nothing else and just listen to that whole album.</p>
<p>What would that album be?</p>
</blockquote>
<p>I have loads of albums I love but many of them have a track or two (or sometimes stupid interludes) that I skip. In the proper fashion of ignoring the question, I have four I want to present here plus some honourable mentions.</p>
<p><strong><a href="https://musicthread.app/link/1xDSepfSVc0Q0moM83u1OmuJN18">Meteora - Linkin Park (2003)</a></strong></p>
<p>For a while I considered Hybrid Theory as my favourite album of all time but having listened more again recently it's been bumped to number two for this. Every track on this is a banger. Also, Faint has become my go-to karaoke track in the past couple of years.</p>
<p><strong><a href="https://musicthread.app/link/1xDSeoArPOCrpESs52IqIqK9eCi">Palm Trees and Power Lines - Sugarcult (2004)</a></strong></p>
<p>I heard an acoustic cover of Memory on <a href="https://en.wikipedia.org/wiki/Punk_Goes_Acoustic">Punk Goes Acoustic</a> many years ago,  decided to check this album out, and it's been on heavy rotation since then.</p>
<p><em><strong><a href="https://musicthread.app/link/1xDSrJqBMiTwCqMnOuiBn524sE9">The Black Parade - My Chemical Romance (2006)</a></strong></em></p>
<p>Not much to say about this other than it's fantastic. There's so much energy in all the tracks.</p>
<p><strong><a href="https://illegalart.net/allday/">All Day - Girl Talk (2010)</a></strong></p>
<p>This is a mashup album so not exactly in the spirit of the question but when I don't know what <em>type</em> of music I want, this is what I go to.</p>
<p>Honourable mentions:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Hybrid_Theory">Hybrid Theory - Linkin Park (2000)</a></li>
<li><a href="https://www.bowlingforsoup.com/music/acoustic-in-a-freakin-english-church">Acoustic in a Freakin English Church - Bowling for Soup (2016)</a></li>
<li><a href="https://en.wikipedia.org/wiki/A_Fever_You_Can't_Sweat_Out">A Fever You Can't Sweat Out - Panic! at the Disco (2005)</a></li>
<li><a href="https://en.wikipedia.org/wiki/All_Killer_No_Filler">All Killer No Filler - Sum 41 (2001)</a></li>
<li><a href="https://en.wikipedia.org/wiki/All_Killer_No_Filler">2001 - Dr Dre (1999)</a></li>
<li><a href="https://en.wikipedia.org/wiki/Bleed_American">Bleed American - Jimmy Eat World (2001)</a></li>
<li><a href="https://mclars.bandcamp.com/album/single-and-famous">Single and Famous - MC Lars &amp; K.Flay (2009)</a></li>
</ul>
]]></content:encoded>
<pubDate>2024-05-05T08:31:56Z</pubDate>
</item>
<item>
<title>7622</title>
<link>https://rknight.me/blog/7622/</link>
<guid>https://rknight.me/blog/7622/</guid>
<content:encoded><![CDATA[
<p>Settle in and get comfy kids, time to tell you the tale of <a href="https://en.wikipedia.org/wiki/T9_(predictive_text)">T9 predictive text</a>. We didn't always have a full QWERTY keyboard to type on. T9 was how we typed messages on our dumb phones back in the early 2000s. T9 stands for &quot;typing on 9 keys&quot;. Here is a Nokia 3210 and it's glorious buttons. Note the letters on the number keys:</p>
<p><img alt="A Nokia 3210" src="https://cdn.rknight.me/site/nokia-3210.png" /></p>
<p>To type the word &quot;help&quot; you would press 4357. To type &quot;me&quot; you would press 63. To type &quot;home&quot; you would press 4663 but that could also be &quot;gone&quot;, or &quot;hood&quot;. I found out just now that these are called &quot;<a href="https://en.wikipedia.org/wiki/Predictive_text#Textonyms">textonyms</a>&quot;; &quot;<em>words produced by the same combination of keypresses</em>&quot;.</p>
<p>I had, for as long as I had the function to choose to, shortened my &quot;real&quot;<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> name from Robert to Rob, with one &quot;B&quot;. Back in 2004 when using my Nokia 3210 if I wanted to type &quot;Rob&quot; I would press 762. Except, for reasons unknown to me, the default dictionary on these phones would <em>always</em> pick &quot;soc&quot; when pressing 762. So I'd have to press the arrow key to get it to switch to &quot;Rob&quot;. In theory, T9 had a user dictionary and should remember these changes for next time it suggests a word but it didn't. Not on any of the phones I'd had up until that point so there was only one solution.</p>
<p><strong>I added another B.</strong> 7622. Robb. Genius. Worked every time. I remember this day so clearly, feeling like I'd beaten the system somehow. I had defeated the T9 final boss. I immediately changed my Faceparty profile (not a joke, Faceparty was a legit social network) to the new spelling and I used that spelling for everything from then on - work, college, banking, everything. Technically I couldn't prove that was my name because my passport still had &quot;Robert&quot; on it. Up until 2019 when I <a href="https://rknight.me/blog/changing-your-name-by-deed-poll/">changed my name by deed poll</a> and made Robb the &quot;real&quot; spelling of my name (along with changing my surname).</p>
<p>So there you go. I did it because I didn't want to move my thumb <em>ever so slightly up and to the right</em> to press the arrow key.</p>
<p>If you want to try out a Nokia <em>3310</em> check out <a href="http://knockoffia.devsdodesign.com">Knockoffia</a> made by myself and the rest of <a href="http://devsdodesign.com">#DevsDoDesign</a> - sound on for the best experience.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>There's no such thing in the UK, don't let anyone tell you different but that's a story for another day <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-05-04T08:07:17Z</pubDate>
</item>
<item>
<title>My Favourite Games</title>
<link>https://rknight.me/blog/my-favourite-games/</link>
<guid>https://rknight.me/blog/my-favourite-games/</guid>
<content:encoded><![CDATA[
<p>Inspired by <a href="https://chriskirknielsen.com/games/">Chris' post</a>, herein lies my favourite games across the genres I play. Also like Chris, a ★ indicates what I think is a greatest of all time game. I have a fairly large collection of physical games which you can see on <a href="https://rknight.me/collections/games/">my games collection page</a>.</p>
<h3>3D Platformers</h3>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Jak_and_Daxter:_The_Precursor_Legacy">Jak and Daxter</a> (2001, PS2)</strong></p>
<p>I got the demo of this with the official Playstation 2 magazine and played that first area probably hundreds of times before I bought the full game. Since then I've played it every couple of years.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Ratchet_%26_Clank:_Rift_Apart">Ratchet and Clank: Rift Apart</a> (2021, PS5)</strong></p>
<p>For me, the headline game for the PS5 and it didn't disappoint. Beyond the usual fun of a Ratchet and Clank game, the trigger feedback on the DualSense made this an incredible experience.</p>
<p><strong><a href="https://en.wikipedia.org/wiki/Ratchet_%26_Clank_(2016_video_game)">Ratchet and Clank</a> (2016, PS4)</strong></p>
<p>I never played the original on PS2 when it came out so this was a nice treat. I'm aware it's not identical but it was fun regardless.</p>
<p><strong><a href="https://en.wikipedia.org/wiki/Super_Mario_Odyssey">Super Mario Odyssey</a> (2017, Switch)</strong></p>
<p>I'm not a big Mario fan in general but I mostly loved this with the exception of the moons you can't get without using motion controls.</p>
<p><strong><a href="https://en.wikipedia.org/wiki/Sackboy:_A_Big_Adventure">Sackboy: A Big Adventure</a> (2020, PS5)</strong></p>
<p>I don't even remember why I bought this but I'm so glad I did. Some of the music levels, like the Uptown Funk one, are an absolute delight.</p>
<p>Honorable mentions:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Ratchet_%26_Clank:_Going_Commando">Ratchet and Clank 2/Going Commando</a> (2003, PS2)</li>
<li><a href="https://en.wikipedia.org/wiki/Crackdown_(video_game)">Crackdown</a> (2007, 360)</li>
</ul>
<h3>Third-Person Story-Driven</h3>
<p>This is the hardest category for me to pin down favourites so I'm picking a handful but to be honest I could easily choose all of these as GOAT. The Playstation cup overfloweth with incredible games in this genre.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Grand_Theft_Auto:_Vice_City">Grand Theft Auto: Vice City</a> (2002, PS2)</strong></p>
<p>I love all the 3D series games (not you GTA4) including the PSP/PS2 ports but this one has something special. The soundtrack, the setting, the parodying of every 80s trope you can think of is all pulled off perfectly.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Sunset_Overdrive">Sunset Overdrive</a> (2014, Xbox One)</strong></p>
<p>I bought an Xbox One specifically because I wanted to play this. I spent 8 hours a day for a week playing this, I just couldn't put it down. It's a shame this never got a sequel or remaster but without this game Spider-Man would not be as good as it is.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/The_Last_of_Us">The Last of Us</a> (2014, PS4)</strong></p>
<p>In terms of story telling, this is the greatest game ever made, hands down. I started this game two or three times before it finally stuck though. The gameplay isn't the best in the genre (part two improves on it significantly) but as a package it's fantastic.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Control_(video_game)">Control</a> (2019, PS4)</strong></p>
<p>The atmosphere and gameplay in this is second-to-none.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Immortals_Fenyx_Rising">Immortals Fenyx Rising</a> (2020, PS5)</strong></p>
<p>This game has no right to be as good as it is. If you dislike the style of joke writing, you will hate this game. As someone who didn't like Breath of the Wild because of the stupid breakable weapons, this is excellent.</p>
<p>Honorable mentions:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Life_Is_Strange_(video_game)">Life Is Strange</a> (2015, PS4)</li>
<li><a href="https://en.wikipedia.org/wiki/Horizon_Zero_Dawn">Horizon Zero Dawn</a> (2017, PS4)</li>
<li><a href="https://en.wikipedia.org/wiki/Horizon_Forbidden_West">Horizon Forbidden West</a> (2022, PS5)</li>
<li><a href="https://en.wikipedia.org/wiki/The_Last_of_Us_Part_II">The Last of Us Part II</a> (2020, PS4/5)</li>
<li><a href="https://en.wikipedia.org/wiki/Uncharted">The Uncharted Series</a> (2007-2022, PS3/4/5)</li>
<li><a href="https://en.wikipedia.org/wiki/Spider-Man_(video_game_series)">The Spider-Man series</a> (2018-2023, PS4/5)</li>
</ul>
<h3>Sports</h3>
<p>This might as well be a Skateboarding category but I do have a couple of non-Tony Hawk games here too.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Tony_Hawk%27s_Pro_Skater_3">Tony Hawk Pro Skater 3</a> (2001, PS2)</strong></p>
<p>It’s hard to describe the affect this series had when the first game launched. If you haven't seen it, <a href="https://www.imdb.com/title/tt11698280/">the documentary</a> is great. I must have played hundreds of hours of this over the years</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Tony_Hawk%27s_Pro_Skater_1_%2B_2">Tony Hawk Pro Skater 1+2 Remaster</a> (2020, PS4)</strong></p>
<p>This is pinnacle of what a remaster should be. The levels are perfectly recreated, the increased amount of pro skaters (more than one person who isn't a dude 😱), and the new songs on the soundtrack. It's all perfect. Just a shame Activision ruined everything by absorbing the developers so we'll never get a THPS3 remaster. Fuck you Activision.</p>
<p><strong>The other PS2 THPS games (2002-2007, PS2)</strong></p>
<p>THPS4 ramped up the difficultly significantly and Underground 1 and 2 were...bonkers. Project 8 was a great game in theory but the frame rate issues really let it down. I've heard the PS3 version is much better so I should fire up my copy soon.</p>
<p><strong><a href="https://en.wikipedia.org/wiki/Disney%27s_Extreme_Skate_Adventure">Disney's Extreme Skate Adventure</a> (2003, PS2)</strong></p>
<p>This was built with the THPS4 engine so it plays more or less the same (once you enable advanced controls). It's kinda stupid (because it's made for kids) but if you like the THPS games this is a fun diversion from the series.</p>
<p><strong><a href="https://en.wikipedia.org/wiki/FIFA_Street_(2005_video_game)">Fifa Street</a> (2005, PS2)</strong></p>
<p>I don't like the culture around football and find watching it mind-numbingly boring but for whatever reason this particular configuration clicked with me. I even wrote a guide for it <a href="https://rknight.me/blog/fifa-street-ps2-game-faqs/">on GameFAQs</a>.</p>
<p><strong><a href="https://en.wikipedia.org/wiki/Behold_the_Kickmen">Behold the Kickmen</a> (2017, MacOS)</strong></p>
<p>This started as a joke and became a full-blown game. The humour is a bit smug and &quot;lol football is stupid&quot; but I enjoyed it. Probably because the developer dislikes football as much as I do.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Rocket_League">Rocket League</a> (2015, PS4/5)</strong></p>
<p>For me, this is the ultimate evolution of the <a href="https://www.youtube.com/watch?v=3yBITRmNd4I">Top Gear Toyota Aygo football</a>. I still suck at it after hundreds of hours though.</p>
<p>Honorable mentions:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Swing_Away_Golf">Swing Away Golf</a> (2000, PS2)</li>
<li><a href="https://en.wikipedia.org/wiki/Mario_Strikers_Charged">Mario Strikers Charged</a> (2007, Wii)</li>
</ul>
<h3>Racing</h3>
<p>I don't care for realistic racing games, I much prefer arcade style.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Diddy_Kong_Racing">Diddy Kong Racing</a> (1997, N64)</strong></p>
<p>This is the best kart racer ever made. It has cars, planes, and boats. It has a story mode. I love it.</p>
<p><strong>★ <a href="https://en.wikipedia.org/wiki/Mario_Kart_8">Mario Kart 8 Deluxe</a> (2017, Switch)</strong></p>
<p>As much as I have a lot of love for Mario Kart 64, MK8 includes most of the tracks remastered so it's hard to pick that. With the DLC it has 96 tracks and most of them are good. Hard to beat that.</p>
<p><strong><a href="">Hot Wheels Unleashed</a> (2021, PS5)</strong></p>
<p>This games seemed to come out of nowhere but I grabbed it anyway. It's a hell of a lot of fun. Still haven't got the DeLorean though.</p>
<p>Honorable mentions:</p>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Mario_Kart_64">Mario Kart 64</a> (1997, N64)</li>
<li><a href="https://en.wikipedia.org/wiki/Rumble_Racing">Rumble Racing</a> (2001, PS2)</li>
<li><a href="https://en.wikipedia.org/wiki/The_Simpsons:_Hit_%26_Run">The Simpsons: Hit &amp; Run</a> (2003, PS2)</li>
<li><a href="https://en.wikipedia.org/wiki/Mashed_(video_game)">Mashed Fully Loaded</a> (2005, PS2)</li>
<li><a href="https://en.wikipedia.org/wiki/Sonic_%26_All-Stars_Racing_Transformed">Sonic &amp; All-Stars Racing Transformed</a> (2012, 360)</li>
</ul>
]]></content:encoded>
<pubDate>2024-05-03T07:25:16Z</pubDate>
</item>
<item>
<title>My Perfect CMS</title>
<link>https://rknight.me/blog/my-perfect-cms/</link>
<guid>https://rknight.me/blog/my-perfect-cms/</guid>
<content:encoded><![CDATA[
<p><img alt="What's your perfect CMS?" src="https://cdn.rknight.me/site/perfect-cms.jpg" /></p>
<p><a href="https://a.wholelottanothing.org/a-blueprint-of-my-dream-blogging-cms/">Matt</a>, then <a href="https://daverupert.com/2024/04/ideas-for-my-dream-cms/">Dave</a>, then <a href="https://kevquirk.com/what-would-my-dream-cms-be">Kev</a>, then <a href="https://darn.es/ideas-for-my-dream-cms/">another Dave</a>, all wrote about what their ideal CMS would be. I don't have as lofty ideals as they do although there's some interesting ideas in there but I do have some things I would like in my perfect CMS and might possibly be doing with a custom-built one in the future.</p>
<p>There are some things that are non-negotiable for me with a CMS so don't require much explanation:</p>
<ul>
<li>Markdown support - This is the only way I write. I did my university dissertation in it, I write all my posts in it, I wish I could use it on Mastodon.</li>
<li>RSS <em>and</em> JSON feeds - I use JSON feeds for querying my site rather than trying to parse XML.</li>
<li>Attachment uploading to S3/Bunny/whatever</li>
</ul>
<p>Now onto the more interesting stuff.</p>
<h3>Flexibility</h3>
<p>I want to be able to just as easily make a long blog post as I can a title-less short one, or a media entry, or link out to someone else. Tumblr has the perfect flow for this: choose post type &gt; type your stuff &gt; send it out.</p>
<h3>Auto-Linking</h3>
<p>I want to type the name of a website (or a movie, or whatever), highlight it, click a button, and the CMS goes and find the link and auto inserts it for me. Exactly how <a href="https://brettterpstra.com/projects/searchlink/">SearchLink</a> works but not tied to being on my Mac. Dave had an example of this in his post pointing to the way Google Docs does this.</p>
<h3>Media Lookup</h3>
<p>I have a <a href="https://rknight.me/almanac">media log</a> but only movies is automated right now - it comes via Letterboxd to EchoFeed then to GitHub. For TV, Games, and Books I manually type the details myself. Ideally, I want to be able to search for something and have the CMS offer various details like title, year, poster, that I can then insert into my post. Similar to what I built with <a href="https://lantern.rknight.me">Lantern</a>.</p>
<h3>Cross Posting</h3>
<p>I built <a href="https://echofeed.app">EchoFeed</a> because there wasn't a flexible solution for cross posting and it does solve all the things I want to do. Ideally, this would be part of the CMS with options of where to cross post and how that gets posted.</p>
<h3>API Access</h3>
<p>I want to be able to build workflows with Alfred, or Raycast, or Shortcuts so I can do a quick post from anywhere without opening the CMS. Or use it for automations to create posts.</p>
<p>Now I've written this out, I'm thinking this will become the outline of the custom CMS I've been meaning to build for a while. Or I could wait for <a href="https://neato.pub">Neato</a> and see how much that'll do for me.</p>
]]></content:encoded>
<pubDate>2024-05-02T07:17:03Z</pubDate>
</item>
<item>
<title>Trying Raycast: Part One</title>
<link>https://rknight.me/blog/trying-raycast-part-one/</link>
<guid>https://rknight.me/blog/trying-raycast-part-one/</guid>
<content:encoded><![CDATA[
<p>If you prefer listening to reading, I spoke to John about this on <a href="https://ruminatepodcast.com/183">Ruminate 183</a>.</p>
<p>I have used <a href="https://www.alfredapp.com">Alfred</a> for about nine years. In that time I've come to rely on it for almost everything I do on my Mac - <a href="https://rknight.me/blog/snippets-i-use-regularly/">snippets</a>, clipboard history, finding files, and <a href="/alfred-workflows">numerous custom workflows</a>.</p>
<p><img alt="Raycast wants to battle" src="https://cdn.rknight.me/site/raycast-battle.jpg" /></p>
<p><a href="https://www.raycast.com">Raycast</a> is the new(ish) launcher all the cool kids are using. Off the bat, it has a much nicer UI than Alfred and a lot more options in terms of what it can show in it's window like checkboxes for ticking of reminders. I've clung onto Alfred since Raycast launched but after seeing <a href="https://laker.tech">Laker</a> use it to add a reminder on a stream, I've been wanting to try it out.</p>
<p>Reminders and calendars is something I attempted to make a workflow for in Alfred and it did <em>work</em>, but it didn't work well. I just don't believe Alfred has the right UI options to be able to do it really well. I think Alfred hasn't improved enough in terms of what it can do in recent years and Raycast is the clear choice for anyone new wanting to try a launcher.</p>
<h3>The Experiment</h3>
<p>I've installed Raycast and set it to open with <kbd>⌃ + space</kbd> which I previously used for Alfred (Alfred is now set to <kbd>⌥ + space</kbd>) and over the next few weeks I'm going to see how much of what I use in Alfred I can get done with Raycast.</p>
<p>So what do I actually <em>do</em> with Alfred? Starting with the built in features that I know Raycast can already do:</p>
<ul>
<li>Clipboard manager. Raycast has this. Bonus: it allows filtering by type: text, images, colors, files, and links. This is really nice.</li>
<li>File search: In my brief testing this works as well as Alfred.</li>
<li>Snippets: Raycast has it. <a href="https://thewang.net/en/blog/Migrate-Alfred-Snippets-to-Raycast/">This script</a> worked perfectly for importing my Alfred ones. It's a shame I can't group them like I can on Alfred.</li>
<li>Run shortcuts: I currently do this with a workflow in Alfred but Raycast has this built in.</li>
<li>Bookmark search: Solved with an extension.</li>
<li>Emoji picker: Again, Raycast has this built in.</li>
</ul>
<p>My first thoughts after doing this first part is that Raycast feels much nicer: everything is snappier and smoother than Alfred. Things just look better.</p>
<p>The second part of this is workflows, mostly ones I've made. Can I make something like my <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/toggle-utils">toggle workflow</a> as easily as I can in Alfred? What about <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/quicknote">QuickNote</a>? Making workflows for little things I want is a big part of why I use Alfred. I'll be back with part 2 once I've dug into this some more.</p>
<p>Update: <a href="https://rknight.me/blog/trying-raycast-part-two/">Read part two</a></p>
]]></content:encoded>
<pubDate>2024-05-01T07:01:33Z</pubDate>
</item>
<item>
<title>Weblog Posting Month 2024</title>
<link>https://rknight.me/blog/weblog-posting-month-2024/</link>
<guid>https://rknight.me/blog/weblog-posting-month-2024/</guid>
<content:encoded><![CDATA[
<p>Last week Anne <a href="https://weblog.anniegreens.lol/weblog-posting-month-2024">put up a page for WeblogPoMo</a>:</p>
<blockquote>
<p>What is it? Weblog Posting Month, 2024! If you use weblog.lol, or otherwise have a personal blog, you should absolutely participate in this month-long blog posting extravaganza!</p>
</blockquote>
<p>I said I'd participate so here we are, publicly committing to 31 posts across 31 days in May. My &quot;guiding theme&quot;, as Anne suggests I choose, is &quot;I have a lot of unfinished draft posts and I should finish them&quot;.</p>
<p>Look out for posts such as “phrases I always forget” and “every phone I’ve ever owned”. I know, I'm pretty excited too.</p>
<p>You can follow along with the hashtag <code>#WeblogPoMo2024</code>, <a href="https://beep.town/@Pomo">the @pomo account</a> will be tooting posts, and you can see a list of <a href="https://weblog.anniegreens.lol/weblog-posting-month-2024/participators">participants here</a>.</p>
]]></content:encoded>
<pubDate>2024-04-29T19:45:59Z</pubDate>
</item>
<item>
<title>Things I Like: The Lonely Island and Seth Meyers Podcast</title>
<link>https://rknight.me/blog/things-i-like-the-lonely-island-and-seth-meyers-podcast/</link>
<guid>https://rknight.me/blog/things-i-like-the-lonely-island-and-seth-meyers-podcast/</guid>
<content:encoded><![CDATA[
<p><a href="https://the-lonely-island-and-seth-meyers-podcast-7a1ee071.simplecast.com">The Lonely Island and Seth Meyers Podcast</a> is so good. This came to me <a href="https://blast-o-rama.com/2024/04/09/if-youre-like.html">via Marty</a> and I'm so glad he thought to post about it. I <em>love</em> The Lonely Island and the first four episodes of this show are great.</p>
<p>Each episode they talk about one of their digital shorts from SNL starting with <a href="https://www.youtube.com/watch?v=pxxaCMNe-2g">Lettuce</a> which I hadn't seen before. Hearing how <a href="https://www.youtube.com/watch?v=sRhTeaa_B98">Lazy Sunday</a> came together was wonderful.</p>
<p>As someone who did <a href="https://www.youtube.com/watch?v=oUJwjKdy4mU">my own parody</a> of a Lonely Island song, I can't wait to hear the episode about I'm on a Boat. Pretty sure I've not shared that link on my site before so there you go.</p>
]]></content:encoded>
<pubDate>2024-04-28T20:57:19Z</pubDate>
</item>
<item>
<title>Two Weeks of EchoFeed</title>
<link>https://rknight.me/blog/two-weeks-of-echofeed/</link>
<guid>https://rknight.me/blog/two-weeks-of-echofeed/</guid>
<content:encoded><![CDATA[
<p>The past two weeks have been busy with <a href="https://echofeed.app">EchoFeed</a>. I launched it after a brief beta period, lots of folks started using it, I <a href="https://news.echofeed.app/echofeed-is-back-2024-04-20/">fucked up</a>, fixed that, and it's sent over 1700 posts already.</p>
<p>Lots of folks wrote about it, many of them as a test of EchoFeed which is very meta, including <a href="https://scribbles.jbowdre.lol/post/from-scribbles-to-gemini-with-echofeed">John</a>, <a href="https://stuffandthings.lol/blog/echomg/">Jason</a>, <a href="https://www.chamline.net/echofeed-send-your-posts-all-over-the-web/">Habib</a>, <a href="https://cool-as-heck.blog/post/echofeed-is-here">Jcrabapple</a>, <a href="https://eay.cc/2024/echofeed-send-your-posts-all-over-the-web/#footnote_0_39608">Stefan</a>, <a href="https://louplummer.lol/post/supporting-something-new">Lou</a>, and <a href="https://lewisdale.dev/post/new-bike-s-day/">Lewis</a>. I like the final quote of <a href="https://kevquirk.com/cross-posting-with-echofeed">Kev's post</a> because it encompasses exactly what I'm going for with EchoFeed:</p>
<blockquote>
<p>if you're looking for a no hassle cross-posting service that's cheap, but works <em>extremely</em> well, check out EchoFeed.</p>
</blockquote>
<p><a href="https://mihobu.lol/2024/04/automatic-archival-using-echofeed">Michael has a great flow chart</a> of how he's using EchoFeed. With that in mind, I thought I'd do the same and show what I'm doing with EchoFeed:</p>
<p><img alt="My Echoes in EchoFeed" src="http://cdn.rknight.me/site/the-echofeed-flow.jpg" /></p>
<p>Along with a lot of bug fixes and UI improvements, I've added these features since it launched:</p>
<ul>
<li>Added the <a href="https://beep.town/@echofeedamplify">Amplify</a> Mastodon account to boost Echoed posts. I'm really happy with how this has turned out - my timeline is filled with loads of interesting posts I otherwise wouldn't have seen</li>
<li>Added support for Bluesky and it's stupidly small image sizes</li>
<li>Added visibility support for Mastodon</li>
<li>Added support for <code>heic</code> files</li>
<li>Added sending Discord webhooks</li>
<li>Flickr images get converted from thumbnails to large size</li>
<li>Variables get inserted where the cursor is not at the end</li>
<li>Tags supported on Atom feeds</li>
<li>Manage and disconnect unused services and feeds</li>
<li>Images from Mastodon RSS feeds get extracted and can be cross posted</li>
<li>Alt text is now extracted from images and included in posts to Mastodon and Bluesky where it's available</li>
<li>The <a href="https://help.echofeed.app/add-to-echofeed/">Add to EchoFeed api</a> which has already been implemented in <a href="https://home.omg.lol/referred-by/robb">omg.lol</a> and <a href="https://scribbles.page">Scribbles</a></li>
</ul>
<p>I also have a big list of features that I want to implement including:</p>
<ul>
<li>Setting your timezone: Times and dates are current in EU time regardless of origin</li>
<li>Custom titles for Echoes</li>
<li>Filtering: If X contains Y send or don't send</li>
<li>Hide variables: e.g. If a service doesn't support HTML, don't show the <code>content</code> variable</li>
<li>Basic logic support (if/else/etc): This will likely be handlebars or mustache but I haven't decided yet</li>
<li>Custom headers for webhooks: IFTTT require specific headers to function</li>
</ul>
<p>I also wrote <a href="https://news.echofeed.app/echofeed-and-posse/">on the EchoFeed blog</a> about where EchoFeed fits with POSSE and what I want the service to be: &quot;<em>A no-hassle cross-poster for the IndieWeb</em>&quot;. There are other features I am considering that have been suggested and if I think they meet the goals of EchoFeed I will get them added.</p>
<p>Thank you to everyone who has signed up, written, or posted about EchoFeed, I really appreciate it.</p>
]]></content:encoded>
<pubDate>2024-04-26T11:28:19Z</pubDate>
</item>
<item>
<title>The Worlds of Podcasting</title>
<link>https://rknight.me/blog/the-worlds-of-podcasting/</link>
<guid>https://rknight.me/blog/the-worlds-of-podcasting/</guid>
<content:encoded><![CDATA[
<p>On <a href="https://atp.fm/582">this week's ATP</a> (around 25:00) John spoke about how a show he listens to said that a link would be on the website and he went out of his way to find that it just wasn't there. I feel bad for the hosts because I'm sure they <em>thought</em> this would be done. Marco spoke about the &quot;two worlds of podcasting&quot; where one understands the platform and the other either doesn't, or just doesn't care.</p>
<p>I've had this same experience with the <a href="https://open.spotify.com/show/6qckOLN3q2qpZilM6i1MKv">Scrubs rewatch show</a>. On it, their producer was lamenting not having somewhere to post a link to something being spoken about. No mention of show notes because I'm not convinced &quot;big podcast&quot; even knows they exist. This happened multiple times in the first ten or so episodes and I would try, like John, to find these links online <em>somewhere</em> but they just didn't exist. Even the tweets about the show wouldn't include links to the episodes just a &quot;link in bio&quot; which is less than useless to link to a specific episode. I stopped listening at around episode 15 because of this.</p>
<p>This shit is just lazy and I just don't even bother with shows like this any more. No show notes? You're out, you're barely even a podcast. Dynamic ad insertion? Definitely get fucked.</p>
]]></content:encoded>
<pubDate>2024-04-14T14:42:17Z</pubDate>
</item>
<item>
<title>EchoFeed</title>
<link>https://rknight.me/blog/echofeed/</link>
<guid>https://rknight.me/blog/echofeed/</guid>
<content:encoded><![CDATA[
<p>It’s taken a bit longer than expected but EchoFeed is now out of beta and ready for sign ups. If you wanna jump right in you can <a href="https://echofeed.app/register">sign up now</a>.</p>
<p>There’s a slew of features that have made it into the first release including support for:</p>
<ul>
<li>Mastodon</li>
<li>Micro.blog</li>
<li>Bluesky</li>
<li>GitHub</li>
<li>Webmentions</li>
<li>Web requests/webhooks</li>
</ul>
<p>Mastodon and Bluesky can automatically include images with your posts and if you want to get your posts in front of more people you can enable Amplify which will boost Mastodon posts from the dedicated account at <a href="https://beep.town/@echofeedamplify">@echofeedamplify@beep.town</a>.</p>
<p>Pricing is simple: you get one echo for free which updates every 15 minutes. For $25 a year you can upgrade to EchoFeed pro for unlimited echoes and updates every two minutes.</p>
<p>If you’re a member of <a href="https://home.omg.lol/referred-by/robb">omg.lol</a> you can get $5 off that price - just connect your account on the subscription page and the discount will be automatically applied.</p>
<p>EchoFeed has been running with an incredible group of beta testers for the past couple of weeks so everything should be ironed out. All of them have been great at finding the edge cases and bugs to help make EchoFeed as good as it can be:</p>
<ul>
<li><a href="https://neatnik.net">Adam</a></li>
<li><a href="%5Bhttps://grepjson%5D(https://grepjason.sh/)">Jason</a></li>
<li><a href="https://laker.tech/">Laker</a></li>
<li><a href="https://maique.eu/">maique</a></li>
<li><a href="https://vincentritter.com/">Vincent</a></li>
<li><a href="https://gabz.blog/">Gabz</a></li>
<li><a href="https://flamedfury.com/">fLaMEd</a></li>
<li><a href="https://kevquirk.com/">Kev</a></li>
<li><a href="https://binarydigit.cafe/">BinaryDigit</a></li>
<li><a href="https://ericmwalk.blog/">Eric</a></li>
<li><a href="https://jack.is/">Jack</a></li>
<li><a href="https://alpine.omg.lol/">Zachary</a></li>
<li><a href="https://anniegreens.lol/">Anne</a></li>
</ul>
<p><a href="https://echofeed.app">Check out EchoFeed now</a> and reach out to me <a href="https://social.lol/@robb">on Mastodon</a> or <a href="mailto:hello@echofeed.app">via email</a> if you have questions, suggestions, or you’ve found a bug.</p>
]]></content:encoded>
<pubDate>2024-04-12T19:28:37Z</pubDate>
</item>
<item>
<title>Link Dump #3</title>
<link>https://rknight.me/blog/link-dump-3/</link>
<guid>https://rknight.me/blog/link-dump-3/</guid>
<content:encoded><![CDATA[
<p>I hit 100 articles saved in Raindrop this week and there's no way I can post them all individually so here we go for link dump volume three.</p>
<hr />
<p>I got a <a href="https://rknight.me/blog/using-the-8bitdo-keyboard-on-macos/">new keyboard this week</a> and that led me down a rabbit hole of Mac utilities and also keycaps.</p>
<ul>
<li><a href="https://hyperkey.app/">Hyperkey</a> - <a href="https://joshuagrady.omg.lol">Joshua</a> mentioned this to me and I'm annoyed I didn't know about it sooner. This sets one key to do all four modifiers at once (<kbd>⇧</kbd> + <kbd>⌃</kbd> + <kbd>⌥</kbd> + <kbd>⌘</kbd>) for using with keyboard shortcuts in various apps.</li>
<li><a href="https://charmstone.app/">Charmstone</a> - This is by the same person as Hyperkey. Hold down <kbd>⌥</kbd> + <kbd>⌘</kbd> then move the mouse to get a grid of apps to switch to. I love this so much.</li>
</ul>
<p>I haven't tried these two yet but they were also sent to me after the keyboard post:</p>
<ul>
<li><a href="https://lowtechguys.com/rcmd/">rcmd - Switch apps instantly using the ⌘ Right Command key</a></li>
<li><a href="https://kbd.news/The-SpaceFN-concept-2315.html">The SpaceFN concept</a></li>
</ul>
<p>I ordered <a href="https://www.aliexpress.com/item/1005004415428803.html">this Mario question mark keycap</a> to replace my escape key because why not. I cannot afford for this to be a new hobby at all.</p>
<p>Fonts!</p>
<ul>
<li><a href="https://www.oliviaking.com/inclusive-sans">Inclusive Sans — Olivia King</a></li>
<li><a href="https://gitlab.com/Screwtapello/topaz-unicode">Screwtape / topaz-unicode · GitLab</a></li>
</ul>
<p>Web dev things™</p>
<ul>
<li><a href="https://stackoverflow.com/posts/64547280/revisions">This answer on Stack Overflow</a> made me feel stupid for not thinking of it before: to make all SVGs the same size as the paragraph they're in, just set the height (and width if you want) to <code>1em</code>. Simple solution.</li>
<li><a href="https://github.com/dylanaraps/pure-bash-bible">dylanaraps/pure-bash-bible: 📖 A collection of pure bash alternatives to external processes.</a></li>
<li><a href="https://jvns.ca/blog/2024/01/26/inside-git/">Inside .git</a></li>
<li>(Video) <a href="https://www.youtube.com/watch?app=desktop&amp;v=y6XCebnB9gs">Stow has forever changed the way I manage my dotfiles</a></li>
<li><a href="https://coryd.dev/posts/2024/go-ahead-and-block-ai-web-crawlers/">Go ahead and block AI web crawlers</a> and <a href="https://github.com/ai-robots-txt/ai.robots.txt">the accompanying repo</a></li>
<li><a href="https://unmaintained.tech/">No Maintenance Intended</a></li>
<li><a href="https://frontendmasters.com/blog/how-to-favicon-in-2024/">How to Favicon in 2024</a></li>
</ul>
<p>Everything else:</p>
<ul>
<li><a href="https://arthurbeaulieu.github.io/ORlyGenerator/">O'Rly Generator</a> - Generate O'Reilly book covers</li>
<li><a href="https://patorjk.com/software/taag/#p=display&amp;f=Rectangles&amp;t=Type%20Something%20">Text to ASCII Art Generator</a></li>
<li><a href="https://bookmark-rss.woodland.cafe/">Mastodon Bookmark RSS</a></li>
<li><a href="https://postmill.xyz/">Postmill</a> - Reddit-like open source project</li>
<li><a href="https://same.energy/">Same Energy | Visual Search Engine</a></li>
<li><a href="https://stract.com/">Stract</a> - &quot;Independent and open search&quot;</li>
<li><a href="https://deadsimplesites.com/">Dead Simple Sites — Minimal Website Inspiration</a></li>
<li><a href="https://anthonyhobday.com/sideprojects/saferules/">Visual design rules you can safely follow every time</a></li>
<li><a href="https://www.moviepostersperfected.com/get-access">Movie Posters Perfected</a></li>
<li><a href="https://gifcities.org/">GifCities</a></li>
<li><a href="https://hellnet.work/8831/">THE 88×31 ARCHIVE</a></li>
<li>(Video) <a href="https://www.youtube.com/watch?v=BuEziDm9gQw">Making a Macintosh Studio</a> - This is amazing</li>
<li><a href="https://www.lego.com/en-us/minifigure-factory?consent-modal=show&amp;age-gate=grown_up">Lego Minifigure Factory</a> - As soon as this is open again I'll be ordering one</li>
</ul>
]]></content:encoded>
<pubDate>2024-03-30T14:11:29Z</pubDate>
</item>
<item>
<title>Using the 8BitDo Keyboard on MacOS</title>
<link>https://rknight.me/blog/using-the-8bitdo-keyboard-on-macos/</link>
<guid>https://rknight.me/blog/using-the-8bitdo-keyboard-on-macos/</guid>
<content:encoded><![CDATA[
<p>This week I bought the <a href="https://www.8bitdo.com/retro-mechanical-keyboard/">8BitDo Retro Mechanical Keyboard</a> which is not supported by MacOS, at least according to their website. I came across <a href="https://www.reddit.com/r/8bitdo/comments/17aszl4/8bitdo_mechanical_keyboard_on_mac/">this Reddit post</a> that said it <em>does work</em> so I decided to go for it. I think when they say it isn't supported they mean their <a href="https://app.8bitdo.com/Ultimate-Software-V2/">software for accessories</a> doesn't work on MacOS but I knew I didn't need that.</p>
<p>tl;dr: Yes it works on MacOS. The volume knob works. You can remap the keys to be more Mac-like.</p>
<p><img alt="The 8BitDo Keyboard" src="https://cdn.rknight.me/site/8bitdo-keyboard.jpg" /></p>
<p>The keyboard has Kailh Box White Switches, hot-swappable PCB, and supports n-key rollover. Apparently, those are words that mean things to people.</p>
<p>The first thing I did was swap the keys so the layout was closer to a Mac layout. I also prefer how it looks with the <kbd>A</kbd> and <kbd>B</kbd> keys in this configuration.</p>
<p>Because this is designed as a Windows keyboard I needed to swap what the <kbd>Command ⌘</kbd> and <kbd>Option ⌥</kbd> do. To do this I opened System Settings &gt; Keyboard &gt; Keyboard Shortcuts &gt; Modifier Keys then switched them around. You can also use something like <a href="https://karabiner-elements.pqrs.org/">Karabiner-Elements</a> to remap keys.</p>
<p><img alt="MacOS keyboard system settings" src="https://cdn.rknight.me/site/keyboard-system-settings.jpg" /></p>
<p>However, the two buttons on the right (between <kbd>B</kbd> and <kbd>control</kbd>) are programmable so don’t trigger anything on press by default. To set these, you need to press the star button on the top of the keyboard, then hold down the key(s) you want it to use, then press the key you want to assign. The same method is used for assigning presses to <a href="https://shop.8bitdo.com/products/8bitdo-dual-super-buttons">the super buttons</a>.</p>
<p>The keyboard comes with one set of super buttons but it supports up to four sets. I have set one of them to trigger <kbd>⌃ ⇧ C</kbd> to bring up Alfred's clipboard search and the other is set to <kbd>F12</kbd> which triggers a Honk sound via my <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/honk">Honk Alfred workflow</a>. I am tempted to buy some more buttons but I'm going to see if I actually use them for much first.</p>
<p>It has a volume knob on the top left that works perfectly on MacOS. It also supports wired connection, bluetooth connection, as well as it's own dongle. I haven't tried the dongle but both wired and Bluetooth work very well.</p>
<p>I've not used a mechanical keyboard for a long time, certainly not a modern one, but I like typing on it. I doubt I'm going to become a mechanical keyboard person because the last thing I need is another expensive hobby but I can feel the call of custom keycaps already.</p>
<p>I considered getting the <a href="https://shop.8bitdo.com/products/8bitdo-n30-2-4ghz-wireless-mouse-for-windows-and-mac-pc-dvd">matching mouse</a> but I doesn’t look very ergonomic and I suspect wouldn’t help my RSI issues.</p>
]]></content:encoded>
<pubDate>2024-03-27T20:30:08Z</pubDate>
</item>
<item>
<title>Ruminate is Joining MacStories</title>
<link>https://rknight.me/blog/ruminate-is-joining-to-macstories/</link>
<guid>https://rknight.me/blog/ruminate-is-joining-to-macstories/</guid>
<content:encoded><![CDATA[
<p><img alt="Ruminate Artwork" src="https://cdn.rknight.me/site/ruminate-rounded-sm.jpg" /></p>
<p>I can't find the original tweet, nor do I know which one of us sent it, but some time in the summer of 2015 either John or I sent the other a tweet that said &quot;We should start a podcast&quot; and <a href="https://rumimatepodcast.com">Ruminate</a> was born (after quite a few never-to-be-published &quot;pilot&quot; episodes).</p>
<p>Over those seven years we've published 180 episodes and covered all kinds of topics starting with <a href="https://www.theguardian.com/global-development/2014/mar/02/pizza-hut-2880-calorie-monstrosity-worlds-burgeoning-food-crisis">the burger crust pizza</a> on the <a href="https://ruminatepodcast.com/1/">first episode</a> all the way to now where John <a href="https://ruminatepodcast.com/179/">got spicy about Arc and AI</a>. We've encouraged each to buy stupid stuff and eat terrible food. Mostly we've had a lot of fun. In my <a href="https://rknight.me/blog/ruminate-podcast/">announcement blog post</a> I said:</p>
<blockquote>
<p>we'll be talking about how technology helps solve problems, as well as some non-tech related topics like terrible food</p>
</blockquote>
<p>I think we nailed it.</p>
<p>As of today, Ruminate is part of <a href="https://macstories.net/ruminate">MacStories</a> but the show isn't changing. We'll still talk about <a href="https://www.crocs.com/KFC.html">KFC crocs</a>, <a href="https://www.panchosburritos.co.uk/product/takis-crisps/">spicy crisps</a>, and anything else we can think of. We <em>will</em> be sticking to the schedule better though. If you're already subscribed you don't need do anything. If you've not listened before, now is a great time to jump in - all the links you need are on the <a href="https://ruminatepodcast.com">Ruminate website</a> and the dedicated <a href="https://macstories.net/ruminate">page on MacStories</a>. John also <a href="https://www.macstories.net/news/ruminate-joins-macstories">wrote a post about it here</a>.</p>
]]></content:encoded>
<pubDate>2024-03-19T14:00:00Z</pubDate>
</item>
<item>
<title>We Need to Talk About Your Eleventy Post Dates</title>
<link>https://rknight.me/blog/eleventy-post-dates/</link>
<guid>https://rknight.me/blog/eleventy-post-dates/</guid>
<content:encoded><![CDATA[
<p>Since I really got back into following RSS feeds in the past couple of years I've noticed a problem with Eleventy sites<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> and post dates. This also caused me an issue while building <a href="https://echofeed.app">EchoFeed</a> but that's a story for another day. If I didn't know better I'd think everyone is scheduling their posts at midnight.</p>
<p>It's 3:15pm as I write this. Assume you create a post in Eleventy and set some frontmatter like so:</p>
<pre class="language-md"><code class="language-md"><span class="token front-matter-block"><span class="token punctuation">---</span><br /><span class="token front-matter yaml language-yaml"><span class="token key atrule">title</span><span class="token punctuation">:</span> We Need to Talk About Your Eleventy Post Dates<br /><span class="token key atrule">date</span><span class="token punctuation">:</span> <span class="token datetime number">2024-03-14</span></span><br /><span class="token punctuation">---</span></span></code></pre>
<p>So the date is today and the title is <code>We Need to Talk About Your Eleventy Post Dates</code>. You finish up the actual post, deploy your site, and you're done. Then it shows up in my RSS reader but it looks like this:</p>
<p><img alt="A post as it shows in the RSS feed" src="https://cdn.rknight.me/site/post-date.jpg" /></p>
<p>Notice it says midnight as the time. This is because we didn't include a time with the <code>date</code>. This isn't a problem in isolation unless you happen to be a multiple-posts-a-day kind of person but if this is posted at 15:15 and I check my RSS reader for posts made today right after it's posted for the first time that day, this post is actually at the bottom of all the posts.</p>
<p>I'm guilty of this too - any of my posts prior to 2021ish all have no time specified. New posts since then have the date set in the metadata in ISO format:</p>
<pre class="language-md"><code class="language-md">date: 2024-03-14T15:14:14.578Z</code></pre>
<p>Maybe you don't care about this which I totally get but I also think there might be some people who didn't even realise this was happening with their posts.</p>
<p>Update: this is also explained in more detail <a href="https://www.11ty.dev/docs/dates/#dates-off-by-one-day">on the Eleventy docs</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>This might also be a problem with other static site generators but I didn't check <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-03-14T15:14:14Z</pubDate>
</item>
<item>
<title>One a Month Club</title>
<link>https://rknight.me/blog/one-a-month-club/</link>
<guid>https://rknight.me/blog/one-a-month-club/</guid>
<content:encoded><![CDATA[
<p><img alt="Welcome to the Knight Club" src="http://cdn.rknight.me/site/knightclub.jpg" /></p>
<p>Jarrod <a href="https://jb.heydingus.net/2024/03/11/too-tired-to.html">set up a site</a> a few days ago, <a href="https://oneamonth.club">One a Month Club</a>, which is a collection of people offering memberships at $1 a month. This was inspired by <a href="https://manuelmoreale.com/one-a-month">Manu's post</a> about the same thing:</p>
<blockquote>
<p>I recently realized that tiers are the wrong approach [...] I also realized that 1$+/month is the best price possible when it comes to supporting online creators</p>
</blockquote>
<p>My <a href="https://www.buymeacoffee.com/rknightuk">Buy Me a Coffee page</a>, aside from having the existing one-time buy option, now has a £1 a month membership option. I've called it &quot;The Knight Club&quot; because that is the best pun and I am the worst. To quote myself:</p>
<blockquote>
<p>This is the Knight Club. All money will go towards web things like hosting, domains, and the occasional energy drink to keep me going. Just some support that says &quot;I think the things you're doing are cool and you're very handsome&quot;. Okay, maybe not that second part.</p>
</blockquote>
<p>Right now I'm not offering anything extra except the satisfaction of making me smile but I might add some perks in the future when I think of something that's appropriate; I don't want to paywall the things I make, those are better served being available to everyone but <em>something</em>. As a treat.</p>
<p>Anyway, go check out the <a href="https://oneamonth.club">One a Month Club</a> to see lots of great people doing cool internet things and if you want you can <a href="https://www.buymeacoffee.com/rknightuk">become a member of the Knight Club</a>.</p>
]]></content:encoded>
<pubDate>2024-03-13T22:09:29Z</pubDate>
</item>
<item>
<title>Link Dump #2</title>
<link>https://rknight.me/blog/link-dump-2/</link>
<guid>https://rknight.me/blog/link-dump-2/</guid>
<content:encoded><![CDATA[
<p>Time for Link Dump #2. Lots of interesting links and not enough time to post them all separately. Here we go:</p>
<ul>
<li><a href="https://built.organic/">Organic Software Directory</a> - This is fun. A bit quiet right now but I'll be keeping an eye on it.</li>
<li><a href="https://lewisdale.dev/post/using-gitea-github-actions-for-triggering-echo/">Using Gitea/Github actions for triggering Echo</a> - Lewis is running <a href="https://echo.rknight.me">Echo</a> on GitHub actions and wrote about it. <a href="https://echofeed.app">He might not need to do this for much longer 👀</a></li>
<li><a href="https://lynnandtonic.com/thoughts/entries/i-archived-my-tweets/">I archived my tweets</a> - Lynn did a great job here making her archive look like the Twitter site.</li>
<li><a href="https://png-draw.replit.app/">pngdraw</a> - Use any image as a brush</li>
<li><a href="https://havn.blog/2024/03/11/i-just-want.html">I Just Want a Nice Browser!</a> - Don't we all.</li>
<li><a href="https://jsoncanvas.org/">JSON Canvas — An open file format for infinite canvas data.</a> - Obsidian have released a spec for their canvas format.</li>
<li><a href="https://doingweeknotes.com/">Doing weeknotes</a> - I've been meaning to try doing some weeknotes and this is a great collection of notes and articles about it.</li>
<li><a href="https://aboutideasnow.com/">About Ideas Now</a> - This is cool. I need to add an <code>/ideas</code> page</li>
</ul>
<p>Some new fonts I've discovered:</p>
<ul>
<li><a href="https://shantellsans.com/">Shantell Sans</a> - I need to use this <em>somewhere</em>. I love it.</li>
<li>Same with <a href="https://www.herda.me/work/achieve">Lauren Herda's Achieve</a></li>
<li><a href="https://github.com/andirueckel/undefined-medium">andirueckel/undefined-medium</a></li>
</ul>
<p>And some web dev related things:</p>
<ul>
<li><a href="https://frontendmasters.com/blog/basic-dialog-usage-and-gotchas-to-watch-for/">Basic Dialog Usage and Gotchas To Watch For</a> - The <code>dialog</code> element is great but it's easy to use it wrong.</li>
<li><a href="https://mostlypixels.com/webdesign/2023/12/15/smol-images">Why smol images are better</a></li>
<li><a href="https://webkit.org/blog/15054/an-html-switch-control/">An HTML Switch Control</a> - Details on the new UI for checkboxes in Safari 17.4</li>
</ul>
<p>All of these are archived in <a href="https://links.rknight.me/">my LinkAce</a>.</p>
]]></content:encoded>
<pubDate>2024-03-12T11:51:35Z</pubDate>
</item>
<item>
<title>Things I Like: The Incomparable Back to the Future</title>
<link>https://rknight.me/blog/things-i-like-the-incomparable-back-to-the-future/</link>
<guid>https://rknight.me/blog/things-i-like-the-incomparable-back-to-the-future/</guid>
<content:encoded><![CDATA[
<p>It’s well known how much I love Back to the Future so I was excited to see The Incomparable cover Back to the Future the past three episodes. Back in 2011 they did <a href="https://www.theincomparable.com/theincomparable/41/">a single episode for all three movies</a> which, as Jason noted, is not nearly enough time to <em>really</em> discuss these movies.</p>
<ul>
<li><a href="https://www.theincomparable.com/theincomparable/704/">Part I - Kramer Before Kramer</a></li>
<li><a href="https://www.theincomparable.com/theincomparable/705/">Part II - A Legacy of Biffs</a></li>
<li><a href="https://www.theincomparable.com/theincomparable/706/">Part III - Riff on Biff</a></li>
</ul>
<p>I agree with a lot of the criticism against the second movie especially in regards to Jennifer. I can’t find a source now, it might be one of the bonus DVD features, but Bob Gale admitted that if they’d known they would do a sequel to the first movie they would never have put Jennifer in the car on the way to the future. That doesn’t excuse the crapping of her but it at least explains why it’s like it is.</p>
<p>The <a href="https://en.wikipedia.org/wiki/Back_to_the_Future_(TV_series)">animated series</a> was also mentioned as something worth watching and I agree but I’d also say the <a href="https://backtothefuture.fandom.com/wiki/Back_to_the_Future_comics">IDW comics</a> are worth reading for fans of the movies. There’s some great back story (Doc was part of the Manhattan Project, for example) and it fills in a lot of what went on in the alternate 1985 before Doc and Marty show up like the death of George McFly.</p>
<p>I constantly flip-flop between which is my favourite but after listening to these, despite the criticism, I still think part two is my favourite of the three; I’m a sucker for revisiting previous scenes (or in this case the previous movie).</p>
]]></content:encoded>
<pubDate>2024-03-10T08:33:39Z</pubDate>
</item>
<item>
<title>Building a Mastodon Gif Bot</title>
<link>https://rknight.me/blog/building-a-mastodon-gif-bot/</link>
<guid>https://rknight.me/blog/building-a-mastodon-gif-bot/</guid>
<content:encoded><![CDATA[
<blockquote>
<p>So, I am converting every line of dialog of Office Space into a .gif. If that was to be a Mastobot, is that something you might be able to give some pointers on in the future?</p>
</blockquote>
<p>This was a message I got from <a href="https://grepjason.sh">Jason</a> seven weeks ago. Jason then spent the next 28 hours converting <a href="https://www.themoviedb.org/movie/1542-office-space">Office Space</a> into just over 1000 gifs and sent them to me so I could get to work on the bot code itself.</p>
<p>Jason <a href="https://grepjason.sh/2024/officespace-gif">wrote a post</a> about how he converted the movies to gifs and the adventure he went on trying to find an instance to host it. He also <a href="https://grepjason.sh/office">set up a page</a> to show a gif on each load if you're into that sort of thing.</p>
<p><img alt="Office Space bot toot" src="https://cdn.rknight.me/site/office-space-bot.jpg" /></p>
<p>I started by modifying the code I wrote for <a href="https://knightbot.rknight.me">KnightBot</a> which runs my bots on <a href="https://bugle.lol/timeline">Bugle</a>. A bot for posting gifs has three parts to it:</p>
<ol>
<li>Pick a random gif from a list</li>
<li>Check if that gif has been posted before</li>
<li>Post it to Mastodon</li>
</ol>
<p>To pick a random gif the first thing I needed to do was setup the file structure for the script:</p>
<pre class="language-bash"><code class="language-bash">├── data/<br />│   └── officespace_gifs/<br />├── index.js<br />└── .env</code></pre>
<p>I wanted this to be able to work for multiple bots so the prefix of <code>officespace</code> is important on the <code>officespace_gifs</code> folder - this is the bot key used to run the script: <code>node index.js officespace</code>. The <code>.env</code> file contains <code>INSTANCE</code>, the instance we're posting to and <code>officespace_TOKEN</code> which is the access token for Mastodon. This also uses the bot key.</p>
<p>The <code>index.js</code> file sets the current path (so the script can be run from anywhere), checks for a matching bot (in this case, <code>officespace</code>), then checks for a <code>.previous</code> file. This file is what keeps track of which gifs have been posted previously. If one doesn't exist, it will create it:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">'fs'</span><br /><span class="token keyword">import</span> postToMastodon <span class="token keyword">from</span> <span class="token string">'./poster.js'</span><br /><br /><span class="token keyword">const</span> bots <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string">'officespace'</span><br /><span class="token punctuation">]</span><br /><br /><span class="token keyword">const</span> currentPath <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'index.js'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> <span class="token function-variable function">getPreviousData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">botKey</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> previousPath <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>currentPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">data/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>botKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.previous</span><span class="token template-punctuation string">`</span></span><br />    <span class="token keyword">const</span> previousDataExists <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span>previousPath<span class="token punctuation">)</span><br /><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>previousDataExists<span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'🗒️ Making previous file'</span><span class="token punctuation">)</span><br />        fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span>previousPath<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">return</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>previousPath<span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> botKey <span class="token operator">=</span> process<span class="token punctuation">.</span>argv<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><br /><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>botKey<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'❌ You must pass a bot key'</span><span class="token punctuation">)</span><br />        <span class="token keyword">return</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>bots<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>botKey<span class="token punctuation">)</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'❌ No bot found'</span><span class="token punctuation">)</span><br />        <span class="token keyword">return</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token function">getPreviousData</span><span class="token punctuation">(</span>botKey<span class="token punctuation">)</span><br /><br />    <span class="token comment">// ...</span><br /><span class="token punctuation">}</span></code></pre>
<p>Once I have the previous data, I get a list of the gifs from <code>officespace_gifs</code>, pick a random one, then check if it's already been posted: if it has, I pick a new one until I get one that hasn't and add it to the <code>.previous</code> file.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">let</span> previous <span class="token operator">=</span> <span class="token function">getPreviousData</span><span class="token punctuation">(</span>botKey<span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> gifs <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readdirSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>currentPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">data/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>botKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_gifs</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br /><br /><span class="token keyword">let</span> found <span class="token operator">=</span> gifs<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> gifs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><br /><br /><span class="token keyword">while</span> <span class="token punctuation">(</span>previous<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>found<span class="token punctuation">)</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    found <span class="token operator">=</span> gifs<span class="token punctuation">[</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> gifs<span class="token punctuation">.</span>length<span class="token punctuation">)</span><span class="token punctuation">]</span><br /><span class="token punctuation">}</span><br /><br />previous <span class="token operator">+=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>found<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br />fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>currentPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">data/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>botKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.previous</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> previous<span class="token punctuation">)</span><br /><br /><span class="token keyword">await</span> <span class="token function">postToMastodon</span><span class="token punctuation">(</span>botKey<span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>currentPath<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">data/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>botKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_gifs/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>found<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br /></code></pre>
<p>Now I have a gif, I use the <a href="https://www.npmjs.com/package/masto"><code>masto</code></a> library to post it to Mastodon:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">'fs'</span><br /><span class="token keyword">import</span> <span class="token punctuation">{</span> createRestAPIClient <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'masto'</span><br /><span class="token keyword">import</span> dotenv <span class="token keyword">from</span> <span class="token string">'dotenv'</span><br />dotenv<span class="token punctuation">.</span><span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">botKey<span class="token punctuation">,</span> filepath<span class="token punctuation">,</span> description</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> masto <span class="token operator">=</span> <span class="token function">createRestAPIClient</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />        <span class="token literal-property property">url</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">INSTANCE</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">accessToken</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">[</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>botKey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">_TOKEN</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> attachment <span class="token operator">=</span> <span class="token keyword">await</span> masto<span class="token punctuation">.</span>v2<span class="token punctuation">.</span>media<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />        <span class="token literal-property property">file</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>filepath<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">description</span><span class="token operator">:</span> description<span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> status <span class="token operator">=</span> <span class="token keyword">await</span> masto<span class="token punctuation">.</span>v1<span class="token punctuation">.</span>statuses<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />        <span class="token literal-property property">status</span><span class="token operator">:</span> <span class="token string">''</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">visibility</span><span class="token operator">:</span> <span class="token string">"public"</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">mediaIds</span><span class="token operator">:</span> <span class="token punctuation">[</span>attachment<span class="token punctuation">.</span>id<span class="token punctuation">]</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">return</span> status<br /><span class="token punctuation">}</span></code></pre>
<p>I handed the code over to Jason, he ran it, and hey presto we had the <a href="https://beep.town/@initech/112016930647587447">first toot</a>.</p>
<p>Since then, Jason kindly ran his script on Back to the Future, my favourite movie of all time, so I could set up <a href="https://beep.town/@greatscott">@greatscott</a> to do the same thing. Since last night, he also has a <a href="https://beep.town/@zion">Matrix one too</a>. He cannot be stopped.</p>
<p><img alt="Back to the Future bot toot" src="https://cdn.rknight.me/site/bttf-bot.jpg" /></p>
<p>You can follow <a href="https://beep.town/@initech">@initech</a>, <a href="https://beep.town/@greatscott">@greatscott</a>, and <a href="https://beep.town/@zion">@zion</a> on Mastodon and the code for <a href="https://github.com/rknightuk/gifbot">GifBot is on Github</a>.</p>
]]></content:encoded>
<pubDate>2024-03-04T14:51:15Z</pubDate>
</item>
<item>
<title>Fix Missing Distutils on MacOS</title>
<link>https://rknight.me/blog/fix-missing-distutils-on-macos/</link>
<guid>https://rknight.me/blog/fix-missing-distutils-on-macos/</guid>
<content:encoded><![CDATA[
<p>Sometimes I hate computers. This evening I lost two hours to a stupid issue that had me doing all sorts of command line nonsense trying to fix it.</p>
<p>I tried to install <code>xml2json</code> with npm and was presented with a wall of errors culminating in the actual error of <code>No module named 'distutils'</code>. It's related to <code>node-gyp</code> and anyone who's been using MacOS and node long enough knows this is always a pain in the arse.</p>
<p>After a lot of googling and reinstalling Xcode command line tools, it turns out when I'd upgraded some brew packages earlier in the evening this had upgraded my python install from 3.11 to 3.12; the latter of which <em>removes</em> the aforementioned <code>distutils</code>. So I uninstalled python and did <code>brew install python@3.11</code> and it was fixed.</p>
<p>Fucking computers.</p>
<p>Update 2024-03-02: As <a href="https://mastodon.social/@xavdid/112024862625453237">David pointed out on Mastodon</a> this is a possibly temporary solution that might cause issues in the future. The real solution (although I don't remember if I tried this or not) is to do <code>pip install setuptools</code> as per <a href="https://github.com/nodejs/node-gyp/issues/2869">this GitHub issue</a>.</p>
]]></content:encoded>
<pubDate>2024-03-01T23:00:14Z</pubDate>
</item>
<item>
<title>QuickNote Alfred Workflow</title>
<link>https://rknight.me/blog/quicknote-alfred-workflow/</link>
<guid>https://rknight.me/blog/quicknote-alfred-workflow/</guid>
<content:encoded><![CDATA[
<p>A conversation yesterday in the <a href="https://hemisphericviews.com/">Hemispheric Views Discord</a> pushed me towards an idea I'd had for a workflow for a while: type some text, append that text to a note.</p>
<p><img alt="QuickNote window" src="https://cdn.rknight.me/site/quicknote-window.jpg" /></p>
<p>Don't care about the how? <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/quicknote">Download QuickNote here</a>.</p>
<p>As Alfred workflows go it's pretty simple: just three objects.</p>
<p><img alt="QuickNote objects in Alfred" src="https://cdn.rknight.me/site/quicknote-objects.jpg" /></p>
<p>The first is the keyword and getting the input. Typing <code>quicknote This is a note</code> will add <code>This is a note</code> to whatever file I've set in the configuration. The second script takes the input and formats it based on the settings the workflow has:</p>
<ul>
<li>The date can be included with a note and formatted with <a href="https://day.js.org/docs/en/display/format">day.js</a></li>
<li>The output can be customised with the <code>{date}</code> and <code>{note}</code> variables so if you want the note to be added with <code>-</code> for a markdown list, you can do that</li>
</ul>
<p>The formatting script, aside from importing day.js, is pretty small:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// dayjs imported here</span><br /><br /><span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token parameter">argv</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    ObjC<span class="token punctuation">.</span><span class="token function">import</span><span class="token punctuation">(</span><span class="token string">'stdlib'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />	<span class="token keyword">const</span> input <span class="token operator">=</span> argv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br /><br />	<span class="token keyword">const</span> dateFormat <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">'date_format'</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">'yyyy-mm-dd'</span><br />    <span class="token keyword">const</span> date <span class="token operator">=</span> <span class="token function">dayjs</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>dateFormat<span class="token punctuation">)</span><br />    <span class="token keyword">const</span> noteFormat <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">getenv</span><span class="token punctuation">(</span><span class="token string">'note_format'</span><span class="token punctuation">)</span> <span class="token operator">??</span> <span class="token string">'{note}'</span><br /><br />    <span class="token keyword">return</span> noteFormat<br />        <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">{date}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> date<span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">{note}</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> input<span class="token punctuation">)</span><br /><span class="token punctuation">}</span> </code></pre>
<p>The last script is the one that adds the note to the file and is written in bash. This file takes into account the final setting of the workflow: should the note be appended or prepended.</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># this is the formatted note from the previous script</span><br /><span class="token assign-left variable">query</span><span class="token operator">=</span><span class="token variable">$1</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$add_option</span> <span class="token operator">=</span> <span class="token string">"start"</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />	<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token variable">$query</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> $quicknotefile<span class="token variable">)</span></span>"</span> <span class="token operator">></span> <span class="token variable">$quicknotefile</span> <br /><span class="token keyword">else</span><br />	<span class="token builtin class-name">echo</span> <span class="token parameter variable">-e</span> <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> $quicknotefile<span class="token variable">)</span></span><span class="token entity" title="\n">\n</span><span class="token variable">$query</span>"</span> <span class="token operator">></span> <span class="token variable">$quicknotefile</span><br /><span class="token keyword">fi</span></code></pre>
<p>This is one of those workflows that's pretty simple and I've been meaning to build for a while but just didn't find the time to do it. I've pointed it at my &quot;inbox&quot; file in Obsidian to quickly add ideas and thing I need to check out.</p>
<p><a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/quicknote">Download QuickNote for Alfred workflow on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2024-02-29T13:08:57Z</pubDate>
</item>
<item>
<title>Some Alfred Workflow Updates</title>
<link>https://rknight.me/blog/some-alfred-workflow-updates/</link>
<guid>https://rknight.me/blog/some-alfred-workflow-updates/</guid>
<content:encoded><![CDATA[
<p>I use, and make, <a href="/alfred-workflows">a lot of Alfred Workflows</a>. Some of them I rely on every day, some only come in handy on occasion, and sometimes I build something then realise I actually don't need it. I've spent some time the past week sorting out some lingering problems with a couple of them, looking into the <a href="https://github.com/rknightuk/alfred-workflows/issues">filed issues on GitHub</a>, and deciding to archive one that I don't use and also don't have time to update.</p>
<h3>Agenda</h3>
<p>Agenda was a big project I was <em>very</em> into when I was working on it then I just...didn't use it. It uses an unsigned binary because I'm not paying Apple $100 to sign it. It has permission errors in some scenarios, timezones are always a problem, and the reminders API doesn't support a lot of things people would want. Most of the GitHub issues are about this and I just don't have the time or inclination to try and fix them. This workflow is being retired and I'll be closing the issues with a link to this post.</p>
<h3>Hot Key List</h3>
<p>I never use this one and it has a lot of problems so it's being retired.</p>
<h3>Twitter Archive Search</h3>
<p>Andy filed an issue on <a href="https://github.com/rknightuk/alfred-workflows/issues/30">this last year</a> and I figured the format of Twitter's export had changed. Turns out I'm a bit of an idiot. Changes:</p>
<ul>
<li>Fixed issue where the JSON couldn't be parsed</li>
<li>Updated the path variable to use Alfred's file picker</li>
<li>Added optional <code>tweet_url</code> variable to open tweets on another service, like <a href="https://github.com/tweetback/tweetback">Tweetback</a></li>
</ul>
<h3>Gif Search</h3>
<p><a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/gifsearch">Gif search</a> is up there in my most-used workflows so when I saw the new <a href="https://www.alfredapp.com/help/workflows/user-interface/grid/">Alfred 5.5 grid view</a> I knew I had to update it to support this. Doing so was fairly easy with one caveat - the workflow now requires pressing enter instead of a space after typing the keyword to search. Not a massive issue, but notable. This version requires the 5.5 beta of Alfred to use.</p>
<p><img alt="Gif search with grid view" src="https://cdn.rknight.me/site/gif-search-grid-view.jpg" /></p>
<p>You can view all <a href="/alfred-workflows">my Alfred workflows here</a>.</p>
]]></content:encoded>
<pubDate>2024-02-27T14:44:09Z</pubDate>
</item>
<item>
<title>Using Eleventy to Gobble Up Everything I Do Online</title>
<link>https://rknight.me/blog/using-eleventy-to-gobble-up-everything-i-do-online/</link>
<guid>https://rknight.me/blog/using-eleventy-to-gobble-up-everything-i-do-online/</guid>
<content:encoded><![CDATA[
<p>This post is adapted from the talk I did at <a href="https://11tymeetup.dev/events/ep-18-building-community-and-online-activity/">the Eleventy Meetup</a>. You can also <a href="https://www.youtube.com/watch?v=e_87IF7KGgo">watch the talk on YouTube</a>.</p>
<p>This is what I look like when I try to explain how my website works:</p>
<p><img alt="Me explaining how my website works" src="https://cdn.rknight.me/site/pepesilvia-11ty.jpg" /></p>
<p>There are three main parts that make up this website: <a href="https://echo.rknight.me">Echo</a>, <a href="https://github.com/rknightuk/api">my API server</a> (and Eleventy data files), and standard Markdown files.</p>
<h3>Echo and Custom Post Text</h3>
<p>Echo started life as a cross-posting tool to post from an RSS feed to Micro.blog. Since then I've added support for webhooks, Mastodon, <a href="https://www.linkace.org">LinkAce</a>, <a href="https://omnivore.app/home">Omnivore</a>, and GitHub. If we take Letterboxd as an example. I <a href="https://letterboxd.com/rknightuk/film/the-super-mario-bros-movie/">post a review</a> on there that gets added to <a href="http://letterboxd.com/rknightuk/rss">the RSS feed</a>. Echo will fetch that new review and create a new post in the git repository on GitHub, the site rebuilds, and the review now <a href="/almanac/movies/2024-02-16-the-super-mario-bros-movie/">exists as a post</a>. I then use Echo <em>again</em> to read the RSS feed of my movie reviews and post that <a href="https://social.lol/@robb/111943358114444166">to Mastodon</a>.</p>
<p><img alt="The file commited on GitHub and the post that went to Mastodon" src="https://cdn.rknight.me/site/git-commit-and-mastodon.jpg" /></p>
<p>Rather than just send the title and link to Mastodon, I prefer to include some (or all) of the post content with the toot as well. To do this, I added a <code>makeTootText</code> filter and a <code>mastodonCounter</code> function which I got <a href="https://github.com/mastodon/mastodon/blob/5d5c0f4f4358f4349d9e2db59cf90b1f5de24e81/app/javascript/mastodon/features/compose/util/url_regex.js">from the Mastodon project</a>. This filter check the type of post it is, checks if it will fit on Mastodon's limit of 500 characters, then adds it to the <code>_knightposse</code> object in the JSON feed.</p>
<pre class="language-js"><code class="language-js"><span class="token string-property property">"_knightposse"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />    <span class="token string-property property">"about"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/about/colophon/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"text"</span><span class="token operator">:</span> <span class="token string">"⭐ Apple is twisting the truth by @manton@manton.org https://www.manton.org/2024/02/16/apple-is-lying.html\n\n\"For example, to comply with the DMA’s requirements on sideloading or marketplaces, Apple could’ve chosen a system similar to installing apps from TestFlight. This would require zero new APIs for developers, just as TestFlight itself has no new APIs when building a beta version of your app.\"\n\nAnother DMA link. All of this is just gross and completely ignores what the DMA was attempting to do.\n\n📌 https://rknight.me/links/apple-is-twisting-the-truth/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"tags"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<p>At the moment I only customise <a href="/links">link</a> and <a href="/almanac">Almanac</a> posts so the filter returns just the title and link if the post isn't one of those types:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">let</span> content <span class="token operator">=</span> <span class="token string">''</span><br /><span class="token keyword">const</span> permalink <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://rknight.me</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>permalink<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">[</span><span class="token string">'link'</span><span class="token punctuation">,</span> <span class="token string">'almanac'</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>layout<span class="token punctuation">)</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">decode</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>permalink<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span></code></pre>
<p>I then use <a href="https://www.npmjs.com/package/cheerio">Cheerio</a> to get all the content as plain text which I combine with the title and link to check if it will fit on Mastodon. For Almanac posts, the filter also adds year, season, or platform information as relevant:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div id="content"></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">decode</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>content<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/div></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br /><span class="token keyword">let</span> allText <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#content'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>layout <span class="token operator">===</span> <span class="token string">'almanac'</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token keyword">let</span> title <span class="token operator">=</span> <span class="token punctuation">[</span><br />        <span class="token function">_getTypeEmoji</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">_getVerb</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>type<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br />        <span class="token function">decode</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">,</span><br />        post<span class="token punctuation">.</span>season <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Season </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>season<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><br />        post<span class="token punctuation">.</span>platform <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">(</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>platform<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span><br />    <span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=></span> t<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><br /><br />    content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>permalink<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br />    <span class="token keyword">const</span> contentWithReview <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>allText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span>mastodonCount<span class="token punctuation">.</span><span class="token function">getMastodonLength</span><span class="token punctuation">(</span>contentWithReview<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">500</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        content <span class="token operator">=</span> contentWithReview<br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">return</span> content<br /><span class="token punctuation">}</span></code></pre>
<p>For link posts, I mention the author if they have Mastodon as well as extracting any quotes so I can include those even if my full commentary won't fit:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">let</span> mastoUsername <span class="token operator">=</span> <span class="token keyword">null</span><br /><span class="token keyword">if</span> <span class="token punctuation">(</span>post<span class="token punctuation">.</span>author<span class="token punctuation">.</span>mastodon<span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token keyword">const</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>author<span class="token punctuation">.</span>mastodon<span class="token punctuation">)</span><br />    mastoUsername <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>url<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">@</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>url<span class="token punctuation">.</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span><br /><br />content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">⭐ </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">decode</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mastoUsername <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mastoUsername<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>post<span class="token punctuation">.</span>link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'blockquote'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    allText <span class="token operator">=</span> allText<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">"</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">$</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> contentWithAllText <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>allText<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n\n📌 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>permalink<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token keyword">const</span> firstQuote <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">"</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'blockquote'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><br /><span class="token keyword">const</span> contentWithFirstQuote <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>firstQuote<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n\n📌 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>permalink<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span>mastodonCount<span class="token punctuation">.</span><span class="token function">getMastodonLength</span><span class="token punctuation">(</span>contentWithAllText<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">500</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    content <span class="token operator">=</span> contentWithAllText<br /><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>mastodonCount<span class="token punctuation">.</span><span class="token function">getMastodonLength</span><span class="token punctuation">(</span>contentWithFirstQuote<span class="token punctuation">)</span><span class="token punctuation">.</span>length <span class="token operator">&lt;=</span> <span class="token number">500</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    content <span class="token operator">=</span> contentWithFirstQuote<br /><span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><br />    content <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>content<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n\n📌 </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>permalink<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">return</span> content</code></pre>
<p>In my config in <a href="https://echo.rknight.me">Echo</a> I can then use that data from the JSON feed for the new post on Mastodon:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br />    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'rknightalmanac'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">feed</span><span class="token operator">:</span> <span class="token string">'https://rknight.me/subscribe/almanac/feed.json'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">json</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">skipConversion</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">services</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token constant">SERVICES</span><span class="token punctuation">.</span><span class="token constant">MASTODON</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">transform</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">getId</span><span class="token operator">:</span> presets<span class="token punctuation">.</span>default<span class="token punctuation">.</span>getId<span class="token punctuation">,</span><br />        <span class="token function-variable function">format</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">return</span> <span class="token punctuation">{</span><br />                <span class="token literal-property property">content</span><span class="token operator">:</span> data<span class="token punctuation">.</span>_knightposse<span class="token punctuation">.</span>text<span class="token punctuation">,</span><br />                <span class="token literal-property property">date</span><span class="token operator">:</span> data<span class="token punctuation">.</span>date_published<span class="token punctuation">,</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<h3>API Server and Data Files</h3>
<p>I have an <a href="https://api.rknight.me/">API &quot;server&quot;</a> of sorts which collects information on various schedules depending on the service. To call it a server is a bit misleading, it's more like a bucket of node scripts that write JSON files. It fetches from multiple services for me including <a href="https://overcast.fm">Overcast</a>, <a href="https://www.last.fm/user/rknightuk">Last.fm</a>, <a href="https://social.lol/@robb">Mastodon</a>, and <a href="https://brickset.com/sets/ownedby-rknightuk">Brickset</a>.</p>
<p>The schedule is set by cron jobs and uses a makefile to define which jobs run when:</p>
<pre class="language-bash"><code class="language-bash">monday:<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/lastfm.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/books.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/psn.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/tv.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/links.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> now/generate.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> now/update.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> utils/backup.js<br />sunday:<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/overcast/backup.js<br />	python3 /home/forge/api.rknight.me/services/overcast/fetcher/fetch.py<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/overcast/parser/run.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/overcast/now.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> now/generate.js<br />daily:<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/github.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/other.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> now/generate.js<br />hourly:<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/webmentions.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/mastodon.js<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/micro.js<br />ten:<br />	<span class="token builtin class-name">cd</span> /home/forge/api.rknight.me<span class="token punctuation">;</span> <span class="token function">node</span> services/discussion.js</code></pre>
<p><a href="https://brickset.com/">Brickset</a> is a site for managing and tracking a Lego collection. I have somewhere around 200 sets but along with tracking them, I want to show them on my <a href="/collections/lego">collections page</a> rather than linking out to my profile there. I login, fetch my set collection, then map that to a nicer format for handling in Eleventy.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> <span class="token constant">BRICKSET_USERNAME</span><span class="token punctuation">,</span> <span class="token constant">BRICKSET_PASSWORD</span><span class="token punctuation">,</span> <span class="token constant">BRICKSET_API_KEY</span> <span class="token punctuation">}</span> <span class="token operator">=</span> process<span class="token punctuation">.</span>env<br /><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://brickset.com/api/v3.asmx/login?apiKey=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">BRICKSET_API_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;username=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">BRICKSET_USERNAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;password=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">BRICKSET_PASSWORD</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>response<span class="token punctuation">.</span>ok<span class="token punctuation">)</span> <span class="token keyword">return</span><br /><br /><span class="token keyword">const</span> userHash <span class="token operator">=</span> body<span class="token punctuation">.</span>hash<br /><br /><span class="token keyword">const</span> setResponse <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://brickset.com/api/v3.asmx/getSets?apiKey=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token constant">BRICKSET_API_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;userHash=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>userHash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;params={"owned":1,"pageSize":500,"orderBy":"YearFrom","orderBy":"Theme"}</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> rawData <span class="token operator">=</span> <span class="token keyword">await</span> setResponse<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// format the data</span></code></pre>
<p>This data is then written out to <code>api/brickset.json</code> and pulled into my site when it's built.</p>
<p><img alt="A sample of my Lego collection" src="https://cdn.rknight.me/site/lego-collection-example.jpg" /></p>
<p>Each service on the API works in a similar way: fetch the data, format it, then write it to a file. I won't go through all of them here but you can <a href="https://github.com/rknightuk/api">view the source code here</a>.</p>
<p>To give you some idea of how much I pull into my site, here is my <code>_data</code> directory. Each one of these represents either external data or hard-coded lists of things like projects:</p>
<pre class="language-txt"><code class="language-txt">└── data/<br />    ├── site/<br />    │   ├── config.js<br />    │   ├── explore.js<br />    │   ├── footerpages.js<br />    │   ├── links.js<br />    │   ├── production.js<br />    │   ├── projects.json<br />    │   └── save.js<br />    ├── adn.json<br />    ├── alfred.js<br />    ├── blogroll.js<br />    ├── discussion.js<br />    ├── fathom.js<br />    ├── games.json<br />    ├── micro.js<br />    ├── microboosts.js<br />    ├── mypodcasts.js<br />    ├── now.js<br />    ├── podcasts.js<br />    ├── podroll.js<br />    └── status.js</code></pre>
<p>Which brings me to my next point about using data files: any page that has a list of <em>things</em> I tend to use data files instead of writing them in the page itself. For example, my <a href="/projects">projects page</a> has a large amount of projects listed so I keep a JSON data file with all the projects and render them out from that.</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br />	<span class="token string-property property">"featured"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token punctuation">{</span> <span class="token string-property property">"title"</span><span class="token operator">:</span> <span class="token string">"Humonize!"</span><span class="token punctuation">,</span> <span class="token string-property property">"link"</span><span class="token operator">:</span> <span class="token string">"https://hum.rknight.me"</span><span class="token punctuation">,</span> <span class="token string-property property">"desc"</span><span class="token operator">:</span> <span class="token string">"Humonize forever"</span><span class="token punctuation">,</span> <span class="token string-property property">"image"</span><span class="token operator">:</span> <span class="token string">"humonize.png"</span> <span class="token punctuation">}</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"current"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token punctuation">{</span> <span class="token string-property property">"title"</span><span class="token operator">:</span> <span class="token string">"Alfred Workflows"</span><span class="token punctuation">,</span> <span class="token string-property property">"link"</span><span class="token operator">:</span> <span class="token string">"/alfred-workflows"</span><span class="token punctuation">,</span> <span class="token string-property property">"desc"</span><span class="token operator">:</span> <span class="token string">"All of my Alfred Workflows"</span><span class="token punctuation">,</span> <span class="token string-property property">"image"</span><span class="token operator">:</span> <span class="token string">"alfred.png"</span><span class="token punctuation">,</span> <span class="token string-property property">"tags"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"JS"</span><span class="token punctuation">,</span> <span class="token string">"AppleScript"</span><span class="token punctuation">,</span> <span class="token string">"Python"</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"podcasts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token punctuation">{</span> <span class="token string-property property">"title"</span><span class="token operator">:</span> <span class="token string">"Ruminate"</span><span class="token punctuation">,</span> <span class="token string-property property">"link"</span><span class="token operator">:</span> <span class="token string">"https://ruminatepodcast.com"</span><span class="token punctuation">,</span> <span class="token string-property property">"desc"</span><span class="token operator">:</span> <span class="token string">"A podcast about what's on our minds"</span><span class="token punctuation">,</span> <span class="token string-property property">"image"</span><span class="token operator">:</span> <span class="token string">"ruminate.png"</span><span class="token punctuation">,</span> <span class="token string-property property">"tags"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"11ty"</span><span class="token punctuation">,</span> <span class="token string">"Audio"</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token string-property property">"profile"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token punctuation">{</span> <span class="token string-property property">"title"</span><span class="token operator">:</span> <span class="token string">"omg.log cli"</span><span class="token punctuation">,</span> <span class="token string-property property">"link"</span><span class="token operator">:</span> <span class="token string">"https://github.com/rknightuk/omglolcli"</span><span class="token punctuation">,</span> <span class="token string-property property">"desc"</span><span class="token operator">:</span> <span class="token string">"A CLI tool for using omg.lol"</span><span class="token punctuation">,</span> <span class="token string-property property">"image"</span><span class="token operator">:</span> <span class="token string">"omgcli.png"</span><span class="token punctuation">,</span> <span class="token string-property property">"tags"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"JS"</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>Then in <code>projects.njk</code> I can loop through that data and output the HTML as needed:</p>
<pre class="language-hbs"><code class="language-hbs"><span class="token block keyword">###</span> <span class="token variable">Current</span> <br /><br /><span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"cards"</span><span class="token punctuation">></span><br /><span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">project</span> <span class="token variable">in</span> <span class="token variable">site</span><span class="token punctuation">.</span><span class="token variable">projects</span><span class="token punctuation">.</span><span class="token variable">current</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">include</span> <span class="token string">'project-card.njk'</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endfor</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span></code></pre>
<p><img alt="Sample of the projects output" src="https://cdn.rknight.me/site/example-projects.jpg" /></p>
<h3>Markdown files and the Command Line Tool</h3>
<p>The final component of the site is markdown files. These are used for <a href="/blog">blog posts</a>, <a href="/links">link posts</a>, <a href="/almanac">media reviews in Almanac</a>, and the <a href="/log">site changelog</a>. One of the things that's difficult with different post types like this is making sure to input all the correct metadata that's required for each type. For example, a blog post looks like this with title, tags, and an excerpt:</p>
<pre class="language-txt"><code class="language-txt">---<br />title: "Using Eleventy to Gobble Up Everything I Do Online"<br />permalink: /blog/using-eleventy-to-gobble-up-everything-i-do-online/index.html<br />date: 2024-02-20T16:47:27.981Z<br />excerpt: "A blog post about how my site works based on a talk I did at the Eleventy meetup"<br />layout: post<br />tags:<br />    - Development<br />    - Eleventy<br />---</code></pre>
<p>Link posts, on the other hand, have information about the author and the article being linked:</p>
<pre class="language-txt"><code class="language-txt">---<br />title: "Vision Accessibility on Apple Vision Pro"<br />permalink: /links/vision-accessibility-on-apple-vision-pro/index.html<br />link: https://zmknox.com/2024/02/18/vision-accessibility-on-apple-vision-pro<br />date: 2024-02-20T10:54:56.550Z<br />author: <br />  name: Zach Knox<br />  web: https://zmknox.com<br />  feed: https://zmknox.com/feed.xml<br />  mastodon: https://snailedit.social/@zmk<br />---</code></pre>
<p>To help with this, I built a CLI tool in Node. The tool uses a combination of <a href="https://www.npmjs.com/package/commander">Commander</a> to create the interface, and <a href="https://www.npmjs.com/package/inquirer">@inquirer</a> to ask questions and grab that data. When I run it, I am presented with a number of options:</p>
<pre class="language-txt"><code class="language-txt">............................................................<br />............................................................<br />..................@@@@@@@@@@@@@@,..&amp;@@@@@,..................<br />..................@@@@@@@@@@@@@...@@@@@@....................<br />........................@@@@@@...@@@@@@.....................<br />.......................@@@@@@...@@@@@@......................<br />.....................%@@@@@*..%@@@@@*.......................<br />.......................@@@@@@...@@@@@@......................<br />........................@@@@@@...@@@@@@.....................<br />..................@@@@@..@@@@@@...@@@@@@....................<br />..................@@@@@...#@@@@@/..#@@@@@/..................<br />............................................................<br />.......................rknight.me...........................<br />............................................................<br /><br />? What do you want to do? (Use arrow keys)<br />❯ Create a new post<br />  Create a new link post<br />  Create a new changelog entry<br />  Add a new project<br />  Add a new game<br />Create a new post</code></pre>
<p>If I choose &quot;Create a new post&quot; I get asked a bunch of questions about the post including title, slug, and tags:</p>
<pre class="language-txt"><code class="language-txt">? What do you want to do? Create a new post<br />? Post title A New Post<br />? Post slug a-new-post<br />? Tags Eleventy, OpenWeb<br />? Select Project none</code></pre>
<p>It then takes all this data, formats it to YAML frontmatter, and creates the file in the correct location. In this example, a file named <code>2024-02-21-a-new-post.md</code> will be created at <code>src/posts/blog</code> and the front matter will look like this:</p>
<pre class="language-txt"><code class="language-txt">---<br />title: "A New Post"<br />permalink: /blog/a-new-post/index.html<br />date: 2024-02-21T11:36:14.696Z<br />excerpt: ""<br />layout: post<br />tags:<br />    - Eleventy<br />    - OpenWeb<br />---</code></pre>
<p>I don't ask for the excerpt on the CLI because I'm not always sure what that will be until the post is finished. This is what the (truncated) code looks for creating a new post:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> title <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Post title'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> slug <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Post slug'</span><span class="token punctuation">,</span> <span class="token keyword">default</span><span class="token operator">:</span> <span class="token function">slugify</span><span class="token punctuation">(</span>title<span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> slugDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'T'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br /><span class="token keyword">const</span> year <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> postDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toISOString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> tags <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">checkbox</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">'Tags'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />        <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'ActivityPub'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'ActivityPub'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'AdventOfCode'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'AdventOfCode'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'AI'</span><span class="token punctuation">,</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'AI'</span> <span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token comment">// the rest of my tags</span><br />    <span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> project <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span><span class="token function">selectProject</span><span class="token punctuation">(</span>__siteroot<span class="token punctuation">,</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">let</span> meta <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">---<br />title: "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"<br />permalink: /blog/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.html<br />date: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>postDate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"><br />excerpt: ""<br />layout: post</span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span>tags<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    meta <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>meta<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\ntags:\n</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tags<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">tag</span> <span class="token operator">=></span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">    - </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tag<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">if</span> <span class="token punctuation">(</span>project<span class="token punctuation">.</span>value <span class="token operator">!==</span> <span class="token string">'none'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    meta <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>meta<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\nproject: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>project<span class="token punctuation">.</span>link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span><br /><br />meta <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>meta<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\n---</span><span class="token template-punctuation string">`</span></span><br /><br />fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>__siteroot<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/src/posts/blog/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>slugDate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.md</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> meta<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">"wx"</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>For link posts, I input a link and the CLI tool fetches the page content, then uses <a href="https://github.com/WebReflection/linkedom">linkedom</a> to find the title, author details, and RSS feed if those exist to include them in the front matter.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// ask for link, slug, title, etc</span><br /><br /><span class="token keyword">const</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">title</span><span class="token operator">:</span> foundTitle<span class="token punctuation">,</span> author<span class="token punctuation">,</span> feed<span class="token punctuation">,</span> mastodon<br /><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> utils<span class="token punctuation">.</span><span class="token function">fetchPageData</span><span class="token punctuation">(</span>link<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">'title'</span><span class="token punctuation">,</span> <span class="token string">'author'</span><span class="token punctuation">,</span> <span class="token string">'feed'</span><span class="token punctuation">,</span> <span class="token string">'mastodon'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> meta <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">---<br />title: "</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>title<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">"<br />permalink: /links/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>slug<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/index.html<br />link: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>link<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"><br />date: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>postDate<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"><br />author: <br />  name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>author <span class="token operator">?</span> author <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"><br />  web: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>domain<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"><br />  feed: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>feed<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"><br />  mastodon: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>mastodon<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">', '</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"><br />---</span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token comment">// write the file</span></code></pre>
<p>The source code for the CLI tool is <a href="https://github.com/rknightuk/rknight.me/tree/master/cli">on GitHub</a>.</p>
<p>So that's an overview how I'm pulling in all my <em>stuff</em> from different places on the web into this site. It's kind of complicated but it works well for me. My site is <a href="https://github.com/rknightuk/rknight.me">on GitHub</a> if you want to look at how I do something specific or feel free to ask me <a href="https://social.lol/@robb">on Mastodon</a>.</p>
]]></content:encoded>
<pubDate>2024-02-21T20:47:27Z</pubDate>
</item>
<item>
<title>More Things You Can Do on Your Website</title>
<link>https://rknight.me/blog/more-things-you-can-do-on-your-website/</link>
<guid>https://rknight.me/blog/more-things-you-can-do-on-your-website/</guid>
<content:encoded><![CDATA[
<p><a href="https://jamesg.blog/2024/02/19/personal-website-ideas/">James wrote a great post</a> with <s>100</s> 83 ideas for things to do on a website<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> with a call for people suggest more so here's another ten suggestions to add to his list, most of which already exist on my site because I have no imagination.</p>
<ol>
<li>A <a href="/uses">uses page</a> with software, tools, whatever you use to do things you enjoy doing</li>
<li>A <a href="/collections">collections page</a> to show off your games, books, stamps, or anything else you collect</li>
<li>A <a href="/about/colophon">colophon</a> to explain how your website is created, built, and hosted</li>
<li>Create a <a href="/podcasts/roll">podroll</a> to list the podcasts you like to listen to</li>
<li>A <a href="/intersect">wiki</a> or a notes page to write down things you've learnt, little snippets of code, or useful website you use</li>
<li>A <a href="/log/versions">version history page</a> to show what your website has looked like in the past</li>
<li>As an extension of James' number 33, add a <a href="/subscribe">subscribe page</a> to list all the ways someone can see your blog posts like RSS and Mastodon</li>
<li>A <a href="/save">save page</a> to list referral links for things you recommend</li>
<li>A <a href="/almanac">log of all</a> the movies and tv shows you've watched, books you've read, and games (board or video) you've played</li>
<li>A <a href="/blog/stats">stats page</a> to show how many words you've written in total, how many posts, or something else interesting about your site</li>
</ol>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I will be consulting a lawyer about the false advertising, James <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-02-19T12:14:03Z</pubDate>
</item>
<item>
<title>Notes on Buying a House</title>
<link>https://rknight.me/blog/notes-on-buying-a-house/</link>
<guid>https://rknight.me/blog/notes-on-buying-a-house/</guid>
<content:encoded><![CDATA[
<p>tl;dr: The process is terrible. Also, these notes are only relevant to the UK.</p>
<h3>Process</h3>
<p>This is simplified but, in theory, the process is:</p>
<ol>
<li>Save a deposit</li>
<li>Work out how much you can borrow - <a href="https://www.moneysavingexpert.com/mortgages/how-much-mortgage-borrowing/">this tool on Money Saving Expert</a> works well</li>
<li>Find, view, and put in an offer on, a house</li>
<li>Have an offer accepted</li>
<li>Wait around needlessly while everyone involved in the process ignores you for days on end and eventually gets everything signed off</li>
<li>Have a house</li>
</ol>
<h3>Finding a House</h3>
<p><a href="https://rightmove.co.uk">Right Move</a> is pretty much the only option for finding houses unless you're spending over a million.</p>
<h4>Saved Searches</h4>
<p>Right Move has two search options: by area/postcode or by drawing an area. For areas you can set a distance from the area which depending on where you're looking can be useful; for me, it wasn't because of various islands that are technically within a couple of miles but in reality are ~5 miles away by road. Alternatively, you can draw an area on a map and it will show you all houses within it.</p>
<p>You can save these searches and then enable email alerts for when new houses get added. The option says &quot;Instantly&quot; but it's not. In some cases, I would see a new listing and not get an email about it for 2-3 hours. The best advice is, if you can, keep the search page open sorted by recently added and periodically refresh the page.</p>
<h4>Viewings</h4>
<p>When you call for a viewing, every estate agent wants to take your details so they can let you know about new houses. In my experience they'll just send you a few emails of stuff that's already on Right Move. They might organise a viewing for one that's in the process of being listed, but the one time this happened to me the house was nothing like what I wanted so it was a waste of time.</p>
<h3>Stamp Duty</h3>
<p><a href="https://www.gov.uk/stamp-duty-land-tax">Stamp Duty Land Tax</a> is a tax you have to pay when buying a house. If you're a first time buyer you pay no stamp duty if the house is worth less than some threshold, at the moment it's £500k. The government have a <a href="https://www.tax.service.gov.uk/calculate-stamp-duty-land-tax/#/intro">stamp duty calculator</a> to work out how much you have to pay.</p>
<h3>Conveyancing Solicitors</h3>
<p>For solicitors, there are two choices: local firm (although in theory you could use one from anywhere) or an online one. I would recommend a local one as it makes it way easy to get in contact with them, drop paperwork off, and get things signed quickly.</p>
<h3>Moving In</h3>
<p>Just get the meter readings as soon as you have the keys otherwise this becomes a real hassle. Everything else can wait.</p>
]]></content:encoded>
<pubDate>2024-02-17T15:20:26Z</pubDate>
</item>
<item>
<title>How I Make a Podcast Episode</title>
<link>https://rknight.me/blog/how-i-make-a-podcast-episode/</link>
<guid>https://rknight.me/blog/how-i-make-a-podcast-episode/</guid>
<content:encoded><![CDATA[
<p>I have recorded and edited over 175 episodes of <a href="https://www.ruminatepodcast.com/">my</a> <a href="https://wegot.family/">podcasts</a> so I know <em>some</em> things about podcasts but this is basically a list of things I use. If you want to hear from actual professionals I recommend <a href="https://www.relay.fm/upgrade/200">episode 200 of Upgrade</a>.</p>
<p>I record using a <a href="https://www.razer.com/streaming-microphones/razer-seiren-mini/RZ19-03450100-R3M1">Razer Seiren Mini</a>. I previously used a <a href="https://www.bluemic.com/en-gb/products/yeti/">Blue Yeti</a>. There are much better microphones available but for what I do, the Razer is fine.</p>
<p>I record my microphone and the call itself, as a backup, with <a href="https://rogueamoeba.com/audiohijackpro/">Audio Hijack Pro</a>. My setup looks likes this:</p>
<p><img alt="Audio Hijack Setup" src="https://cdn.rknight.me/site/audio-hijack.jpg" /></p>
<p>The Skype (or Facetime or Zoom) audio is recorded to a file and output to my headphones. My microphone input is then recorded to it's own file.</p>
<p>Once recording is done and I have both files (mine and my cohost's), I edit the show in <a href="https://www.apple.com/uk/mac/garageband/">GarageBand</a>. I mostly just need to remove any cross-talk and little noises. It would probably be easier in <a href="https://www.apple.com/uk/logic-pro/">Logic Pro</a> but I can't justify paying for it. I then export the edited episode to a <code>.wav</code> file.</p>
<p>To add metadata like titles, descriptions, chapters, and the cover art I use Marco Arment's <a href="https://overcast.fm/forecast">Forecast</a> and export it to <code>mp3</code> from there.</p>
<p>Finally I upload the file to my CDN and add the episode to the podcast website - which is a <a href="https://github.com/rknightuk/ruminate">custom-built Eleventy site</a>.</p>
]]></content:encoded>
<pubDate>2024-02-17T12:45:47Z</pubDate>
</item>
<item>
<title>Webmentions Redux</title>
<link>https://rknight.me/blog/webmentions-redux/</link>
<guid>https://rknight.me/blog/webmentions-redux/</guid>
<content:encoded><![CDATA[
<p>After thinking on all the issues and <a href="https://social.lol/@robb/111908222268633475">discussion around the privacy</a> of webmentions, I've re-done everything about how I show webmentions on my site, more specifically backfeeding Mastodon replies.</p>
<h3>Follow Up</h3>
<p><a href="https://chrismcleod.dev/blog/more-words-on-webmentions-and-backfeed/">Chris noted in his post</a>, as <a href="https://campegg.com/2024/02/11/over-the-last.html">pointed out by Cam</a>, that the issue we were actually talking about is <em>backfeed</em>. That is, pulling in interactions from syndicated copies of posts - in this case, my toots on Mastodon.</p>
<p>There were a couple of points made in the replies that were interesting. Lots of replies along the lines of &quot;<em>If an ActivityPub server/instance can show replies, why can't a (non-AP) website do it?</em>&quot;. I agree in principle but a non-AP website won't get notified of deletions so those replies exist forever. <a href="https://sunny.garden/@knowler/111912465243280847">Nathan replied with an unlisted toot</a> as a test to see what would happen and Bridgy doesn't take note of this at all. I don't know if it <em>should</em> but &quot;unlisted&quot; is designed to not show a toot in the public/federated timelines so not showing as a reply seems like a reasonable assumption.</p>
<h3>Webmentions Version Two</h3>
<p><a href="https://mariohamann.com/showing-mastodon-reactions-on-a-statamic-website">Mario Hamann's solution</a> of showing just the counts of replies, likes, and boosts caught my eye as a good way of handling this; no one's data is being pulled, it's clean, it's simple. Just what I was looking for.</p>
<p>My current implementation to show links to my posts on Mastodon was separate from my webmention fetching so I didn't have data to say &quot;This Mastodon post is related to this blog post and has 12 likes&quot;. So I needed to pull all my Mastodon posts that include a link to one of my blog posts. I grabbed my export from the dashboard of social.lol but that export is in ActivityPub format and doesn't include reply, like, or boost counts so I switched over to <a href="https://api.rknight.me/">my API</a> and added a new script. I wanted the data keyed by the blog post path so I could easily get all toots for a specific post:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br />	<span class="token string-property property">"/blog/post-slug"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token string-property property">"12345678"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />			<span class="token comment">// toot data</span><br />		<span class="token punctuation">}</span><span class="token punctuation">,</span><br />		<span class="token string-property property">"12345679"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />			<span class="token comment">// toot data</span><br />		<span class="token punctuation">}</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>The script to get every one of my posts was easy enough, fetch my statuses, add them to the <code>dicussion</code> object, and page through until I've got them all:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">let</span> maxId <span class="token operator">=</span> <span class="token keyword">null</span><br /><span class="token keyword">let</span> discussion <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br /><br /><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://social.lol/api/v1/accounts/109523762776095110/statuses?exclude_replies=true&amp;limit=40&amp;exclude_reblogs=true</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>maxId <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&amp;max_id=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>maxId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">''</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br />    <span class="token keyword">const</span> toots <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span>toots<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><br />    <br />    toots<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">t</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> urls <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">extractUrls</span><span class="token punctuation">(</span>t<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">url</span> <span class="token operator">=></span> url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'https://rknight.me'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />        <span class="token keyword">const</span> isSyndicate <span class="token operator">=</span> urls<span class="token punctuation">.</span><span class="token function">some</span><span class="token punctuation">(</span><span class="token parameter">url</span> <span class="token operator">=></span> url<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'https://rknight.me'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span>isSyndicate<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                urls<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">url</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />                    <span class="token keyword">let</span> path <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>pathname<br />                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>path<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'/blog'</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token constant">OLD_URLS</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                    path <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/blog</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />                <span class="token punctuation">}</span><br />                <br />                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>discussion<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">)</span> discussion<span class="token punctuation">[</span>path<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br />                discussion<span class="token punctuation">[</span>path<span class="token punctuation">]</span><span class="token punctuation">[</span>t<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> t<br />            <span class="token punctuation">}</span><span class="token punctuation">)</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    maxId <span class="token operator">=</span> toots<span class="token punctuation">.</span><span class="token function">at</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>id<br />    fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">'./api/discussion.json'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>discussion<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />    <span class="token keyword">await</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">r</span> <span class="token operator">=></span> <span class="token function">setTimeout</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>I added the 2 second timeout just so I didn't hit any rate limits (I don't know what they are and couldn't be bothered to look). Going forward I will run this script on the latest 40 toots and add them to the data which you <a href="https://github.com/rknightuk/api/blob/main/services/discussion.js">can see here</a>. A side note here, the <code>OLD_URLS</code> part of this code is because I recently moved all my blog posts under the <code>/blog</code> path so some posts wouldn't match otherwise.</p>
<p>Initially, I had a similar design to Mario but I ended up expanding it to be more of a card as if I had embedded the toot in my site manually. This is what the code looks like in <code>webmentions.njk</code>, included at the end of each post:</p>
<pre class="language-hbs"><code class="language-hbs"><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">if</span> <span class="token variable">discussion</span><span class="token brackets"><span class="token punctuation">[</span><span class="token variable">webmentionUrl</span><span class="token punctuation">]</span></span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">set</span> <span class="token variable">discussionData</span> <span class="token punctuation">=</span> <span class="token variable">discussion</span><span class="token brackets"><span class="token punctuation">[</span><span class="token variable">webmentionUrl</span><span class="token punctuation">]</span></span> <span class="token punctuation">|</span> <span class="token variable">oValues</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">m</span> <span class="token variable">in</span> <span class="token variable">discussionData</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />        <span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"toot"</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"toot__header"</span><span class="token punctuation">></span><br />                <span class="token punctuation">&lt;</span><span class="token variable">svg</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"icon mastodon-icon"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">use</span> <span class="token variable">xlink</span><span class="token punctuation">:</span><span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"#mastodon"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">use</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">svg</span><span class="token punctuation">></span> <span class="token punctuation">&lt;</span><span class="token variable">a</span> <span class="token variable">target</span><span class="token punctuation">=</span><span class="token string">"_blank"</span> <span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"{{ m.url }}"</span><span class="token punctuation">></span><span class="token variable">Discuss</span> <span class="token variable">on</span> <span class="token variable">Mastodon</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">a</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"toot__content"</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">m</span><span class="token punctuation">.</span><span class="token variable">content</span> <span class="token punctuation">|</span> <span class="token variable">safe</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token variable">div</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"toot__data"</span><span class="token punctuation">></span><br />                <span class="token punctuation">&lt;</span><span class="token variable">div</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">a</span> <span class="token variable">target</span><span class="token punctuation">=</span><span class="token string">"_blank"</span> <span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"{{ m.url }}"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">svg</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"icon"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">use</span> <span class="token variable">xlink</span><span class="token punctuation">:</span><span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"#socialreply"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">use</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">svg</span><span class="token punctuation">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">m</span><span class="token punctuation">.</span><span class="token variable">replies_count</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">a</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />                <span class="token punctuation">&lt;</span><span class="token variable">div</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">a</span> <span class="token variable">target</span><span class="token punctuation">=</span><span class="token string">"_blank"</span> <span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"{{ m.url }}/reblogs"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">svg</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"icon"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">use</span> <span class="token variable">xlink</span><span class="token punctuation">:</span><span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"#socialboost"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">use</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">svg</span><span class="token punctuation">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">m</span><span class="token punctuation">.</span><span class="token variable">reblogs_count</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">a</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />                <span class="token punctuation">&lt;</span><span class="token variable">div</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">a</span> <span class="token variable">target</span><span class="token punctuation">=</span><span class="token string">"_blank"</span> <span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"{{ m.url }}/favourites"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">svg</span> <span class="token variable">class</span><span class="token punctuation">=</span><span class="token string">"icon"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token variable">use</span> <span class="token variable">xlink</span><span class="token punctuation">:</span><span class="token variable">href</span><span class="token punctuation">=</span><span class="token string">"#sociallike"</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">use</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">svg</span><span class="token punctuation">></span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">m</span><span class="token punctuation">.</span><span class="token variable">favourites_count</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">a</span><span class="token punctuation">></span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />            <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />        <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">div</span><span class="token punctuation">></span><br />    <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endfor</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endif</span> <span class="token punctuation">%</span><span class="token punctuation">}</span></code></pre>
<p>I had to add a filter to Eleventy to run <code>Object.values</code> on the toots so I could map over them in the code:</p>
<pre class="language-js"><code class="language-js"><span class="token function-variable function">oValues</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span> <br />	<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<p>I also include other relevant discussion links where appropriate (like HackerNews) so those are also styled to match the toot card style. The final result looks like this:</p>
<p><img alt="Post Syndication" src="https://cdn.rknight.me/site/post-syndication.png" /></p>
<p>This new version isn't webmentions. It doesn't check for replies or likes or boosts. This is just showing where I've posted links to my posts, or <a href="https://indieweb.org/Category:syndication">syndication</a> as it's called in the indieweb world. This solves all of the privacy issues outlined in <a href="https://rknight.me/blog/mastodon-webmentions-and-privacy/">my post</a> as well as ones <a href="https://brainbaking.com/post/2023/05/why-i-retired-my-webmention-server/">Wouter</a>, <a href="https://chrismcleod.dev/blog/some-words-on-webmentions/">Chris</a>, <a href="https://campegg.com/2024/02/11/over-the-last.html">Cam</a>, and others have mentioned.</p>
<p>I haven't turned off webmention collection yet. I may still come back to data to see what &quot;proper&quot; webmentions I get and if it's worth showing those in the future. I will be turning off the Mastodon integration that Bridgy provides though - I just don't need to be collecting those replies.</p>
<p>There is one other reason to remove the old webmentions implementation: it is, quite frankly, a pain in the arse to maintain. Once it's working in theory it shouldn't break but it does on occasion. There's an ongoing bug with emojis showing as <code>????</code> which I needed to handle, along with a bunch of other edge cases.</p>
<p>I will miss the little grid of avatars for likes and boosts because I'm quite fond of the design, but I won't miss the complication webmentions adds to my site. Assuming everything has worked, this post should have the toot embedded below.</p>
<p>Update 2024-02-19: If you want an even easier way to do this, David Darnes has made <a href="https://darn.es/mastodon-post-web-component/">a nice web component to do it</a> for you.</p>
]]></content:encoded>
<pubDate>2024-02-16T13:05:34Z</pubDate>
</item>
<item>
<title>Three Months of The Johnny Decimal System</title>
<link>https://rknight.me/blog/three-months-of-the-johnny-decimal-system/</link>
<guid>https://rknight.me/blog/three-months-of-the-johnny-decimal-system/</guid>
<content:encoded><![CDATA[
<p>Three months ago I <a href="https://rknight.me/blog/using-the-johnny-decimal-system/">wrote about using the Johnny Decimal System</a> - a system to organise your files, emails, and everything else in a way that means things are findable and storable quickly.</p>
<p>I had assumed, like a lot of things I try, that given a month or so I'd be back to just dumping files wherever and being annoyed when I couldn't find things but to my surprise the system is working. <em>Really well</em>. If I download a podcast episode I'm mentioned in<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> I know it goes in <code>20-29 Podcasts &gt; 22 Follow Out &gt; 22.02 Podcast Mentions</code>, that gifs go in <code>50-59 Media &gt; 54 Memes &gt; 54.02 Gifs</code>, and my payslips go in <code>10-19 Home and Family &gt; 13 Legal &gt; 13.05 Payslips</code>. I can find these quickly regardless of if I use terminal, Finder, or Alfred's <code>find</code> command.</p>
<p>I still have a fairly substantial downloads folder filled with random things but every now and again I can go through, delete what I don't need, and file everything else in the right place. I've also stuck with keeping <a href="https://johnnydecimal.com/10-19-concepts/11-core/11.05-the-index/">my index</a> in Obsidian where I've been keeping it up-to-date with related notes about my files.</p>
<p>This might be the first time a new system, of any kind, has actually clicked for me. <a href="https://johnnydecimal.com/10-19-concepts/14-build-your-system/14.02-the-decimal-workbook/">The workbook</a>, which I highly recommend, is only $19 now if you think this is something you want to try. And as if we planned this (we definitely didn't), just as I was about to publish this post Johnny announced <a href="https://jdcm.al/10-19-concepts/14-build-your-system/14.03-the-decimal-workshop/">the workshop</a> which has a pre-launch price of $49.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Don't at me, I live for validation <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-02-15T08:24:22Z</pubDate>
</item>
<item>
<title>Mastodon Webmentions and Privacy</title>
<link>https://rknight.me/blog/mastodon-webmentions-and-privacy/</link>
<guid>https://rknight.me/blog/mastodon-webmentions-and-privacy/</guid>
<content:encoded><![CDATA[
<p>Wouter's post about <a href="https://brainbaking.com/post/2023/05/why-i-retired-my-webmention-server/">retiring their webmention server</a> is an interesting write-up on how complicated webmentions and indieweb functionality in general can be but one point from it has stuck with me since reading it:</p>
<blockquote>
<p>...people mentioning or replying to your link via Twitter suddenly appear as a mention on your site. Great stuff, right? Except those people have no idea their avatar and text is being yanked. I’ve questioned these practices before and it’s clear that they’re built without thinking too hard about privacy.</p>
</blockquote>
<p>Until this point I also hadn't considered the privacy aspect of using webmentions like this. Assume someone, <code>@userX</code> for example, replies to one of my toots about a post I've written. Bridgy will pull in that reply with the avatar, username, and the reply content for me to display on that post as a reply. As it's setup right now, that reply will live forever on my post regardless of what <code>@userX</code> does with their original version of the reply. Should I be periodically checking if a reply has been deleted (or edited for that matter)? In theory, that could be hundreds or thousands of links to check.</p>
<p>Secondly, not everyone even <em>knows</em> that this is happening when they reply to a toot where the site owner has webmentions enabled. Should there be some extra step to say &quot;Are you happy for this to show up on this post&quot;? That seems like a good way to kill the whole concept but maybe we should? I don't know.</p>
<p>Yes the replies are set as &quot;public&quot; (or at least I think Bridgy only picks up public ones) but public doesn't mean &quot;do whatever you want and copy it forever&quot;.</p>
<p>For all the effort that's been <a href="https://11tybundle.dev/categories/webmentions/">put into making webmentions work</a> I'm now wondering if I should even be doing it. I certainly wouldn't want anyone to feel like their posts are being taken without their permission or used in a way they never intended.</p>
]]></content:encoded>
<pubDate>2024-02-10T16:36:01Z</pubDate>
</item>
<item>
<title>My Favourite Type of Time Travel</title>
<link>https://rknight.me/blog/my-favourite-type-of-time-travel/</link>
<guid>https://rknight.me/blog/my-favourite-type-of-time-travel/</guid>
<content:encoded><![CDATA[
<p>I was recently<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup> asked by <a href="https://zoeaubert.me/">Zoe</a> the following question:</p>
<blockquote>
<p>What's your preferred type of time travel (like singular timeline where things always where, multiverse when you go back, some other shit)</p>
</blockquote>
<p>That is <em>quite the question</em>. We should start with the different types of time travel to even be able to answer this. I'm not covering every possible version from media, just the ones I care or know about. Notably, I have not included Dr Who anywhere here because 1. I've never watched it 2. John and Kate in the Relay discord said it does whatever is needed for the plot and isn't consistent.</p>
<h3>Types</h3>
<h4>Self-Correcting/Paradox</h4>
<p>This is almost anti-time travel, the commonly-known &quot;Grandfather paradox&quot;. If I travel back in time to kill my grandfather, I would never have been born and therefore couldn't have gone back to kill him in the first place. <em>Anyone</em> I went back to kill (assuming I chose someone I knew of) would self-correct because by them not existing I wouldn't know about them so would never have gone back.</p>
<p>This one also has the honour of being the least fun. Barely even time travel.</p>
<h4>Single, Changeable Timeline</h4>
<p>Examples: <a href="https://en.wikipedia.org/wiki/Back_to_the_Future">Back to the Future</a>, <a href="https://en.wikipedia.org/wiki/Roswell_That_Ends_Well">Futurama &quot;Roswell That End Well&quot;</a>, <a href="https://en.wikipedia.org/wiki/Hot_Tub_Time_Machine">Hot Tub Time Machine</a>, <a href="https://www.imdb.com/title/tt0212579/">Blackadder Back and Forth</a></p>
<p>This is the most common version seen in media and the one I'm most familiar with, having watched the Back to the Future movies at least once a year for the past 30 years. You go back, do something, and on your return things have changed. Maybe you go back and accidentally stop your mum meeting your dad, come up with an elaborate plan to get them back together even though she's into you now, turn your dad into a completely different person, play Johnny B. Goode for your parents classmates, then your mum names you after a guy she had the hots for in school and your dad says nothing about this. Or something less...weird.</p>
<p>The second movie explains these changes further as the timeline &quot;skewing&quot;; to get back to the &quot;original&quot; future you came from you need to fix whatever change you made in the past.</p>
<h5>Inconsistencies</h5>
<ul>
<li>Do Marty's parents just not notice their kid looks a hell of a lot like that guy from when they were at school? Why did they name their third kid Marty and not their first one?</li>
<li>When Marty goes to the future in Part 2 he would get there to find his kids don't exist because he's been missing for 30 years, surely? Or does time travelling create some kind of clone so you keep existing in the timeline? It makes no sense.</li>
</ul>
<h4>Single, Changeable, Always-Happened Timeline</h4>
<p>Examples: <a href="https://en.wikipedia.org/wiki/Harry_Potter_and_the_Prisoner_of_Azkaban_(film)">Harry Potter and the Prisoner of Azkaban</a>, <a href="https://en.wikipedia.org/wiki/Bill_%26_Ted%27s_Excellent_Adventure">Bill and Ted</a></p>
<p>This is almost identical to above with the exception that the things that someone might do in the past <em>already and always</em> happened. So if you make a decision to go back in time and throw a rock at yourself, you already did.</p>
<p>This also happens in Bill and Ted when they need the keys to the police station cells. They think about doing it and the keys are there.</p>
<p>Notably, there isn't really anything in Bill and Ted that seems to change the timeline at all - even taking the princesses from medieval England doesn't change anything, at least that we know of from the movie.</p>
<h5>Inconsistencies</h5>
<ul>
<li>At the point Hermione and Harry decide to time travel they've already experienced some of the things they <em>will do</em> when they travel; What happens if they decide not to go or will they 100% go because it's happened already?</li>
</ul>
<h4>Multiverse/Branching</h4>
<p>Examples: <a href="https://en.wikipedia.org/wiki/Avengers:_Endgame">Avengers: Endgame</a></p>
<p>This one is the easiest to explain away from a plot point of view. You go back, <a href="https://www.youtube.com/watch?v=PPUPMGdG3PU">kill baby Thanos</a>, and now you have two timelines: yours where Thanos is alive and a new one where Thanos is dead. <em>Every action</em> taken in the past creates a new branched timeline.</p>
<p>Also worth noting here that every decision made, even in the present, can <em>also</em> create new branches, it's not exclusive to when you're in the past.</p>
<h5>Inconsistencies</h5>
<ul>
<li>None that I can think of. It's a very &quot;clean&quot; version of time travel.</li>
</ul>
<h4>Stable Time-Apparatus (&quot;The Box&quot;)</h4>
<p>Examples: <a href="https://en.wikipedia.org/wiki/Primer_(film)">Primer</a></p>
<p>As far as I know the only example of this is in Primer, the 2004 movie. I will try and explain the short version here but <a href="https://en.wikipedia.org/wiki/Primer_(film)#/media/File:Time_Travel_Method-2.svg">Wikipedia has a handy diagram too</a>.</p>
<p>The Box is turned on by A with a 15 minute delay at 11:45am. A then hides (so as not to affect events and collect useful information like stocks) away until 6pm and which point he enters the box, and waits 6 hours to come out of the box...at midday (11:45 + the 15 minute delay). A is now B, with the original A still hiding away collecting stock info. If you understood this, you won't once you watch the movie.</p>
<p>This method only allows travelling back to the point when the box was turned on, no going back to punch Hitler here. Lots of opportunity for personal gain with this.</p>
<h5>Inconsistencies</h5>
<ul>
<li>None</li>
</ul>
<h4>Time Loop</h4>
<p>Examples: <a href="https://en.wikipedia.org/wiki/Groundhog_Day_(film)">Groundhog Day</a>, <a href="https://en.wikipedia.org/wiki/Palm_Springs_(2020_film)">Palm Springs</a>, <a href="https://en.wikipedia.org/wiki/Russian_Doll_(TV_series)">Russian Doll Season 1</a></p>
<p>Usually a day, the character is stuck in a loop of the same period over and over, never being able to change what happens or get out of the loop. This isn't always considered as time travel but the consequences for the characters in the movies/shows are similar: they know what's going to happen and they can change things using their knowledge of how the loop will play out albeit for only for the current &quot;loop&quot; they're in.</p>
<p>The exit methods for the loops are usually vague like &quot;become a better person&quot; except in the case of Palm Springs where they use a bomb.</p>
<h5>Inconsistencies</h5>
<ul>
<li>None</li>
</ul>
<h4>Forward or Backwards Only</h4>
<p>Examples: <a href="https://en.wikipedia.org/wiki/The_Late_Philip_J._Fry">Futurama: &quot;The Late Philip J. Fry&quot;</a> (forwards) and <a href="https://www.imdb.com/title/tt0471711/">Futurama: &quot;Bender's Big Score</a> (backwards)</p>
<p>Futurama features two machines that only go one way: one for forwards only and one for backwards only.</p>
<p>We're all doing the forwards one right now anyway it just happens to take one second to travel one second into the future. But if you want to go faster the &quot;Forwards Time Machine&quot; from Futurama does the trick.</p>
<p>Not sure of the usefulness of this one. In the Futurama universe if you go to the end of time the universe just starts again as it was before (but a few feet lower than before) so this could be used for backwards time travel but it's would be annoying to do.</p>
<p>The backwards-only version is mostly useless for humans unless your goal doesn't include coming back to the present. In the episode, Bender is the one who does it so he can just wait it out on account of being a robot. This does have a paradox of sorts that all the Benders waiting around to come back are all in the same place at once but that gets corrected evenutally.</p>
<h5>Inconsistencies</h5>
<ul>
<li>None</li>
</ul>
<h3>My Favourite</h3>
<p>Picking a favourite here is hard and would entirely depend on my goals.</p>
<p>Multiverse is kind of terrifing that every little action is creating a brand new timeline with untold horrors based on my decisions. It's a handy version if your goal is to steal something without any consequences to your own timeline.</p>
<p>Primer's box is useful only in the way the movie presents: for short-term personal gain. I won't spoil the movie but there are big consequences for making your days 36 hours long instead of 24. I'd want to use this once every now and again but I'm not sure I could be trusted.</p>
<p>I don't like the predetermined nature of the already-happened-no-matter-what timeline so I think my favourite, despite having the most paradoxes, is single timeline, Back to the Future style. There's a reason this is the one that appears more in media than any other: despite the problems, it's easy to explain quickly without need to sit down and write notes and diagrams (looking at you, Primer).</p>
<h3>Time Travel Miscellania</h3>
<p>I am a sucker for time travel media and I'll pretty much watch anything where it's involved. I can't get enough of them like <a href="https://en.wikipedia.org/wiki/Timeless_(TV_series)">Timeless</a> and <a href="https://en.wikipedia.org/wiki/Legends_of_Tomorrow">Legends of Tomorrow</a> even if they are cheesy as hell.</p>
<p>I would like to see a movie where someone creates a time machine based on the Back to the Future &quot;science&quot; and travels to the future only to find out about the paradoxes and hilarity ensues. Get on it, Hollywood.</p>
<p>The DeLorean is obviously the coolest time machine.</p>
<p><a href="https://www.youtube.com/watch?v=d3zTfXvYZ9s">This Minute Physics video on the topic</a> is excellent.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>This was easily over a year ago now, I only just got around to finishing this article <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-02-06T17:30:00Z</pubDate>
</item>
<item>
<title>Things I Like: Pizza the Action Seasoning</title>
<link>https://rknight.me/blog/things-i-like-pizza-the-action-seasoning/</link>
<guid>https://rknight.me/blog/things-i-like-pizza-the-action-seasoning/</guid>
<content:encoded><![CDATA[
<p>I'm going to try doing some quick posts like this going forward about things I like. Being the naming genius I am, I'm calling this series &quot;Things I Like&quot;.</p>
<p><img alt="Pizza the Action seasoning" src="https://cdn.rknight.me/site/pizza-the-action.jpg" /></p>
<p><a href="https://condimaniac.com/products/condimaniac-pizza-the-action-pizza-seasoning">Pizza the Action</a> is a seasoning from the UK-based company Condimaniac. It’s a seasoning mix designed to, as the name might suggest, go on pizza. There’s nothing particularly surprising or unusual in the ingredients list:</p>
<ul>
<li>Tomato Flakes</li>
<li>Garlic Granules</li>
<li>Sea Salt</li>
<li>Onion Granules</li>
<li>Cayenne Pepper</li>
<li>Nutritional Yeast Flakes</li>
<li>Basil</li>
<li>Oregano</li>
<li>Smoked Paprika</li>
<li>Thyme</li>
</ul>
<p>Who doesn't love a &quot;nutritional yeast flake&quot;? Ignoring that one, whatever their exact combination of the ingredients is makes pizzas taste fantastic. Even some cheap store-brand ones I’ve had in the past month tasted <em>way</em> better with a sprinkling of it. They suggest using it as seasoning for pizza sauce which I will definiely try with <a href="https://rknight.me/blog/one-year-of-pizza-making/">my current sauce recipe</a> once the Ooni oven comes out again this summer.</p>
<p>Anyway, it’s tasty and I love it. I bought it from Ooni because I had some credit but they also sell it, along with a bunch of other pizza-related condiments, direct <a href="https://condimaniac.com/collections/all">on their website</a>.</p>
]]></content:encoded>
<pubDate>2024-02-04T15:50:46Z</pubDate>
</item>
<item>
<title>Tech is Annoying Me This Week</title>
<link>https://rknight.me/blog/tech-is-annoying-me-this-week/</link>
<guid>https://rknight.me/blog/tech-is-annoying-me-this-week/</guid>
<content:encoded><![CDATA[
<p>Computers are not my friend this week and I am basically ready to throw my computer into the sea. Here is an incomplete list of things annoying me at the moment:</p>
<ul>
<li>Discord not marking a channel as read no matter how many times I look at it. Only force quitting fixes it.</li>
<li>Open source projects that say they’re “Built with Docker” with no other information about the stack meaning I have to go hunting in the code base just to find out how it’s actually built and if it’s something I’d be willing to maintain/fix if I decide to use it. This is like saying my house is “built with foundations”.</li>
<li>The fact that I’m forced to use Instagram’s shitty app to see my friend’s photos.</li>
<li>The share sheet on Apple Music on my Mac stops working at least once a day meaning I have to quit and restart it just to copy a link to an album or track.</li>
<li>Apple’s stupid EU DMA proposals. If what they’ve proposed gets accepted by the EU the DMA is a waste of time and they might as well not have bothered with it in the first place. Third party app stores except Apple still controls the whole thing? I can’t even.</li>
<li>Notifications on my wife’s Apple Watch have just stopped working for almost every app. I’ve tried everything and nothing fixes it.</li>
</ul>
]]></content:encoded>
<pubDate>2024-02-04T10:35:52Z</pubDate>
</item>
<item>
<title>Quick Thoughts on Crisps</title>
<link>https://rknight.me/blog/quick-thoughts-on-crisps/</link>
<guid>https://rknight.me/blog/quick-thoughts-on-crisps/</guid>
<content:encoded><![CDATA[
<p>Now <em>this</em> is a theme I can get behind. If my specialist subject for Mastermind couldn't be Back to the Future, &quot;Crisps of the UK&quot; might be a close second. Following in the footsteps of <a href="https://lynnandtonicblog.com/2024/01/25/my-quick-thoughts-on-chips/">Lynn</a>, <a href="https://daverupert.com/2023/08/quick-thoughts-on-chips/">Dave</a>, <a href="https://snook.ca/archives/personal/quicker-thoughts-on-chips">Jonathan</a>, and <a href="https://pmullen.com/posts/more-quick-thoughts-on-chips/">Peter</a> here are my thoughts on <s>chips</s> crisps.</p>
<ol>
<li>Prawn Cocktail is one of the finest flavours available and I'm sad this mostly doesn't exist outside the UK.</li>
<li><a href="https://inews.co.uk/inews-lifestyle/food-and-drink/brannigans-crisps-discontinued-pub-classic-britons-mourning-657852">Brannigans beef and mustard</a> were the best crisp ever made. The flavour, texture, everything. RIP.</li>
<li>Of course Pringles are crisps. Sorry Peter.</li>
<li>Salt and Vinegar crisps should have enough salt to make my mouth numb for a day.</li>
<li>The pretending-to-be-artisnal crisps like Kettle are better eaten out of a bowl each time you walk past said bowl.</li>
</ol>
<p>Related to this: my <a href="/blog/food-graveyard/">food graveyard</a> post.</p>
]]></content:encoded>
<pubDate>2024-01-25T17:17:34Z</pubDate>
</item>
<item>
<title>My First Mac</title>
<link>https://rknight.me/blog/my-first-mac/</link>
<guid>https://rknight.me/blog/my-first-mac/</guid>
<content:encoded><![CDATA[
<p>Apologies for the terrible filtered photos but the only versions I have are from my Instagram archive when we all thought filters were the best thing ever. They were not.</p>
<hr />
<p>My first Mac was a 2009 27” iMac. It was a Christmas present from my parents. I had asked for a Mac Mini so a iMac was a big upgrade. I asked for the mini partly because it was cheaper and partly because I already had a (really crappy) monitor. I think it technically belonged to my dad’s company for <em>tax reasons</em> and I <em>did</em> do some work for him at least once so all good Mr tax man, nothing to see here.</p>
<p>Having been on hand-me-down crappy Windows laptops prior to the iMac I was blown away. The screen, the OS in general, and the third party apps. In particular, Panic’s Coda is the one I remember the most - I even used their font for my HTML and CSS tattoos.</p>
<p><img alt="css tattoo" src="https://cdn.rknight.me/site/css-tattoo.jpg" /></p>
<p>That iMac lasted me a long time as both my general computer and my “TV”. Then a few years in the hard drive failed which meant I had to take it apart and replace the drive. If you don’t know, to get to anything in one of these iMacs, you need to get the glass off the front, ideally with specialised tools that I didn’t have, so I used a toilet plunger instead<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p>
<p><img alt="iMac maintenence" src="https://cdn.rknight.me/site/imac-maintenance.jpg" /></p>
<p>Another fun thing about this; the hard drives in these iMac also include temperature sensors. At the time, I couldn’t afford one with the sensor so I installed a normal drive and then used a third party app called something like “fan control pro”. When it booted up and the app wasn’t running, the fans would run on full until the app launched. Good times.</p>
<p>The iMac got retired when I bought a real TV like a grown up and the Mac itself was replaced with a MacBook Air and since then a series of MacBook Pros. You can see my current setup on <a href="/uses">my uses page</a>.</p>
<p>These days I still love my Mac but I’m not so enamoured with the company but that’s a post for another day.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Don't worry, I cleaned it <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-25T07:47:37Z</pubDate>
</item>
<item>
<title>Creating an OPML File for my Blogroll</title>
<link>https://rknight.me/blog/creating-an-opml-file-for-my-blogroll/</link>
<guid>https://rknight.me/blog/creating-an-opml-file-for-my-blogroll/</guid>
<content:encoded><![CDATA[
<p>Last night I updated my <a href="/blog/roll">blogroll</a> and <a href="/podcasts/roll">podroll</a> to include a description about the sites instead of just showing the latest post; this is much more useful to someone who lands on that page. Then I realised I could add an OPML file so anyone could subscribe to all of the feeds in the roll all at once.</p>
<p>OPML stands for &quot;Outline Processor Markup Language&quot; which isn't useful to explain what it does in this context. At it's core, it's a XML document that has a list of RSS feeds you can import into a feed reader or podcast app. It looks something like this:</p>
<pre class="language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>opml</span> <span class="token attr-name">version</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>A title<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dateCreated</span><span class="token punctuation">></span></span>Sun, 21 Jan 2024 08:13:40 +0000<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dateCreated</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>outline</span> <span class="token attr-name">text</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A Cool Blog<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>A Cool Blog<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rss<span class="token punctuation">"</span></span> <span class="token attr-name">xmlUrl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/rss<span class="token punctuation">"</span></span> <span class="token attr-name">htmlUrl</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>opml</span><span class="token punctuation">></span></span></code></pre>
<p>Each <code>outline</code> element is a feed with some attributes to describe it:</p>
<ul>
<li><code>title</code> - The title of the feed/site</li>
<li><code>text</code> - This is what will be shown by feed readers when importing an OPML. This can be different to <code>title</code> but I keep them the same</li>
<li><code>type</code> - the type of feed. I'm not sure it matters if you set an Atom feed with the type set as <code>rss</code>, most feed readers will handle this anyway</li>
<li><code>xmlUrl</code> - a link to the feed</li>
<li><code>htmlUrl</code> - a link to the site</li>
</ul>
<p>My rolls are configured with a <a href="https://www.11ty.dev/docs/data-global/">data file</a>:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// src/_data/blogroll.js</span><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token punctuation">[</span><br />        <span class="token punctuation">{</span><br />            <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'A Blog'</span><span class="token punctuation">,</span><br />            <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'https://example.com'</span><span class="token punctuation">,</span><br />            <span class="token literal-property property">feed</span><span class="token operator">:</span> <span class="token string">'https://example.com/rss'</span><span class="token punctuation">,</span><br />            <span class="token literal-property property">description</span><span class="token operator">:</span> <span class="token string">'A cool blog about things'</span><span class="token punctuation">,</span><br />        <span class="token punctuation">}</span><span class="token punctuation">,</span><br />        <span class="token comment">// the rest of the sites</span><br />    <span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p>To generate an OPML file from the roll in Eleventy, I added an <code>opml.njk</code> file and configured it like this:</p>
<pre class="language-hbs"><code class="language-hbs"><span class="token variable">---</span><br /><span class="token variable">permalink</span><span class="token punctuation">:</span> <span class="token punctuation">/</span><span class="token variable">blog</span><span class="token punctuation">/</span><span class="token variable">roll</span><span class="token punctuation">/</span><span class="token variable">opml</span><span class="token punctuation">.</span><span class="token variable">xml</span><br /><span class="token variable">eleventyExcludeFromCollections</span><span class="token punctuation">:</span> <span class="token boolean">true</span><br /><span class="token variable">---</span><br /><span class="token punctuation">&lt;</span><span class="token variable">?xml</span> <span class="token variable">version</span><span class="token punctuation">=</span><span class="token string">"1.0"</span> <span class="token variable">encoding</span><span class="token punctuation">=</span><span class="token string">"UTF-8"</span><span class="token variable">?</span><span class="token punctuation">></span><br /><span class="token punctuation">&lt;</span><span class="token variable">opml</span> <span class="token variable">version</span><span class="token punctuation">=</span><span class="token string">"1.0"</span><span class="token punctuation">></span><br />    <span class="token punctuation">&lt;</span><span class="token variable">head</span><span class="token punctuation">></span><br />        <span class="token punctuation">&lt;</span><span class="token variable">title</span><span class="token punctuation">></span><span class="token variable">RSS</span> <span class="token variable">Feeds</span> <span class="token variable">for</span> <span class="token variable">all</span> <span class="token variable">Robb</span> <span class="token variable">Knight</span><span class="token punctuation">'</span><span class="token variable">s</span> <span class="token variable">Blogroll</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">title</span><span class="token punctuation">></span><br />        <span class="token punctuation">&lt;</span><span class="token variable">dateCreated</span><span class="token punctuation">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">page</span><span class="token punctuation">.</span><span class="token variable">date</span> <span class="token punctuation">|</span> <span class="token variable">dateToRfc822</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">dateCreated</span><span class="token punctuation">></span><br />    <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">head</span><span class="token punctuation">></span><br />    <span class="token punctuation">&lt;</span><span class="token variable">body</span><span class="token punctuation">></span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span><span class="token variable">-</span> <span class="token variable">for</span> <span class="token variable">site</span> <span class="token variable">in</span> <span class="token variable">blogroll</span> <span class="token variable">-</span><span class="token punctuation">%</span><span class="token punctuation">}</span><br />            <span class="token punctuation">&lt;</span><span class="token variable">outline</span> <span class="token variable">text</span><span class="token punctuation">=</span><span class="token string">"{{ site.name }}"</span> <span class="token variable">title</span><span class="token punctuation">=</span><span class="token string">"{{ site.name }}"</span> <span class="token variable">type</span><span class="token punctuation">=</span><span class="token string">"rss"</span> <span class="token variable">xmlUrl</span><span class="token punctuation">=</span><span class="token string">"{{ site.feed }}"</span> <span class="token variable">htmlUrl</span><span class="token punctuation">=</span><span class="token string">"{{ site.url }}"</span><span class="token block keyword">/></span><br />        <span class="token punctuation">{</span><span class="token punctuation">%</span> <span class="token variable">endfor</span> <span class="token punctuation">%</span><span class="token punctuation">}</span><br />    <span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">body</span><span class="token punctuation">></span><br /><span class="token punctuation">&lt;</span><span class="token punctuation">/</span><span class="token variable">opml</span><span class="token punctuation">></span></code></pre>
<p>The <code>dateToRfc822</code> filter used in <code>dateCreated</code> is a filter provided by the <a href="https://www.11ty.dev/docs/plugins/rss/">Eleventy RSS plugin</a>. Then I loop through all of the sites in my blogroll and output an <code>outline</code> element for each one.</p>
<p>Finally I added a link to the file on each of the roll pages. Note I include a <code>download</code> attribute so browsers will (hopefully) download the file rather than show the XML file directly:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>opml.xml<span class="token punctuation">"</span></span> <span class="token attr-name">download</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>download<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Download the OPML file<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p>You can view my &quot;rolls&quot; here:</p>
<ul>
<li><a href="/blog/roll">Blogroll</a></li>
<li><a href="/podcasts/roll">Podroll</a></li>
</ul>
]]></content:encoded>
<pubDate>2024-01-21T07:10:16Z</pubDate>
</item>
<item>
<title>What Even is a Webmention?</title>
<link>https://rknight.me/blog/what-even-is-a-webmention/</link>
<guid>https://rknight.me/blog/what-even-is-a-webmention/</guid>
<content:encoded><![CDATA[
<p>My post about <a href="https://rknight.me/blog/adding-webmentions-to-your-site/">implementing webmentions on this site</a> has been fairly popular and I get quite a few questions about something I don't think I explained properly in the post which all boil down to &quot;what <em>is</em> a webmention though and what has that got to do with Mastodon?&quot;.</p>
<p>Before we get started I will say I found the different pages explaining the technical details of webmentions to be lacking in terms of real-world use cases so I am basing this on what I can piece together from those sites.</p>
<h3>&quot;Real&quot; Webmentions</h3>
<p>A webmention is &quot;<em>a simple way to notify any URL when you link to it from your site.</em>&quot;. The use of &quot;simple&quot; here is stretching the definition but it does at least explain what they are, sort of. There are different types of webmentions but the one typically used by a website is <code>mention-of</code>. Basically, &quot;<em>I wrote this post and I have mentioned your or your website in it</em>&quot;. These need to be sent from the poster to the website being mentioned. For my site I use the CLI version of <a href="https://webmention.app">webmention.app</a>; each time a new post appears in my RSS feed, I use the command line package to send mentions to any supported site that I've included in the post:</p>
<pre class="language-bash"><code class="language-bash">npx webmention path/to/feed.xml <span class="token parameter variable">--limit</span> <span class="token number">1</span> <span class="token parameter variable">--send</span></code></pre>
<p>You might be thinking I'd link to an example of one of these types of webmentions on my site but I don't show them. I checked my webmentions for this type and out of the ~40 or so that were there, only a handful were actually legitimate, the rest were either now-dead sites or spam. If I can come up with a system for approving them in the future, I will add them to the site. The open nature of webmentions means there's very little to stop someone from sending spam webmentions. These can be blocked in <a href="http://webmention.io">webmention.io</a> but I would never remember to do that. I also had two <code>bookmark-of</code> webmentions but both of those links were dead and I don't know what type of post they should refer to.</p>
<p>I do get <em>some</em> legitimate ones though so here is an example of one from <a href="https://localghost.dev">Sophie</a>, truncated for the sake of legibility:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br />    <span class="token string-property property">"type"</span><span class="token operator">:</span> <span class="token string">"entry"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"author"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token comment">// author info</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"url"</span><span class="token operator">:</span> <span class="token string">"https://localghost.dev/blog/everything-should-have-an-api-adventures-in-trying-to-automate-stuff/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-01-24T00:00:00"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-received"</span><span class="token operator">:</span> <span class="token string">"2024-01-19T20:43:30Z"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-id"</span><span class="token operator">:</span> <span class="token number">1769280</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-source"</span><span class="token operator">:</span> <span class="token string">"https://localghost.dev/blog/everything-should-have-an-api-adventures-in-trying-to-automate-stuff/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-target"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/automating-my-now-page/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-protocol"</span><span class="token operator">:</span> <span class="token string">"webmention"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"name"</span><span class="token operator">:</span> <span class="token string">"Everything should have an API: adventures in trying to automate stuff"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">"html"</span><span class="token operator">:</span> <span class="token string">"&lt;p>Inspired by &lt;a href=\"https://rknight.me/automating-my-now-page/\">Robb Knight&lt;/a> I want to build my own &lt;a href=\"https://nownownow.com/about\">/now page&lt;/a>..."</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"mention-of"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/automating-my-now-page/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-property"</span><span class="token operator">:</span> <span class="token string">"mention-of"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-private"</span><span class="token operator">:</span> <span class="token boolean">false</span><br /><span class="token punctuation">}</span></code></pre>
<p>Notice it has the type of <code>mention-of</code> and the URL for <a href="https://localghost.dev/blog/everything-should-have-an-api-adventures-in-trying-to-automate-stuff/">the post I'm being mentioned in</a>.</p>
<p>Based on my understanding, there no reason you <em>couldn't</em> send a webmention about a post you've written as a reply or repost type but I haven't seen this being used, outside of how Bridgy converts Mastodon interactions.</p>
<h3>Mastodon &quot;Webmentions&quot;</h3>
<p>Calling what I show at the bottom of my blog posts &quot;webmentions&quot; is a bit misleading because they're actually posts, likes, and boosts <em>from Mastodon</em>; nothing to do with webmentions.</p>
<p>What's actually happening is those interactions are being <em>converted</em> to webmentions by <a href="https://brid.gy">Brid.gy</a> which then forwards them on to <a href="http://webmention.io">webmention.io</a>. As an example <a href="https://fediverse.zachleat.com/@zachleat/109780757249677343">this toot on Mastodon from Zach</a> is a reply to <a href="https://social.lol/@robb/109780686521180648">my toot</a> which includes a link to one of my blog posts. Bridgy will see this reply and convert it to a webmention of the type <code>in-reply-to</code>:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br />    <span class="token string-property property">"type"</span><span class="token operator">:</span> <span class="token string">"entry"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"author"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">"type"</span><span class="token operator">:</span> <span class="token string">"card"</span><span class="token punctuation">,</span><br />        <span class="token string-property property">"name"</span><span class="token operator">:</span> <span class="token string">"Zach Leatherman :11ty:"</span><span class="token punctuation">,</span><br />        <span class="token string-property property">"photo"</span><span class="token operator">:</span> <span class="token string">"https://webmention.io/avatar/media.social.lol/f4e48698b4079b12cff61448419d6cf2a13293b27bdaa0a551de22a70e402f70.png"</span><span class="token punctuation">,</span><br />        <span class="token string-property property">"url"</span><span class="token operator">:</span> <span class="token string">"https://fediverse.zachleat.com/@zachleat"</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"url"</span><span class="token operator">:</span> <span class="token string">"https://fediverse.zachleat.com/@zachleat/109780757249677343"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-01-30T23:30:17"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-received"</span><span class="token operator">:</span> <span class="token string">"2023-01-30T23:48:08Z"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-id"</span><span class="token operator">:</span> <span class="token number">1611442</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-source"</span><span class="token operator">:</span> <span class="token string">"https://brid.gy/comment/mastodon/@robb@social.lol/109780686521180648/109780761774871086"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-target"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/adding-webmentions-to-your-site/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"content"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">"html"</span><span class="token operator">:</span> <span class="token string">"&lt;p>&lt;span class=\"h-card\">&lt;a href=\"https://social.lol/@robb\" class=\"u-url\">@&lt;span>robb&lt;/span>&lt;/a>&lt;/span> awesome!&lt;/p>"</span><span class="token punctuation">,</span><br />        <span class="token string-property property">"text"</span><span class="token operator">:</span> <span class="token string">"@robb awesome!"</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"in-reply-to"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/adding-webmentions-to-your-site/"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-property"</span><span class="token operator">:</span> <span class="token string">"in-reply-to"</span><span class="token punctuation">,</span><br />    <span class="token string-property property">"wm-private"</span><span class="token operator">:</span> <span class="token boolean">false</span><br /><span class="token punctuation">}</span></code></pre>
<p>You can see it has a <code>target</code> attribute which is my blog post, the details of the author of the toot, as well as some other metadata including the <code>in-reply-to</code> type. The same thing will happen for likes (<code>like-of</code>) and boosts (<code>repost-of</code>). I then use this to show this at the bottom of my posts.</p>
<p>What Bridgy doesn't do, and I'm not even sure how this could work given the federated nature of Mastdon, is pull in a toot from <em>someone else</em> posting a link to one of my posts. In theory, I could monitor the <a href="https://social.lol/public">federated feed of social.lol</a> and see if something pops up but it's not guaranteed to find all, if any, mentions.</p>
<h3>Shouldn't all this be easier?</h3>
<p>If you've read <a href="https://rknight.me/blog/adding-webmentions-to-your-site/">my post</a>, or <a href="https://coryd.dev/posts/2023/webmentions-in-eleventy/">Cory's post</a>, or one of the <a href="https://11tybundle.dev/categories/webmentions/">many other posts about webmentions in Eleventy</a> you'll know this isn't as simple or easy as it should be.</p>
<p>First off given how few &quot;real&quot; webmentions I have, I'm tempted to skip that part entirely and just pull Mastodon interactions directly. I'm not a fan of relying on other services that I don't control so this would solve that for me. I haven't looked at the API too much for this, but I can't imagine it would be <em>too</em> difficult<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p>
<p>Secondly, to my point above about relying on other services, I've yet to see a good implementation of something that can be easily self-hosted. I want to explore that a more in the future. Let me know if there is something you're aware of.</p>
<p>As for <em>sending</em> webmentions I could imagine a service for sending webmentions where you just point your RSS feed at it and it deals with sending webmentions for you, rather than using something like webmention.app which is <em>very</em> good but either requires manually entering each blog post, or setting up something on each build of your site; not the most user friendly solution.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Famous last words <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-20T16:11:08Z</pubDate>
</item>
<item>
<title>Deleting S3 Files with Spaces in the Name</title>
<link>https://rknight.me/blog/deleting-s3-files-with-spaces-in-the-name/</link>
<guid>https://rknight.me/blog/deleting-s3-files-with-spaces-in-the-name/</guid>
<content:encoded><![CDATA[
<p>This is a fun one: I had a file, lets say it was originally called <code>mycoolfile (2).png</code>, it's been uploaded to S3, and then stored in our database. Except at some point it's become URL encoded so it looks like this instead: <code>mycoolfile%20%282%29.png</code>. Now I want to delete that file using the <a href="https://aws.amazon.com/sdk-for-php/">AWS SDK for PHP</a> which you can do, in theory, like so:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">s3</span><span class="token operator">-></span><span class="token function">deleteObjects</span><span class="token punctuation">(</span><span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'Bucket'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'coolbucket'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Delete'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'Objects'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><br />        <span class="token punctuation">[</span><br />            <span class="token string single-quoted-string">'key'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'mycoolfile%20%282%29.png'</span><span class="token punctuation">,</span><br />        <span class="token punctuation">]</span><br />    <span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Except, no. AWS will <em>not</em> find that file, won't delete it, and won't give you an error message<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. Add a <code>urldecode</code> and it deletes the file with no issues.</p>
<pre class="language-diff"><code class="language-diff">$this->s3->deleteObjects([<br /><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   'Bucket' => 'coolbucket',<br /></span><span class="token prefix unchanged"> </span><span class="token line">   'Delete' => [<br /></span><span class="token prefix unchanged"> </span><span class="token line">   'Objects' => [<br /></span><span class="token prefix unchanged"> </span><span class="token line">       [<br /></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">            'key' => 'mycoolfile%20%282%29.png',<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">            'key' => \urldecode('mycoolfile%20%282%29.png'),<br /></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">       ]<br /></span><span class="token prefix unchanged"> </span><span class="token line">   ],<br /></span></span>]);</code></pre>
<p>I guess I should have checked this sooner but I was looking for the bug in completely the wrong place so this took longer to find than expected. This blog post is definitely going to save me pain again in the future.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>This might be a limitation of the PHP SDK rather than the API in general <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-17T15:26:31Z</pubDate>
</item>
<item>
<title>Fetching Package Dependents from GitHub</title>
<link>https://rknight.me/blog/fetching-package-dependents-from-github/</link>
<guid>https://rknight.me/blog/fetching-package-dependents-from-github/</guid>
<content:encoded><![CDATA[
<p>A conversation in the <a href="https://www.11ty.dev/blog/discord/">Eleventy Discord</a> led me to remember about the <a href="https://github.com/rknightuk/eleventy-plugin-post-graph/network/dependents">dependents page</a> of a GitHub repository. That is, a list of other repositories that are depending on a package, in this case my <a href="https://postgraph.rknight.me/">Post Graph plugin</a>. I wanted to show which people are using the package on the post graph website.</p>
<p><img alt="Post graph dependents" src="https://cdn.rknight.me/site/post-graph-dependents.png" /></p>
<p>GitHub don't offer an API endpoint for this so I made a new data file in Eleventy, installed <a href="https://www.npmjs.com/package/linkedom"><code>linkedom</code></a>, and got to inspecting the elements of that page. The dependents list is an element with an id of <code>dependents</code> with two links per repo. The first leads to the author's profile and the second to the repository: this second link is the one I care about. To narrow it down I had to target both the class (<code>text-bold</code>) and the data attribute (<code>data-hovercard-type</code>) then grab the <code>href</code> from it:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://github.com/rknightuk/eleventy-plugin-post-graph/network/dependents'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> html <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> <span class="token punctuation">{</span> document <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">parseHTML</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> dependents <span class="token operator">=</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">'#dependents .text-bold[data-hovercard-type]'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">el</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://github.com</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>el<span class="token punctuation">.</span>href<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br />        <span class="token literal-property property">name</span><span class="token operator">:</span> el<span class="token punctuation">.</span>href<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>Once this was done I could output the list on the Post Graph site at the top:</p>
<pre class="language-njk"><code class="language-njk"><span class="token delimiter punctuation">{%</span> <span class="token tag keyword">if</span> <span class="token variable">dependents</span><span class="token punctuation">.</span><span class="token variable">length</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">%</span><span class="token punctuation">}</span><br />    <span class="token operator">&lt;</span><span class="token variable">details</span><span class="token operator">></span><br />        <span class="token operator">&lt;</span><span class="token variable">summary</span><span class="token operator">></span><span class="token variable">Used</span> <span class="token keyword">by</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">dependents</span><span class="token punctuation">.</span><span class="token variable">length</span> <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token variable">people</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token variable">summary</span><span class="token operator">></span><br />        <span class="token operator">&lt;</span><span class="token variable">ul</span><span class="token operator">></span><br />            <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> <span class="token variable">d</span> <span class="token keyword">in</span> <span class="token variable">dependents</span> <span class="token operator">%</span><span class="token punctuation">}</span><br />                <span class="token operator">&lt;</span><span class="token variable">li</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token variable">a</span> <span class="token variable">href</span><span class="token operator">=</span><span class="token string">"{{ d.link }}"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token variable">code</span><span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token variable">d</span><span class="token punctuation">.</span><span class="token variable">name</span> <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token variable">code</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token variable">a</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span><span class="token variable">li</span><span class="token operator">></span><br />            <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token variable">endfor</span> <span class="token operator">%</span><span class="token punctuation">}</span><br />        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token variable">ul</span><span class="token operator">></span><br />    <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token variable">details</span><span class="token operator">></span><br /><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token variable">endif</span> <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
]]></content:encoded>
<pubDate>2024-01-16T20:50:28Z</pubDate>
</item>
<item>
<title>Snippets I Use Regularly</title>
<link>https://rknight.me/blog/snippets-i-use-regularly/</link>
<guid>https://rknight.me/blog/snippets-i-use-regularly/</guid>
<content:encoded><![CDATA[
<p>Someone recently asked me how I was able to respond to a message so quickly to a keyboard shortcut question using the command and shift symbols (<kbd>⌘</kbd> <kbd>⇧</kbd>) in my response. Snippets is the answer and I thought it would be a good idea to post the ones I use regularly.</p>
<p>These all run through <a href="https://www.alfredapp.com">Alfred</a> which is my favourite Mac app by a longshot but there are other options that do similar things like <a href="https://textexpander.com/">TextExpander</a>, <a href="https://espanso.org/">Espanso</a>, and <a href="https://ergonis.com/typinator">Typinator</a>. I always prefix my snippets with <code>;</code> so I don't accidentally trigger them during normal typing<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p>
<p>Exported snippets from Alfred are in an <code>.alfredsnippets</code> file which is a wrapper around a sqlite database. Instead of copy and pasting these I used the <a href="https://alfred.app/workflows/alfredapp/snippet-transformer/">Snippet Transformer</a> workflow to convert them to CSV for easier copying.</p>
<h3>General Snippets</h3>
<p>These are mostly used when write code, or git commits. The date ones I probably used 20 times a day.</p>
<div>
<table>
    <thead>
        <tr>
            <th>keyword</th>
            <th>output</th>
            <th>notes</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><code>;em</code></td>
            <td>email address</td>
            <td>I also have one of these for my work email</td>
        </tr>
        <tr>
            <td><code>;dn</code></td>
            <td>1955-11-05</td>
            <td>Alfred syntax: <code>{date:Y-MM-dd}</code></td>
        </tr>
        <tr>
            <td><code>;cl</code></td>
            <td>[1955-11-05]</td>
            <td>I used this a lot for adding entries to changelogs at work</td>
        </tr>
        <tr>
            <td><code>;dtn</code></td>
            <td>1955-11-05 06:16</td>
            <td>Alfred syntax: <code>{date:Y-MM-dd HH:mm}</code></td>
        </tr>
        <tr>
            <td><code>;sel</code></td>
            <td><code>select * from</code></td>
            <td></td>
        </tr>
        <tr>
            <td><code>;cl</code></td>
            <td><code>console.log()</code></td>
            <td></td>
        </tr>
        <tr>
            <td><code>;uuid</code></td>
            <td><code>A41861B4-3EF1-4161-B080-2F9CA025D78A</code></td>
            <td>Alfred syntax: <code>{random:UUID}</code></td>
        </tr>
    </tbody>
</table>
</div>
<h3>Symbols</h3>
<p>These are ones that I really don't <em>need</em> but it's nice to use the trademark or multiplication symbols when <s>shitposting on Mastodon</s> having very serious conversations with my friends. Quality Jokes™: a robb × mastodon collab.</p>
<div>
<table>
    <thead>
        <tr>
            <th>keyword</th>
            <th>output</th>
            <th>notes</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><code>;shrug</code></td>
            <td><code>¯\_(ツ)_/¯</code></td>
            <td></td>
        </tr>
        <tr>
            <td><code>;bull</code></td>
            <td>•</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;deg</code></td>
            <td>°</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;x</code></td>
            <td>×</td>
            <td>This is the symbol that <em>should</em> be used for multiplication. And collabs of course.</td>
        </tr>
        <tr>
            <td><code>;tm</code></td>
            <td>™</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;ctrl</code></td>
            <td>⌃</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;shift</code></td>
            <td>⇧</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;opt</code></td>
            <td>⌥</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;cmd</code></td>
            <td>⌘</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;kall</code></td>
            <td>⌃⌥⇧⌘</td>
            <td></td>
        </tr>
        <tr>
            <td><code>;kopt</code></td>
            <td><code>&lt;kbd&gt;⌥&lt;/kbd&gt;</code></td>
            <td>*</td>
        </tr>
        <tr>
            <td><code>;kcmd</code></td>
            <td><code>&lt;kbd&gt;⌘&lt;/kbd&gt;</code></td>
            <td>*</td>
        </tr>
        <tr>
            <td><code>;kshift</code></td>
            <td><code>&lt;kbd&gt;⇧&lt;/kbd&gt;</code></td>
            <td>*</td>
        </tr>
        <tr>
            <td><code>;kctrl</code></td>
            <td><code>&lt;kbd&gt;⌃&lt;/kbd&gt;</code></td>
            <td>*</td>
        </tr>
    </tbody>
</table>
</div>
<p>* <code>kbd</code> is the rarely-seen <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/kbd">keyboard input element</a>. Example which I definitely didn't just add to my css for this blog post: <kbd>⌘</kbd></p>
<p>Update: I reordered the modifier key symbols to be in the correct <a href="https://leancrew.com/all-this/2017/11/modifier-key-order/">modifier key order</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>It still happens on occasion <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-13T14:17:27Z</pubDate>
</item>
<item>
<title>A Birthday Poem I'm Sure Jason Actually Wrote and Didn't Get AI to Generate For Him</title>
<link>https://rknight.me/blog/a-birthday-poem-im-sure-jason-actually-wrote-and-didnt-get-ai-to-generate-for-him/</link>
<guid>https://rknight.me/blog/a-birthday-poem-im-sure-jason-actually-wrote-and-didnt-get-ai-to-generate-for-him/</guid>
<content:encoded><![CDATA[
<p><img alt="Happy Birthday card from Jason" src="https://cdn.rknight.me/site/happy-birthday-robb-from-jason.jpg" /></p>
<p>It's my birthday today and <a href="https://grepjason.sh">Jason</a> has been more enthusiastic than anyone about it, including me. He sent me this e-card and email which I'm sure he definitely hand-crafted himself. It's a response to <a href="https://social.lol/@robb/111727140488170177">this toot about my home insurance company emailing me</a> which totally wasn't a &quot;<em>thinly-veiled “please wish me a happy birthday, people of Mastodon” post</em>&quot;<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>.</p>
<blockquote>
<p>In the dance of the years, another twirl,<br />
A special day unfolds for you, Robb, in this world.<br />
With laughter, joy, and dreams anew,<br />
May this birthday bring delights, bright and true.</p>
<p>From morning's light to evening's starry view,<br />
May each moment sparkle with happiness through.<br />
With friends like stars and memories to weave,<br />
A year of wonders is what we believe.</p>
<p>So blow out the candles, make a wish, take a slice,<br />
In the journey of life, each year is a new spice.<br />
From all of us at Hemispheric Views, near and far,<br />
Happy Birthday, Robb, you're our shining star!</p>
<p>*This email is GDPR compliant.</p>
</blockquote>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>It really wasn't but I guess also it was <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-09T22:35:07Z</pubDate>
</item>
<item>
<title>Styling RSS and Atom Feeds</title>
<link>https://rknight.me/blog/styling-rss-and-atom-feeds/</link>
<guid>https://rknight.me/blog/styling-rss-and-atom-feeds/</guid>
<content:encoded><![CDATA[
<p>Styled XML? Well, I never. Look at my RSS feeds all styled and fancy:</p>
<p><img alt="My RSS feed preview" src="https://cdn.rknight.me/site/rss-feed-styled.png" /></p>
<p>This is done with <a href="https://developer.mozilla.org/en-US/docs/Web/XSLT/Element/stylesheet">XSLT stylesheets</a>. A truly exciting phrase. I would recommend reading <a href="https://darekkay.com/blog/rss-styling/">Darek Kay's post</a> on how to do this as well as mine. I won't be repeating everything Darek wrote in his post but I do have some additional details I wanted to note down.</p>
<p>To style an RSS or Atom feed you neeed to add a reference to an <code>xsl</code> file which is the styling document for the feed.</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-arrow deleted"><span class="token prefix deleted">&lt;</span><span class="token line">?xml version="1.0" encoding="utf-8"?><br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> &lt;?xml-stylesheet href="/subscribe/styles/rss.xsl" type="text/xsl"?></span></span></code></pre>
<p>I grabbed <a href="https://github.com/genmon/aboutfeeds/blob/main/tools/pretty-feed-v3.xsl"><code>pretty-feed-v3</code></a> which is what Darek used as base for his as well. I removed all the Tailwind classes, removed the inline styles, and added a new <code>feeds.css</code> stylesheet to Eleventy. I pulled in <a href="https://andy-bell.co.uk/a-modern-css-reset/">Andy Bell's CSS reset</a>, my site variables, and added a few rules to make the feed look nice.</p>
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"_reset.css"</span><span class="token punctuation">;</span></span> <span class="token comment">/* https: //andy-bell.co.uk/a-modern-css-reset/ */</span><br /><span class="token atrule"><span class="token rule">@import</span> <span class="token string">"_variables.css"</span><span class="token punctuation">;</span></span><br /><br /><span class="token selector">p</span> <span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span> 1em 0<span class="token punctuation">;</span> <span class="token punctuation">}</span><br /><span class="token selector">h2, h3</span> <span class="token punctuation">{</span> <span class="token property">margin</span><span class="token punctuation">:</span> 1em 0 0 0<span class="token punctuation">;</span> <span class="token punctuation">}</span><br /><span class="token selector">a</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--primary-links<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><br /><span class="token selector">a:hover</span> <span class="token punctuation">{</span> <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--offwhite<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><br /><br /><span class="token selector">.rss-feed</span> <span class="token punctuation">{</span><br />    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 20px<span class="token punctuation">;</span><br />    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--nearblack<span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token property">color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--offwhite<span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span><br />    <span class="token property">max-width</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span><br />    <span class="token property">font-family</span><span class="token punctuation">:</span> system-ui<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span><br />    <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token selector">.nav__notice</span> <span class="token punctuation">{</span><br />    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">var</span><span class="token punctuation">(</span>--primary<span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token property">color</span><span class="token punctuation">:</span> white<span class="token punctuation">;</span><br />    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token selector">.summary</span> <span class="token punctuation">{</span> <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span> <span class="token punctuation">}</span></code></pre>
<p><code>pretty-feed-v3</code> works for RSS and Darek's example works for Atom but I <em>really</em> didn't want to have to <code>xsl</code> files for each format. What I noticed was if a value wasn't found, it would output nothing, so I could just output the value for RSS <em>and</em> Atom to keep it to one file. See this example with the title and description:</p>
<pre class="language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>value-of</span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/rss/channel/title<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>value-of</span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/atom:feed/atom:title<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>value-of</span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/rss/channel/description<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>value-of</span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/atom:feed/atom:subtitle<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre>
<p>Another change I wanted to make was to only show the most recent five posts, rather than all of them. A bit of digging around and I found the answer to limit <code>xsl:for-each</code> to the first five:</p>
<pre class="language-xml"><code class="language-xml"><span class="token comment">&lt;!-- atom --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>for-each</span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/atom:feed/atom:entry[position() <span class="token entity named-entity" title="&lt;">&amp;lt;</span> 6]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br /><br /><span class="token comment">&lt;!-- rss --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">xsl:</span>for-each</span> <span class="token attr-name">select</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/rss/channel/item[position() <span class="token entity named-entity" title="&lt;">&amp;lt;</span> 6]<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre>
<p>Finally to make this work with Safari, as noted in the <code>pretty-feed-v3</code> comments, the header must be set as <code>Content-Type: application/xml; charset=utf-8</code>. I added this to my Nginx config:</p>
<pre class="language-nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">location</span> ^.xml</span> <span class="token punctuation">{</span><br />  <span class="token directive"><span class="token keyword">add_header</span> <span class="token string">"Content-Type"</span>: <span class="token string">"application/xml; charset=utf-8"</span></span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>And there we go. This is <em>much</em> nicer than showing a generic XML file or worse like on iOS where it tries to open the file in whatever application has decided it handles feeds.</p>
]]></content:encoded>
<pubDate>2024-01-07T15:08:15Z</pubDate>
</item>
<item>
<title>Netcraft, Facebook, and Digital Ocean</title>
<link>https://rknight.me/blog/netcraft-facebook-and-digital-ocean/</link>
<guid>https://rknight.me/blog/netcraft-facebook-and-digital-ocean/</guid>
<content:encoded><![CDATA[
<p>Now I’ve calmed down after <a href="https://social.lol/@robb/111704215593992932">my tootstorm</a>, here’s what happened yesterday with Netcraft, Facebook, Digital Ocean, and <a href="https://rknight.me/blog/convert-spotify-facebook-to-email-login/">this blog post</a>.<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<p>At 4:06pm I received an email from DigitalOcean that said the following:</p>
<blockquote>
<p>We’ve received a report that there may be phishing material hosted on your Droplet at 164.92.144.168 .</p>
<p>You can review the report that’s caused this ticket to be generated at <a href="https://digitalocean.abusehq.net/share/lG5vYXDEhSgX8VhNqkLfLp9YQSXQPSR680kmsD2DGMKpMdQg__0vduxKMLfCXEHh">this link</a>.</p>
<p>We’re currently reviewing this complaint, but wanted to notify you as soon as possible so that you can investigate and remove the content, as it is extremely harmful.</p>
<p>After you’ve reviewed the above report and removed the listed content - should you determine the content is phishing - we’d appreciate it if you would update this ticket so we can mark the matter as resolved.</p>
</blockquote>
<p>And then this one three minutes later:</p>
<blockquote>
<p>We have not taken any action at this time regarding this complaint, but request you address it within the next 24 hours.  Please note that if we do not hear from you and the content is still active at that time we may take additional action to prevent access to the phishing material, up to and including temporary suspension of the Droplet involved.</p>
</blockquote>
<p>So what's happened here:</p>
<ol>
<li>Netcraft are contracted by Facebook to look for phishing sites related to Facebook, fair enough.</li>
<li>Netcraft have decided through whatever method that my blog post is attempting to phish Facebook login details.</li>
<li>They have sent an abuse report to Digital Ocean, without a human reviewing it.</li>
<li>Digital Ocean received this report and sent me the report claiming the post is &quot;<em>extremely harmful</em>&quot;. No human involved again.</li>
</ol>
<p>So Netcraft, on behalf of Facebook, had decided that my blog post was phishing and Digital Ocean have taken that at face value. Note the wording from here: &quot;<em>...so you can investigate and remove the content, as it is extremely harmful.</em>&quot; and &quot;<em>...if we do not hear from you and the content is still active at that time we may take additional action to prevent access to the phishing material</em>&quot;. So I'm hosting dangerous phishing content and also my droplet will be suspended if I don't remove the post? Why has this email been sent before <em>anyone</em> at DO even reviewed it.</p>
<p>Had I not done anything because I was busy, or whatever I might have been doing, my droplet would have been suspended on a baseless claim? These emails, quite frankly, are shitty.</p>
<p>I reported this on Netcraft's abuse page as as false positive and got these two generic responses back a while later:</p>
<blockquote>
<p>[Opsgenie] Ben Golding acknowledged alert: False positive report for takedown incident 3ee0db5c9a6a</p>
</blockquote>
<blockquote>
<p>We have reviewed the site and agree that it was incorrectly identified as phishing. We have now halted the takedown process and sent retraction messages to all parties contacted. We have also removed the site from our phishing blocklist.</p>
</blockquote>
<p>&quot;<em>...agree that it was incorrectly identified</em>&quot;. Wow how do you do it with only <a href="https://www.helpnetsecurity.com/2023/07/18/netcraft-funding-100-million/">$100m in funding</a>. Truly incredible.</p>
<p>I replied to Digital Ocean with the following:</p>
<blockquote>
<p>The page mentioned in the abuse report (<a href="https://rknight.me/blog/convert-spotify-facebook-to-email-login/">https://rknight.me/blog/convert-spotify-facebook-to-email-login/</a>) is not in any way related to phishing or targeting Facebook customers. It is a blog post outlining how to unlink a Facebook account from Spotify. At no point does it request user information, or advise sharing personal details with myself or any third party.</p>
<p>No action should be taken here. The abuse report from Netcraft is completely frivolous and inaccurate.</p>
</blockquote>
<p>And they did reply, four hours later:</p>
<blockquote>
<p>Thanks for sharing that update. It looks like this was a false positive, sent over via Netcraft. There's no reason to worry, this won't be suspended. Sometimes, entities will go through these brand protection agencies a bit overzealously. We just ask that folks share a timely update to any reports of this type, as noted in that original messaging. I'll close this ticket out. If we receive any future reports, we'll always forward those along in the spirit of transparency.</p>
</blockquote>
<p>&quot;<em>Sometimes, entities will go through these brand protection agencies a bit overzealously</em>&quot;. And yet you take them at face value anyway? Not good enough.</p>
<p>The same person<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup> then replied again, having seen my tootstorm probably from <a href="https://news.ycombinator.com/item?id=38880713">Hacker News</a>, a few hours later:</p>
<blockquote>
<p>Just wanted to loop back around here since I saw the Mastodon thread and realized that there's likely a bit more information that can be useful here. Couldn't share it publicly, since it'd be inappropriate to share details related to your personal account and ticket. I also realize that &quot;there's no need to worry&quot; can sound inconsiderate in a medium that lacks accent, tone, and the usual mannerisms that provide context to our speech. I do apologize if that read as dismissive. That is certainly not the intent.</p>
</blockquote>
<p>Okay I can agree with that. Intent isn't easy to convey in email. I think this was a direct response to <a href="https://social.lol/@robb/111705237720008830">this toot</a>.</p>
<blockquote>
<p>To be a bit more specific, there was never a risk of this Droplet being deleted, blocked or of your account having any restrictions in place.</p>
</blockquote>
<p>Really? Because the previous email says &quot;...<em>up to and including temporary suspension of the Droplet</em>&quot;. Sure sounds like restrictions to me. Then some more general information about how the reporting system works, included here for the sake of completeness.</p>
<blockquote>
<p>In instances of reported phishing, we automatically pass along the initial report to maintain transparency and ask for either a response or the content removed. I don't think it'd be appropriate of us to withhold details of companies issuing such reports against our customers, and this ask is typically a reasonable one, allowing us to easily sort out the issue with the customer taking a look and sharing their perspective on the matter if they feel the report is unreasonable. Without response or the content being removed, we don't have automated actioning at this stage and would require our team to manually review the report, the content in dispute, as well as the whole of your customer account. We have the discretion to throw out any report that doesn't align with our expectations, which would naturally occur here.</p>
<p>Beyond phishing, our abuse team has a number of safeties baked into our infrastructure that intentionally limit us from taking action against Droplets or accounts like yours. I totally get that it can be alarming to get an alert like this, and that without the understanding shared, it can seem a bit scarier than it is. Also, worth emphasizing that no one twisted my arm to share this. I just wanted to make sure we could be as transparent as possible with you as possible and represent the work our team does in a better light, since it's certainly a hard-working group of folks.</p>
</blockquote>
<p>To be clear on that last point, I don't think any single person is to blame here, nor do I think the staff at Digital Ocean are being deliberately malicious. I do, however, think the wording of the initial emails are outrageously threatening and don't line up with what allegedly would have happened if I'd done nothing.</p>
<p>This <em>is</em> all resolved now; my droplet isn't being suspended but I'm already in the process of moving my sites to <a href="https://www.hetzner.com/">Hetzner</a>. Maybe their abuse process is just as bad as Digital Ocean, maybe it's not but that's not the point. On principle, I'm moving everything.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I'm sure this has happened before on this blog post but I can’t find any toots, tweets, or emails from me to confirm this. <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>I say &quot;the same person&quot; but the email is signed off as &quot;Security Operations DigitalOcean Security&quot; so I don't know 100% if it was the same person or not. <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-06T12:18:26Z</pubDate>
</item>
<item>
<title>My Home Screen (January 2024)</title>
<link>https://rknight.me/blog/my-home-screen-january-2024/</link>
<guid>https://rknight.me/blog/my-home-screen-january-2024/</guid>
<content:encoded><![CDATA[
<p><img alt="Homescreen" src="https://cdn.rknight.me/site/homescreen-jan-2024.png" /></p>
<p>Since the last time I <a href="/blog/homescreen-november-2017/">posted my homescreen</a> in 2017 the main change is widgets. I still kind of dislike them and wish I could customise them more but it's better than not having them.</p>
<p>Top left is <a href="https://apps.apple.com/gb/app/marvis-pro/id1447768809">Marvis Pro</a> which aside from being a nice music player, also integrates with <a href="http://Last.fm">Last.fm</a>; the main reason I use it. The other widgets are Fantastical and Reminders.</p>
<p>Most of the apps have been on my homescreen for long time with the exception of two. <a href="https://huckleberrycare.com">Huckleberry</a> is a baby tracking app for keeping track of feeds, sleeps, meds, and poops. It's pretty crap but my wife chose it and it's free for what we need. <a href="https://omnivore.app/home">Omnivore</a> is my current read-later app. It's lovely, and free, but doesn't <em>quite</em> do what I want so I'm in the research phase of trying some other services.</p>
<p>My wallpaper is Baby Knight and I have the large photo widget on the screen to the left<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. And dark mode is on always.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I have no idea what this screen is called. <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-03T14:22:04Z</pubDate>
</item>
<item>
<title>New Old Posts</title>
<link>https://rknight.me/blog/new-old-posts/</link>
<guid>https://rknight.me/blog/new-old-posts/</guid>
<content:encoded><![CDATA[
<p>Yesterday <a href="https://chrismcleod.dev/blog/new-year-old-posts/">Chris imported 470 old posts of his</a> into his website and I was inspired to do the same.</p>
<p>The earliest posts I could think of were when I was writing reviews of various iPhone apps for <a href="http://iPhoneWorld.ca">iPhoneWorld.ca</a> in 2009. Sadly the site has been offline a long time so I fired up <a href="https://archive.org">the internet archive</a> and managed to find 14 of those reviews. It's a goldmine of glorious pre-iOS7 design, check out all the posts with the <a href="https://rknight.me/blog/tags/iphoneworldca/">#iPhoneWorldCA</a> tag.</p>
<p><img alt="iPhone 3GS homescreen" src="https://cdn.rknight.me/site/iphone-3gs.png" /></p>
<p>After that I wrote for a while for <a href="https://appadvice.com">AppAdvice</a> which <em>does</em> still exist but all my reviews are gone. Thankfully I had archived the 15 reviews previously which you can view on the <a href="https://rknight.me/blog/tags/appadvice/">#AppAdvice</a> tag.</p>
<p>Deep in my computer archives I found a Tumblr backup from 2010. Most of these posts were just link posts and basically all of the links were dead. I did manage to save a few posts though:<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p>
<ul>
<li><a href="https://rknight.me/blog/6-things-i-want-in-os4/">6 Things I want in OS 4.0</a></li>
<li><a href="https://rknight.me/blog/my-top-five-bookmarklets/">My Top Five Bookmarklets</a></li>
<li><a href="https://rknight.me/blog/6-things-i-want-in-os4-updated/">6 Things I want in OS 4.0 [Updated]</a></li>
<li><a href="https://rknight.me/blog/quick-tip-rotate-photos-in-evernote/">Quick Tip: Rotate Photos in Evernote</a></li>
<li><a href="https://rknight.me/blog/my-home-screen-january-2010/">My Home Screen (January 2010)</a></li>
</ul>
<p>Finally I found an old version of this site which had a lot of posts from 2010 and 2011 that weren't here for some reason, so that added another 82 posts.</p>
<p>I updated my <code>postsForFeed</code> collection in Eleventy so that posts older than 2013 won't show up and spam everyone's feed reader<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>:</p>
<pre class="language-js"><code class="language-js"><span class="token function-variable function">postsForFeed</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">collectionApi</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> collectionApi<span class="token punctuation">.</span><span class="token function">getFilteredByGlob</span><span class="token punctuation">(</span><span class="token string">"src/posts/blog/**/*.md"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">p</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> <span class="token function">moment</span><span class="token punctuation">(</span>p<span class="token punctuation">.</span>date<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isAfter</span><span class="token punctuation">(</span><span class="token function">moment</span><span class="token punctuation">(</span><span class="token string">'2012-12-12'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>None of these posts are particularly exciting but I want to keep as much of it as I can online. As far as I know, this site now contains every article I've ever written.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>lol Evernote <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>Not a dig at you, Chris. More of a &quot;thank fuck someone else did it first&quot; <a class="footnote-backref" href="#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-03T13:31:33Z</pubDate>
</item>
<item>
<title>Making a Word Cloud for App Defaults</title>
<link>https://rknight.me/blog/making-a-word-cloud-for-app-defaults/</link>
<guid>https://rknight.me/blog/making-a-word-cloud-for-app-defaults/</guid>
<content:encoded><![CDATA[
<p>Since I last <a href="https://rknight.me/blog/so-many-default-apps/">blogged about</a> the <a href="https://defaults.rknight.me/">App Defaults</a> project the number of blog posts has more than doubled; there are 320 now!</p>
<p>A few people have said something along the lines of &quot;It would be cool to see what the most popular apps are&quot; and I told them I'd been working on a way to do it. I shipped the best approximation I can do given the blog posts don't have a standard format: a word cloud.</p>
<p>I created a new script called <a href="https://github.com/rknightuk/app-defaults/blob/main/_wordcloud/extract.js"><code>extract.js</code></a> and used <a href="https://github.com/extractus/article-extractor"><code>@extractus/article-extractor</code></a> to extract the main article content from everyone's blog posts and write that to an HTML file.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> extract <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">'@extractus/article-extractor'</span><br /><span class="token keyword">import</span> fs <span class="token keyword">from</span> <span class="token string">'fs'</span><br /><br /><span class="token keyword">const</span> sites <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span><span class="token string">'../_data/sites.json'</span><span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> <span class="token function-variable function">run</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sites<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> input <span class="token operator">=</span> sites<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>url<br /><br />        <span class="token keyword">try</span> <span class="token punctuation">{</span><br />            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'running for '</span> <span class="token operator">+</span> input<span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>fs<span class="token punctuation">.</span><span class="token function">existsSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./_output/_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.html</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token keyword">const</span> article <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">extract</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><br />                fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./_output/_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.html</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> article<span class="token punctuation">.</span>content<span class="token punctuation">)</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'error caught, writing blank file'</span><span class="token punctuation">)</span><br />            fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">./_output/_</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>i<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">.html</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>Once I had the HTML, I needed to extract the words. The initial version used a combination of regex, find-and-replace, and generally nonsense to try to get a clean set of words. This did not work; I ended up with words joined together and punctuation where it shouldn't be. I showed the demo on the <a href="https://www.youtube.com/live/uMtl7hxBOJA?si=6Xr0wjxWX3e9G5dU&amp;t=20064">Hemispheric Views hangout</a> and Jason was <em>very</em> excited so I knew I had to get this working.</p>
<p>This morning I realised I was making this too difficult, I just wanted the text. Javascript can do that with <code>innerText</code> and <code>jQuery</code> can do it with <code>text()</code>. So I installed <a href="https://www.npmjs.com/package/cheerio">Cheerio</a>. I used Cheerio in the past to do <a href="https://rknight.me/blog/web-scraping-with-node-and-cheerio/">some web scraping</a>. I needed to remove some rogue punctuation after the fact, and do some splitting and joining but the output is much better than before:</p>
<pre class="language-js"><code class="language-js"><br /><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> sites<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token comment">// grab the html as above</span><br /><br />    <span class="token keyword">const</span> htmlWords <span class="token operator">=</span> $<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />        <span class="token comment">// remove emoji</span><br />        <span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">w</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">let</span> wf <span class="token operator">=</span> w<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span>wf<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> wf <span class="token operator">=</span> wf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span>wf<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span> wf <span class="token operator">=</span> wf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span>wf<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'!'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> wf <span class="token operator">=</span> wf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span>wf<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">'?'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> wf <span class="token operator">=</span> wf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span>wf<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">)</span> wf <span class="token operator">=</span> wf<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><br />            wf <span class="token operator">=</span> wf<span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">'('</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />                <span class="token punctuation">.</span><span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token string">')'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />            <span class="token keyword">return</span> wf<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">w</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />            <span class="token keyword">return</span> w <span class="token operator">&amp;&amp;</span> w<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">3</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>stopWords<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>w<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />        <span class="token punctuation">}</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><br /><br />    htmlWords<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">word</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>wordMap<span class="token punctuation">[</span>word<span class="token punctuation">]</span><span class="token punctuation">)</span> wordMap<span class="token punctuation">[</span>word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><br />        wordMap<span class="token punctuation">[</span>word<span class="token punctuation">.</span><span class="token function">toLowerCase</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">++</span>  <br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>Notice I'm also filtering out words shorter than 3 characters, removing some common punctuation, as well as checking against a list of <a href="https://en.wikipedia.org/wiki/Stop_word">stop words</a>. I expanded this stop words list to include some common words these blog posts all tend to have like <code>hemispheric</code>, <code>duel</code>, and <code>defaults</code>.</p>
<p>To make the word cloud I'm using <a href="https://github.com/timdream/wordcloud2.js/?tab=readme-ov-file"><code>wordCloud2.js</code></a> which requires the words to be in this format: <code>[['foo', 12], ['bar', 6]]</code><sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>. Once I had extracted all the words, I sort them by frequency, map them to the correct format, the write them to Eleventy's data directory:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// write the output of all the words</span><br />fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">'./_output/wordMap.json'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>wordMap<span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// sort by cound</span><br /><span class="token keyword">const</span> sorted <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span>wordMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">a<span class="token punctuation">,</span> b</span><span class="token punctuation">)</span> <span class="token operator">=></span> b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">let</span> outputForWordCloud <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br /><br />Object<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span>sorted<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">word</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    outputForWordCloud<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// write both files to the data directory</span><br />fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">'../_data/wordsRaw.json'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>wordMap<span class="token punctuation">)</span><span class="token punctuation">)</span><br />fs<span class="token punctuation">.</span><span class="token function">writeFileSync</span><span class="token punctuation">(</span><span class="token string">'../_data/words.json'</span><span class="token punctuation">,</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>outputForWordCloud<span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>
<p>Once I had my data I added it to the window object on <a href="https://defaults.rknight.me/wordcloud/">the Word Cloud page</a> and initialised the library:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><br />    window<span class="token punctuation">.</span>WordCloudWords <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> words <span class="token operator">|</span> stringify <span class="token operator">|</span> safe <span class="token punctuation">}</span><span class="token punctuation">}</span><br /></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><br />    <span class="token selector">.canvas</span> <span class="token punctuation">{</span><br />        <span class="token property">border</span><span class="token punctuation">:</span> 20px solid white<span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>canvas</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>wordcloud-canvas<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>canvas<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>600<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>1200<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>canvas</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><br /><br /><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token comment">// - 70 here to account for padding</span><br />    <span class="token keyword">const</span> width <span class="token operator">=</span> <span class="token punctuation">(</span>window<span class="token punctuation">.</span>innerWidth <span class="token operator">></span> <span class="token number">1200</span> <span class="token operator">?</span> <span class="token number">1200</span> <span class="token operator">:</span> window<span class="token punctuation">.</span>innerWidth<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">70</span><br />    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'wordcloud-canvas'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>width <span class="token operator">=</span> width<br />    document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'wordcloud-canvas'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>height <span class="token operator">=</span> <span class="token number">600</span><br />       <br />    <span class="token function">WordCloud</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'wordcloud-canvas'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <br />        <span class="token literal-property property">list</span><span class="token operator">:</span> window<span class="token punctuation">.</span>WordCloudWords<span class="token punctuation">,</span> <br />        <span class="token literal-property property">rotateRatio</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <br />        <span class="token literal-property property">shrinkToFit</span><span class="token operator">:</span> <span class="token boolean">true</span> <br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />    <br /></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>The final result as of this writing (<a href="https://defaults.rknight.me/wordcloud/">view the live version here</a>):</p>
<p><img alt="App Defaults word cloud" src="https://cdn.rknight.me/site/app-defaults-word-cloud.jpg" /></p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>What a strange format choice <a class="footnote-backref" href="#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-02T12:32:59Z</pubDate>
</item>
<item>
<title>Initial Thoughts on Red Dead Redemption 2</title>
<link>https://rknight.me/blog/initial-thoughts-on-red-dead-redemption-2/</link>
<guid>https://rknight.me/blog/initial-thoughts-on-red-dead-redemption-2/</guid>
<content:encoded><![CDATA[
<ul>
<li>I think they used the same cougar sound effect from the first one. When I heard it, I had flashbacks</li>
<li>The map is <em>huge</em>, I'll be surprised if I finish this in less than 100 hours</li>
<li>The controls for switching weapons, items, and clothing are so confusing</li>
</ul>
]]></content:encoded>
<pubDate>2018-10-29T08:24:56Z</pubDate>
</item>
<item>
<title>Creating Permanent and Temporary Redirects with Nginx</title>
<link>https://rknight.me/blog/creating-permanent-and-temporary-redirects-with-nginx/</link>
<guid>https://rknight.me/blog/creating-permanent-and-temporary-redirects-with-nginx/</guid>
<content:encoded><![CDATA[
<div> Nginx, redirects, Sublime Text, VSCode, multi-line editing
<br /><br />总结:
本文介绍了在Nginx配置中设置永久重定向以防止旧博客链接404的方法，作者使用Sublime Text进行多行编辑，提供了针对特定URL和整个域的重定向配置示例。此外，还提到了作者在处理大量重定向时使用Sublime Text的优势。 <div>
<p>As part of a change to move my blog posts from <code>/slug-of-post</code> to <code>/blog/slug-of-post</code> I needed to set permanent redirects in my Nginx config so the old post links wouldn't 404. <a href="https://forge.laravel.com">Forge</a> has a UI for this but it only allows doing one redirect at a time and I had ~130 to do. So I grabbed a list of all my post slugs and formatted them with multi-line edit in Sublime Text<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup>.</p>
<p>Add the following to your Nginx config to do a redirect for a specific URL. In my case, this lives at <code>/etc/nginx/sites-available/rknight.me</code>.</p>
<pre class="language-nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span><br />    <span class="token comment"># 301 Moved Permanently</span><br />    <span class="token directive"><span class="token keyword">rewrite</span> ^/slug-of-post /blog/slug-of-post permanent</span><span class="token punctuation">;</span><br /><br />    <span class="token comment"># 302 Found/Moved Temporarily</span><br />    <span class="token directive"><span class="token keyword">rewrite</span> ^/slug-of-post /blog/slug-of-post redirect</span><span class="token punctuation">;</span><br /><br />    <span class="token comment"># the rest of your nginx config here</span><br /><span class="token punctuation">}</span></code></pre>
<p>You can also do this for a whole domain. Although I didn't need to do this, it's worth noting here as well.</p>
<pre class="language-nginx"><code class="language-nginx"><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span><br />    <span class="token comment"># redirect the root of the domain</span><br />    <span class="token directive"><span class="token keyword">rewrite</span> ^/$ http://new.example.com permanent</span><span class="token punctuation">;</span><br /><br />    <span class="token comment"># preserve paths</span><br />    <span class="token directive"><span class="token keyword">rewrite</span> ^/(.*)$ http://new.example.com/<span class="token variable">$1</span> permanent</span><span class="token punctuation">;</span><br /><br />    <span class="token comment"># the rest of your nginx config here</span><br /><span class="token punctuation">}</span></code></pre>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I use VSCode for most things, but Sublime is still the best at handling multi-line editing <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2024-01-01T13:16:10Z</pubDate>
</item>
<item>
<title>Roast Potato Recipe</title>
<link>https://rknight.me/blog/roast-potato-recipe/</link>
<guid>https://rknight.me/blog/roast-potato-recipe/</guid>
<content:encoded><![CDATA[
<div> potatoes, goose fat, garlic, rosemary, thyme
<br /><br />总结:
这是一个炸马铃薯的食谱，需要马铃薯、鹅脂肪、大蒜、迷迭香和百里香。首先将马铃薯切成块，煮熟后沥干，然后在预热的烤箱中与鹅脂肪一起烹饪约90分钟。途中需要翻动几次，最后撒上盐和大蒜、迷迭香和百里香。这个食谱来源于Facebook视频评论中，作者认为将食谱放在视频评论中不够方便。 <div>
<p><img alt="Roast Potatoes" src="https://rknightuk.s3.amazonaws.com/site/roast-potatoes.jpg" /></p>
<p>I tried this recipe on boxing day this year and it was fantastic so we made some more tonight which were, unsurprisingly, also fantastic.</p>
<p>You will need:</p>
<ul>
<li>Maris Piper potatoes. 2kg is a reasonable amount for 4-6 people but we ate all those between three of us so do as many as you <s>want</s> can fit in your oven</li>
<li>Goose fat</li>
<li>Olive oil (optional)</li>
<li>Salt</li>
<li>Garlic</li>
<li>Fresh rosemary</li>
<li>Fresh thyme</li>
</ul>
<p>Peel the potatoes and chop them into four (or more if you have exceptionally large potatoes). Give them a rinse to remove some of the starch. Pre-heat the oven to 180°c.</p>
<p>Boil them in water with salt, crushed garlic, and a bit of rosemary and thyme for 15-20 minutes until they <em>just</em> start become soft. Drain them and leave them to dry for about 10 minutes.</p>
<p>While the potatoes are draining, pop a generous amount of goose fat (I use somewhere around 100g) in a roasting tray, along with a drizzle of olive oil if you're feeling fancy, and stick it in the oven to get the fat nice and hot.</p>
<p>After the potatoes have dried out and the goose fat is hot, put all the potatoes in the roasting tray and make sure they all get a good covering with the fat, then into the oven with them. All told these should cook for around 90 minutes. Every 30 minutes take them out and turn them to make sure they're cooking evenly. For the last 20 minutes, sprinkle some salt on them, and pop some garlic cloves, rosemary, and thyme into the tray. Serve them up and eat all the potatoes you can.</p>
<hr />
<p>This recipe came from a Facebook reel which I'm not linking to for two reasons:</p>
<ol>
<li>I had to OCR the steps out of the comments on the video so I worked hard for this</li>
<li>I can't find it anymore because searching for reels is impossible</li>
<li>Who puts a recipe in a video comment, come on</li>
</ol>
]]></content:encoded>
<pubDate>2023-12-30T23:52:12.845+00:00</pubDate>
</item>
<item>
<title>Letters with Kev Quirk</title>
<link>https://rknight.me/blog/letters-with-kev-quirk/</link>
<guid>https://rknight.me/blog/letters-with-kev-quirk/</guid>
<content:encoded><![CDATA[
<p>Just as I started the year writing back and forth <a href="https://rknight.me/blog/letters">with Jason Becker</a>, this month I was part of <a href="https://kevquirk.com/penpals">Kev's PenPals project</a>. This is the conversation we had covering all kinds of topics including Christmas food, weddings, and <a href="https://indieweb.org/POSSE">POSSE</a>. You can see Kev's <a href="https://kevquirk.com/penpals/robb-knight">post about this conversation here</a>.</p>
<hr />
<h3>1st December</h3>
<p>Hey Robb,</p>
<p>Hope you're doing well? Thanks for agreeing to be my PenPal for December - I'm looking forward to getting to know you better. With Christmas coming up, I don't know how much opportunity we will have to email one another, but I hope it works out. If nothing else, we should have plenty to talk about. :-)</p>
<p>No point in beating around the bush...let's dive right in, shall we? Can you tell me a little bit about yourself please? I've been doing a bit of cyber stalking to see what I can learn about you, I don't know why, but I thought you were American. Looking at your Social.lol page it seems you're in Portsmouth? Being in the same timezone should make emailing a little easier.</p>
<p>I also see that you got married recently. Congratulations! My and I got married around 3.5 years ago, in the summer before the pandemic hit. We've been together for, like 16 years now I think, and we never really intended to get married. We decided to once we made the decision the adopt - we figured it would be less confusing for the kids if we all had the same surname. 🤷‍♂️</p>
<p>Romance is not dead in the Quirk household!</p>
<p>OK, I've held off long enough...please please please tell me about <a href="https://rknight.me">your site</a>. I LOVE the design of it. The colours, the typography, the subtle texture on the background. It's just lovely. What are you using at the backend?</p>
<p>I notice you're using <a href="https://home.omg.lol">social.lol</a> too; have you ever thought about using their platform to host your site? I have an account there too, more to explore it than anything else. The sheer number of services available for the price is great value, and they're always adding new stuff. I think if I ever left <a href="https://fosstodon.org">Fosstodon</a>, I'd probably switch to their Mastodon instance.</p>
<p>I think this is more than enough to get us started. Looking forward to your reply.</p>
<p>Kev</p>
<hr />
<h3>1st December</h3>
<p>Hi Kev,</p>
<p>Firstly, this is a nice bookend to the year because I started January with a similar project with <a href="https://json.blog/letters/">Jason Becker</a>.</p>
<p>You are right that I'm in Portsmouth. I was born here, then lived for most of my school years in Southampton, and moved back here afterwards. I work as a developer for a property software company here in Portsmouth. I live with my wife, cat, and nearly-nine month old daughter. We were <em>supposed</em> to get married in September 2020 but because of <em>the event</em> we moved it to May 2021. Then the restrictions made it difficult to have the day we wanted we decided to move house instead and so we got married this year. I would not recommend having a baby and getting married in the same year 😅</p>
<p>To your point about getting married for more &quot;practical&quot; reasons, we totally get that - if we'd been able to get deposits back from various vendors we may have gone for the cheaper registry office wedding instead of what we had. That said we had a great day even if it was the hottest day of the year.</p>
<p>Now, to the real questions: my website. We've crossed paths <em>just</em> as I pushed a new design. My previous design I had for a couple of years (which is <a href="https://2023.rknight.me">archived here</a>) and as much as I loved it, the &quot;boxy&quot; design was pushing me into a corner where I was struggling to make big changes to layouts so I knew I wanted a new design but I didn't know <em>what</em> I wanted. Until I saw the <a href="https://simplebits.shop/collections/fonts/products/cartridge">Cartridge font from Simplebits</a> and I knew I wanted a site that was reminiscent of the Atari 2600-type designs from the game covers.</p>
<p>Speaking of design, a friend and I were discussing monogram logos recently and how we have awkward letters to make a nice monogram with. Then I remembered yours and showed it to her and she was <em>furious</em> at how good it is. I love it.</p>
<p>I'm using <a href="https://www.11ty.dev">Eleventy</a> for my site hosted on Digital Ocean and have done for maybe five years. I love the flexibility it gives me to pull in data from a bunch of different sources and manipulate it however I want. It's what I use for most of my side projects if I can. I'm a big fan of using as little as possible to build websites; if I can avoid a database or javascript, I will. Speaking of which, I recently used simple.css on a project and it saved me a lot of time so thanks for that.</p>
<p>How do you like Kirby? I saw your post about the custom forms for the penpals project and it looks like an excellent CMS but I've not had occasion to use it.</p>
<p>As for hosting my site on omg.lol I don't use it for similar reasons that you mentioned for not using micro.blog: I want <em>a lot</em> more control over everything I can. I like to automate things, like <a href="https://rknight.me/automating-my-now-page/">my now page</a>, and generally be able to control as much as I can with my own code. Weblog.lol is an excellent blogging platform, but it's not for me. I <em>do</em> swear by social.lol as an instance though: I've been burned twice by instances (one Mastodon and one Lemmy) just shutting down overnight and not being able to export my data. I need to be on an instance where I know who's running it and that I can pay money to so that instance continues to run.</p>
<p>I can talk about open web protocols until the cows come home so I'll stop for now.</p>
<p>Speak soon,<br />
Robb</p>
<hr />
<h3>3rd December</h3>
<p>Hey Robb,</p>
<p>Thanks for the reply. I originally said in the first post that I'd exchange 1 email per week with my PenPal, but if you're happy with whatever cadence suite our schedule at the time (i.e. we just email back and forth whenever it suits) I'm good with that if you are?</p>
<p>Young children seem like such hard work. Our boys are adopted - we decided early on in our relationship that we didn't want kids, but later decided that we wanted a family, but still didn't feel the need to have biological kids, so we decided to adopt - anyway, I digress...our kids are adopted and they came home when they were 5 and 2, so we never experienced the baby part of bringing up kids. Which feels like a double edge sword; on the one hand, se dodged all the long nights etc. but on the other, we missed out on making that early bond with them. So simultaneously envy and don't envy you. :)</p>
<p>Ah, don't get me started on how expensive weddings are. My wife and I decided early on that we wanted to keep it small, so we set the budget at £10k (<em>ten thousand pounds</em> for a <strong>single</strong> day!) and so we started looking at venues. Slowly but surely the budget began to creep up until we were having conversations about £30k weddings.</p>
<p>Luckily we both saw sense, reeled it back in and ended having a lovely wedding for around the original budget. Pissed it down the whole day though haha.</p>
<p>You previous &quot;boxy&quot; design is quite similar to the design I have now on my site, actually. I've considered using the <code>box-shadow</code> on things like cards etc. but decided against over-using them and just having them on buttons instead.</p>
<p>The Cartridge font is really nice - and not obnoxiously priced like many fonts. I've never heard of Simplebits before - they have some great fonts, and all seem to be very reasonably priced.</p>
<p>Thanks for the kind words about my monogram. I'm really happy with how it turned out, but I suppose K &amp; Q are easy to put together in this way.</p>
<p>I'm similar to you - I prefer to use no JavaScript on my site. I've been thinking about introducing a colour switcher so it doesn't only rely on <code>prefers-color-scheme</code> so would need to introduce some JS for that, but I'm still on the fence. I used Jekyll when this site was on an SSG, but did consider a move to 11ty more than once. I'll definitely use it on a project at some point.</p>
<p>I'm really enjoying Kirby. Like <em>really</em> enjoying it. I always liked WP, but the sheer amount of noise in the control panel frustrated me. Kirby is really bare bones by default, and allows you to build panels that make sense to you.Once you have it nailed, it's like having a custom build CMS, just for you. And because it's not DB driven, if I want to create content in a text editor, I can do that too. It's so flexible, I really love it.</p>
<p>I'm with you on the omg.lol thing. I think it's a great out-of-box solution for someone who's just getting started, or someone who doesn't want to manage their own site. I'm going to be penpalling (is that even a word?) with <a href="https://gabz.blog">Gabz</a> in June; he used omg.lol for his blog for a while, so I'll be interested to hear what he says about it.</p>
<p>Oof this is SUCH a long email already, but I'd love to talk about open protocols too, so I'll just bullet out some of my thoughts and we can dig into them more (along with your thoughts) in our next exchange:</p>
<ul>
<li>I think ActivityPub has the potential to be <em>great</em> but I wonder how well it will scale. Fosstodon only has like 60k users and it's really expensive to run already. Goodness knows what it must cost Eugen to run .social</li>
<li>If I were ever to run my own instance, I think I'd go with GoToSocial, as it seems to be quite lightweight and it supports most of the spec</li>
<li>I don't understand why BlueSky tried to re-invent the wheel? Why not just on the AP bandwagon?</li>
<li>I don't think Threads will ever support AP - that's just a pipedream</li>
<li>I used to run the IndieWeb stack on my site, but it's so convoluted to plug it all together, that I decided to abandon it. I think if it's ever going to gain traction, there needs to be either a hosted solution that supports it natively, or it needs to be hugely simplified</li>
</ul>
<p>Anyway, this email ended up being WAY longer than I intended it to be. Sorry about that. Looking forward to hearing your thoughts on the open protocols.</p>
<p>Kev</p>
<hr />
<h3>10th December</h3>
<p>Hey Kev,</p>
<p>Firstly, our wedding came out around the same price as yours and that was considered &quot;cheap&quot; in comparison to some of my friends. I try not to think about the money and just remember the day which was wonderful.</p>
<p>I'm looking forward to seeing what you and Gabz talking about, he's a great guy.</p>
<p>Now onto the meaty stuff: open protocols.</p>
<blockquote>
<p>Fosstodon only has like 60k users and it's really expensive to run</p>
</blockquote>
<p>This was one of the reasons I built <a href="https://bugle.lol/">Bugle</a> - I wanted something I could run easily on my server to create accounts for little side projects and such., Even for a single user who has a few hundred followers, or uploads a lot of photos, it can get expensive quick with Mastodon. The way it handles files and the duplication that happens is a huge problem in getting smaller instances up and running and probably why we see so many users on the main four or five instances. Building Bugle did give me a good insight into how a lot of the protocols work but it's <em>hard</em>. The lack of documentation, or more specifically, examples of how the spec should work make it difficult. The developer of Pixelfed, Dan, was incredibly helpful in pointing me in the right direction for things I was stuck on.</p>
<p>How do you find running an instance with that many users? Does moderation take up a lot of time or is it generally pretty good for Fosstodon?</p>
<p>I hadn't heard of GoToSocial until you mentioned it but that looks much closer to what I was trying to achieve with Bugle and I&quot;m adding that to my list to investigate. I don't have much to say on BlueSky or Threads, neither of them interest me if they don't support AP so I don't pay them much attention (although I do have accounts on both). The one thing I do like with Bluesky is the domain-as-a-username. That is something that does excite me and I know Mastodon has talked about implementing something similar in the future.</p>
<p>I agree with you on the IndieWeb stuff, I've implemented webventions and recently some other metadata-type things, but like AP it just doesn't feel like it's that well documented. <a href="https://getindiekit.com/">IndieKit</a> looks promising in that it's runs separately from your site and handles all the IndieWeb stuff one might need. It doesn't have everything yet but it's one to keep an eye on.</p>
<p>We are now just about two weeks from Christmas, how are you plans coming along for the day?</p>
<p>Speak soon,<br />
Robb</p>
<hr />
<h3>12th December</h3>
<p>Hey Robb,</p>
<p>It's crazy how expensive weddings can get. My sister-in-law is married to an Indian and they had a traditional Indian wedding, with a TONNE of people. I dread to think how much theirs cost.</p>
<p>Scalability of Mastodon does concern me. The way in which is caches everything from every server/account it's connected to means things spiral quickly. I remember speaking with Hugo, who runs Masto.host, and he said with me having around 26k followers, a single-user instance would be around $50/month just because of the amount of other instances it would have to connect to.</p>
<p>When Mike and I started Fosstodon, we decided early on to go with a hosted solution, as it would be one less thing for us to worry about. Turns out it was the best decision, as I really wouldn't want to be managing the infrastructure myself with so many people relying on it. We've since grown out <a href="https://hub.fosstodon.org/team/">the moderation team</a> so that Mike and I can take a step back from the moderation stuff and can focus on other things, like dealing with the various parts that make up the service etc.</p>
<p>At the same time, we also decided to go invite-only. Mainly to force people to go to other servers, and we're far bigger than we ever thought we would be, and honestly, it worries me. I don't want to be responsible for the social network of so many people. But also for moderation - previously we were approving every account that signed up, and we moderate heavily. It's a large burden, but it keeps the timeline (I think) clean and friendly. I have a test account on .social and local timeline over there is a hot mess.</p>
<p>I was listening <a href="https://ruminatepodcast.com/">Ruminate</a> this morning on my way to work; you and Johnny were talking about blog posts vs micro/social posts and what belongs where. Have you ever thought about integrating social with your blog?</p>
<p>I decided that they're 2 different use cases, and I personally dislike it when my RSS feeds contain multiple hot takes per day, as that's not what I want it for - my RSS feeds are for longer form content. I enjoy both hot takes and longer articles, but I have to be in a different frame of mind to consume each, so mangling them both together makes no sense to me.</p>
<p>Ah, Christmas. We're doing ok. There's still a few presents to buy, and a lot to wrap, but we're pretty close, I think. We do things a bit differently on Christmas day. Instead of having a big fancy roast dinner, we cook a simple curry and enjoy that instead. That way, we're not slaving in the kitchen all day and can enjoy the day as a family. Hows about you? You all sorted yet?</p>
<p>Look forward to talking soon.</p>
<p>Kev</p>
<hr />
<h3>22nd December</h3>
<p>Hey Kev,</p>
<p>Been a while since I replied, we've had a hectic week over at the Knight household with illnesses going round everyone.</p>
<blockquote>
<p>Have you ever thought about integrating social with your blog</p>
</blockquote>
<p>I think about this <em>all the time</em>. I do have a mirror of my Mastodon feed on my site as a sort of backup, but I would like to get to a point of proper <a href="https://indieweb.org/POSSE">POSSE</a>. For that to work for me I really need to be able to post from mobile, which means integrating a CMS of some kind. I'm looking at Kirby as well as Wordpress but also considering building my own. &quot;The developer curse&quot; as I like to call it.</p>
<p>I agree having them in one feed (long posts and short posts) isn't what I'd like from someone else's site so I certainly wouldn't be doing that on mine. I also want to split out some things to services more suited to the media; right now I post photos directly on Mastodon but I think Pixelfed would make a lot more sense for me. They are releasing &quot;Solo&quot;, a single-user version of Pixelfed soon so I'll be checking that out as soon as it's available.</p>
<p>As for Christmas we're all sorted now, the food is in the fridge ready, chocolates are scattered around the house in bowls for grabbing as we walk past, and my daughter has met Santa for the first time. This year will be the first time I've cooked for my dad so I'm pulling out all the stops.</p>
<p>If I don't speak to you again before Christmas (because apparently it's only 3 days away 😱) have a good one and I'll speak to you soon.</p>
<p>Robb</p>
<hr />
<h3>24th December</h3>
<p>Hey Robb,</p>
<p>Good to hear from you and hope you and the family are all feeling better now!</p>
<p>Thanks for you help on the <a href="https://echo.rknight.me">Echo</a> thing - that really helped, but has had the undesired effect of making me explore POSSE again and whether I should start posting &quot;notes&quot; to my blog and have them syndicate to Masto. Problem is, I then go down this rabbit hole of &quot;but I won't have replies...&quot; so then I start looking at webmentions and the whole thing gets so complicated.</p>
<p>I'm also considered adding a bookmarks page to my site. Kinda like a self-hosted read later type thing. Or just a resource that people can use to see what I've found interesting or useful. But I don't know whether I'm going to implement that. If I do, I'll probably switch my about page to my home page, then have my posts served from /blog/ as the site will be far more than just a blog at that point. I dunno what I'll do ultimately, but it's so much fun playing with this stuff.</p>
<p>I see you're looking at <a href="https://tina.io">TinaCMS</a> - I was keeping an eye on that project when I was running Jekyll. It's looks really good, but was only in beta when I switched, so never explored it further.</p>
<p>You know, we have a distinct lack of chocolate in casa Quirk this year, which is disappointing. I think my wife hasn't bothered because of all the work I've put in losing weight, but I'm happy to put on a few KG over the next couple weeks. I might have to nip the shops for a couple boxes! :)</p>
<p>Cooking Christmas dinner is so much pressure. Good luck cooking for your old man! We tend to have a quiet Christmas, where we don't even have a roast dinner actually. Our tradition is to cook a curry. The kids don't really like roast dinners, so seems silly to spend all day in the kitchen for a meal they won't enjoy.</p>
<p>Anyway, it's the big day tomorrow. Hope you and the family have a great one and that there's no problems with dinner.</p>
<p>Talks soon,</p>
<p>Kev</p>
<hr />
<h3>30th December</h3>
<p>Hey Kev,</p>
<p>Hope your Christmas went well. The cooking for my dad went well, he was very impressed so much so that he said he’s never cooking on Christmas and I have to do every year. I’ll be getting my roast potato recipe up on the blog hopefully tomorrow.</p>
<p>If you subscribe my RSS feed you might have seen a sneak peek at what I plan to build next year, but I’m still torn on bookmarks, POSSE notes, etc. It’s a hard problem to solve or at least come up with something I’m happy with.</p>
<p>I am completely chocolated (and cheesed) out now so we’re back to proper dinners and mealtimes. We have been having bacon and egg sandwiches every morning this week which has been nice treat.</p>
<p>No plans for new years here, I expect we’ll watch some movies and wait until midnight when I’m sure Baby Knight will wake up because of the fireworks. Do you have any fun plans at all?</p>
<p>I guess this will likely be the last exchange for this month’s letters. I’m looking forward to seeing who you’ve got lined up for next year. This has been a lot of fun and I’ll definitely be asking for your opinions on all this POSSE stuff in the next few months as I try and get to grips with it all.</p>
<p>Speak soon,</p>
<p>Robb</p>
<hr />
<h3>30th December</h3>
<p>Hey Robb,</p>
<p>Yeah, Christmas was great thanks. Just very chilled and lots of family time. I still have another week off work, so only halfway through the holiday yet. Sounds like you're on he hook for all the Christmas dinners from now on...no pressure!</p>
<p>I do subscribe to your RSS feed - I'm looking forward to seeing what comes of it all. Personally, I'm still undecided. Integrating notes into the site would be trivial at this point, but I really don't know whether the juice is worth the squeeze.</p>
<p>I've been eating so much crap the last week or so, as I'm writing this very email, I'm chomping on a pack of Kettle chips. 🤦‍♂️ Oh well, I'll get back on the wagon after the holidays.</p>
<p>It's actually my mum's birthday tomorrow, so I'll go up and see her for a few hours, then I think we're going to our neighbours house for a few drink tomorrow evening.</p>
<p>Yeah, this is likely going to be the last exchange. Thanks so much for taking the time to be my PenPal for this last month, it's been great getting to know you better and I'm looking forward to continuing to get to know you better in the future.</p>
<p>Happy new year, and talk soon!</p>
<p>Kev</p>
]]></content:encoded>
<pubDate>2023-12-30T23:24:40.599+00:00</pubDate>
</item>
<item>
<title>Another Project I Forgot About</title>
<link>https://rknight.me/blog/another-project-i-forgot-about/</link>
<guid>https://rknight.me/blog/another-project-i-forgot-about/</guid>
<content:encoded><![CDATA[
<div> Eleventy, podcast, data file, file uploads, storage
<br /><br />总结:
Knight club计划对现有的Eleventy-based网站进行改造，使之能够方便快捷地搭建一个播客。计划包括将所有硬编码的内容移到一个数据文件中，同时决定如何处理文件上传和存储。这个项目是对之前的承诺的补充，表明作者的决心要完成这个项目。 <div>
<p>Welcome to the Knight club - RSS-only posts. <a href="https://daverupert.com/rss-club/">Read more about RSS club</a>.</p> <hr /> <p>I totally forgot about one more project I'd like to get done this year. I want to take my current Eleventy-based site I used for <a href="https://ruminatepodcast.com/">my</a> <a href="https://wegot.family/">podcasts</a> and make it usable for anyone to quickly get a podcast up and running. I need to move any hard-coded stuff to a data file, plus decide how to handle file uploads and storage.</p>
<p>In the spirit of commiting myself to this, I'm posting it here as an addendum to the <a href="https://rknight.me/blog/welcome-to-the-knight-club/">previous post</a>.</p>
]]></content:encoded>
<pubDate>2023-12-29T15:58:44.740+00:00</pubDate>
</item>
<item>
<title>Welcome to the Knight Club</title>
<link>https://rknight.me/blog/welcome-to-the-knight-club/</link>
<guid>https://rknight.me/blog/welcome-to-the-knight-club/</guid>
<content:encoded><![CDATA[
<p>Welcome to the Knight club - RSS-only posts. <a href="https://daverupert.com/rss-club/">Read more about RSS club</a>.</p> <hr /> <p>Congratulations on subscribing via RSS, you get these bonus posts. Lucky you. Welcome to the Knight Club<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup>.</p>
<p>What am I going to post here? Not a clue to be honest but there are things that I want to talk about that don't need to be full posts. I might &quot;release&quot; these into the <a href="https://rknight.me/blog">main archive page</a> after a year or so, mostly for my own sanity of finding them.</p>
<p>It's two days before the end of 2023 so I want to write down what projects I plan to do in the next 12 months. I don't mind talking about what I'm working on but I don't think a &quot;proper&quot; blog post makes sense until I have something to release. Firstly, I have a couple of in progress projects I want to finish.</p>
<p>Meta checker (I will come up with a better name) is similar to <a href="https://metatags.io/">metatags.io</a> but more suited to the specific things I want to check for a website: favicon, Safari accent color, is the RSS feed auto-detectable, those kinds of things. It will serve as a checklist of sorts for when I'm nearly done with a project.</p>
<p>The second is <a href="https://echo.rknight.me/">Echo</a>. I want to make this a more friendly service for non-tech people to use. Right now it requires NodeJS knowledge, a horrible Javascript config file, and a pocket full of hopes and dreams.</p>
<p>Now for the new projects. The first is a GitHub-based CMS, similar to <a href="https://tina.io/">TinaCMS</a>. If you follow me on Mastodon, you'll know I've had <em>a lot</em> of issues with getting Tina set up. I'm not sure how their backend works but it is definitely more complicated than it needs to be. I think I can make something more suited to what I want and hopefully what other people want.</p>
<p>The second project has already been through multiple iterations: Almanac. A media logging website. Think Letterboxd but for everything: movies, TV shows, podcasts, music, books. I initially wanted to make this a service people signed up for and used but the licensing around the data just isn't worth the hassle. So instead, I'm going to make it a self-hosted, bring-your-own-api-keys site. It'll have a nice API to be able to update my <a href="https://rknight.me/now">/now page</a>, feeds to auto-post to Mastodon, and some other fun stuff. The API itself is done but I need to consider how I want the front end to work.</p>
<p>Finally, webmentions. How do they work? I <a href="https://rknight.me/blog/adding-webmentions-to-your-site/">wrote a post about it</a> and I'm still not entirely sure. I'm relying on <a href="https://webmention.io/">Webmention.io</a> and <a href="https://brid.gy/">Bridgy</a> but <em>how</em> do they work? I want to make my own thing to handle webmentions and conversation from Mastodon but I need to dig into the formats first.</p>
<p>That's it for now, have a great new years!</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>When I <a href="https://rknight.me/blog/changing-your-name-by-deed-poll/">changed my name</a> I didn't consider how many good puns I was going to be able to make with it, just a fun little bonus. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-29T13:21:50.421+00:00</pubDate>
</item>
<item>
<title>The Web is Fantastic</title>
<link>https://rknight.me/blog/the-web-is-fantastic/</link>
<guid>https://rknight.me/blog/the-web-is-fantastic/</guid>
<content:encoded><![CDATA[
<div> RSS、Blogging、Indie web、Links、API<br />
RSS和博客并没有消失，它们是互联网的重要组成部分，而社交媒体并不喜欢链接，所以应该在自己的网站上分享有趣的内容。通过实现API和链接，小型独立网络是令人惊叹的，所以应该拥有博客、网站或独立的Mastodon账户，分享自己发现的有趣事物。 <div>
<p>Reading the title you might be thinking &quot;<em>Yeah no shit Robb of course the web<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> is fantastic it's literally the cornerstone of all commerce and communications in the modern world</em>&quot;. Or maybe you're not thinking that. But I'm not talking about the web as a whole, I'm talking about the open web. The <em>come-do-cool-things-with-our-api</em> web. The open standards web. The <a href="https://indieweb.org/">indie web</a>.</p>
<h2>Links</h2>
<p>Services like <a href="https://linktr.ee/">Linktree</a> exist because Facebook, TikTok, et al decided that links are okay but only if it's to their stuff. You, the creator of the video/photo/whatever only get one link, better make it a good one. Even then, my wife sometimes sends me links of Facebook <em>don't-call-it-tiktoks</em> and unless I install the mobile app, those links just don't work.</p>
<p>The <em>real</em> web is built on links. Hyper ones, in fact. Links you can share on your website. Links you can send to your mates. Links to pages that can be indexed by search engines so you can find things again (in theory).</p>
<p>Look at this journey <a href="https://chrisenns.com/2023/11/app-defaults/">Chris went through to stumble upon the App Defaults project</a>:<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn2" id="fnref2">[2]</a></sup></p>
<blockquote>
<p>I was adding a link to omg.lol, a blog and email hosting service that's cute AND easy AND (relatively) cheap, to my newsletter.</p>
<p>While browsing their help and info page, I saw that they offer a /now/ feature that lets you update the world on what you're working on, reading, watching, etc... now. Old school internet at it's best.</p>
<p>I clicked through to the omg.lol /now garden which has examples of how people are using /now to update the world.</p>
<p>I randomly picked Rebecca Owen's /now page.</p>
<p>Then I clicked back through to her omg.lol page to see how she was using it.</p>
<p>I saw she had a blog, so I checked that out.</p>
<p>The most recent post on Rebecca's blog was one called Default Apps 2023. That's clickbait-up-arrow.gif material for me.</p>
<p>She had included a link to an episode a podcast called Hemispheric Views, and this defaults page.</p>
</blockquote>
<p>That is cool. That is how we should find interesting things. With links. The big social media sites have decided that actually no, we don't like links. Just sort of &quot;find&quot; things and if you don't find it well tough shit. Sharing interesting websites, blogs, and articles on your own site is the way to go. Make a <a href="https://blogroll.org">blogroll</a>. Make a <a href="https://rknight.me/podcasts/roll/">podroll</a>. Share links on your Mastodon account.</p>
<h3>Blogs and RSS</h3>
<p>Check out <a href="https://aboutfeeds.com/">About Feeds</a> to see how RSS works and apps that work with it. I use <a href="https://netnewswire.com/">NetNewsWire</a>.</p>
<p>Blogs and RSS never died. Some of us just took a little break from it while we all shitposted on Twitter for likes, retweets, and validation. While we wrote long, unfindable threads instead of blog posts. I'm as guilty of this as anyone.</p>
<p>Get an RSS app or service and install an extension that auto detects RSS feeds. Keep an eye on it while you're browsing around and grab every feed you see. You can easily unsubscribe if it's not for you. Here's over <a href="https://defaults.rknight.me">300 blogs to get you started</a>.</p>
<p>Chris McLeod said this about blogging in his post, <a href="https://chrismcleod.dev/blog/blogging-is-where-its-at-again/">&quot;Blogging is where it's at, again&quot;</a>:</p>
<blockquote>
<p>stumbling into such a trove of <em>active</em> blogs has enthused me about blogging as a medium again</p>
</blockquote>
<p>He's right. Blogging <em>is</em> where it's at. Get a blog. Post some stuff.</p>
<p>If you have a website, don't forget to <a href="https://rknight.me/please-expose-your-rss/">expose your RSS</a>. Have a big prominent button. Make sure it's in your <code>head</code> for auto-detection. Maybe start an <a href="https://daverupert.com/rss-club/">RSS club</a>. Post some wonderful things, or sad things, or _only-interesting-to-you+ things.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn3" id="fnref3">[3]</a></sup></p>
<h3>Extras</h3>
<ul>
<li>Add a <code>/now</code> page to your site. Check out a <a href="https://nownownow.com/">whole load of them here</a> and <a href="https://now.garden/">on the now garden</a>.</li>
<li>Add a <code>/uses</code> page to list what apps and hardware and whatever else you use. <a href="https://uses.tech/">uses.tech</a> has nearly 800 examples.</li>
<li>If you're really feeling adventurous you can <a href="https://rknight.me/adding-webmentions-to-your-site/">add webmentions</a> to your site.</li>
</ul>
<p>It's your website, you can add literally anything you want<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn4" id="fnref4">[4]</a></sup> and no one can stop you.</p>
<h3>Useful links to get started</h3>
<p>This is all well and good but if you don't already have a website it can be daunting to know where to go.</p>
<ul>
<li><a href="https://micro.blog/">Micro.blog</a> - $5 a month, has cross-posting to a whole load of places</li>
<li><a href="https://wordpress.com">Wordpress.com</a> - Free</li>
<li><a href="https://home.omg.lol/referred-by/robb">weblog.lol via omg.lol</a> - $20 a year also includes a Mastodon server, pastebin, profile page, now page, and some other cool things</li>
<li><a href="https://bearblog.dev/">Bear</a> - free</li>
<li><a href="https://neocities.org/">Neocities</a> - free</li>
<li><a href="https://pika.page">Pika</a> - free</li>
<li><a href="https://www.11ty.dev">Eleventy</a> if you want to dig into code and run your own thing.</li>
</ul>
<p>Reach out to me on Mastodon if you have questions and I'll do what I can to help get you started.</p>
<h3>Conclusion</h3>
<p>The real web, the small web, the indie web is amazing. Don't give Facebook and the rest of these clowns your content. Don't give them the time or your attention. Get a blog, a website, a Mastodon account, something <em>you control</em>, and share links to cool things you find. Make a list of your favourite blogs or websites or photos of cats. Write about a pizza you had that was delicious. Share a recipe. Go down a rabbit hole for hours on end adding weird stuff to your site. Just do it somewhere you control because the <em>real</em> web is fantastic.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Yeah I know &quot;the web&quot; and &quot;the internet&quot; are different things, don't at me <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>I miss StumbleUpon <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref2">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn3"><p>I guarantee you're not the only one interested in this theorectical topic <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref3">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn4"><p>Keep it legal, folks <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref4">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-28T23:52:27.372+00:00</pubDate>
</item>
<item>
<title>Generating and Caching Open Graph Images with Eleventy</title>
<link>https://rknight.me/blog/generating-and-caching-open-graph-images-with-eleventy/</link>
<guid>https://rknight.me/blog/generating-and-caching-open-graph-images-with-eleventy/</guid>
<content:encoded><![CDATA[
<div> 自动生成，Open Graph 图像，插件，配置，开发模式，输出目录<br />
文章介绍了作者如何通过自动生成的方式将Open Graph图像添加到网站上，并解决了生成图像时可能出现的效率和重建时间的问题。作者通过修改插件配置和使用开发模式生成图像，然后将其提交到存储库中。此外，作者还介绍了如何使用环境数据文件和更新基本布局来确定插件在开发模式和生产模式下的使用方式。最后，作者还解决了插件在每次更改时会删除输出目录的问题。通过这些步骤，作者成功地实现了开发模式下的Open Graph图像自动生成。<br /><br />总结: 该文章介绍了作者如何使用自动生成的方式将Open Graph图像添加到网站上，并解决了生成图像时可能出现的效率和重建时间的问题，最终成功实现了开发模式下的Open Graph图像自动生成。 <div>
<p>I recently added automatically generated open graph images to my site using <a href="https://github.com/KiwiKilian/eleventy-plugin-og-image"><code>eleventy-plugin-og-image</code></a>. Here is the open graph image for this post:</p>
<img alt="Generating, and Caching, Open Graph Images with Eleventy" src="https://rknight.me/assets/ogi/bloggenerating-and-caching-open-graph-images-with-eleventy.png" style="border: 1px solid white;" />
<p>I won't go over how to use the plugin; the docs on the repo and <a href="https://lewisdale.dev/post/adding-statically-generated-open-graph-images/">this blog post</a> explain that very well. What I didn't like is that these are generated every time the site builds which, aside from being wildly inefficient, added significant time to my builds.</p>
<p>I <a href="https://social.lol/@robb/111574217802419330">posted about this</a> on the 'don and <a href="https://social.lol/@sophie/111574234339127389">Sophie replied with how she is doing it</a>:</p>
<blockquote>
<p>I run it locally when I write a new post, and commit the results [...] basically the dev server will spit out the OG image</p>
</blockquote>
<p>This is exactly what I wanted - generate the images once, and commit them to the repo. To do this I had to modify the plugin config to output the images to my <code>src</code> folder instead of the output folder:</p>
<pre class="language-diff"><code class="language-diff">eleventyConfig.addPlugin(ogImagePlugin, {<br /><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    outputDir: 'src/assets/ogi',<br /></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   satoriOptions: {</span></span></code></pre>
<p>This will output the image to my <code>assets</code> directory, which in turn gets copied into my built site. This did cause a new issue though - Eleventy watches for changes in source files and rebuilds the site so every time a new image was made, Eleventy would rebuild again. To solve this, I used <code>watchesIgnore</code> in my config file:</p>
<pre class="language-js"><code class="language-js">eleventyConfig<span class="token punctuation">.</span>watchIgnores<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'src/assets/ogi/**/*'</span><span class="token punctuation">)</span></code></pre>
<p>I only wanted these to be generated in development mode so I added an <code>env</code> data file to check the mode:</p>
<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  <span class="token keyword">return</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">production</span><span class="token operator">:</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">ELEVENTY_RUN_MODE</span> <span class="token operator">===</span> <span class="token string">'build'</span><br />  <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>Then I updated my base layout so it only uses the <code>ogImage</code> plugin when in development mode. In production, it uses the full path to the image:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> env<span class="token punctuation">.</span>production <span class="token operator">%</span><span class="token punctuation">}</span><br />    <span class="token operator">&lt;</span>meta property<span class="token operator">=</span><span class="token string">"og:image"</span> content<span class="token operator">=</span><span class="token string">"https://rknight.me/assets/ogi/{{ page.url | slugify }}.png"</span><span class="token operator">></span><br /><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">else</span> <span class="token operator">%</span><span class="token punctuation">}</span><br />    <span class="token punctuation">{</span><span class="token operator">%</span> ogImage <span class="token string">"src/og-image.og.njk"</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">title</span><span class="token operator">:</span> title <span class="token operator">|</span> safe <span class="token punctuation">}</span> <span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
<p>The final problem I had is the plugin will wipe the output directory on every change. <a href="https://github.com/KiwiKilian/eleventy-plugin-og-image/pull/74">This pull request</a> added that functionality and originally had an option to pass in for it to happen or not, but that option didn't make it to the final version. Based on the discussion it looked as though this wasn't something wanted in the plugin, so I made a copy of the plugin in my <code>plugins</code> directory and removed the line that deleted the files each time:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> eleventyConfig.on('eleventy.before', () => {<br /></span><span class="token prefix deleted">-</span><span class="token line">    const options = mergeOptions(directoriesConfig, pluginOptions);<br /></span><span class="token prefix deleted">-</span><span class="token line">    fs.rmSync(options.outputDir, { recursive: true, force: true });<br /></span><span class="token prefix deleted">-</span><span class="token line"> });</span></span></code></pre>
<p>This process does require me to run <code>--serve</code> at least once each time I added a blog post but there is rarely a time where I wouldn't do that.</p>
]]></content:encoded>
<pubDate>2023-12-24T10:09:42.501+00:00</pubDate>
</item>
<item>
<title>Just 2023 Things</title>
<link>https://rknight.me/blog/just-2024-things/</link>
<guid>https://rknight.me/blog/just-2024-things/</guid>
<content:encoded><![CDATA[
<div> 婚姻，孩子，写作，电影，音乐<br />
婚后生子，无暇他顾。写作方面，今年发表了60篇博客，远超过去的19篇。电影方面，今年新看的影片不多，其中有几部让人失望。音乐方面，收听了很多新专辑和歌曲，最喜欢的专辑是XXX，次之为XXX。游戏、书籍、播客、以及一些副业项目也有所涉猎。总的来说，这一年过得相当不错。希望将来可以找到一份能让我整天制作愚蠢的网络应用程序并得到报酬的工作。 <br /><br />总结: 感情生活、写作、电影、音乐、副业项目和业余兴趣频繁涉猎。 <div>
<p>I got married and had a child. No time for anything else. Thank you for reading.</p>
<hr />
<h3>Writing</h3>
<p>This year I wrote 60 blog posts including this one which is a big jump compared to last year's 19. My most popular posts<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> for the year are:</p>
<ul>
<li><a href="https://rknight.me/please-expose-your-rss/">Please, Expose your RSS</a> - this one hit the <a href="https://news.ycombinator.com/item?id=38595855">front page of Hacker News</a></li>
<li><a href="https://rknight.me/app-defaults/">App Defaults</a> - see the everything else section below for more info on this</li>
<li><a href="https://rknight.me//adding-webmentions-to-your-site/">Adding Webmentions to Your Site</a></li>
<li><a href="https://rknight.me//automating-my-now-page/">Automating My Now Page</a></li>
<li><a href="https://rknight.me/using-pagefind-with-eleventy-for-search/">Using PageFind with Eleventy for Search</a></li>
</ul>
<h3>Media</h3>
<h4>Movies</h4>
<p>Checking my <a href="https://letterboxd.com/rknightuk">Letterboxd</a> I only watched a handful of <em>new-to-me</em> movies this year. <a href="https://www.imdb.com/title/tt9114286/">Black Panther: Wakanda Forever</a> and <a href="https://www.imdb.com/title/tt10954600/">Ant-Man and the Wasp: Quantumania</a> were equally disappointing in their own special ways. <em>Barbie</em> was...fine? Maybe the hype set my expectations too high but it was fine. Whatever. It's a sad state of affairs that <a href="https://www.imdb.com/title/tt2933474/">Superfast!</a> was the best new-to-me movie I watched this year (here my review on <a href="https://wegot.family/5/">episode 5 of We Got Family</a>).</p>
<h4>TV</h4>
<p>Just two shows jump out at me as worth recommending this year:</p>
<ul>
<li><a href="https://www.imdb.com/title/tt11280740/">Severance</a></li>
<li><a href="https://www.imdb.com/title/tt3581920/">The Last of Us</a> accompanied with <a href="https://www.theincomparable.com/tcou/">The Incomparable's <em>The Cast of Us</em> podcast</a><br />
I have yet to watch For All Mankind season 4 and the Scott Pilgrim show.</li>
</ul>
<h4>Music</h4>
<p>I've continued to use <a href="https://rknight.me/add-to-musicthread-shortcut/">my MusicThread shortcut</a> to send new albums and tracks to the relevant playlists:</p>
<ul>
<li><a href="https://musicthread.app/thread/2L6LZz60026Onq3waGuwt7WdJ5x">2023 Albums</a></li>
<li><a href="https://musicthread.app/thread/2L6IuBPKCCo7fsA8SFyXZLirH5W">2023 Tracks</a></li>
</ul>
<p><a href="https://musicthread.app/link/2VIGOGRMFyCta6smxRY0H5jKPQq">Punk Tactics by Joey Valence &amp; Brae</a> has easily been my favourite album of the year, with <a href="https://musicthread.app/link/2X1GTScJIyLzJugjczig4sWFn66">One More Time by blink-182</a> a close second. The <a href="https://musicthread.app/link/2YgZCdX5aTVecEnkxXiVFpnTRaI?share_prompt=1">Meteora 20th Anniversary Edition</a> was also in heavy rotation for me this year as well. According to Apple Music my top artists were (I promise this is a 2023 list and not 2005):</p>
<ol>
<li>Linkin Park</li>
<li>Simple Plan</li>
<li>Punk Rock Factory</li>
<li>Blink 182</li>
<li>State Champs</li>
<li>Zebrahead</li>
<li>Bowling for Soup</li>
<li>Allister (top 100 listeners!)</li>
<li>Eminem</li>
<li>Story of the Year</li>
</ol>
<h4>Games</h4>
<p>According to Playstation Wrap-Up, I played four games this year:</p>
<ul>
<li>Last of Us Part 1</li>
<li>Stray</li>
<li>Spider-Man 2</li>
<li>Guardian of the Galaxy</li>
</ul>
<p>Of those I stopped playing Guardians because I found it boring and I'm halfway through Spider-Man and Last of Us. Stray is the only game I've finished.</p>
<h4>Books</h4>
<p>In <a href="https://rknight.me/just-2022-things/">last year's end of year post</a> I said:</p>
<blockquote>
<p>I did start <a href="https://micro.blog/books/9781728236254">Men Who Hate Women</a> and hopefully will finish it soon.</p>
</blockquote>
<p>I did not finish it yet. Maybe next year. The only book I read this year was the <a href="https://johnnydecimal.com/10-19-concepts/14-build-your-system/14.02-the-decimal-workbook/">Johnny Decimal workbook</a> which I enjoyed so much I <a href="https://rknight.me/using-the-johnny-decimal-system/">wrote a post about it</a>.</p>
<h4>Podcasts</h4>
<p>The only new podcast I added to <a href="http://localhost:8080/podcasts/roll/">my subscriptions</a> is <a href="https://hemisphericviews.com/">Hemispheric Views</a>. I enjoyed it so much I went back and <a href="http://localhost:8080/three-years-of-hemispheric-views-feedback/">listened to all 78 episodes</a> over three months. Hemispheric Views was also how <a href="https://defaults.rknight.me/">App Defaults</a> started, more about that below.</p>
<h3>Side Projects</h3>
<h4>January: omg! lol!</h4>
<p>At the start of the year I switched over to social.lol and using Mastodon rather than micro.blog which led to a few related projects:</p>
<ul>
<li><a href="https://github.com/rknightuk/omglolcli">omglolcli</a></li>
<li><a href="https://recentfm.rknight.me/">recentfm.js</a></li>
<li><a href="https://omgnow.rknight.me/">omgnow.js</a></li>
<li><a href="https://echo.rknight.me/">Echo</a></li>
<li><a href="https://lantern.rknight.me/">Lantern</a></li>
</ul>
<p>Echo I am still using heavily and I know that RecentFM and omgnow.js is being used by at least a few people. I have plans to make Echo a more user-friendly project but that's a way off yet I think.</p>
<h4>September: The Donation Daddy Cometh</h4>
<p>This year I was organised enough to setup a sub-campaign for <a href="https://relay.experience.stjude.org">Relay's annual St Jude fundraising campaign</a> and I (with the help of <a href="https://neatnik.net">Adam</a>) was able to raise $12,590.57. You can <a href="https://rknight.me/st-jude-2023-final-numbers/">read the blog post here</a> for more of the juicy details on the campaign itself.</p>
<p>The <em>real</em> fun (aside from raising lots of money of course) comes from the japes in the Relay discord. It started with <a href="http://septembed.rknight.me">Septembed</a>, then <a href="https://deskmat.help">deskmat.help</a>, then <a href="https://coinme.dad/dy">Coin Me, Daddy</a>, and finally <a href="https://donationtreats.rknight.me">Donation Treats</a>. These were all separate websites for the majority of the campaign but towards the end I merged them into a single project for my own sanity and slapped Zach's incredible <a href="https://donationdaddy.rknight.me">donation daddy logo on it</a>. I can't wait for next year, me and Adam have some fun ideas already (it's basically September anyway).</p>
<p>We also sent out over 100 sets of stickers to people who donated. I was pretty proud of how well the stickers I designed looked, so much so I made the Ruminate one our proper artwork.</p>
<p><img alt="omg.lol × St Jude stickers" src="https://rknightuk.s3.amazonaws.com/site/omg-lol-st-jude-stickers.jpg" /></p>
<p><em>Photo courtesy of <a href="https://lmika.org/">Leon Mika</a></em></p>
<h4>Everything Else</h4>
<ul>
<li><a href="https://rknightuk.github.io/mac-30-font-svg/">Mac 30th Anniversary Icons</a>. I couldn't have done with without <a href="https://keiransell.com/">Keir</a> and <a href="https://calvetti.me/">Josh</a></li>
<li><a href="https://treatday.rknight.me/">Brian Butterfield Diet Soundboard</a>. One of the more popular projects. It keeps ending up getting posted on random newsletters, gets a big spike of traffic, then dies down again. I use it all the time.</li>
<li><a href="https://bugle.lol/">Bugle</a> - My ActivityPub server I'm using for <a href="https://bugle.lol/@wegotfamily">We Got Family</a> and <a href="https://knightbot.rknight.me">my bots</a></li>
<li><a href="https://github.com/rknightuk/custom-finder-sidebar-icons">Custom Finder Sidebar Icons</a>. A fun but frustrating project I did with Keir</li>
<li><a href="https://wegot.family/">We Got Family Podcast</a>. We got a bit behind on this but we will finish it. It's been a lot of fun talking about the Fast and Furious movies.</li>
<li><a href="https://podduration.rknight.me/">Podcast Duration Calculator</a> and <a href="https://defocused-vs-the-movies.netlify.app/">Defocused vs. the Movies</a>. I don't even remember why I wanted to know how many hours of audio a podcast was but these two projects were a result of that.</li>
<li>Secret <a href="http://Relay.fm">Relay.fm</a> project. Can't say what this is but it involved the Google Sheets API and Eleventy data files.</li>
<li><a href="https://vlcnr.rknight.me/">VLCNR</a>. I had wanted to revive this app for a while and finally found the time to do it.</li>
<li><a href="https://defaults.rknight.me/">App Defaults</a>. My most popular project this year by far. In the 50 days from launching it there was only three days where I didn't have to add at least one site to the list. As of today, there are 282 blog posts.</li>
<li><a href="https://pokedon.rknight.me/">Pokédon</a>. My first hackathon in seven years, this time on my own instead of part of <a href="https://devsdodesign">my team</a>. I think I spent more time on the Pokédex design that I did the actual code.</li>
<li><a href="https://doubleshift.rknight.me">DoubleShift</a> and <a href="https://crossover.rknight.me">Crossover</a>. Two projects that scratched an itch for me to know where I'd seen other actors in similar shows. A lot fun data stuff in here.</li>
<li><a href="https://postgraph.rknight.me/">Eleventy Post Graph</a>. The graph I added on my stats page was pretty popular so I made it into an Eleventy Plugin. This was also somehow the first time I've published an npm package. <a href="https://rknight.me/eleventy-post-graph-plugin/">Read the blog post</a>.</li>
<li>This site. Last month I redesigned the site after seeing <a href="https://simplebits.shop/products/cartridge">SimpleBits Cartridge font</a> and knew I had to use it somewhere. Now I've redesigned it to make it more flexible I can start porting over some of the content from <a href="https://intersect.rknight.me">the Intersect</a>.</li>
</ul>
<p>It's been a pretty good year all told. Now if I could find a way to get paid to make stupid web apps all day that'd be great.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I've excluded <a href="https://rknight.me/convert-spotify-facebook-to-email-login/">these</a> <a href="https://rknight.me//create-a-blank-no-header-markdown-table/">two</a> posts because although they are really popular they are very boring <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-22T10:11:45.223+00:00</pubDate>
</item>
<item>
<title>Puff Pastry Sausage Roll Recipe</title>
<link>https://rknight.me/blog/puff-pastry-sausage-roll-recipe/</link>
<guid>https://rknight.me/blog/puff-pastry-sausage-roll-recipe/</guid>
<content:encoded><![CDATA[
<p><img alt="Sausage Rolls" src="https://rknightuk.s3.amazonaws.com/site/sausage-rolls.jpg" /></p>
<p>Here is the recipe for very easy to make sausage rolls. You'll need:</p>
<ul>
<li>~450g of sausage meat. I prefer to buy sausages and remove the skin as there's a bigger variety of flavours available without having to add stuff to sausage meat myself</li>
<li>A sheet of puff pastry. In the UK at least these come in a standard size of 320g (<a href="https://groceries.asda.com/product/pastry-dough/jus-rol-puff-pastry-ready-rolled-sheet/910000468752">example</a>)</li>
<li>An egg</li>
<li>A baking tray and some greaseproof/baking paper</li>
</ul>
<p>Preheat the oven to 180°c. Whisk up an egg in a bowl.</p>
<p>Lay the puff pastry flat and lay a cylinder of sausage meat about an inch thick across the pastry. Roll the pastry around that and cut it so there's just enough to cover the meat with a little bit of overlap. Do this until you run out of pastry.</p>
<p>Grab your baking tray, lay down some greaseproof paper on it, then brush the tray with the eggwash.</p>
<p>Cut up your long sausage roll into inch-wide smaller sausage rolls and pop them on the baking tray, seam down. Brush them with egg and pop them in the oven for 20-25 minutes until they're golden brown all over.</p>
<p>Boom. Sausage rolls for days.</p>
]]></content:encoded>
<pubDate>2023-12-21T14:18:43.776+00:00</pubDate>
</item>
<item>
<title>Eleventy Post Graph Plugin</title>
<link>https://rknight.me/blog/eleventy-post-graph-plugin/</link>
<guid>https://rknight.me/blog/eleventy-post-graph-plugin/</guid>
<content:encoded><![CDATA[
<p>Last week I <a href="https://social.lol/@robb/111586346073402453">tooted about my Github-style post graph</a> on <a href="https://rknight.me/blog/stats">my stats page</a> and people seemed to like it. <a href="https://jamesdoc.com/blog/">James</a> added one to his blog pages. <a href="https://social.lol/@pimoore/111586392676224177">Pete swore at me</a>. I knew I had to make it into an Eleventy plugin so other people could us it easily.</p>
<p><img alt="Screenshot of eleventy-plugin-post-graph" src="https://rknightuk.s3.amazonaws.com/site/eleventy-plugin-post-graph-screenshot.png" /></p>
<p>If you just want to jump straight into using it, <a href="https://postgraph.rknight.me">check out the docs here</a>.</p>
<p>To create the data, which days have posts, and the grid itself I'm using <code>moment.js</code> to manipulate post dates<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> and generate an object that looks something like this:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> postMap <span class="token operator">=</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">years</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token number">2023</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />            <span class="token literal-property property">days</span><span class="token operator">:</span> <span class="token number">365</span><span class="token punctuation">,</span><br />            <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token number">6</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">counts</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'2023-1'</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'2023-5'</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span><br />        <span class="token comment">// and so on</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p><code>days</code> is the number of days in the year and <code>offset</code> is used to start the grid on the correct day; if the 1st of January is a Sunday, the offset is 6. The keys in <code>counts</code> are the year plus the <em>day of the year</em>. This makes it easy to check if a day should be highlighted or not:</p>
<pre class="language-js"><code class="language-js"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"${prefix}__squares"</span><span class="token operator">></span><br />$<span class="token punctuation">{</span><br />    <span class="token comment">// generate the offset of the start of year</span><br />    Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> postMap<span class="token punctuation">.</span>years<span class="token punctuation">[</span>year<span class="token punctuation">]</span><span class="token punctuation">.</span>offset <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="epg__box epg__box--empty">&lt;/div></span><span class="token template-punctuation string">`</span></span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br />$<span class="token punctuation">{</span><br />    <span class="token comment">// make a box for every day of the year</span><br />    <span class="token comment">// if at least one post exists, highlight that box</span><br />    Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> postMap<span class="token punctuation">.</span>years<span class="token punctuation">[</span>year<span class="token punctuation">]</span><span class="token punctuation">.</span>days <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> dateIndexKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />        <span class="token keyword">const</span> postCount <span class="token operator">=</span> postMap<span class="token punctuation">.</span>counts<span class="token punctuation">[</span>dateIndexKey<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><br />        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="epg__box </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> postCount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">epg__hasPost</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">''</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">">&lt;/div></span><span class="token template-punctuation string">`</span></span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br /><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre>
<p>One edge case I hadn't considered until I was writing the docs was what if someone wanted two instances of the graph in different colors - the css injected into the page would apply to both. The solution I came up with was to add a <code>prefix</code> option wherein the classes, instead of being <code>epg__{something}</code>, will become <code>mycoolprefix-epg__{something}</code>.</p>
<p>I added a bunch of other options to handle all the different use cases I could think of but I'm sure they'll be more. Get started with <a href="https://postgraph.rknight.me/">the docs</a> and if you use this on your site let me know, I'd love to see it.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I am aware that <a href="https://day.js.org">Day.js</a> is better but I just...forgot about it until right now <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-19T15:10:02.341+00:00</pubDate>
</item>
<item>
<title>Meta Doesn't Need ActivityPub to Slurp Up Your Data</title>
<link>https://rknight.me/blog/meta-doesnt-need-activitypub-to-slurp-up-your-data/</link>
<guid>https://rknight.me/blog/meta-doesnt-need-activitypub-to-slurp-up-your-data/</guid>
<content:encoded><![CDATA[
<p><a href="https://www.theverge.com/2023/12/13/24000120/threads-meta-activitypub-test-mastodon">Threads started to test ActivityPub integration</a> this week and the fediverse is losing it's collective mind going into overdrive to block them in any way possible so they can't grab all your data. Here's the fun part: they can already do that and they definitely don't need ActivityPub to do that.</p>
<p>Take my profile for example: <a href="https://social.lol/@robb">https://social.lol/@robb</a>. It's all right there for downloading, scraping, or scribbling down in a &quot;<em>robb is very clever and handsome</em>&quot; notebook. The <a href="https://social.lol/public/local">local timeline for social.lol</a> is the same. Ready to be gobbled up into whatever data center Meta want to put it in. This doesn't even take into account that <em>Mastodon has an API that anyone can use</em>. Hell, they could follow the local timeline on Mastodon.social and probably get 90% of the data they want anyway, assuming they want any of it to begin with. Or create an account on a few hundred instances and get the data that way. But they won't because that's not why they're doing this.</p>
<p>They are doing this because they have to. The EU is breathing down all the big tech companies neck's to be more open and interoperable.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> They only launched in the EU yesterday and I'd bet my left bollock it took so long because they were doing sneaky shit with tracking that the EU would have fined them for immediately. The EU didn't make Threads illegal like certain tech pundits claimed, Meta were just doing illegal things. Just a little crime, as a treat.</p>
<p><a href="https://fedipact.veganism.social/">Some instances</a> have already blocked Threads completely meaning their users have no way of intereacting with accounts on Threads. Purely on the basis that it's Meta with no evidence that they're doing anything nefarious or dangerous. Congratulations, you've made your instance worse for your users. By all means, wait and see if federating with Threads <em>becomes</em> a problem, but doing it just because &quot;meta bad&quot; is ridiculous.</p>
<p><a href="https://mastodon.blaede.family/@cassidy/111576987371347535">Cassidy James</a>:</p>
<blockquote>
<p>...defederating from Threads is like an upstart email service blocking their users from being able to email Gmail users because they don’t like Google. That might seem fine on principle, but in reality it just siloes people from their friends — and makes joining the other service more attractive.</p>
</blockquote>
<p>What's to be gained from stopping your instance's users following their friends and family who have chosen to use Threads, other than making them switch to another instance? As Cassidy <a href="https://mastodon.blaede.family/@cassidy/111580679497344885">also points out</a> an individual user can block an instance themselves which is the great thing about Mastodon: users have a choice to block or not block whatever they want.</p>
<p>I'm also aware that users also have a choice to move instances and to some extent I agree that if you don't like how your instance is run, you should move to another one.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn2" id="fnref2">[2]</a></sup> But how about instead everyone chills out for a minute, maybe give Meta a chance to <em>actual federate real accounts people want to follow</em>, and <em>then</em> decide if they should be blocked or not. How about we don't force hundreds of people to new instances (or worse, Threads) just so they can see the latest minion meme their mum posted.</p>
<p>Yes, it's Meta and they suck and I hate them. But they don't need ActivityPub to grab your data and blocking them for no good reason is just making the Fediverse, and the open web, worse for everyone.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Stupid unelected elite in Brussels trying to make life better for it's citizens, how dare they. Brexit means Brexit. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>&quot;Tough shit, move instances&quot; is something I have said on a few occasions when discussing disagreeing with instance admin decisions. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-15T10:30:49.461+00:00</pubDate>
</item>
<item>
<title>Subscriptions</title>
<link>https://rknight.me/blog/subscriptions/</link>
<guid>https://rknight.me/blog/subscriptions/</guid>
<content:encoded><![CDATA[
<p>Inspired by <a href="https://mb.esamecar.net/2023/12/13/state-of-app.html">Marco</a> and <a href="https://kevquirk.com/on-subscriptions">Kev</a>, here is the current state of my subscriptions. Any prices that were in dollars I've converted to GBP. Anything I pay for yearly I've divided by 12 and marked them as such.</p>
<h3>Miscellanea</h3>
<p>I pay for <a href="https://www.apple.com/uk/apple-one/">Apple One Premier</a> at £36.95 per month which includes Apple TV+, iCloud Storage, and Apple Music for me and my wife but I'll include it in the streaming section for the sake of clarity.</p>
<p>I have a 1Password Family account but I get this for free through my job.</p>
<h3>Streaming</h3>
<ul>
<li>Netflix (£7.99 / month). We cheap out on this because it's mostly for my wife to watch old crime documentaries and the quality doesn't really matter</li>
<li>Disney+ (£10.99 / month). We don't actually pay for this, instead we use our Tesco Clubcard vouchers every three months instead.</li>
<li>Amazon Prime (£7.99 / month (paid yearly)). We don't so much pay for this as we just get it included because we want quick delivery.</li>
<li>Apple TV+, Apple Music (£36.95 / month).</li>
<li><strong>Total:</strong> £63.92 / month</li>
</ul>
<h3>Memberships</h3>
<ul>
<li><a href="http://getconnectedpro.co">Connected Pro/Relay FM</a> (£4 / month). Ad-free episodes with extra content for connected, bonus episodes and access to the Relay Discord.</li>
<li><a href="https://oneprimeplus.com/">Hemispheric Views One Prime Plus</a> (£4 / month). Bonus episodes, a newsletter, access to a members-only Discord channel, plus some dandy stickers. I <em>just</em> bumped this from $2 to $5 because I'm not convinced much of my $2 is actually reaching them once you account for fees and whatnot.</li>
<li><a href="https://www.11ty.dev">Eleventy</a> (£4 / month). I build so many of my sites with Eleventy, it's a no-brainer.</li>
<li><strong>Total:</strong> £12 / month</li>
</ul>
<h3>Apps and Services</h3>
<ul>
<li><a href="https://home.omg.lol/referred-by/robb">omg.lol</a> (£1.33 / month (paid annually)). My main use is the <a href="https://social.lol">Mastodon instance</a> but it has loads of stuff. Read <a href="https://blakewatson.com/journal/omg-lol-an-oasis-on-the-internet/">Blake's post</a> for a better overview than I could ever write.</li>
<li><a href="https://www.digitalocean.com/?refcode=8e1d8283bd20">Digital Ocean</a> (£12 / month). Hosting for this website and all my <a href="https://rknight.me/projects">side projects</a>.</li>
<li><a href="https://usefathom.com/ref/IXCLSF">Fathom Analytics</a> (£11 / month). Analytics I use for my sites. Worth noting here I get ~$7/£5 back each month thanks to referrals so the actual price paid here is ~£6.</li>
<li><a href="https://bunny.net/?ref=b2i4y24apu">BunnyCDN</a> (£1 / month). Currently only using this to host the files for <a href="https://wegot.family/">We Got Family</a>.</li>
<li><a href="https://tapbots.com/ivory/">Ivory</a> (£2 / month (paid yearly)). The best Mastodon client on the Mac and iOS.</li>
<li><strong>Total:</strong> £25.33 / month</li>
</ul>
<h3>Grand Total</h3>
<p>£101.25 isn't too bad considering everything I'm getting for that. Not sure what conclusion to draw from this, nothing here I really need to cut. Maybe if it goes much higher I'll think about it some more.</p>
]]></content:encoded>
<pubDate>2023-12-13T17:35:24.401+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Nine</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-nine/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-nine/</guid>
<content:encoded><![CDATA[
<h3>Part One</h3>
<p>Given this an input like this, find the next number in the sequence. See the <a href="https://adventofcode.com/2023/day/9">advent of code instructions</a> for more details, but we need to go from this:</p>
<pre class="language-text"><code class="language-text">0 3 6 9 12 15</code></pre>
<p>To the following, to get the final value for that row of <code>18</code>. To do this we take the first two numbers and get the difference between them. That becomes our first number on the second row. Continue this until the final row is all zeros. Then take the last digit all of the rows and sum them to get <code>18</code> (0 + 3 + 15).</p>
<pre class="language-text"><code class="language-text">0   3   6   9  12  15 -> 18<br />  3   3   3   3   3 -> 3<br />    0   0   0   0 -> 0</code></pre>
<p>I interated over each line, used a while loop to check if the sum of the new row is more than zero, and continue adding rows until the new row's sum is zero (this assumption becomes important in a minute). Then grab all the final numbers and sum them for our row value, then sum all the lines to get the answer.</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$lines</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$allNumbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$currentIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$finalNumbers</span> <span class="token operator">=</span> <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token variable">$allNumbers</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token variable">$finalNumbers</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$currentRow</span> <span class="token operator">=</span> <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token variable">$currentIndex</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$new</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$currentRow</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$currentRow</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$new</span><span class="token punctuation">;</span><br />                <span class="token variable">$finalNumbers</span> <span class="token operator">=</span> <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token variable">$allNumbers</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />                <span class="token keyword">continue</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />            <span class="token variable">$new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$currentRow</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token variable">$number</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />        <span class="token variable">$currentIndex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$finalValue</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$allNumbers</span> <span class="token keyword">as</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$finalValue</span> <span class="token operator">+=</span> <span class="token variable">$numbers</span><span class="token punctuation">[</span><span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$finalValue</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string double-quoted-string">"Total: <span class="token interpolation"><span class="token variable">$total</span></span>"</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>This worked perfectly on the sample input but like other days the real input had a gotcha. As I noted above, I made the assumption that if the sum of a row was more than zero we should carry on but this doesn't account for negative numbers. What I <em>should</em> have done was check if the sum was not <em>exactly zero</em>:</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> while (array_sum($finalNumbers) !== 0) {<br /></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> while (array_sum($finalNumbers) > 0) {</span></span></code></pre>
<p>That was part one done.</p>
<h3>Part Two</h3>
<p>Instead of calculating the <em>next</em> number we need to do the <em>previous</em> number from each sequence. All of my previous code for getting all the rows is the same, I just need to update my total calculator to generate the previous number for each row and get the previous number for the original sequence:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $finalValue = 0;<br /></span></span><br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> foreach ($allNumbers as $numbers) {<br /></span><span class="token prefix deleted">-</span><span class="token line">    $finalValue += $numbers[array_key_last($numbers)];<br /></span><span class="token prefix deleted">-</span><span class="token line"> }<br /></span></span><br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $total += $finalValue;</span></span></code></pre>
<pre class="language-php"><code class="language-php"><span class="token variable">$next</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token variable">$allNumbers</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$numbers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$index</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// skip the first row it's always zeros</span><br />        <span class="token keyword">continue</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$first</span> <span class="token operator">=</span> <span class="token variable">$numbers</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$next</span> <span class="token operator">=</span> <span class="token variable">$first</span> <span class="token operator">-</span> <span class="token variable">$next</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$next</span><span class="token punctuation">;</span></code></pre>
<p>This was a nice one. Nothing too hard to understand from the instructions and totally doable without knowing a magic maths solution.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-09T13:10:04.340+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Eight</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-eight/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-eight/</guid>
<content:encoded><![CDATA[
<p>We've navigating a network today for...reasons.</p>
<h3>Part One</h3>
<p>The sample input looks like so:</p>
<pre class="language-text"><code class="language-text">RL<br /><br />AAA = (BBB, CCC)<br />BBB = (DDD, EEE)<br />CCC = (ZZZ, GGG)<br />DDD = (DDD, DDD)<br />EEE = (EEE, EEE)<br />GGG = (GGG, GGG)<br />ZZZ = (ZZZ, ZZZ)</code></pre>
<p>The first line is a list of instructions (left or right) and the rest is the nodes with their left and right defined. So if we go right from <code>AAA</code>, we move to <code>CCC</code>, then left from there takes us to <code>ZZZ</code>. The puzzle is to count how many steps it takes to get to <code>ZZZ</code>.</p>
<p>I did a bunch of string replacement and exploding to get the output in a format I wanted:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$instructions</span> <span class="token operator">=</span> <span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$elements</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$input</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' = '</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$elementKey</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token punctuation">[</span><span class="token variable">$L</span><span class="token punctuation">,</span> <span class="token variable">$R</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">', '</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">')'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'('</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$elements</span><span class="token punctuation">[</span><span class="token variable">$elementKey</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'L'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'R'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// [</span><br /><span class="token comment">//    'AAA' => [ 'L' => 'BBB', 'R' => 'CCC' ],</span><br /><span class="token comment">//    'BBB' => [ 'L' => 'DDD', 'R' => 'EEE' ],</span><br /><span class="token comment">//    ...</span><br /><span class="token comment">// ]</span></code></pre>
<p>One other part of this is that you may not get to <code>ZZZ</code> with the set of instructions. So if you hit the end, go back to the start of the instructions. I set the starting values and counters then while <code>found</code> is false, I incremenent the instruction index until we hit <code>ZZZ</code>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$element</span> <span class="token operator">=</span> <span class="token function">array_key_first</span><span class="token punctuation">(</span><span class="token variable">$elements</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$found</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><br /><span class="token variable">$instructionIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><span class="token variable">$steps</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$found</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token comment">// if we're at the end of the instructions, go back to the start</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$instructionIndex</span> <span class="token operator">===</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$instructions</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$instructionIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$instruction</span> <span class="token operator">=</span> <span class="token variable">$instructions</span><span class="token punctuation">[</span><span class="token variable">$instructionIndex</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$element</span> <span class="token operator">=</span> <span class="token variable">$elements</span><span class="token punctuation">[</span><span class="token variable">$element</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$instruction</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$element</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'ZZZ'</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token variable">$found</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$instructionIndex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token variable">$steps</span><span class="token operator">++</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'It takes '</span> <span class="token operator">.</span> <span class="token variable">$steps</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' steps to reach ZZZ'</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>I ran it on the real input and I got stuck in an infinite loop. Initially I didn't read the instructions properly so I was starting at whatever the first node was; in the samples, this is always <code>AAA</code> but in the real input, it <em>isn't</em>. I stepped back and re-read what I was supposed to be doing and fixed this:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $element = array_key_first($elements);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $element = 'AAA';</span></span></code></pre>
<p>Re-ran it and it worked perfectly.</p>
<h3>Part Two</h3>
<p>For part two there some story about a ghost or whatever, but the crux of it is we need to follow multiple paths starting at all node that end with an <code>A</code>. We're only done when all the nodes for all paths end in a <code>Z</code>. I updated my formatting code to account for this:</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $startingElements = [];<br /></span></span>$elements = [];<br />foreach ($input as $value) {<br /><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   $data = explode(' = ', $value);<br /></span><span class="token prefix unchanged"> </span><span class="token line">   $elementKey = $data[0];<br /></span><span class="token prefix unchanged"> </span><span class="token line">   [$L, $R] = explode(', ', str_replace(')', '', str_replace('(', '', $data[1])));<br /></span><span class="token prefix unchanged"> </span><span class="token line">   $elements[$elementKey] = compact('L', 'R');<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    if (str_ends_with($elementKey, 'A')){<br /></span><span class="token prefix inserted">+</span><span class="token line">        $startingElements[] = $elementKey;<br /></span><span class="token prefix inserted">+</span><span class="token line">    }<br /></span></span>}</code></pre>
<p>For the new sample input gave me two starting points (the real input has five):</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'LR<br /><br />11A = (11B, XXX)<br />11B = (XXX, 11Z)<br />11Z = (11B, XXX)<br />22A = (22B, XXX)<br />22B = (22C, 22C)<br />22C = (22Z, 22Z)<br />22Z = (22B, 22B)<br />XXX = (XXX, XXX)'</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// ...</span><br /><br /><span class="token punctuation">[</span><br />    <span class="token number">0</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'11A'</span><span class="token punctuation">,</span><br />    <span class="token number">1</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'22A'</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span></code></pre>
<p>Next I updated my instruction loop to go through each starting point, get the next element for all of them, then check if they all the found elements end with a <code>Z</code>:</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$found</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$instructionIndex</span> <span class="token operator">===</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$instructions</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$instructionIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$foundElements</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$instruction</span> <span class="token operator">=</span> <span class="token variable">$instructions</span><span class="token punctuation">[</span><span class="token variable">$instructionIndex</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$check</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$elementRange</span> <span class="token keyword">as</span> <span class="token variable">$er</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$el</span> <span class="token operator">=</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$nextElements</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$startingElements</span><span class="token punctuation">[</span><span class="token variable">$er</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token variable">$nextElements</span><span class="token punctuation">[</span><span class="token variable">$er</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$foundElements</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$elements</span><span class="token punctuation">[</span><span class="token variable">$el</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$instruction</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$allEndWithZ</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$foundElements</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$fe</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> <span class="token function">str_ends_with</span><span class="token punctuation">(</span><span class="token variable">$fe</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Z'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token variable">$elementCount</span><span class="token punctuation">;</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$allEndWithZ</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$found</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$nextElements</span> <span class="token operator">=</span> <span class="token variable">$foundElements</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$instructionIndex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token variable">$steps</span><span class="token operator">++</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>I ran it on the sample, no problem. Ran it on the real input and it just kept going. For a long time. I ran it for 45 minutes and it was still going. I spoke to <a href="https://zoeaubert.me">Zoe</a>, who had already finished part two, and the correct answer is 14 digits. Based on her maths, this method would take somewhere in the region of 500 hours. I knew there had to be some kind of number...things I could do to work out the answer but it was beyond me at this point.</p>
<h3>Part Two Redux</h3>
<p>After <a href="https://social.lol/@robb/111545115167242100">making a joke</a> about wanting a supercomputer on Mastodon, <a href="https://fosstodon.org/@chrishannah/111545160939769663">Chris asked</a> if I wanted a clue he'd seen on the subreddit. I had no idea how to solve this so yes, yes I did. The clue:</p>
<blockquote>
<p>Lowest Common Multiple</p>
</blockquote>
<p><em>Of course</em> the solution was a maths concept I'd heard of but never had a need to use (or I did and I just wasn't listening at school). &quot;<em>The smallest positive integer that is divisible by both a and b</em>&quot;. As always, PHP has a function for this: <a href="https://www.php.net/manual/en/function.gmp-lcm.php"><code>git_lcm</code></a> but this only works for two numbers. I made a new file (<code>2v2.php</code>), extracted my path-to-Z logic into a function, collected the steps for each path, and calculated the lowest common multiple.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$allSteps</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$startingElements</span> <span class="token keyword">as</span> <span class="token variable">$element</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token variable">$steps</span> <span class="token operator">=</span> <span class="token function">stepsToZ</span><span class="token punctuation">(</span><span class="token variable">$instructions</span><span class="token punctuation">,</span> <span class="token variable">$elements</span><span class="token punctuation">,</span> <span class="token variable">$element</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$allSteps</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">gmp_init</span><span class="token punctuation">(</span><span class="token variable">$steps</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// numbers passed to `gmp_lcm` need to be converted to GMP</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$allSteps</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$allSteps</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$step</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$index</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span><br />    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">gmp_init</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token function">gmp_lcm</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token variable">$step</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$result</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>I'm still not clear on <em>why</em> this gets the answer beyond <em>maths</em> but whatever, it's done. Onwards to day nine.</p>
<p>Update: Zoe has a <a href="https://zoeaubert.me/blog/advent-of-code-2023-day-08/">good explanation of why this is the answer</a>.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/08">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-08T15:05:58.956+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Seven</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-seven/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-seven/</guid>
<content:encoded><![CDATA[
<p>Time to play some matches of legally-distinct-from-poker-and-easy-to-play-on-a-camel<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> card game.</p>
<h3>Part One</h3>
<p>Each hand has five cards and a score:</p>
<pre class="language-bash"><code class="language-bash">32T3K <span class="token number">765</span><br />T55J5 <span class="token number">684</span><br />KK677 <span class="token number">28</span><br />KTJJT <span class="token number">220</span><br />QQQJA <span class="token number">483</span></code></pre>
<p>Each hand outranks others based on how many cards of each type it has, starting at five of a kind and ending with high card. Here's the array I was using to test out my hand rank calculator:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$scores</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'AAAAA'</span><span class="token punctuation">,</span> <span class="token comment">// five of a kind / rank 7</span><br />    <span class="token string single-quoted-string">'AA8AA'</span><span class="token punctuation">,</span> <span class="token comment">// four of a kind / rank 6</span><br />    <span class="token string single-quoted-string">'23332'</span><span class="token punctuation">,</span> <span class="token comment">// full house / rank 5</span><br />    <span class="token string single-quoted-string">'TTT98'</span><span class="token punctuation">,</span> <span class="token comment">// three of a kind / rank 4</span><br />    <span class="token string single-quoted-string">'23432'</span><span class="token punctuation">,</span> <span class="token comment">// two pair / rank 3</span><br />    <span class="token string single-quoted-string">'A23A4'</span><span class="token punctuation">,</span> <span class="token comment">// one pair / rank 2</span><br />    <span class="token string single-quoted-string">'23456'</span> <span class="token comment">// high card / rank 1</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>All the hands need to be ordered by their rank and in the result of a tie, compare the hands's first value and if those are the same the second value, and so on. Some values are letters rather than numbers, and ace is high:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$highValues</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'A'</span> <span class="token operator">=></span> <span class="token number">14</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'K'</span> <span class="token operator">=></span> <span class="token number">13</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Q'</span> <span class="token operator">=></span> <span class="token number">12</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'J'</span> <span class="token operator">=></span> <span class="token number">11</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'T'</span> <span class="token operator">=></span> <span class="token number">10</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Once they've all been ranked, multiply that rank by the score and add them together to get the answer. The lowest rank is 1 and upwards to however many hands we have.</p>
<p>Like <a href="https://rknight.me/blog/tags/adventofcode/">previous days</a> PHP has some handy functions to make this easier. <a href="https://www.php.net/manual/en/function.count-chars.php"><code>count_chars</code></a> &quot;counts the number of occurrences of every byte-value in a string&quot;. <a href="https://www.php.net/manual/en/function.chr.php"><code>chr</code></a> then converts that back to the number or letter:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$count</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'12344'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// output</span><br /><span class="token punctuation">[</span><br />	<span class="token number">49</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />	<span class="token number">50</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />	<span class="token number">51</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />	<span class="token number">52</span> <span class="token operator">=></span> <span class="token number">2</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><br /><br /><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// 4</span></code></pre>
<p>Once I had my counts for each hands, I make this <code>calculateHandRank</code> function to return a rank between one and seven depending on the hand. Based on how many elements the array has (and the product in some cases) I can work out the rank easily. <a href="https://lewisdale.dev/post/advent-of-code-2023-day-seven/">Lewis has a more elegant solution</a> thay works when the counts are ordered but the result is the ultimately the same:</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">calculateHandRank</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">?</span> <span class="token number">6</span> <span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">;</span><br />        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token number">4</span> <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span><br />        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><br />        <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><br />        <span class="token keyword">default</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token number">7</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>
<p>Part of ranking the hands is the tie-breaker I mentioned above, based on each card compared to the other hand. So if we had two hands that were both five of a kind, the first one would win because A (ace) is higher than Q (queen):</p>
<pre class="language-bash"><code class="language-bash"><span class="token string">'AAAAA'</span><br /><span class="token string">'QQQQQ'</span></code></pre>
<p>Here it us all together to get the answer for part one:</p>
<pre class="language-php"><code class="language-php"><span class="token comment">// extract the hands and scores, caclulate the hand types</span><br /><span class="token variable">$formatted</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token variable">$score</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$score</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$score</span><span class="token punctuation">;</span><br />    <span class="token variable">$counts</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$cards</span> <span class="token operator">=</span> <span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$handType</span> <span class="token operator">=</span> <span class="token function">calculateHandRank</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'score'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'handType'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// sort the hands by type, compare the card values in the event of a tie break</span><br /><span class="token function">usort</span><span class="token punctuation">(</span><span class="token variable">$formatted</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$highValues</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$aCard</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token variable">$aCard</span> <span class="token operator">=</span> <span class="token variable">$highValues</span><span class="token punctuation">[</span><span class="token variable">$aCard</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$aCard</span><span class="token punctuation">;</span><br />            <span class="token variable">$bCard</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />            <span class="token variable">$bCard</span> <span class="token operator">=</span> <span class="token variable">$highValues</span><span class="token punctuation">[</span><span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$aCard</span> <span class="token operator">===</span> <span class="token variable">$bCard</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token keyword">continue</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br /><br />            <span class="token keyword">return</span> <span class="token variable">$aCard</span> <span class="token operator">></span> <span class="token variable">$bCard</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br />    <span class="token keyword">return</span> <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// calculate the overall score </span><br /><span class="token variable">$score</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$formatted</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$score</span> <span class="token operator">+=</span> <span class="token variable">$line</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'score'</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$index</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token variable">$score</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<h3>Part Two</h3>
<p>Part two introduced a fun twist. <code>J</code> is now a joker instead of the jack/11. In the event of a tie break, the joker is worth 1 but if it exists in a hand the it goes towards whichever grouping would increase the hands type. For example, this three of a kind hand becomes four of a kind:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$before</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'AAA5J'</span><span class="token punctuation">;</span> <span class="token comment">// three of a kind</span><br /><span class="token variable">$after</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'AAA5A'</span><span class="token punctuation">;</span> <span class="token comment">// four of a kind</span></code></pre>
<p>I updated my formatting code to account for, using <code>count_chars</code> to find which value the joker should become:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$formatted</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$highValues</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token variable">$score</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$score</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$score</span><span class="token punctuation">;</span><br />    <span class="token variable">$counts</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'J'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token comment">// get the highest grouping character</span><br />        <span class="token variable">$highest</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />        <span class="token variable">$character</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><br />        <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$counts</span> <span class="token keyword">as</span> <span class="token variable">$char</span> <span class="token operator">=></span> <span class="token variable">$count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$char</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'J'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token keyword">continue</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />            <span class="token variable">$fChar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$highValues</span><span class="token punctuation">[</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$char</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">===</span> <span class="token variable">$highest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token comment">// compare the numbers/cards instead of the count</span><br />                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$fChar</span> <span class="token operator">&lt;</span> <span class="token variable">$character</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                    <span class="token keyword">continue</span><span class="token punctuation">;</span><br />                <span class="token punctuation">}</span><br />                <span class="token variable">$highest</span> <span class="token operator">=</span> <span class="token variable">$count</span><span class="token punctuation">;</span><br />                <span class="token variable">$character</span> <span class="token operator">=</span> <span class="token variable">$fChar</span><span class="token punctuation">;</span><br />                <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$char</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">></span> <span class="token variable">$highest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token variable">$highest</span> <span class="token operator">=</span> <span class="token variable">$count</span><span class="token punctuation">;</span><br />                <span class="token variable">$character</span> <span class="token operator">=</span> <span class="token variable">$fChar</span><span class="token punctuation">;</span><br />                <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$char</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span><br />        <span class="token variable">$newCards</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'J'</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$index</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$cards</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$counts</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$newCards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$cards</span> <span class="token operator">=</span> <span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$handType</span> <span class="token operator">=</span> <span class="token function">calculateHandRank</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'score'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'handType'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Finally, I swapped the <code>J</code> value for 1:</p>
<pre class="language-diff"><code class="language-diff">$highValues = [<br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    'J' => 11,<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    'J' => 1,<br /></span></span>];</code></pre>
<p>I ran the code and got a warning:</p>
<pre class="language-txt"><code class="language-txt">chr(): Passing null to parameter #1 ($codepoint) of type int is deprecated</code></pre>
<p>One of the edge cases (maybe the only one?) was a hand that was five of a kind of all <code>J</code> cards. I hadn't accounted for this in my new code for locating the joker replacement; I was skipping every card that was a <code>J</code> so it never the replacement index would be <code>null</code>. One more quick change and I had part two finished.</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $replace = $index ? chr($index) : 'A';<br /></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $newCards = str_replace('J', $chr($index), $cards);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $newCards = str_replace('J', $replace, $cards);</span></span></code></pre>
<p>This was a nice one today. Easy to understand but complicated enough to be a challenge.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/07">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Told you the story was bonkers <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-07T15:45:19.743+00:00</pubDate>
</item>
<item>
<title>Smart Speed Broke My Brain</title>
<link>https://rknight.me/blog/smart-speed-broke-my-brain/</link>
<guid>https://rknight.me/blog/smart-speed-broke-my-brain/</guid>
<content:encoded><![CDATA[
<p>According to <a href="https://overcast.fm/">Overcast</a>'s stats I've saved 424 hours with smart speed. Smart speed, or &quot;trim silence&quot; as other apps call it, is a feature that will remove silences from podcasts and at launch was Overcast’s primary selling point. After the best part of a decade I was convinced <a href="https://gkeenan.co/avgb/hot-take-its-okay-if-we-dont-consume-all-of-the-worlds-information-before-we-die">by Keenan</a> (if you can, listen to the audio version of the post, it's wonderful) to turn it off and I’m so glad I did.</p>
<p>It’s a common joke in the <a href="https://www.relay.fm/membership">Relay FM Discord</a> about how those of us who use smart speed (or just the speed controls) think the hosts sound drunk or like they’re slurring when we hear the “normal” version of podcasts; we’re so used to listening to them sped up with no gaps between each side of the conversation like some kind of Aaron Sorkin movie.</p>
<blockquote>
<p>How do you distinguish yourself in a population of people who all got 1600 on their SAT’s?</p>
</blockquote>
<blockquote>
<p>I didn’t know they take SAT’s in China.</p>
</blockquote>
<blockquote>
<p>They don’t. I wasn’t talking about China anymore, I was talking about me.</p>
</blockquote>
<p>I haven’t listened to a show at standard speed for years. After I turned off smart speed and listened to a show I realised how calm I felt compared to usual. It was relaxing. I had time to process what was being said without also trying to hear the next part of the conversation. I realised for the past decade I’ve been on high alert just to listen to a podcast, concentrating really hard to consume all the information. I was <em>stressed</em> from something that’s supposed to be enjoyable. I was accustomed to <em>readying myself</em> to listen to a show. Smart speed had broken my brain.</p>
<p>424 hours &quot;saved&quot; according to Overcast. Saved what though? 424 more hours to <em>consume content</em>. Lovely.</p>
<p>Back to Keenan:</p>
<blockquote>
<p>I truly believe that Trim Silence is an abomination that should be fully eradicated from existence, as it not only spits in the face of the people who take the time and effort to produce their shows, but also, more broadly, encourages a way of interfacing with art that can only be described as gluttonous</p>
</blockquote>
<p>I don't feel <em>that</em> strongly about it but I do feel stupid for doing this to myself for so long. I don’t think there’s some big conclusion to draw here but maybe, if you speed up your podcasts all the time<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup>, maybe try it without for a show or two to see if you like it.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Hi Cory 👋 <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-06T22:30:39.098+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Six</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-six/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-six/</guid>
<content:encoded><![CDATA[
<p>It's boat racing time. For each millisecond you hold the boat down, it's speed will increase by one millimeter per second. Just like the bus in Speed, the boat never slows down.</p>
<h3>Part One</h3>
<p>The input format:</p>
<pre class="language-bash"><code class="language-bash">Time:      <span class="token number">7</span>  <span class="token number">15</span>   <span class="token number">30</span><br />Distance:  <span class="token number">9</span>  <span class="token number">40</span>  <span class="token number">200</span></code></pre>
<p>Each column is a race which contains the race time and a distance the boat needs to travel to win. So in race one, the boat can travel the required distance (9) by holding down the boat for two, three, four, and five milliseconds. Here is some mathematics:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$time</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span><br /><span class="token variable">$distance</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span><br /><span class="token variable">$testSeconds</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><br /><span class="token variable">$newDistance</span> <span class="token operator">=</span> <span class="token variable">$testSeconds</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$time</span> <span class="token operator">-</span> <span class="token variable">$current</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$canWin</span> <span class="token operator">=</span> <span class="token variable">$newDistance</span> <span class="token operator">></span> <span class="token variable">$distance</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// $canWin = true</span></code></pre>
<p>For each of the races I generated a range of numbers to test based on the time, then checked if those could win based on the distance for that race.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$extract</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token function">array_values</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">;</span><br /><br /><span class="token punctuation">[</span><span class="token variable">$times</span><span class="token punctuation">,</span> <span class="token variable">$distances</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$times</span> <span class="token operator">=</span> <span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$times</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$distances</span> <span class="token operator">=</span> <span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$distances</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$wins</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$times</span> <span class="token keyword">as</span> <span class="token variable">$race</span> <span class="token operator">=></span> <span class="token variable">$time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$distance</span> <span class="token operator">=</span> <span class="token variable">$distances</span><span class="token punctuation">[</span><span class="token variable">$race</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$range</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$time</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$winCount</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$range</span> <span class="token keyword">as</span> <span class="token variable">$r</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token variable">$newDistance</span> <span class="token operator">=</span> <span class="token variable">$r</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$time</span> <span class="token operator">-</span> <span class="token variable">$r</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$canWin</span> <span class="token operator">=</span> <span class="token variable">$newDistance</span> <span class="token operator">></span> <span class="token variable">$distance</span><span class="token punctuation">;</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$canWin</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token variable">$winCount</span><span class="token operator">++</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$wins</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$winCount</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Total is '</span> <span class="token operator">.</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token variable">$wins</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>Got the correct total, part one done. Easy peasy.</p>
<h3>Part Two</h3>
<p>Apprently the kerning on the peice of paper the input was written on was not good and it's actually just one race and not multiple.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> So now we have one large race:</p>
<pre><code>$time = 71530;
$distance = 940200;
</code></pre>
<p>I switched out my extractor to remove all the spaces and give me just two numbers (I put them in an array so I could avoid changing any of the other code):</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$extract</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">;</span><br /><br /><span class="token punctuation">[</span><span class="token variable">$times</span><span class="token punctuation">,</span> <span class="token variable">$distances</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$times</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$times</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$distances</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$distances</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Like <a href="https://rknight.me/advent-of-code-2023-day-five/">yesterday</a> when I also used <code>range</code> on some large numbers, I ran out of memory. I did throw memory at it and it worked but I knew an easy fix for this one so I changed the <code>range</code> logic to a <code>while</code> loop.</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$times</span> <span class="token keyword">as</span> <span class="token variable">$race</span> <span class="token operator">=></span> <span class="token variable">$time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$distance</span> <span class="token operator">=</span> <span class="token variable">$distances</span><span class="token punctuation">[</span><span class="token variable">$race</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$winCount</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><br />    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$current</span> <span class="token operator">&lt;</span> <span class="token variable">$time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$newDistance</span> <span class="token operator">=</span> <span class="token variable">$current</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$time</span> <span class="token operator">-</span> <span class="token variable">$current</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$canWin</span> <span class="token operator">=</span> <span class="token variable">$newDistance</span> <span class="token operator">></span> <span class="token variable">$distance</span><span class="token punctuation">;</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$canWin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token variable">$winCount</span><span class="token operator">++</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />        <span class="token variable">$current</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$wins</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$winCount</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Total is '</span> <span class="token operator">.</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token variable">$wins</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>And that was part two. I don't know how efficient <code>array_product</code> is and I could have just calculated the total as I went along instead of adding to an array instead.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/06">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>The &quot;story&quot; part of advent of code is really something. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-06T11:07:22.654+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Five</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-five/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-five/</guid>
<content:encoded><![CDATA[
<p>The description for this puzzle was confusing. Like, <em>really</em> confusing. I had to read it at least five times before I even understood the question.</p>
<h3>Part One</h3>
<p>For this puzzle the sample input was as follows:</p>
<pre class="language-txt"><code class="language-txt">seeds: 79 14 55 13<br /><br />seed-to-soil map:<br />50 98 2<br />52 50 48<br /><br />soil-to-fertilizer map:<br />0 15 37<br />37 52 2<br />39 0 15<br /><br />fertilizer-to-water map:<br />49 53 8<br />0 11 42<br />42 0 7<br />57 7 4<br /><br />water-to-light map:<br />88 18 7<br />18 25 70<br /><br />light-to-temperature map:<br />45 77 23<br />81 45 19<br />68 64 13<br /><br />temperature-to-humidity map:<br />0 69 1<br />1 0 69<br /><br />humidity-to-location map:<br />60 56 37<br />56 93 4</code></pre>
<p>Each line of a map is the destination start, the source start, and the range length. For example if we take the first line of the <code>seed-to-soil map</code>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'50 98 2'</span><span class="token punctuation">;</span><br /><br /><span class="token punctuation">[</span><span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <span class="token variable">$rangeLength</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$sourceRange</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><br />    <span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <br />    <span class="token variable">$sourceStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$destinationRange</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><br />    <span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <br />    <span class="token variable">$destinationStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$mapped</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span><span class="token variable">$sourceRange</span><span class="token punctuation">,</span> <span class="token variable">$destinationRange</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$mapped</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token number">98</span> <span class="token operator">=></span> <span class="token number">50</span><span class="token punctuation">,</span><br />    <span class="token number">99</span> <span class="token operator">=></span> <span class="token number">51</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>This needs to be done for every map in the input. Then take the seed number for the first map, get the value (or the previous value if it's not in the range), and so on to the last location value. So in the above example if the seed number is <code>98</code> the value is <code>50</code>. Then take <code>50</code> and see if that exists in the <code>soil-to-fertilizer map</code>. If this makes no sense, have a look at the <a href="https://adventofcode.com/2023/day/5">advent of code page for today's puzzle</a>.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup></p>
<p>Below is my full &quot;solution&quot;. I'm looping through each line of each map, generating the ranges based on the numbers, and adding it to a <code>mapData</code> array. Notice I'm using <code>array_combine</code> to use the source values as the keys and the destination values as the new values. <code>array_replace</code> preserves keys unlike <code>array_merge</code> which resets keys, which in this case are important.</p>
<pre class="language-php"><code class="language-php"><br /><span class="token variable">$rawData</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$seeds</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'seeds: '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$rawData</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$rawData</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$mapData</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$rawData</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$mapName</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' map:'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$lines</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$mapData</span><span class="token punctuation">[</span><span class="token variable">$mapName</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$lines</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token punctuation">[</span><span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <span class="token variable">$rangeLength</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />        <span class="token comment">// generate the ranges for the source and destination</span><br />        <span class="token variable">$mapData</span><span class="token punctuation">[</span><span class="token variable">$mapName</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">array_replace</span><span class="token punctuation">(</span><span class="token variable">$mapData</span><span class="token punctuation">[</span><span class="token variable">$mapName</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">array_combine</span><span class="token punctuation">(</span><br />            <span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <span class="token variable">$sourceStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />            <span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <span class="token variable">$destinationStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$locations</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$seeds</span> <span class="token keyword">as</span> <span class="token variable">$seed</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token comment">// keep track of the current value, starting with the seed</span><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$seed</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$mapData</span> <span class="token keyword">as</span> <span class="token variable">$mapName</span> <span class="token operator">=></span> <span class="token variable">$map</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token comment">// if there isn't a value set, fallback to the current</span><br />        <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token variable">$current</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$current</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$locations</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$current</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Lowest location number is '</span> <span class="token operator">.</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$locations</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>This worked for the sample input which was nice given how long I spent trying to understand the puzzle to start with. Then I ran it on the real input and got this out of memory error:</p>
<pre class="language-bash"><code class="language-bash">Fatal error: Allowed memory size of <span class="token number">536870912</span> bytes exhausted</code></pre>
<p>I hadn't actually looked at the real input at this point. The real input has <em>huge</em> numbers compared to the sample input so the range generation was causing PHP to run out of memory. Which means I had to rethink my solution <em>or</em> throw a bunch of memory at it and hope for the best.</p>
<p><img alt="Button meme showing &quot;Make my code better&quot; on one side and &quot;give it ALL the memory I can&quot;" src="https://rknightuk.s3.amazonaws.com/site/advent-button-meme.png" /></p>
<p>So I ran it with 64GB of memory: <code>php -d memory_limit=64000M 1.php</code> and it worked! Or at least, it ran. It gave me an answer that was wrong. I had a better look at the numbers in the real input and called it a day.</p>
<p>Two hours later I had a moment of clarity and realised how to solve this without needing the <a href="https://en.wikipedia.org/wiki/Frontier_(supercomputer)">1.102 exaFLOPS of the Frontier supercomputer</a>. I also noticed a bit of testing code which sliced one of the arrays so even if I hadn't had the memory problems, I was never going to get the right answer. Whoops.</p>
<h3>Part One Redux</h3>
<p>Instead of generating the ranges for every number, I could work out the index of the seed by generating the start and end of each of the ranges:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $mapData[$mapName] = array_replace($mapData[$mapName], array_combine(<br /></span><span class="token prefix deleted">-</span><span class="token line">    range($sourceStart, $sourceStart + $rangeLength - 1),<br /></span><span class="token prefix deleted">-</span><span class="token line">    range($destinationStart, $destinationStart + $rangeLength - 1),<br /></span><span class="token prefix deleted">-</span><span class="token line"> ));<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $mapData[$mapName][] = [<br /></span><span class="token prefix inserted">+</span><span class="token line">    'sourceStart' => $sourceStart,<br /></span><span class="token prefix inserted">+</span><span class="token line">    'sourceEnd' => $sourceStart + $rangeLength - 1,<br /></span><span class="token prefix inserted">+</span><span class="token line">    'destinationStart' => $destinationStart,<br /></span><span class="token prefix inserted">+</span><span class="token line">    'destinationEnd' => $destinationStart + $rangeLength - 1,<br /></span><span class="token prefix inserted">+</span><span class="token line"> ];</span></span></code></pre>
<p>Then calculate the difference to make my index, then use that index on the next &quot;map&quot; to get the correct value:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$locations</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$seeds</span> <span class="token keyword">as</span> <span class="token variable">$seed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$seed</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$mapData</span> <span class="token keyword">as</span> <span class="token variable">$mapName</span> <span class="token operator">=></span> <span class="token variable">$mapArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$mapArray</span> <span class="token keyword">as</span> <span class="token variable">$map</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$current</span> <span class="token operator">>=</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sourceStart'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$current</span> <span class="token operator">&lt;=</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sourceEnd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$current</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sourceStart'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />                <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'destinationStart'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token variable">$index</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$locations</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$current</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Lowest location number is '</span> <span class="token operator">.</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$locations</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>Part one done. And I didn't even need to give it extra memory to run.</p>
<h3>Part Two</h3>
<p>To paraphrase Marie Kondo:</p>
<blockquote>
<p>your feelings are the standard for decision making – specifically, knowing what sparks joy.  To determine this when writing code, the key is to pick up each bit of code one at a time, and ask yourself quietly, “Does this spark joy?”</p>
</blockquote>
<p>Just like 2015's Fantastic Four, there is no part two. Not today, satan.</p>
<p>My code is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/05">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>And probably be as confused as I was <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-05T11:40:26.302+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Four</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-four/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-four/</guid>
<content:encoded><![CDATA[
<p>As soon as I saw this one this morning I knew it was going to at least be a bit easier than <a href="https://rknight.me/advent-of-code-2023-day-three">yesterday</a>.</p>
<h3>Part One</h3>
<p>The premise for today was scratchcards with two sets of numbers: winning numbers and numbers you have. The first half is winning numbers, the second is numbers you have.</p>
<pre class="language-php"><code class="language-php">Card <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">41</span> <span class="token number">48</span> <span class="token number">83</span> <span class="token number">86</span> <span class="token number">17</span> <span class="token operator">|</span> <span class="token number">83</span> <span class="token number">86</span>  <span class="token number">6</span> <span class="token number">31</span> <span class="token number">17</span>  <span class="token number">9</span> <span class="token number">48</span> <span class="token number">53</span></code></pre>
<p>From the Advent of Code page:</p>
<blockquote>
<p>Card 1 has five winning numbers (41, 48, 83, 86, and 17) and eight numbers you have (83, 86, 6, 31, 17, 9, 48, and 53). Of the numbers you have, four of them (48, 83, 17, and 86) are winning numbers!</p>
</blockquote>
<p>Seemed easy enough especially when using PHP's <a href="https://www.php.net/manual/en/function.array-intersect.php"><code>array_intersect</code></a> which returns &quot;<em>an array containing all the values of array that are present in all the arguments</em>&quot;. In this case, our winning numbers. For each winning number, the score doubles (starting with one for the first winning number). The goal was the find the total score of all the winning cards.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$total</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$lines</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token comment">// explode the string to get only the numbers</span><br />    <span class="token punctuation">[</span><span class="token variable">$card</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">': '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token comment">// get the two strings of numbers</span><br />    <span class="token punctuation">[</span><span class="token variable">$winners</span><span class="token punctuation">,</span> <span class="token variable">$have</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token comment">// make them an array</span><br />    <span class="token variable">$winners</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$winners</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$have</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$have</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$winningNumbers</span> <span class="token operator">=</span> <span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token variable">$have</span><span class="token punctuation">,</span> <span class="token variable">$winners</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$currentTotal</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$winningNumbers</span> <span class="token keyword">as</span> <span class="token variable">$win</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$currentTotal</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token comment">// first number, so start at 1 for the score</span><br />            <span class="token variable">$currentTotal</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><br />            <span class="token keyword">continue</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br /><br />        <span class="token comment">// each additional winning number doubles the score</span><br />        <span class="token variable">$currentTotal</span> <span class="token operator">=</span> <span class="token variable">$currentTotal</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span><br /><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$currentTotal</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Current total '</span> <span class="token operator">.</span> <span class="token variable">$total</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>I was pretty confident in this solution but I did not get the correct answer using the sample input. I then noticed the inconsistent spaces in the string so my <code>array_intersect</code> was returning additional empty values. A quick <code>array_filter</code> later and I had the correct answer so I was onto part two.</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $winningNumbers = array_intersect($have, $winners);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $winningNumbers = array_filter(array_intersect($have, $winners));</span></span></code></pre>
<h3>Part Two</h3>
<p>Part two is, as always, more complicated:</p>
<blockquote>
<p>Instead, scratchcards only cause you to win more scratchcards equal to the number of winning numbers you have</p>
<p>Card 1 has four matching numbers, so you win one copy each of the next four cards: cards 2, 3, 4, and 5</p>
</blockquote>
<p>Starting with part one's code, I did some processing of the data prior to looping over each scratchcard.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$l</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$_</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">': '</span><span class="token punctuation">,</span> <span class="token variable">$l</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">[</span><span class="token variable">$winners</span><span class="token punctuation">,</span> <span class="token variable">$have</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$winners</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$winners</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$have</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$have</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token punctuation">[</span><br />        <span class="token string single-quoted-string">'winners'</span> <span class="token operator">=></span> <span class="token variable">$winners</span><span class="token punctuation">,</span><br />        <span class="token string single-quoted-string">'have'</span> <span class="token operator">=></span> <span class="token variable">$have</span><span class="token punctuation">,</span><br />    <span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [['winners' => [4,5,6], 'have' => [1,2,3]], ...]</span><br /><br /><span class="token variable">$multipliers</span> <span class="token operator">=</span> <span class="token function">array_fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [1 => 1, 2 => 2, 3 => 3, ...]</span></code></pre>
<p>I then looped over the scratchcards, identified the winning numbers, then for each number add to the <code>multipliers</code> for that card. For example, card one has four wininng numbers so it &quot;copies&quot; cards two, three, four, and five by setting it to <code>2</code>. When I hit card two in the loop, the added number would be <code>2</code> rather than one, because I have two copies of that card.</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$lines</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$cardId</span> <span class="token operator">=</span> <span class="token variable">$index</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><br />    <br />    <span class="token comment">// count the winning numbers</span><br />    <span class="token variable">$winCount</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'have'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'winners'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <br />    <span class="token comment">// if there are none, we don't need to make any card copies</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$winCount</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">continue</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token comment">// the card ID of the next card we need to copy</span><br />    <span class="token variable">$windex</span> <span class="token operator">=</span> <span class="token variable">$cardId</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><br /><br />    <span class="token comment">// for each winning number, add the the multipliers to "copy" that card</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$winCount</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$win</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$multipliers</span><span class="token punctuation">[</span><span class="token variable">$windex</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token variable">$multipliers</span><span class="token punctuation">[</span><span class="token variable">$cardId</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$windex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>All in all this took me about 30 minutes for part one, and about 15 minutes for part two - although I did think about part two for a few hours while I was working.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/04">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-04T13:07:52.766+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Three</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-three/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-three/</guid>
<content:encoded><![CDATA[
<p>More regex and string parsing today. Sounds like a party.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup></p>
<h3>Part One</h3>
<p>Given an &quot;engine schematic&quot; like below, identify which numbers are part numbers. That is, they have a symbol (not a <code>.</code> though) either next to, above, or below them including diagonally.</p>
<pre class="language-txt"><code class="language-txt">467..114..<br />...*......<br />..35..633.</code></pre>
<p>In this example, <code>467</code> and <code>35</code> <em>are</em> part numbers, <code>114</code> and <code>633</code> are not.</p>
<p>My plan was a such: go through each line, identifying the part numbers and symbols, and then use <code>strpos</code> to work out if they are or are not part numbers. I also generated a range that I could use with <code>substr</code> to get the location of the number (plus an additional character each side) on the previous, current, and next lines. For example if my string was as below, the range starts at  <code>2</code> and ends at <code>5</code>.</p>
<pre class="language-php"><code class="language-php"><span class="token comment">//       0123456789</span><br /><span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'...56.....'</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// then use substr to get `.56.`</span><br /><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>After some tinkering around I had a solution that worked. At least for the sample input.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$explodedInput</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$strippedInput</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$total</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$strippedInput</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$line</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d+/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\D/'</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$symbols</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$explodedInput</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><br />    <span class="token variable">$previous</span> <span class="token operator">=</span> <span class="token variable">$explodedInput</span><span class="token punctuation">[</span><span class="token variable">$index</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><br />    <span class="token variable">$next</span> <span class="token operator">=</span> <span class="token variable">$explodedInput</span><span class="token punctuation">[</span><span class="token variable">$index</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><br /><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$position</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$number</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$range</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />            <span class="token variable">$position</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token variable">$position</span> <span class="token punctuation">:</span> <span class="token variable">$position</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span><br />            <span class="token variable">$position</span> <span class="token operator">+</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token variable">$position</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token variable">$position</span> <span class="token punctuation">:</span> <span class="token variable">$position</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br />        <span class="token variable">$findInCurrent</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$current</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$findInPrevious</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$previous</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$findInNext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$next</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9\.]/'</span><span class="token punctuation">,</span> <span class="token variable">$findInCurrent</span><span class="token punctuation">,</span> <span class="token variable">$sc</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9\.]/'</span><span class="token punctuation">,</span> <span class="token variable">$findInPrevious</span><span class="token punctuation">,</span> <span class="token variable">$sp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9\.]/'</span><span class="token punctuation">,</span> <span class="token variable">$findInNext</span><span class="token punctuation">,</span> <span class="token variable">$sn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><br />            <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$sc</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">count</span><span class="token punctuation">(</span><span class="token variable">$sp</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">count</span><span class="token punctuation">(</span><span class="token variable">$sn</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><br />        <span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$number</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Current total '</span> <span class="token operator">.</span> <span class="token variable">$total</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>When I ran this on the real data, my total was too high. Despite how it looks, the code is relatively straight forward so I knew there must be something tiny I was missing.</p>
<p>What I haven’t accounted for was numbers appearing more than once in a single line. I was using <code>strpos</code> which finds the first instance of a string so if the string was <code>654...6...</code> then when I tried to find that second <code>6</code> it would find the first one. It sounds obvious but on the first pass it just didn't occur to me.</p>
<p>Off the top of my head I didn't know how to fix this problem. Turns out <code>preg_match_replace</code> <a href="https://www.php.net/manual/en/function.preg-match-all.php">can take a fourth parameter</a> of <code>PREG_OFFSET_CAPTURE</code> to return the string offset of the found string:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'654...6...'</span><span class="token punctuation">;</span><br /><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d+/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [["654","6"]]</span><br /><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d+/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$numbersWithOffset</span><span class="token punctuation">,</span> <span class="token constant">PREG_OFFSET_CAPTURE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [[["654",0], ["6",6]]]</span></code></pre>
<p>Then instead of getting the position separately, I could grab it from the matches:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> foreach ($numbers[0] as $number)<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> foreach ($numbers[0] as $numberData)<br /></span></span>{<br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $position = strpos($line, $number);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> [$number, $position] = $numberData;</span></span></code></pre>
<p>And just like that I had the correct answer to part one.</p>
<h3>Part Two</h3>
<p>Today's puzzle did not spark joy so I just didn't do part two. <a href="https://zoeaubert.me/blog/advent-of-code-2023-day-03/">Zoe</a> and <a href="https://lewisdale.dev/post/advent-of-code-2023-day-three/">Lewis</a> did if you want to see a completed solution. Here's hoping tomorrow is a bit less straining on my sleep-deprived brain.</p>
<p>My solution for part one is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/03">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>It wasn't a party at all. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-03T11:50:39.013+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Two</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-two/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-two/</guid>
<content:encoded><![CDATA[
<p>After finally finding time to do today's challenge, I was able to knock it out in about 30 minutes for parts one and two. At the core of both of parts was parsing strings like this:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'Game 1: 3 blue, 4 red; 1 red, 2 green, 6 blue; 2 green'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Game 2: 1 blue, 2 green; 3 green, 4 blue, 1 red; 1 green, 1 blue'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Game 3: 8 green, 6 blue, 20 red; 5 blue, 4 red, 13 green; 5 green, 1 red'</span><span class="token punctuation">,</span><br />    <span class="token comment">// and so on</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<h3>Part One</h3>
<p>For part one I needed to get the game ID plus the amount and related colors from each pick of the games. There are a lot of ways of doing this but the solution I went with was some good-old fashioned string-replacement and exploding:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$colors</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'red'</span> <span class="token operator">=></span> <span class="token number">12</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'green'</span> <span class="token operator">=></span> <span class="token number">13</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'blue'</span> <span class="token operator">=></span> <span class="token number">14</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$validGameTotal</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$input</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$game</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$gameId</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$game</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$picks</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$gameValid</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br /><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$picks</span> <span class="token keyword">as</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$gameValid</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span><br />        <span class="token variable">$pick</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$color</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$amount</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$amount</span> <span class="token operator">></span> <span class="token variable">$colors</span><span class="token punctuation">[</span><span class="token variable">$color</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token variable">$gameValid</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><br />            <span class="token keyword">continue</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$gameValid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$validGameTotal</span> <span class="token operator">+=</span> <span class="token variable">$gameId</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token variable">$validGameTotal</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>A <code>break</code> statement would make more sense instead of using <code>continue</code> but I'm not changing it now.</p>
<h3>Part Two</h3>
<p>Part two was similar but I needed to find the highest value of each given color and multiply them. PHP's <code>max</code> function made this easy:</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$input</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$game</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$gameId</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$game</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$picks</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$blue</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$red</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$green</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$picks</span> <span class="token keyword">as</span> <span class="token variable">$pick</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$pick</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$color</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$amount</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token keyword">case</span> <span class="token string single-quoted-string">'blue'</span><span class="token punctuation">:</span><br />                <span class="token variable">$blue</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$blue</span><span class="token punctuation">,</span> <span class="token variable">$amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />            <span class="token keyword">case</span> <span class="token string single-quoted-string">'red'</span><span class="token punctuation">:</span><br />                <span class="token variable">$red</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$red</span><span class="token punctuation">,</span> <span class="token variable">$amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />            <span class="token keyword">case</span> <span class="token string single-quoted-string">'green'</span><span class="token punctuation">:</span><br />                <span class="token variable">$green</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$green</span><span class="token punctuation">,</span> <span class="token variable">$amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token variable">$blue</span> <span class="token operator">*</span> <span class="token variable">$red</span> <span class="token operator">*</span> <span class="token variable">$green</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>Onwards to day three.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/02">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-02T22:06:56.581+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day One</title>
<link>https://rknight.me/blog/advent-of-code-2023-day-one/</link>
<guid>https://rknight.me/blog/advent-of-code-2023-day-one/</guid>
<content:encoded><![CDATA[
<p>Until <a href="https://zoeaubert.me">Zoe</a> mentioned it this morning, I didn't know what <a href="https://adventofcode.com">Advent of Code</a> was <sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup>. Advent of Code is an &quot;<em>advent calendar of small programming puzzles</em>&quot;. So once I knew what it was, I figured I'd give it a go. I'm not sure if I'll make it all month but I'll certainly try. I'm doing it in PHP because it's what I know and it will annoy Zoe a little bit; you can see <a href="https://zoeaubert.me/blog/advent-of-code-2023-day-01/">her rust-based solution here</a>.</p>
<h3>Part One</h3>
<p>The first challenge was to extract the first and last digit from an array of strings, concatenate them, then get the total. For example the result of this on <code>1fghy2</code> would give <code>12</code>.</p>
<p>Anyone who knows me professionally knows regex is my kryptonite. It just doesn't click with my brain and I seem to forget anything I learn about it instantly. I fired up <a href="https://regex101.com/">regex101</a> to give this a go anyway. Regex101 has a handy quick reference which told me I needed <code>\d</code> to find any digit. I used <code>preg_match_all</code> to get all digits:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'1abc2'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'pqr3stu8vwx'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'a1b2c3d4e5f'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'treb7uchet'</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">array_reduce</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$total</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token comment">// get all digits</span><br />    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$first</span> <span class="token operator">=</span> <span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$last</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$first</span> <span class="token operator">.</span> <span class="token variable">$last</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token variable">$total</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'The total is '</span> <span class="token operator">.</span> <span class="token variable">$result</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span><br /><span class="token comment">// The total is 142</span></code></pre>
<h3>Part One</h3>
<p>Part two added a complexity that some of the numbers could be written out as words instead of digits. Some of the strings might have no digits and some might have no numbers-as-words. So <code>onedsjfbi2</code> would give <code>12</code> and <code>23sdshseven</code> would give <code>27</code>. This part I <em>did</em> know; find all digits, or the words of 1-9. A quick swap of my regex from before and mapping words to numbers with PHPs <a href="https://www.php.net/manual/en/migration70.new-features.php">null coalescing operator</a>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$lettersToNumbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'one'</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'two'</span> <span class="token operator">=></span> <span class="token number">2</span><span class="token punctuation">,</span><br />    <span class="token comment">// and so on</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d|one|two|three|four|five|six|seven|eight|nine)/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$first</span> <span class="token operator">=</span> <span class="token variable">$lettersToNumbers</span><span class="token punctuation">[</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$last</span> <span class="token operator">=</span> <span class="token variable">$lettersToNumbers</span><span class="token punctuation">[</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>I thought I'd cracked it but the advent of code site told me my number was too high. I logged out all the strings and the numbers I had found with my regex and eyeballed <em>a lot</em> of them and everything seemed fine. After a good 20 minutes or so I had to call it quits and check out what <a href="https://lewisdale.dev/post/advent-of-code-2023-day-one/">Lewis had for his solution</a>. It turns out some of the strings have words that crossover, for example <code>35oneight</code>. The result <em>should</em> be <code>38</code> but I was getting <code>31</code> because regex will match the first instance (in this case <code>one</code>) and then move on. I didn't look at Lewis' solution because I still want to attempt it myself.</p>
<p>After a bit of googling what I needed was a <a href="https://stackoverflow.com/questions/35458195/pcre-regular-expression-overlapping-matches">capturing technique inside an unanchored positive lookahead</a><sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn2" id="fnref2">[2]</a></sup> which would then return <code>eight</code> in the example above:</p>
<pre class="language-php"><code class="language-php"><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(?=(\d|one|two|three|four|five|six|seven|eight|nine))/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>And there we go, day one done.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/01">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Or more likely, I did know and just forgot about it. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>Very normal sentence, yes. Nothing to see here. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-01T11:30:30.578+00:00</pubDate>
</item>
<item>
<title>Crossover</title>
<link>https://rknight.me/blog/crossover/</link>
<guid>https://rknight.me/blog/crossover/</guid>
<content:encoded><![CDATA[
<p><img alt="Crossover logo" src="https://rknightuk.s3.amazonaws.com/site/crossover-logo.png" /></p>
<p>Sometimes one idea begets another. In the case of <a href="https://crossover.rknight.me">Crossover</a> I had the idea while building <a href="https://rknight.me/doubleshift">DoubleShift</a> but I was too far in to change it. DoubleShift also now has some fun additional features like leaderboards which only make sense for that site.</p>
<p>Crossover, unlike DoubleShift, isn't limited to a handful of TV shows: if a show is in <a href="https://www.themoviedb.org/">The Movie Database</a> you can compare it with Crossover.</p>
<p><img alt="Crossover screenshot" src="https://rknightuk.s3.amazonaws.com/site/crossover-screenshot.png" /></p>
<p>There are a few pre-loaded shows on the site but you can search for any show - once you've found one, it gets added to the options so you can mix and match in any way you want.</p>
<p>The logo is a mix of Breaking Bad and Game of Thrones so you might think Game of Thrones would be a good default on the site but there are very few actors that crossover with other shows I was testing with. The font looked good though so here we are.</p>
<p><a href="https://crossover.rknight.me">Check out Crossover here</a> and <a href="https://doubleshift.rknight.me">DoubleShift here</a>.</p>
]]></content:encoded>
<pubDate>2023-11-30T21:17:34.256+00:00</pubDate>
</item>
<item>
<title>DoubleShift</title>
<link>https://rknight.me/blog/doubleshift/</link>
<guid>https://rknight.me/blog/doubleshift/</guid>
<content:encoded><![CDATA[
<p>I have watched <a href="https://www.themoviedb.org/tv/4556-scrubs">Scrubs</a> more times than I can count and I am currently re-watching <a href="https://www.themoviedb.org/tv/1416-grey-s-anatomy">Grey's Anatomy</a> for the third (maybe fourth?) time. I noticed there are a lot of actors who have appeared in both and it <em>seemed</em> like it was every other episode. After some data-wrangling I have an actual answer: 28 actors have appeared in both series.</p>
<h3>The Idea</h3>
<p>I thought it would be fun to show this on a site along with highlighting what I'm calling &quot;double doctors&quot;: that is, actors who have played a doctor in both shows. The site is called <a href="https://doubleshift.rknight.me">DoubleShift</a> and it has this nifty logo I whipped up:</p>
<p><a href="https://doubleshift.rknight.me"><img alt="DoubleShift logo" src="https://rknightuk.s3.amazonaws.com/site/double-shift-logo.png" /></a></p>
<p>I mentioned this idea to <a href="https://mas.to/@_dreaves">David</a> and he asked what the numbers were like against <a href="https://www.themoviedb.org/tv/1408-house">House</a>. So I added House to my dataset: 78 actors have appeared in Grey's and House, and 48 have appeared in Scrubs and House. I also added <a href="https://www.themoviedb.org/tv/4588-er?language=en-GB">ER</a> because that had a lot of crossover too.</p>
<p>I briefly added General Hospital because of how long it has been running but there was <a href="https://www.themoviedb.org/person/36216-cynthia-watros">just one actress</a> who has been in any of the other shows so I removed it again. Also, adding even one more show generates so many more permutations.</p>
<h3>Handling the Data</h3>
<p>To fetch the actor data for each show I used <a href="https://developer.themoviedb.org/reference/intro/getting-started">The Movie Database API</a> which has a handy &quot;Aggregate Credits&quot; endpoint for fetching all actors who have been in a show across all seasons. I then mapped that data to a keyed object by their TMDB ID:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.themoviedb.org/3/tv/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>show<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/aggregate_credits?&amp;series_id=1416&amp;language=en-US</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />	<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token string-property property">'Authorization'</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">API_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br />		<span class="token string-property property">'accept'</span><span class="token operator">:</span> <span class="token string">'application/json'</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br /><br />json<span class="token punctuation">.</span>cast<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">actor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	data<span class="token punctuation">[</span>actor<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><br />		<span class="token operator">...</span>actor<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>To find the actors who have been in both shows a <code>filter</code> did the trick:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> intersection <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>showData<span class="token punctuation">[</span>showOne<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=></span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>showData<span class="token punctuation">[</span>showTwo<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// console.log(intersection)</span><br /><span class="token comment">// [123, 3456, 3456]</span></code></pre>
<p>I used <a href="https://11ty.dev">Eleventy</a> like I always do because it's data files are perfect at handling this kind of thing and using nunjucks is easy-peasy to output what I want. I decided to avoid using javascript on the site itself here so I used CSS and radio buttons to show and hide each combination of show.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">#show-greys-scrubs</span> <span class="token punctuation">{</span><br />	<span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token selector">#greys-scrubs:checked ~ #show-greys-scrubs</span> <span class="token punctuation">{</span><br />	<span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>It's worth noting that when using the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Subsequent-sibling_combinator">subsequent-sibling combinator</a> (<code>~</code>) the two elements must be children of the same parent so I couldn't have the radio buttons inside their own container which made styling them slightly harder, but a small price to pay to not rely on JS here.</p>
<p><a href="https://doubleshift.rknight.me">View the DoubleShift site here</a> and you can view <a href="https://github.com/rknightuk/doubleshift">the source on GitHub</a></p>
<ul>
<li>Update 2023-11-28: Added four more shows and leaderboards</li>
<li>Update 2023-11-30: Check out <a href="https://rknight.me/crossover">Crossover</a> to compare <em>any</em> two TV shows</li>
</ul>
]]></content:encoded>
<pubDate>2023-11-27T22:30:06.509+00:00</pubDate>
</item>
<item>
<title>Popular Pages with Eleventy and Fathom Analytics</title>
<link>https://rknight.me/blog/popular-pages-with-eleventy-and-fathom-analytics/</link>
<guid>https://rknight.me/blog/popular-pages-with-eleventy-and-fathom-analytics/</guid>
<content:encoded><![CDATA[
<p>Now my new site design is done, I've been able to take some time to add features I've wanted for a while. In this case, I want to show popular pages based on pageviews at the end of blog posts, on the <a href="https://rknight.me/search">search page</a>, and on the <a href="https://rknight.me/404notfound">404 page</a>.</p>
<h3>Fetching Pageviews</h3>
<p>I use <a href="https://usefathom.com/ref/IXCLSF">Fathom</a> for analytics on my sites and they <a href="https://usefathom.com/api">have an API</a> which is handy. If you use Plausible for your analytics you should <a href="https://coryd.dev/posts/2023/popular-posts-widget-using-eleventy-plausible/">check out Cory's post</a> on the same topic for the specific API implementation. He also uses liquid rather than nunjucks which I use so if that's your jam you probably want his post instead.</p>
<p>To fetch the data I use <a href="https://www.11ty.dev/docs/data-global/">Eleventy data files</a>. You can get an API key from <a href="https://app.usefathom.com/api">your Fathom dashboard</a>. Also, you don't <em>need</em> to use the <a href="https://www.npmjs.com/package/qs"><code>qs</code></a> library but it does make life a bit easier.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// _data/fathom.js</span><br /><span class="token keyword">const</span> qs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'qs'</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br /><br />	<span class="token keyword">const</span> date_from <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token string">'days'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY-MM-DD HH:mm'</span><span class="token punctuation">)</span><br />	<span class="token keyword">const</span> date_to <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY-MM-DD HH:mm'</span><span class="token punctuation">)</span><br />	<br />	<span class="token keyword">const</span> query <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />		<span class="token literal-property property">entity</span><span class="token operator">:</span> <span class="token string">'pageview'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">entity_id</span><span class="token operator">:</span> env<span class="token punctuation">.</span>process<span class="token punctuation">.</span><span class="token constant">FATHOM_SITE_CODE</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">aggregates</span><span class="token operator">:</span> <span class="token string">'pageviews'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">field_grouping</span><span class="token operator">:</span> <span class="token string">'pathname'</span><span class="token punctuation">,</span><br />		date_from<span class="token punctuation">,</span><br />		date_to<span class="token punctuation">,</span><br />		<span class="token literal-property property">sort_by</span><span class="token operator">:</span> <span class="token string">'pageviews:desc'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">100</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><br />	<br />	<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.usefathom.com/v1/aggregations?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />		<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />			<span class="token string-property property">'Authorization'</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>env<span class="token punctuation">.</span>process<span class="token punctuation">.</span><span class="token constant">FATHOM_API_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />		<span class="token punctuation">}</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><br />	<br />	<span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>Which gives uses a response like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">[</span><br />	<span class="token punctuation">{</span><br />		pageviews<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span><br />		pathname<span class="token operator">:</span> '/'<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token punctuation">{</span><br />		pageviews<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span><br />		pathname<span class="token operator">:</span> '/please-expose-your-rss/'<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token punctuation">{</span><br />		pageviews<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span><br />		pathname<span class="token operator">:</span> '/app-defaults/'<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token comment">// and so on</span><br /><span class="token punctuation">]</span></code></pre>
<p>The first problem here is this includes pages that aren't blog posts. If you're normal and setup your site well, this is easy: filter the list to only get posts that contain <code>/blog</code> in the <code>pathname</code>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> pv<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'/blog'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>
<p>If you're like me and made a silly mistake many years ago and your posts live at the root of your site, you have to get a bit creative to get all the blog post paths. I'm also using <code>titleMap</code> to get the titles of the posts so I can add those to the Fathom data.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// ...fetching fathom goes here</span><br /><br /><span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">'./src/posts/**/*.md'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> titleMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br /><br />files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">page</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">const</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><br />	<span class="token keyword">const</span> permalink <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^permalink: ?(.*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'permalink: '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />	<span class="token keyword">let</span> title <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^title: ?(.*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'title: '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><br />	<br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />	<span class="token punctuation">{</span><br />		title <span class="token operator">=</span> title<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><br />	<span class="token punctuation">}</span><br />	<br />	titleMap<span class="token punctuation">[</span>permalink<span class="token punctuation">]</span> <span class="token operator">=</span> title<br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// titleMap = {</span><br /><span class="token comment">//	'/please-expose-your-rss/': 'Please, Expose your RSS',</span><br /><span class="token comment">//	'/app-defaults/': 'App Defaults',</span><br /><span class="token comment">// }</span><br /><br /><span class="token comment">// filter out only blog posts</span><br /><span class="token keyword">let</span> data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>titleMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>pv<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// add the titles to the fathom data</span><br />data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">return</span> <span class="token punctuation">{</span><br />		<span class="token literal-property property">title</span><span class="token operator">:</span> titleMap<span class="token punctuation">[</span>pv<span class="token punctuation">.</span>pathname<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">url</span><span class="token operator">:</span> pv<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span><br />		<span class="token literal-property property">pageviews</span><span class="token operator">:</span> pv<span class="token punctuation">.</span>pageviews<br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">return</span> data</code></pre>
<p>This sets the <code>fathom</code> data to something like this:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">[</span><br />	<span class="token punctuation">{</span><br />		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Please, Expose your RSS'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/please-expose-your-rss/'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">pageviews</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token punctuation">{</span><br />		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'App Defaults'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/app-defaults/'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">pageviews</span><span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token comment">// and so on</span><br /><span class="token punctuation">]</span></code></pre>
<p>It's worth noting you don't have to map the titles to the data inside the data file, you can do it when rendering popular posts inside a custom filter as <a href="https://coryd.dev/posts/2023/popular-posts-widget-using-eleventy-plausible/">Cory did</a> which would give you access to other post attributes you have. I didn't need any of the additional attributes as I'm just outputting the title and link so I didn't bother but it's worth keeping in mind.</p>
<h3>Including Popular Posts</h3>
<p>I want to include the popular pages in multiple places so an include file makes the most sense. Annoyingly, nunjucks doesn't support passing in variables to an include like liquid does so I need to define the variables before each include:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// all popular posts</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> popular <span class="token operator">=</span> fathom <span class="token operator">|</span> <span class="token function">popularPosts</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> include <span class="token string">'popular_posts.njk'</span> <span class="token operator">%</span><span class="token punctuation">}</span><br /><br /><span class="token comment">// on a post page, exclude that post by passing in the current url</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> pageUrl <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> page<span class="token punctuation">.</span>url <span class="token operator">|</span> stripIndex <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> endset <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> popular <span class="token operator">=</span> fathom <span class="token operator">|</span> <span class="token function">popularPosts</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> pageUrl<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> include <span class="token string">'popular_posts.njk'</span> <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
<p><code>popularPosts</code> is an Eleventy filter I have defined in my config:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br /><br />eleventyConfig<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span><span class="token string">'popularPosts'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">pageviews<span class="token punctuation">,</span> limit<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">return</span> pageviews<br />		<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> pv<span class="token punctuation">.</span>url <span class="token operator">!==</span> url<span class="token punctuation">)</span> <span class="token comment">// filter out the passed in url</span><br />		<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> limit<span class="token punctuation">)</span> <span class="token comment">// limit to the passed-in limit</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /></code></pre>
<p>Then the <code>popular_posts.njk</code> include looks like this:</p>
<pre class="language-html"><code class="language-html">// _includes/popular_posts.njk<br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><br />	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#popular<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span> Popular Posts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><br />	{%- for p in popular %}<br />		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ p.url }}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ p.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><br />	{% endfor %}<br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>Analytics powered by <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://usefathom.com/ref/IXCLSF<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fathom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br /></code></pre>
<p>And the final result (or you can look just below this post and they <em>should</em> be there unless I broke something, or got bored and removed them 🙃). If you don't have analytics yet and want to use Fathom <a href="https://usefathom.com/ref/IXCLSF">my referral link</a> will give you $10 credit - I've been using them for a quite a while and use them on all of my sites.</p>
<p><img alt="Popular Posts screenshot" src="https://rknightuk.s3.amazonaws.com/site/fathom-popular-posts.jpg" /></p>
]]></content:encoded>
<pubDate>2023-11-24T22:42:04.013+00:00</pubDate>
</item>
<item>
<title>Using SVG Sprites</title>
<link>https://rknight.me/blog/using-svg-sprites/</link>
<guid>https://rknight.me/blog/using-svg-sprites/</guid>
<content:encoded><![CDATA[
<p>Recently someone emailed me to ask how I was doing SVGs on my website because they'd looked in the source but it wasn't obvious how it actually rendered the SVG so I figured I would do a proper post about it. Here is their email:</p>
<hr />
<blockquote>
<p>I'm looking to steal more ideas from you and found this while looking through your web site source:</p>
</blockquote>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#rklogo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<blockquote>
<p>But when I inspect the DOM I see it fully expanded:</p>
</blockquote>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#rklogo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 400 400<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rklogo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-bar<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 300 400 L 200 200 L 300 0 L 400 0 L 300 200 L 400 400 L 300 400 Z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-dot<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 0 399 L 75 399 L 75 324 L 0 324 Z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-bar<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 150 400 L 50 200 L 106 89 L 0 89 L 0 0 L 250 0 L 150 200 L 250 400 L 150 400 Z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<hr />
<h3>Other Methods</h3>
<p>Before I get into how to use sprites, there are two arguably easier options to use an SVG on a website: <code>img</code> and directly:</p>
<pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- use the SVG just like any other image --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon.svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br /><br /><span class="token comment">&lt;!-- put the SVG in directly --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 400 400<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 300 400<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<p>Using an <code>img</code> tag is quick but you lose any ability to change the SVG colors, or animate it, with CSS. If you have an SVG that doesn't need any of that, this works fine.</p>
<p>Putting the SVG in the HTML directly is also a perfectly fine way to do it, but it can get messy if you have lots of icons, or you need to reuse the same icon multiple times.</p>
<h3>SVG Sprites</h3>
<p>An SVG sprite is basically a collection of SVGs inside an <code>svg</code> tag that can be used with the syntax I already mentioned at the top of the article. A sprite looks something like this where we have an <code>svg</code> tag and then some SVGs inside that. Note the <code>id</code> attribute - this is used to identify the SVG when we use it elsewhere on the site. For my sites, I usually put the sprite right before the closing <code>body</code> tag.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buymeacoffee<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 24 24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M20.216 6.415l-.132-.666c-.119-.598-.388-1.163-1.001-1.379-.197-.069-.42-.098-.57-.241-.152-.143-.196-.366-.231-.572-.065-.378-.125-.756-.192-1.133-.057-.325-.102-.69-.25-.987-.195-.4-.597-.634-.996-.788a5.723 5.723 0 00-.626-.194c-1-.263-2.05-.36-3.077-.416a25.834 25.834 0 00-3.7.062c-.915.083-1.88.184-2.75.5-.318.116-.646.256-.888.501-.297.302-.393.77-.177 1.146.154.267.415.456.692.58.36.162.737.284 1.123.366 1.075.238 2.189.331 3.287.37 1.218.05 2.437.01 3.65-.118.299-.033.598-.073.896-.119.352-.054.578-.513.474-.834-.124-.383-.457-.531-.834-.473-.466.074-.96.108-1.382.146-1.177.08-2.358.082-3.536.006a22.228 22.228 0 01-1.157-.107c-.086-.01-.18-.025-.258-.036-.243-.036-.484-.08-.724-.13-.111-.027-.111-.185 0-.212h.005c.277-.06.557-.108.838-.147h.002c.131-.009.263-.032.394-.048a25.076 25.076 0 013.426-.12c.674.019 1.347.067 2.017.144l.228.031c.267.04.533.088.798.145.392.085.895.113 1.07.542.055.137.08.288.111.431l.319 1.484a.237.237 0 01-.199.284h-.003c-.037.006-.075.01-.112.015a36.704 36.704 0 01-4.743.295 37.059 37.059 0 01-4.699-.304c-.14-.017-.293-.042-.417-.06-.326-.048-.649-.108-.973-.161-.393-.065-.768-.032-1.123.161-.29.16-.527.404-.675.701-.154.316-.199.66-.267 1-.069.34-.176.707-.135 1.056.087.753.613 1.365 1.37 1.502a39.69 39.69 0 0011.343.376.483.483 0 01.535.53l-.071.697-1.018 9.907c-.041.41-.047.832-.125 1.237-.122.637-.553 1.028-1.182 1.171-.577.131-1.165.2-1.756.205-.656.004-1.31-.025-1.966-.022-.699.004-1.556-.06-2.095-.58-.475-.458-.54-1.174-.605-1.793l-.731-7.013-.322-3.094c-.037-.351-.286-.695-.678-.678-.336.015-.718.3-.678.679l.228 2.185.949 9.112c.147 1.344 1.174 2.068 2.446 2.272.742.12 1.503.144 2.257.156.966.016 1.942.053 2.892-.122 1.408-.258 2.465-1.198 2.616-2.657.34-3.332.683-6.663 1.024-9.995l.215-2.087a.484.484 0 01.39-.426c.402-.078.787-.212 1.074-.518.455-.488.546-1.124.385-1.766zm-1.478.772c-.145.137-.363.201-.578.233-2.416.359-4.866.54-7.308.46-1.748-.06-3.477-.254-5.207-.498-.17-.024-.353-.055-.47-.18-.22-.236-.111-.71-.054-.995.052-.26.152-.609.463-.646.484-.057 1.046.148 1.526.22.577.088 1.156.159 1.737.212 2.48.226 5.002.19 7.472-.14.45-.06.899-.13 1.345-.21.399-.072.84-.206 1.08.206.166.281.188.657.162.974a.544.544 0 01-.169.364zm-6.159 3.9c-.862.37-1.84.788-3.109.788a5.884 5.884 0 01-1.569-.217l.877 9.004c.065.78.717 1.38 1.5 1.38 0 0 1.243.065 1.658.065.447 0 1.786-.065 1.786-.065.783 0 1.434-.6 1.499-1.38l.94-9.95a3.996 3.996 0 00-1.322-.238c-.826 0-1.491.284-2.26.613z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>github<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 24 24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mastodon<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 24 24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M23.268 5.313c-.35-2.578-2.617-4.61-5.304-5.004C17.51.242 15.792 0 11.813 0h-.03c-3.98 0-4.835.242-5.288.309C3.882.692 1.496 2.518.917 5.127.64 6.412.61 7.837.661 9.143c.074 1.874.088 3.745.26 5.611.118 1.24.325 2.47.62 3.68.55 2.237 2.777 4.098 4.96 4.857 2.336.792 4.849.923 7.256.38.265-.061.527-.132.786-.213.585-.184 1.27-.39 1.774-.753a.057.057 0 0 0 .023-.043v-1.809a.052.052 0 0 0-.02-.041.053.053 0 0 0-.046-.01 20.282 20.282 0 0 1-4.709.545c-2.73 0-3.463-1.284-3.674-1.818a5.593 5.593 0 0 1-.319-1.433.053.053 0 0 1 .066-.054c1.517.363 3.072.546 4.632.546.376 0 .75 0 1.125-.01 1.57-.044 3.224-.124 4.768-.422.038-.008.077-.015.11-.024 2.435-.464 4.753-1.92 4.989-5.604.008-.145.03-1.52.03-1.67.002-.512.167-3.63-.024-5.545zm-3.748 9.195h-2.561V8.29c0-1.309-.55-1.976-1.67-1.976-1.23 0-1.846.79-1.846 2.35v3.403h-2.546V8.663c0-1.56-.617-2.35-1.848-2.35-1.112 0-1.668.668-1.67 1.977v6.218H4.822V8.102c0-1.31.337-2.35 1.011-3.12.696-.77 1.608-1.164 2.74-1.164 1.311 0 2.302.5 2.962 1.498l.638 1.06.638-1.06c.66-.999 1.65-1.498 2.96-1.498 1.13 0 2.043.395 2.74 1.164.675.77 1.012 1.81 1.012 3.12z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<p>Because the SVGs have <code>fill=&quot;currentColor</code> set instead of a specific color, we can style them just using <code>color: #e33d94</code> in CSS. Handy. To use one of the SVGs, for example <code>buymeacoffee</code>, we can do the following in the HTML wherever we need it:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#buymeacoffee<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<p>Which will output the icon:</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/svg-icon-coffee.png" /></p>
<p>You <em>can</em> just paste in your SVGs to make a sprite or you can do what I do and use <a href="https://svgsprit.es/">https://svgsprit.es</a>. You can drop in a bunch of SVGs and it will give you back your sprite for putting on your site. A lot of static site generators also have plugins to do this, for example <a href="https://github.com/patrickxchong/eleventy-plugin-svg-sprite">this one for Eleventy</a>.</p>
<p>You can view the SVG sprite for <a href="https://github.com/rknightuk/rknight.me/blob/master/src/_includes/svgs.njk">this site on GitHub here</a>.</p>
]]></content:encoded>
<pubDate>2023-11-21T21:41:14.019+00:00</pubDate>
</item>
<item>
<title>Pokédon: Read Mastodon on a Pokédex</title>
<link>https://rknight.me/blog/pokedon-read-mastodon-on-a-pokedex/</link>
<guid>https://rknight.me/blog/pokedon-read-mastodon-on-a-pokedex/</guid>
<content:encoded><![CDATA[
<p>Today, I attended a casual no-official-name hackathon. Just a bunch of people working on silly projects. It <em>did</em> have a theme though: silly interfaces. I spent the first hour before I arrived thinking of a few ideas until I thought of the perfect thing: a Mastodon client but it's in a Pokédex.</p>
<p><a href="https://pokedon.rknight.me">Try it out here</a>.</p>
<p><img alt="Pokédon interface" src="https://rknightuk.s3.amazonaws.com/site/pokedon.png" /></p>
<p>It's fairly limited but you can:</p>
<ul>
<li>Sign into your instance</li>
<li>View your timeline</li>
<li>Navigate with the keyboard (up/down for newer/older toots)</li>
<li>Listen to a toot with the <a href="https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis">SpeechSynthesis API</a></li>
</ul>
<p>The Mastodon OAuth process is handled by <a href="https://laravel.com/docs/10.x/socialite">Laravel Socialite</a> and <a href="https://github.com/kawax/socialite-mastodon">this Mastodon socialite provider</a> which has excellent examples in the readme enabling me to have this up and running in under an hour. Interacting with the Mastodon API is done with <a href="https://github.com/kawax/laravel-mastodon-api"><code>kawax/laravel-mastodon-api</code></a> by the same author.</p>
<p>The SpeechSynthesis API allows you to do text to speech in the browser. For this project I used the <code>speak</code> method as well as two events of <a href="https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesisUtterance">SpeechSynthesisUtterance</a>: <code>end</code> and <code>boundary</code>:</p>
<pre class="language-js"><code class="language-js"><br /><span class="token comment">// text to speech</span><br /><span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SpeechSynthesisUtterance</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br />msg<span class="token punctuation">.</span>text <span class="token operator">=</span> <span class="token string">'Hello'</span><br />window<span class="token punctuation">.</span>speechSynthesis<span class="token punctuation">.</span><span class="token function">speak</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><br /><br />msg<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'end'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token comment">// do something</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>To get the text to output as it's spoken, I took the text, split it on a blank space, then slice the array and join again and then put that back in the element after each <code>boundary</code> event. This isn't the best way as it removes any HTML like links. I'd be interested in a reliable way to do this while keeping the HTML in tact.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> toot <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'#toot'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> content <span class="token operator">=</span> toot<span class="token punctuation">.</span>innerText<br /><span class="token keyword">const</span> tootWords <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><br /><span class="token keyword">let</span> currentBoundary <span class="token operator">=</span> <span class="token number">0</span><br /><br />msg<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'boundary'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    currentBoundary<span class="token operator">++</span><br />    toot<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;p></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>tootWords<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> currentBoundary<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&lt;/p></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>To make Professor Oak slide up when talking, I used CSS transitions on the height of the element:</p>
<pre class="language-css"><code class="language-css"><span class="token selector">.poak</span> <span class="token punctuation">{</span><br />    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span><br />    <span class="token property">bottom</span><span class="token punctuation">:</span> -5px<span class="token punctuation">;</span><br />    <span class="token property">left</span><span class="token punctuation">:</span> 75px<span class="token punctuation">;</span><br />    <span class="token property">height</span><span class="token punctuation">:</span> 230px<span class="token punctuation">;</span><br />    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span><br />    <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token selector">.poak.close</span> <span class="token punctuation">{</span><br />    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>Things it doesn't do right now:</p>
<ul>
<li><s>Be responsive. I just didn't have time today.</s> Done 2023-11-21</li>
<li>Allow boosting and favouriting.</li>
<li>Allow you to pause audio.</li>
<li>View followers</li>
<li>View your activity</li>
</ul>
<p>I will probably come back to this at some point and add some of these features but as it is I'm pretty happy with this as a day's project.</p>
<p>Credit for the name goes to <a href="https://zoeaubert.me">Zoe</a>.</p>
<p>Fonts used:</p>
<ul>
<li><a href="https://www.dafont.com/pkmn-rbygsc.font">PKMN RBYGSC Font</a> for the text on the screens</li>
<li><a href="https://www.dafont.com/pokemon.font">Pokémon Font</a> for the logo</li>
<li><a href="https://brailleinstitute.org/freefont">Atkinson Hyperlegible Font</a> for the body text</li>
</ul>
]]></content:encoded>
<pubDate>2023-11-18T19:32:15.071+00:00</pubDate>
</item>
<item>
<title>So Many Default Apps</title>
<link>https://rknight.me/blog/so-many-default-apps/</link>
<guid>https://rknight.me/blog/so-many-default-apps/</guid>
<content:encoded><![CDATA[
<p>Two weeks ago when <a href="https://listen.hemisphericviews.com/097">Hemispheric Views 097</a> released and <a href="https://gabz.blog/2023/11/03/my-defaults.html">people</a> <a href="https://rknight.me/app-defaults/">started</a> <a href="https://maique.eu/2023/11/03/defaults.html">putting</a> <a href="https://lmika.org/2023/11/04/defaults.html">up</a> <a href="https://alpine.weblog.lol/2023/11/the-defaults">their</a> <a href="https://canion.blog/2023/11/04/duel-of-the.html">default</a> <a href="https://www.andycarolan.com/appdefaults">app</a> <a href="https://mb.esamecar.net/2023/11/04/app-defaults.html">posts</a> <a href="https://grepjason.sh/">Jason</a> said this in the HV Discord:</p>
<blockquote>
<p>take a hike <code>/now</code>. It's all about <code>/default</code> now</p>
</blockquote>
<p>I decided to quickly throw a site together to collect all these (at the time eight) blog posts in one place: <a href="https://defaults.rknight.me/">App Defaults</a>. I used this old web framework you might have heard of called &quot;artisanal hand-crafted HTML&quot;. It was only seven links, maybe a couple more, manually adding a new link didn't seem like a problem. Until <em>way</em> more than that arrived. At it's peak, there were 35 new posts added to the list. As of this post, there are 151 posts listed.</p>
<table>
<thead>
<tr>
<th><strong>Date</strong></th>
<th><strong>Posts Added</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>4/11</strong></td>
<td>15</td>
</tr>
<tr>
<td><strong>5/11</strong></td>
<td>10</td>
</tr>
<tr>
<td><strong>6/11</strong></td>
<td>5</td>
</tr>
<tr>
<td><strong>7/11</strong></td>
<td>35</td>
</tr>
<tr>
<td><strong>8/11</strong></td>
<td>24</td>
</tr>
<tr>
<td><strong>9/11</strong></td>
<td>14</td>
</tr>
<tr>
<td><strong>10/11</strong></td>
<td>7</td>
</tr>
<tr>
<td><strong>11/11</strong></td>
<td>10</td>
</tr>
<tr>
<td><strong>12/11</strong></td>
<td>11</td>
</tr>
<tr>
<td><strong>13/11</strong></td>
<td>6</td>
</tr>
<tr>
<td><strong>14/11</strong></td>
<td>7</td>
</tr>
<tr>
<td><strong>15/11</strong></td>
<td>5</td>
</tr>
<tr>
<td><strong>16/11</strong></td>
<td>2</td>
</tr>
<tr>
<td>Total</td>
<td>151</td>
</tr>
</tbody>
</table>
<p>Three days in I realised this was likely to take off so I switched the site to <a href="https://11ty.dev">Eleventy</a> and a <code>json</code> data file to keep track of the blog posts. I also added RSS feeds for everyone's sites.</p>
<p>Day four was the busiest for submissions and I had a fun idea to allow anyone to subscribe to <em>all</em> of the websites mentioned. I generated <a href="https://github.com/rknightuk/app-defaults/blob/main/opml.njk">an OPML file</a> from the site data and added a link to that to the site.</p>
<h3>Network Graph</h3>
<p>The latest feature was added today when I was inspired by something said on <a href="https://listen.hemisphericviews.com/098">episode 098</a> but as of this moment I cannot remember what it was that was said. Regardless, I wanted to visualise the links between all the blog posts to get a sense of how the &quot;trend&quot; spread between people so I created <a href="https://defaults.rknight.me/network/">the Network Graph page</a>.</p>
<p>To achieve this I used <a href="https://github.com/extractus/article-extractor">@extractus/article-extractor</a> to extract the article contents from every post, then I used <a href="https://github.com/WebReflection/linkedom">linkedom</a> to get all the links contained in each article, and then I mapped each of those links to the post they were linking to. Finally I ran a script to map that data to the format required for <a href="https://visjs.github.io/vis-network/docs/network/index.html"><code>network</code></a> to render the graph. This is the same graph used on <a href="https://home.omg.lol/referred-by/robb">omg.lol</a> to show the referral data and thankfully I could look at Adam's implementation to speed things up.</p>
<p>A few stats to finish:</p>
<ul>
<li>67 of the sites were added via a pull request on GitHub</li>
<li>The most popular TLD is, unsurprisingly, <code>.com</code> (48 posts). <code>.blog</code>, <code>.me</code>, and <code>.net</code> were tied for second with 13 posts each.</li>
<li>144 of the 151 sites have RSS feeds 🙌</li>
</ul>
]]></content:encoded>
<pubDate>2023-11-16T22:16:38.787+00:00</pubDate>
</item>
<item>
<title>Using the Johnny Decimal System</title>
<link>https://rknight.me/blog/using-the-johnny-decimal-system/</link>
<guid>https://rknight.me/blog/using-the-johnny-decimal-system/</guid>
<content:encoded><![CDATA[
<p>In <a href="https://listen.hemisphericviews.com/025">episode 028 of Hemispheric Views</a> <a href="https://canion.blog">Andrew</a> mentioned the <a href="https://johnnydecimal.com">Johnny Decimal (JD) system</a> for organising files. I made a note of it as a thing to look into. Then, like a lot of things, I never went back to investigate. Then in <a href="https://listen.hemisphericviews.com/096">episode 096</a> they had Mr Johnny Decimal himself on to talk about the system. This was the kick I needed to properly check it out. I also spoke with <a href="https://mastodon.macstories.net/@johnvoorhees">John</a> about the JD system on the two most recent episodes of Ruminate if audio is more your thing.</p>
<ul>
<li><a href="https://ruminatepodcast.com/172/">172 - Big Knowledge Boys</a></li>
<li><a href="https://ruminatepodcast.com/173/">173 - Should This Be a Blog Post?</a></li>
</ul>
<p>Before we get into it, the JD system has concepts that are worth knowing about for any of this to make sense:</p>
<ul>
<li>Areas - these are the top level of the folder system, e.g. <code>10-19 Family</code></li>
<li>Categories - These are the folders <em>inside</em> areas, e.g. <code>10 Finance</code></li>
<li>IDs or Items - These are the actual files that exist inside of areas, e.g. <code>10.01 Insurance</code></li>
</ul>
<h3>Attempt One</h3>
<p>I skimmed through the <a href="https://johnnydecimal.com">beautiful website</a> to get a sense of what the &quot;rules&quot; are for the system and starting coming up with my categories. Note I use the word &quot;skimmed&quot; there because I got this <em>very</em> wrong; my categories were too narrow and my areas were too broad to make any sense. Johnny was kind enough <a href="https://johnnydecimal.com/20-29-communication/23-forums-and-chat/23.02-discord/">in the JD Discord</a> to give me some feedback after I clearly rushed though and didn't pay enough attention to the website. I'll just go over two of them here:</p>
<details>
	00-09 System
	<pre>00-09 System
│ 00 Inbox
│ 01 Exported Data
│ ├── 01.01 Twitter
│ ├── 01.02 Tumblr
│ ├── 01.03 Instagram
│ ├── 01.04 Mastodon
│ ├── 01.05 Reddit
│ ├── 01.06 Project Databases
│ ├── 01.07 Other
│ 02 Education Archive
│ ├── 02.01 College
│ ├── 02.02 Uni
│ ├── 02.03 School
│ 03 Sites Archive
│ ├── 03.01 Just Delete Me (JDM)
│ ├── 03.02 Wordpress Themes
│ ├── 03.03 Personal
│ ├── 03.04 Freelance
│ ├── 03.05 DevsDoDesign
│ 09 Archive
│ ├── 09.01 Archive
│ ├── 09.02 Camera Uploads
	</pre>
</details>
<blockquote>
<p>I think all archives can just become 09 archive. it doesn’t feel like you have anywhere near 99 things you’ll ever put in there? fill ‘er up baby</p>
</blockquote>
<p>In this case, I was trying to organise too hard. As Johnny pointed out, for an archive it really doesn't matter how much stuff is in there. Fill 'er up baby indeed.</p>
<details>
	40-49 Games
	<pre>40-49 Games
│ 40 Screenshots
│ 41 Manuals
│ 42 ROMs
</pre>
</details>
<blockquote>
<p>that’s a nice clear area, perhaps it doesn’t need its own area and could just be a category elsewhere though? do you see it filling up with time, or is this it? if this is it it’s a ‘waste’ of an area as it is</p>
</blockquote>
<blockquote>
<p>I mean you have 10 to use, it’s not like it’s a crime…I’ve just learned over the years that compression tends to better results</p>
</blockquote>
<p>This category was far too specific. This is 10 years worth of stuff, it's unlikely I'm going to suddenly have a huge influx in new areas of things for this.</p>
<p>Johnny also offered some other advice about my other categories but the general gist was I hadn't quite <em>got it</em>. So I dug into the book (which Johnny kindly sent me).</p>
<h3>The Workbook</h3>
<p>The JD Workbook is a 110-page ebook designed to &quot;<em>guide you through the entire process of setting up your own Johnny.Decimal system</em>&quot;. There are also videos at the end of each section which go over everything in that chapter. I found these useful particularly seeing how Johnny does his index in <a href="https://bear.app">Bear</a>.</p>
<p>Johnny gave me this advice before starting the workbook, in reference to his previous comments:</p>
<blockquote>
<p>I’d really like to see the results after a workbook-doin’. When you do that, try to forget all of this.</p>
</blockquote>
<p>I read the book twice, once just reading and the second time while taking notes about what I thought my areas and categories should look like. I started by creating a new directory in my iCloud Drive, created folders, then used <a href="http://mama.indstate.edu/users/ice/tree/">tree</a> to see the folder structure in plain text:</p>
<pre class="language-bash"><code class="language-bash">tree <span class="token parameter variable">-L</span> <span class="token number">3</span> <span class="token parameter variable">-d</span><br /><span class="token comment"># -L 3 for how many levels deep</span><br /><span class="token comment"># -d for directories only</span><br /><br />├── 00-09 System<br />│   ├── 00 Index<br />│   │   └── 00.01 Index Files<br />│   ├── 01 Exported Data<br /><span class="token comment"># ...and so on</span></code></pre>
<p>I even printed out the worksheets from the back of the book as suggested by Johnny. I found the process really helpful to actually write down with pen and paper rather than into Obsidian or some other note taking app.</p>
<h3>The Index</h3>
<p>Before reading the book I didn't really understand the need for <a href="https://johnnydecimal.com/10-19-concepts/11-core/11.05-the-index/">the index</a>. I get it now. The index is the source of truth for the location of items <strong>and</strong> any additional notes or tasks related to the item. The index is a list of all of your JD IDs stored in some kind of note app, in my case Obsidian. After watching the video on the index, I realised that the part that would be useful to me was adding notes <em>about</em> the files in my IDs. So each ID has a corresponding note. For example, I have a folder called <code>30-39 Resources/30 Fonts/30.02 Media Fonts</code> and in my index Obsidian vault I have a note called <code>30.02 Media Fonts.md</code>. This note contains the following link to <a href="https://www.fontspace.com/london-tube-font-f2717">the source</a> of the <code>London Tube.otf</code> font:</p>
<pre class="language-txt"><code class="language-txt">London Tube Font: https://www.fontspace.com/london-tube-font-f2717</code></pre>
<p>I have found being to add additional notes about a certain items really helpful. In the past I would have the files for something like applying for a mortgage in Finder and then a separate note in Obsidian with things like dates and expected timelines but those two things didn't know anything about each other. Using the index links those things together: if I need to find out information about applying for the mortgage, I open up <code>11.04 Mortgage.md</code> and can see any notes and tasks that need to be done. And based on the ID I know that it it's stored in <code>10-19 Family/11 Finance/11.04 Mortgage</code>. The index is also the place t start when a new project or file doesn't have a home.</p>
<p>As a slight aside and a little outside the spirit of the deliberate nature of the JD system, I didn't actually create the notes in Obsidian until I was mostly done with the folders and files themselves. I built this little script to make the files for me instead:</p>
<pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><br /><br /><span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token string">"/path/to/obsidian/vault"</span><br /><br /><span class="token comment"># put a list of folders names here</span><br /><span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token punctuation">(</span><br /><span class="token string">"50.01 Audio Books"</span><br /><span class="token string">"50.02 Comics"</span><br /><span class="token string">"50.03 Ebooks"</span><br /><span class="token punctuation">)</span><br /><br /><span class="token keyword">for</span> <span class="token for-or-select variable">f</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">${files<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>"</span><span class="token punctuation">;</span> <span class="token keyword">do</span><br />    <span class="token function">touch</span> <span class="token string">"<span class="token variable">$output</span>/<span class="token variable">$f</span>.md"</span><br /><span class="token keyword">done</span></code></pre>
<p>After reading the workbook for the second time and thinking some more about my structure, this is where it's at as of today:</p>
<details>
	JD System Structure
	<pre>00-09 System
| 00 Index
│ ├── 00.01 Index Files
| 01 Exported Data
│ ├── 01.01 Twitter
│ ├── 01.02 Tumblr
│ ├── 01.03 Instagram
│ ├── 01.04 Mastodon
│ ├── 01.05 Reddit
│ ├── 01.06 Project Databases
│ ├── 01.07 Other
│ ├── 01.08 TwitPic
| 09 Archive
│ ├── 09.01 Archive
│ ├── 09.02 Camera Uploads
│ ├── 09.03 DevsDoDesign
│ ├── 09.04 Freelance
│ ├── 09.05 Just Delete Me (JDM)
│ ├── 09.06 Personal Sites
│ ├── 09.07 Wordpress Themes
│ ├── 09.08 College
│ ├── 09.09 Uni
│ ├── 09.10 School
│ ├── 09.11 Talks
│ ├── 09.12 Artwork
10-19 Home and Family
| 10 Products
│ ├── 10.01 Washing Machine
│ ├── 10.02 Dishwasher
│ ├── 10.03 Freezer
│ ├── 10.04 Oven
│ ├── 10.05 Microwave
│ ├── 10.06 TV
│ ├── 10.07 Electronics
| 11 Finance
│ ├── 11.01 Mortgage
│ ├── 11.02 Insurance
│ ├── 11.03 Credit Cards
│ ├── 11.04 Loans
│ ├── 11.05 Monzo Pots
| 12 Building Work
│ ├── 12.01 Floorplans and Layouts
│ ├── 12.02 Photos
│ ├── 12.03 Kitchen
│ ├── 12.04 Utility Room
│ ├── 12.05 Bathroom
| 13 Purchases
│ ├── 13.01 123 House Street
│ ├── 13.02 456 House Road
| 14 Legal
│ ├── 14.01 Work
│ ├── 14.02 Deaths
│ ├── 14.03 Deed Poll
│ ├── 14.04 Payslips
│ ├── 14.09 [redacted]
20-29 Podcasts
| 20 Ruminate
│ ├── 20.00 Recordings
│ ├── 20.01 Episodes
│ ├── 20.02 Artwork
│ ├── 20.03 Sounds
│ ├── 20.04 Shownotes
│ ├── 20.05 Episode Art
| 21 We Got Family
│ ├── 21.00 Recordings
│ ├── 21.01 Episodes
│ ├── 21.02 Artwork
│ ├── 21.03 Sounds
│ ├── 21.04 Shownotes
│ ├── 21.05 Episode Art
| 22 Follow Out
│ ├── 22.01 Appearances
│ ├── 22.02 Mentions
│ ├── 22.03 Fan Art
| 23 Show Archives
│ ├── 23.01 The Ricky Gervais Show
│ ├── 23.02 Bionic and Bonanza
│ ├── 23.03 Cooking With Brett and Myke
│ ├── 23.03 Futurama
│ ├── 23.04 Hello Internet
30-39 Resources
| 30 Fonts
│ ├── 30.01 Coding
│ ├── 30.02 Media
│ ├── 30.03 Symbols
│ ├── 30.04 Others
| 31 Icons
│ ├── 31.01 General Use
│ ├── 31.02 Niche
| 32 Music and Sounds
│ ├── 32.01 Clips
│ ├── 32.02 Royalty Free Music
│ ├── 32.03 Blahaj
| 33 Books
│ ├── 33.01 Audio Books
│ ├── 33.02 Comics
│ ├── 33.03 Dev
│ ├── 33.04 eBooks
│ ├── 33.05 Lego
40-49 Hobbies
| 40 Games
│ ├── 40.01 Screenshots
│ ├── 40.02 Manuals
│ ├── 40.03 ROMs
| 41 Lego
│ ├── 41.01 Manuals
│ ├── 41.02 Photos
│ ├── 41.03 MOC
│ ├── 41.04 Comic Con Exclusives
| 42 Raspberry Pi
│ ├── 42.01 PiSight
│ ├── 42.02 Now Playing Pi
| 43 Fundraising
│ ├── 43.01 St Jude 2023
| 44 Streaming
│ ├── 44.01 Backgrounds
50-59 Media
| 50 Tattoo Ideas
│ ├── 50.01 Inbox
│ ├── 50.02 Arm Tattoo
│ ├── 50.03 SleeveStar
│ ├── 50.04 CSS HTML Tattoo
| 51 Memes
│ ├── 51.01 Mine
│ ├── 51.02 Gifs
| 52 Profile
│ ├── 52.01 Avatars
│ ├── 52.02 Headers
│ ├── 52.03 Memoji
│ ├── 52.04 RK Logo
| 53 Wallpapers
│ ├── 53.01 Desktop
│ ├── 53.02 Phone
│ ├── 53.03 iPad
| 54 Media Screenshots
│ ├── 54.01 Comics
│ ├── 54.02 TV
│ ├── 54.03 Back to the Future Posters
│ ├── 54.04 Cornetto Trilogy Posters
| 55 Music
│ ├── 55.01 Album Covers
│ ├── 55.02 Linkin Park Demos
│ ├── 55.03 Bowling for Soup Demos
│ ├── 55.04 Albums
| 56 Photos and Videos
│ ├── 56.00 Camera Uploads
│ ├── 56.01 By Year
│ ├── 56.02 [redacted]
│ ├── 56.03 Paper Drawings
│ ├── 56.04 Various
│ ├── 56.06 Personal Videos
│ ├── 56.07 YouTube Videos
│ ├── 56.08 Wedding Photo Booth
	</pre>
</details>
<h3>Using JD Elsewhere</h3>
<p>One of the things I found really useful was the idea that by using numbers for sorting folders instead of names, <em>things don't move</em>. If I renamed <code>30.02 Garden Patio</code> to <code>30.02 Garden Decking</code> the folder <em>stays in the same place</em>. This seems obvious in hindsight but I found this so useful I incorporated it into my main Obsidian vault. Previously I had three folders called <code>Ideas</code>, <code>Posts</code>, and <code>Projects</code> as well as some more time-specific ones. Now, these are <code>00.01 Ideas</code>, <code>00.02 Posts</code>, and <code>00.03 Projects</code>. Another very obvious-in-hindsight idea came from Johnny's index video: sorting files by last modified instead of by name. I've found this to be way easier to be able to jump in and update a note quickly when I have an idea.</p>
<h3>Conclusion</h3>
<p>I think systems like this tend to either work for a person or don't work at all, there's no middle ground. That's not the case for the JD system. I believe even if it doesn't work as a whole for someone (like John) there are loads of good ideas in here that can be applied in a lot of different cases. It <em>has</em> worked very well for me and I've been able to find files I'm looking for so much quicker than I could before.</p>
<p>Check out the <a href="https://johnnydecimal.com">Johnny Decimal website</a> to read more and if you like it, <a href="https://johnnydecimal.com/10-19-concepts/14-build-your-system/14.02-the-decimal-workbook/">check out the workbook</a>.</p>
]]></content:encoded>
<pubDate>2023-11-15T18:09:17.596+00:00</pubDate>
</item>
<item>
<title>Please, Expose your RSS</title>
<link>https://rknight.me/blog/please-expose-your-rss/</link>
<guid>https://rknight.me/blog/please-expose-your-rss/</guid>
<content:encoded><![CDATA[
<p>Earlier this week I had a need to manually find a bunch of people's RSS feed links. It seemed simple enough: go to their website and look for an RSS/Subscribe link but I was surprised to find that a lot of people don't have a link anywhere to their feed.</p>
<p>Even if people only ever add your website into their feed reader and let the app find the RSS feed (see below for more info on this), showing an RSS link reminds people that RSS exists, a win for the open web.</p>
<p>My second step when finding a link failed was to use this handy JS snippet from my <a href="https://podduration.rknight.me">Podcast Duration project</a>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'link'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">l</span> <span class="token operator">=></span> l<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'application/rss+xml'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?.</span>href</code></pre>
<p>This looks for a <code>&lt;link&gt;</code> tag on the website that has a type of <code>application/rss+xml</code>. This is called RSS auto-discovery and is a standard way to expose RSS feeds to help <a href="https://www.rssboard.org/rss-autodiscovery">browsers and other software to automatically find a site's RSS feed</a>.</p>
<p>Like the standard link, a lot of sites were also missing this. This is (at least as a first step) what feed reeders like <a href="https://netnewswire.com">NetNewsWire</a> will use to automatically find a feed when you paste in a URL. If you have an RSS feed, you should have the following in the <code>head</code> of your website:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/rss+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Website<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/feed.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br /><br /><span class="token comment">&lt;!-- use application/atom+xml for an atom feed --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/atom+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Website<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/atom.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre>
<p>If you have multiple feeds, you can have more than one <code>link</code> tag that links to those feeds as well. For example, say you have a <a href="https://www.jsonfeed.org">JSON feed</a> and a podcast feed you want to link to:</p>
<pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- Website RSS feed --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/rss+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Website<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/feed.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br /><br /><span class="token comment">&lt;!-- Website JSON feed --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/json<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Website but JSON<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/feed.json<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br /><br /><span class="token comment">&lt;!-- Podcast RSS feed --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/rss+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Podcast<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/podcast.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre>
<p>Please, expose your RSS.</p>
<p>Update 2023-12-09 via <a href="https://bne.social/@james/111545470669286673">James</a>:</p>
<blockquote>
<p>if you're going to add an RSS button, please ensure it looks like an RSS button and is in RSS orange</p>
</blockquote>
<p>This is an excellent idea and I have done so here.</p>
]]></content:encoded>
<pubDate>2023-11-06T13:11:20.440+00:00</pubDate>
</item>
<item>
<title>App Defaults</title>
<link>https://rknight.me/blog/app-defaults/</link>
<guid>https://rknight.me/blog/app-defaults/</guid>
<content:encoded><![CDATA[
<p>Inspired by <a href="https://listen.hemisphericviews.com/097">Hemispheric Views 097 - Duel of the Defaults!</a> and this <a href="https://gabz.blog/2023/11/03/my-defaults.html">post by Gabz</a> herein lies all the apps I use in the various categories as written by Andrew:</p>
<ul>
<li><strong>📨 Mail Client</strong>
<ul>
<li>Mail.app</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>📮 Mail Server</strong>
<ul>
<li>iCloud with custom domain</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>📝 Notes</strong>
<ul>
<li>Notes.app, Obsidian</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>✅ To-Do</strong>
<ul>
<li>Reminders</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>📷 iPhone Photo Shooting</strong>
<ul>
<li>iOS Camera</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>🟦 Photo Management</strong>
<ul>
<li>Photos.app</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>📆 Calendar</strong>
<ul>
<li>Fantastical</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>📁 Cloud File Storage</strong>
<ul>
<li>iCloud Drive</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>📖 RSS</strong>
<ul>
<li>NetNewsWire</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>🙍🏻‍♂️ Contacts</strong>
<ul>
<li>Contacts.app</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>🌐 Browser</strong>
<ul>
<li>Safari, Chrome for development/work</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>💬 Chat</strong>
<ul>
<li>Discord</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>🔖 Bookmarks</strong>
<ul>
<li><a href="https://intersect.rknight.me">The Intersect</a></li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>📑 Read It Later</strong>
<ul>
<li>Omnivore</li>
<li>Score: 3</li>
</ul>
</li>
<li><strong>📜 Word Processing</strong>
<ul>
<li>Sublime Text</li>
<li>Score: 3</li>
</ul>
</li>
<li><strong>📈 Spreadsheets</strong>
<ul>
<li>Numbers</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>📊 Presentations</strong>
<ul>
<li>Keynote</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>🛒 Shopping Lists</strong>
<ul>
<li>Reminders</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>🍴 Meal Planning</strong>
<ul>
<li>n/a</li>
<li>Score: 0</li>
</ul>
</li>
<li><strong>💰 Budgeting and Personal Finance</strong>
<ul>
<li>A spreadsheet</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>📰 News</strong>
<ul>
<li>Mastodon, BBC News</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>🎵 Music</strong>
<ul>
<li>Apple Music</li>
<li>Score: 1</li>
</ul>
</li>
<li><strong>🎤 Podcasts</strong>
<ul>
<li>Overcast</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>🔐 Password Management</strong>
<ul>
<li>1Password</li>
<li>Score: 2</li>
</ul>
</li>
<li><strong>🔔 <a href="https://en.wikipedia.org/wiki/Hard_Quiz">Hard Quiz</a> Special Topic Interlude (Something for  Which I’d Be the Subject Matter Expert in the Room)</strong>
<ul>
<li>Back to the Future</li>
</ul>
</li>
</ul>
<p>Final score: 37</p>
<p><a href="https://defaults.rknight.me/">Read more app default posts</a></p>
]]></content:encoded>
<pubDate>2023-11-03T17:31:10.949+00:00</pubDate>
</item>
<item>
<title>St Jude 2023</title>
<link>https://rknight.me/blog/st-jude-2023-final-numbers/</link>
<guid>https://rknight.me/blog/st-jude-2023-final-numbers/</guid>
<content:encoded><![CDATA[
<p>It's September 37th and the <a href="https://512pixels.net/2023/10/775375-54/">Relay for St Jude campaign</a> has closed. They raised $774,262.53, putting Relay at $2.98m lifetime raised! Our St Jude sub-campaign raised $12,590.57 and sent out 106 sticker packs to 15 different countries. This is a far cry from <a href="https://rknight.me/st-jude-2023/">my initial goal of $250</a>.</p>
<p>I want to thank everyone who donated but I want to call out some people specifically as well:</p>
<ul>
<li><a href="https://neatnik.net">Adam</a> for donating half of <a href="https://omglol.news/2023/10/01/st-jude-fundraiser-report">omg.lol's profits</a> for the entire month - <a href="https://prami.paste.lol/2023-st-jude-fundraiser">$3309</a>! If you want to thank him, you should <a href="https://home.omg.lol/referred-by/robb">sign up for omg.lol</a> - it's a fun community</li>
<li><a href="https://512pixels.net">Stephen</a> for buying the <a href="https://coinme.dad">Coin Daddy domain</a></li>
<li><a href="https://www.klmatthews.com">Kate</a> for always finding bugs the second I pushed a new change. Also for the idea for <a href="https://coinme.dad">Coin Me, Daddy</a></li>
<li><a href="https://tildy.dev">Ben</a> for helping with the API so I could build all the stupid websites for the campaign (see below)</li>
<li><a href="https://www.youtube.com/c/IanOfEarth">Ian</a>, <a href="http://gdovin.net">Mike</a> and all the other dollar daddies</li>
<li><a href="https://zmknox.com">Zach</a> for creating the Donation Daddy logo</li>
</ul>
<p><img alt="Donation Daddy logo" src="https://rknightuk.s3.amazonaws.com/site/donation-daddy-logo.png" /></p>
<p>I also got myself a couple of nice rewards. <a href="http://jdburch.com">JD</a> mowed my name into a lawn and I will be getting a Jony Cube sticker from <a href="https://www.peerreviewed.io">Matt</a>. We hit our first milestone which meant I had to watch <a href="https://www.imdb.com/title/tt2933474/">Superfast!</a> - you can listen to the <a href="https://wegot.family/5/">episode of We Got Family about it here</a>.</p>
<p>The campaign this year led me to make four different websites to help with donations:</p>
<ul>
<li><a href="https://septembed.rknight.me">Septembed</a> - A script for embedding a campaign on your website. This was the start of the japes. Very proud of the name as well.</li>
<li><a href="https://deskmat.help">Desk Mat Help</a> - The precursor to Coin Me, Daddy this site lists all the campaigns that were close to $250 to get a desk mat</li>
<li><a href="https://coinme.dad">Coin Me, Daddy</a> - The most popular of the sites, this one was an idea from Kate. It shows all campaigns that have yet to raise one dollar to get a coin. There are <em>so many</em> donations with the title &quot;Dollar Daddy&quot;</li>
<li><a href="https://donationtreats.rknight.me">Donation Treats</a> - Lists all the rewards you can get for all the available campaigns</li>
</ul>
<p>Initially, these were all separate websites with <em>very</em> similar code. Towards the end of the month I merged these into one single codebase. This should make it a lot easier next year when I'm sure I'll think of some other site to do.</p>
]]></content:encoded>
<pubDate>2023-10-07T06:19:47.956+00:00</pubDate>
</item>
<item>
<title>Add Full Screen Artwork to Your Podcast</title>
<link>https://rknight.me/blog/add-full-screen-artwork-to-your-podcast/</link>
<guid>https://rknight.me/blog/add-full-screen-artwork-to-your-podcast/</guid>
<content:encoded><![CDATA[
<p>tl;dr: You can't set full screen artwork without being featured by Apple.</p>
<p>In iOS17, the Apple Podcasts app has (for some shows) fancy new full screen artwork but I noticed that <a href="https://ruminatepodcast.com">my</a> <a href="https://wegot.family">shows</a> don't.</p>
<p><img alt="We Got Family artwork vs Connected in Apple Podcasts app" src="https://rknightuk.s3.amazonaws.com/site/full-screen-artwork.png" /></p>
<p>After some hunting around, some <a href="https://social.lol/@robb/111105291859489382">tooting</a>, and messaging <a href="https://mastodon.macstories.net/@johnvoorhees">John</a>, I came across <a href="https://podcasters.apple.com/support/866-promotional-artwork">this page</a> that outlines the full screen artwork. It explains the sizes for hero images, channel covers, and full page show art. It even has photoshop templates. My podcasts are unlikely to be featured but I figured it was worth a shot.</p>
<p>Once I made the art and hit the submit button, it turns out you can <em>only</em> submit hero images and if Apple then deems my show worthy enough for a feature will they then request the full page art.</p>
<p>This feels really shitty that you have to get featured just to get nicer artwork in the Apple Podcasts app which is far and away the most popular podcast app.</p>
]]></content:encoded>
<pubDate>2023-09-22T12:18:12.741+00:00</pubDate>
</item>
<item>
<title>I'm (Not) Building a Podcast Host</title>
<link>https://rknight.me/blog/im-not-building-a-podcast-host/</link>
<guid>https://rknight.me/blog/im-not-building-a-podcast-host/</guid>
<content:encoded><![CDATA[
<p>Late last year I moved <a href="https://ruminatepodcast.com">Ruminate</a> from Simplecast to it's <a href="https://rknight.me/bulding-podcast-site-eleventy/">own site built with Eleventy</a> for a two reasons:</p>
<ol>
<li>I wanted full control over how the site looked</li>
<li>Simplecast is $15 a month and that's a lot for a show that makes no money</li>
</ol>
<p>Since then, I've successfully used that same Eleventy site to build the site for <a href="https://wegot.family">We Got Family</a>, my Fast and Furious podcast. Having both my podcasts hosted myself has been great. I can automate uploads, extract the title and description from the file instead of having to copy and paste it into a CMS, and it costs me <em>basically</em> nothing.</p>
<p>One thing I am missing since I moved away from Simplecast is listener/download numbers. This is, in my opinion, the core selling feature of a dedicated podcast host. Each host does the calculations differently (and they all keep their methods secret) but they do all seem to at least attempt to follow this <em>thrilling</em> document titled <a href="https://iabtechlab.com/wp-content/uploads/2021/03/PodcastMeasurement_v2.1.pdf">&quot;Podcast Measurement Technical Guidelines Version 2.1&quot;</a>. There's some boring stuff in there about the poor advertisers who can't get the data they want and some talk about a new, yet-to-happen reporting feature from some apps but the part I care about is counting listens. The hard part of calculating downloads is parsing server logs: if someone listens in a browser, logs will show multiple partial downloads for that file so that should be counted as one listen.</p>
<p>Thankfully, <a href="https://docs.bunny.net/docs/cdn-log-format">Bunny has a very nice log format</a> that is easy enough to parse. A quick-and-dirty solution me and <a href="https://neatnik.net">Adam</a> came up with for counting a single listen is if the IP address, user agent, and file are the same within the same 24 hour period, count that as one listen. This isn't perfect by any means, but will be good enough for what I want.</p>
<p>This attempt at generating listen stats was partially research into an idea I've had running around in my head for at least a year:</p>
<blockquote>
<p>Can you build a podcast host for smaller podcasts like mine for, say, $20 a year?</p>
</blockquote>
<p>The accounts, uploading files, hosting websites, is all easy enough but when you consider download costs the answer, after going over some calculations with <a href="https://zoeaubert.me">Zoe</a>, is no. The file egress costs (the cost of downloading the files from a CDN) is too high even for a small show.</p>
<p>Update: I got the calculations wrong here for Bunny's pricing so it <em>might</em> still be viable as a product although the margins are still tight.</p>
<p>As an example, if a show has a 30mb episode and that show gets 500 downloads, that's ~15gb of egress. On <a href="https://bunny.net">BunnyCDN</a> that would cost somewhere in the region of $1.50. AWS S3 is about the same. Assuming one episode a month (unlikely), that's pretty close to $20 a year.</p>
<p>These calculations don't even take into account older episodes getting more downloads over time (they definitely will) or the show growing over time (it likely will). What about if someone decides to <a href="https://rknight.me/three-years-of-hemispheric-views-feedback/">listen to all 74 episodes of a show at once</a> leading to 2-3gb of downloads in one go?</p>
<p>There is an argument to be made that variable pricing might work: pay $X per year then monthly pay whatever the CDN cost for your show is but this feels counter-intuitive to building a simple podcast host. I could charge a similar amount as some of the existing services but then I'm not bringing anything new to the table.</p>
<p>Ultimately every solution to the cost problem goes against my initial idea. Instead, I'm going to focus some time on making my Eleventy podcast site more usable for other people to deploy their own podcasts.</p>
]]></content:encoded>
<pubDate>2023-09-20T11:32:33.057+00:00</pubDate>
</item>
<item>
<title>Fundraising for St Jude</title>
<link>https://rknight.me/blog/st-jude-2023/</link>
<guid>https://rknight.me/blog/st-jude-2023/</guid>
<content:encoded><![CDATA[
<p>This year is <a href="https://relay.experience.stjude.org">Relay FM's 5th annual fundraiser</a> for <a href="https://www.stjude.org">St Jude Children's Research Hospital</a>. If you don't know St Jude:</p>
<blockquote>
<p>The mission of St. Jude Children’s Research Hospital is to advance cures, and means of prevention, for pediatric catastrophic diseases through research and treatment. Consistent with the vision of our founder Danny Thomas, no child is denied treatment based on race, religion or a family’s ability to pay.</p>
</blockquote>
<p>Their goal this year is to hit $2.5 <em>million</em> lifetime donations. As part of that individuals, like me, can set up their own campaign which is <a href="https://tiltify.com/@rknightuk/stjude2023">exactly what I've done</a>.</p>
<p>I set a milestone of $150 at which point I will watch all 99 minutes of <a href="https://www.imdb.com/title/tt2933474/">Superfast!</a>, a Fast and Furious parody movie which I definitely do not want to watch in any way. That milestone has been hit already so keep an eye out on the <a href="https://wegot.family">We Got Family podcast</a> feed for an episode about it.</p>
<p>My original goal was $250 but <a href="https://adam.omg.lol">Adam of omg.lol</a> kindly donated the entire amount in one go. Then he went one step further and commited to donating 50% of profits from omg.lol for the <em>entire month</em>. So if you're an omg.lol member (or you <a href="https://home.omg.lol/referred-by/robb">sign up</a> for a new account) and you renew your address you're donating to the campaign.</p>
<p>We also have two omg.lol codes up for grabs: anyone who donates $10 or more will be entered to win a five year code and whoever donates the most will win an ultra-rare lifetime code.</p>
<p>I have moved the goal to <s>$3000</s> <s>$5000</s> $10000 and as generous as Adam is being, I don't want it to all come from him so if you can donate anything, even a dollar, it all helps towards an amazing cause.</p>
<p><a href="https://tiltify.com/@rknightuk/stjude2023">Donate to the campaign here</a></p>
<p><a href="https://rknight.me/st-jude-2023-final-numbers/">Update post</a></p>
]]></content:encoded>
<pubDate>2023-08-28T15:28:07.162+00:00</pubDate>
</item>
<item>
<title>It’s Better in the App and Other Lies</title>
<link>https://rknight.me/blog/its-better-in-the-app-and-other-lies/</link>
<guid>https://rknight.me/blog/its-better-in-the-app-and-other-lies/</guid>
<content:encoded><![CDATA[
<p>I've seen a few conversations on Mastodon the last week or so about why we have so many apps rather than decent mobile websites and why we're shown &quot;things are better in the app!&quot; banners (and who's fault is that website?!). I've been thinking about this on and off for a <a href="https://social.lol/@robb/110588163612894889">long time</a>. I don't like that Apple hold all the keys to distrubting an app and I'm a big fan of the open web. I do beleive there are good reasons for native apps in some cases (specifically native features not available in browsers) but not <em>everything</em> needs an app. I think there are three different reasons this is happening so much.</p>
<h3>Gobbling data</h3>
<p>This is the obvious one. It's a lot easier to collect data from a native app than it is from a website. On an app I have very little control over what requests are made, blocking ads, that kind of thing. So of course companies want to use apps to collect this data.</p>
<h3>Making money</h3>
<p>This one applies more to indie developers than it does to big companies but I'm certain people are more willing to pay for an app than access to a website. As an example, <a href="https://www.caseyliss.com/2023/8/7/callsheet">Callsheet</a> <em>could</em> be a website but would people pay $9 a year for a website? I don't think they would.</p>
<h3>People want apps</h3>
<p>This last one is at least a little bit <a href="https://www.youtube.com/watch?v=szrsfeyLzyg">on Apple with their &quot;there's an app for that&quot; ad</a>. A few years ago I ordered a washing machine from <a href="https://ao.com">AO</a> and if I was on mobile the only way to track my order was to download their brand new tracking app. I contacted them about this and I was told they made the app because lots of customers were asking for it.</p>
<p>Just think about that for a second: people want to download an app just to track deliveries of their white goods, something which most people order at most once a year. This is bonkers to me. They did eventually fix the deep link so you could track from the website on mobile.</p>
<p>In some instances it's become impossible to do certain things on mobile because the app doesn't support the feature (for example, buying ebooks on Amazon) but I never get redirected back out</p>
]]></content:encoded>
<pubDate>2023-08-22T10:00:00.608+00:00</pubDate>
</item>
<item>
<title>Just Delete Me: Ten Years Later</title>
<link>https://rknight.me/blog/just-delete-me-ten-years-later/</link>
<guid>https://rknight.me/blog/just-delete-me-ten-years-later/</guid>
<content:encoded><![CDATA[
<p>Ten years ago <a href="https://www.edpoole.me/">Ed Poole</a> and I <a href="https://hellsite.rknight.me/369368988762906626/">launched Just Delete Me</a>. Just Delete Me, as I <a href="https://rknight.me/just-delete-me/">described it at the time</a>, was:</p>
<blockquote>
<p>a directory of urls to delete your account from web services</p>
</blockquote>
<p>I wrote three blog posts in first ten days which you can read here:</p>
<ul>
<li><a href="https://rknight.me/just-delete-me/">Just Delete Me</a></li>
<li><a href="https://rknight.me/24-hours-of-just-delete-me/">24 Hours of Just Delete Me</a></li>
<li><a href="https://rknight.me/just-delete-me-one-million-page-views/">JustDelete.me: One Million Page Views</a></li>
</ul>
<p>As I recall we made it over the course of one Sunday afternoon and launched it the day after. The first day it had a decent amount of visitors (~3000) and then seemingly overnight it got picked up everywhere, including some huge sites:</p>
<ul>
<li><a href="https://mashable.com/archive/justdelete-me">Mashable</a></li>
<li><a href="https://www.wired.com/2013/08/just-delete-me/">Wired</a></li>
<li><a href="https://slate.com/technology/2013/08/just-delete-me-how-to-delete-your-account-on-amazon-netflix-skype-et-al.html">Slate</a></li>
<li><a href="https://www.cnet.com/culture/how-to-delete-your-web-accounts-with-justdelete-me/">CNET</a></li>
<li><a href="https://neil-gaiman.tumblr.com/post/59537088319/futurejournalismproject-delete-yourself-from">Neil Gaiman</a> reblogged it on his Tumblr</li>
</ul>
<p>We spent the next week or two frantically merging pull requests for new sites, going from the 16 we started with to over 100 in a very short space of time. We hit one million page views within nine days of launching and I was interviewed by the Wall Street Journal and a BBC radio station (I don't remember which one nor do I have the recording).</p>
<p>A few days after this I added a service to the site and marked it as difficult to delete, then tweeted about it. Within hours I got an email from their CEO (I won't name him but I will say maybe he had a day phone and a night phone) who was annoyed we had marked them as such and wanted to know what he could do to change that. To the best of my knowledge, they never actually did anything about it.</p>
<p>The only way to contribute to the site was to open a pull request on Github which wasn't great for non-developers so I set up a Google form to collect suggestions and links. We got so many pull requests I completely forgot about the form for a couple of months. When I did remember about it and logged in to have a look I was genuinely surprised to see there was thousands of submissions but most of them weren't suggestions for sites. There was hundreds of submissions that included peoples usernames and passwords for various sites (<em>loads</em> of Facebook ones) because they thought the form was a way to get <em>me</em> to delete their accounts. I promptly deleted that form and the associated sheet, I did not want to be responsible for that data.</p>
<p>Thanks to contributors the site eventually had translations into 20 or so languages and grew to have 476 sites listed at the time I sold it. At some stage in the first few months we put Google ads on the site (gross) and it paid my, admittedly small, rent for the next 2 years (not gross).</p>
<p>Unfortunately the person I sold it to let it go stagnant (turns out they just wanted the domain) but someone forked the project, put it up on a new domain (<a href="https://justdeleteme.xyz/">https://justdeleteme.xyz/</a>) and continued adding sites. It now has over 1500 sites and services listed. This forked project also spun off two other projects based on the same premise: <a href="https://justgetmydata.com">Just Get My Data</a> and <a href="https://justwhatsthedata.github.io/">Just What's The Data</a>.</p>
<p>The original version of the site was built with <s>hopes, dreams, and duct tape</s> a makefile and a whole lot of json files. If I was going to make this exact site today it would be significantly easier with <a href="https://www.11ty.dev/">Eleventy</a> data files and I could probably avoid a lot of the merge conflicts we had in the early days with a better data structure. I also definitely wouldn't put Google ads on the site.</p>
<p>Just Delete Me is still my most popular project at least in terms of page views, although the <a href="https://potimages.rknight.me/">Monzo Pot Image Generator</a> has definitely been more consistent in terms of visits (and ~55k images generated).</p>
<p>Here's every link I collected about the site back then. Given it's been 10 years I'm guessing a lot of these are dead now.</p>
<ul>
<li><a href="http://time.com/3054279/50-best-websites-2014/">50 Best Websites 2014</a></li>
<li><a href="http://live.wsj.com/video/tired-of-being-on-facebook-just-delete-me/39305F59-6E77-4BC8-B3F3-5DDE9D69347A.html#!39305F59-6E77-4BC8-B3F3-5DDE9D69347A">Video - Just Delete Me -- New Website Helps Users Delete Personal Info From Sites - WSJ.com</a></li>
<li><a href="http://www.theage.com.au/digital-life/consumer-security/welcome-to-the-counterrevolution-20140308-34e1v.html">Welcome to the counter-revolution</a></li>
<li><a href="http://readwrite.com/2014/02/05/how-to-remove-yourself-from-the-internet#awesm=~ov27CdupU0RRa3">How To Remove Yourself From The Internet</a></li>
<li><a href="https://zapier.com/blog/productivity-apps-2013/">10 Can't Miss Productivity Apps Released in 2013</a></li>
<li><a href="http://bgr.com/2013/12/17/remove-internet-accounts-just-delete-me/">You can remove yourself from the Internet one website at a time with this</a></li>
<li><a href="http://www.intego.com/mac-security-blog/justdelete-me-is-an-eye-opener/">JustDelete.Me is an Eye-Opener</a></li>
<li><a href="http://www.ebuyer.com/blog/2013/12/how-to-disappear-completely-online/">How to disappear completely…Online</a></li>
<li><a href="http://www.portsmouth.co.uk/news/education/university-of-portsmouth-students-deleting-website-proves-popular-1-5491597">University of Portsmouth students deleting website proves popular</a></li>
<li><a href="http://www.smashingmagazine.com/smashing-newsletter-issue-97/">Smashing Newsletter: Issue #97</a></li>
<li><a href="http://www.onemorethingstudio.com/blog/2013/11/18/bonnes-pioches-14-ux-float-label-pattern-justdeleteme/">Good Picks # 14: UX Design - Float Label Pattern - JustDeleteMe</a></li>
<li><a href="http://www.jamrelian.com/justdelete-me-delete-accounts/">justdelete.me: Delete accounts &amp; quit web services with ease</a></li>
<li><a href="http://www.davescomputertips.com/delete-those-unwanted-online-accounts/">Delete those Unwanted Online Accounts</a></li>
<li><a href="http://www.prdaily.com/Main/Articles/15573.aspx">10 steps to building and managing your personal brand</a></li>
<li><a href="http://www.clickorlando.com/news/deleting-online-trail-proves-difficult/-/1637132/22979182/-/cvnolwz/-/index.html">Deleting online trail proves difficult</a></li>
<li><a href="http://www.makeuseof.com/pages/best-websites">Best Websites</a></li>
<li><a href="http://www.hover.com/blog/domain-of-the-month-november-justdelete-me/">Domain of the Month, November: JustDelete.Me</a></li>
<li><a href="http://www.bbc.co.uk/news/technology-24463390">Webscape: Making exercise a game</a></li>
<li><a href="http://www.forbes.com/sites/adamtanner/2013/10/02/one-easy-way-to-stop-target-and-other-companies-from-selling-your-data/">One Easy Way To Stop Target And Other Companies From Selling Your Data</a></li>
<li><a href="http://www.startribune.com/lifestyle/225069852.html">Vanish from the Web with justdelete.me | Star Tribune</a></li>
<li><a href="http://www.heart.co.uk/southcoast/news/local/students-create-site-deleting-old-accounts/">Students Create Site For Deleting Old Accounts - Heart South Coast News</a></li>
<li><a href="http://forums.theregister.co.uk/forum/1/2013/09/13/students_embark_on_mission_to_delete_you_from_the_internet/">Zuck off, Zuck: Brit duo's JustDelete.Me nukes clingy web accounts • The Register Forums</a></li>
<li><a href="http://www.port.ac.uk/uopnews/2013/09/11/new-one-stop-shop-for-deleting-internet-accounts/">New one-stop shop for deleting internet accounts | UoP News</a></li>
<li><a href="http://www.redmondpie.com/want-to-delete-yourself-from-the-internet-new-web-app-helps-you-do-just-that/">Want To Delete Yourself From The Internet? New Web App Helps You Do Just That! | Redmond Pie</a></li>
<li><a href="http://www.bizjournals.com/albany/blog/socialmadness/2013/08/how-to-disappear-from-the-internet.html">You can vanish from the internet, but it'll take work - Vote for the best company in Albany's business competition</a></li>
<li><a href="http://techbeat.com/2013/09/vanish-from-the-internet-with-justdelete-me/">Vanish from the Internet with JustDelete.me | TechBeat</a></li>
<li><a href="http://apartments.naproperties.com/texas/grapevine/grapevine-station-apartments/news?__rmid=erase_yourself_from_the_intern-239860063.html&amp;xrs=RebelMouse_tw">Grapevine Texas Apartments | Grapevine Station Apartments</a></li>
<li><a href="http://iyaan.info/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">Justdelete.me Wants To Help You Pull The Plug On All Those Pesky Online Accounts | iyaan.info</a></li>
<li><a href="http://www.repubblica.it/tecnologia/2013/08/29/news/pulire_tracce_web-65493280/?ref=fbpr">JustDeleteMe, come pulire le nostre tracce sul Web - Repubblica.it</a></li>
<li><a href="http://thefluffyheads.com/techie-tony/just-delete-me">Just Delete Me | The Fluffy Heads</a></li>
<li><a href="http://www.lowecounsel.com/blog/2013/08/just-delete-me-app-lets-you-disappear-quicker">Just Delete Me: An App That Lets You Disappear, Quicker | COUNSEL</a></li>
<li><a href="http://www.techsupportalert.com/content/how-cancel-online-accounts-easy-way.htm">How to Cancel Online Accounts the Easy Way</a></li>
<li><a href="http://www.watchlistnews.com/2013/08/26/dt-daily-iphone-trade-in-justdelete-me-white-xbox-one/">DT Daily: iPhone trade-in, justdelete.me, White Xbox One - Watch List News</a></li>
<li><a href="http://www.bitrebels.com/technology/just-delete-me-service-directory/">Just Delete Me: Helps You Erase Your Online Presence</a></li>
<li><a href="http://technorati.com/technology/article/got-a-bunch-of-ignored-online/">Got a Bunch of Ignored Online Accounts? Say Hello to JustDelete.me - Technorati Technology</a></li>
<li><a href="http://neil-gaiman.tumblr.com/post/59537088319/futurejournalismproject-delete-yourself-from">Neil Gaiman</a></li>
<li><a href="http://www.komando.com/coolsites/index.aspx?id=15113">Easily delete unwanted online accounts - Cool Sites from The Kim Komando Radio Show® &amp; Web site</a></li>
<li><a href="http://www.pcworld.com/article/2047632/learn-how-to-cancel-your-online-accounts.html">Learn how to cancel your online accounts | PCWorld</a></li>
<li><a href="http://domain.me/justdelete-me/">JustDelete.Me: Are You Tired of Your Social Media Profile? - Domain.ME</a></li>
<li><a href="http://www.crazyengineers.com/threads/justdelete-me-removes-your-web-traces-attracts-5-00-000-views-in-its-first-week.70308/">JustDelete.Me Removes Your Web Traces; Attracts 5,00,000 Views In Its First Week | CrazyEngineers</a></li>
<li><a href="http://fox2now.com/2013/08/28/justdelete-me-makes-cleaning-up-your-online-identity-easy/">JustDelete.Me makes cleaning up your online identity easy | FOX2now.com</a></li>
<li><a href="http://tumblr.thefjp.org/post/59394819304/delete-yourself-from-web-services-with-justdelete-me">The FJP — Delete Yourself From Web Services With...</a></li>
<li><a href="http://www.wonderoftech.com/justdelete-me-close-your-online-accounts-easily/">Justdelete.me – Close Your Online Accounts Easily</a></li>
<li><a href="http://www.foxnews.com/tech/2013/08/27/justdeleteme-helps-wash-away-your-digital-life/">JustDelete.me helps you wash away your digital life | Fox News</a></li>
<li><a href="http://5by5.tv/news/134">5by5 | The News #134: Monday, August 26, 2013</a></li>
<li><a href="http://www.redbull.com.br/cs/Satellite/pt_BR/Article/Site-facilita-retirada-dos-seus-dados-da-Internet-021243357182040">Site facilitates removal of your data from the Internet</a></li>
<li><a href="http://blog.synaix.de/2013/08/justdelete-me-das-loeschregister-im-internet-hilft-uns-beim-aufraeumen-unserer-accounts/">synaix BLOG</a></li>
<li><a href="http://www.digitaltrends.com/web/justdelete-me-helps-delete-unused-online-accounts/">JustDelete.me Helps You Delete Unused and Unwanted Online Accounts | Digital Trends</a></li>
<li><a href="http://www.slate.com/blogs/future_tense/2013/08/26/just_delete_me_how_to_delete_your_account_on_amazon_netflix_skype_et_al.html">Just Delete Me: How to delete your account on Amazon, Netflix, Skype, et al.</a></li>
<li><a href="http://dashburst.com/just-delete-me/">Justdelete.me Wants to Help You Unplug From the Internet for Good</a></li>
<li><a href="http://howto.cnet.com/8301-11310_39-57600044-285/how-to-delete-your-web-accounts-with-justdelete.me/">How to delete your Web accounts with JustDelete.me | How To - CNET</a></li>
<li><a href="http://www.cbc.ca/strombo/technology-1/want-to-delete-yourself-from-the-internet-this-site-can-help.html">Strombo | Want To Delete Yourself From The Internet? This Site Can Help</a></li>
<li><a href="http://www.psfk.com/2013/08/erase-web-presence.html">Erase Your Web Presence With The Click Of One Button - PSFK</a></li>
<li><a href="http://www.idesigntimes.com/articles/7347/20130826/just-delete-me-new-free-website-search-close-account.htm">JustDelete.Me: New Free Website To Delete Search Listings, Close Online Accounts And Remove Personal Information From The Web - International Design Times</a></li>
<li><a href="http://www.anonymousbrasil.com/tecnologia/site-ajuda-usuario-cancelar-servicos-online-desaparecer-internet/">Site helps user to cancel online services and 'disappear' from the internet - Anonymous Brazil</a></li>
<li><a href="http://blogs.phoenixnewtimes.com/jackalope/2013/08/justdeleteme_social_media_delete_facebook_off_the_grid.php">How to Escape Social Media with JustDelete.Me</a></li>
<li><a href="http://www.opposingviews.com/i/technology/justdeleteme-offers-advice-about-how-delete-digital-footprint-internet#">JustDelete.me Offers Advice About How To Delete Digital Footprint From Internet</a></li>
<li><a href="http://everything-pr.com/justdelete-me/245353/#.UhtuCGSDQ18">JustDelete.me Helps You Delete Your Account from 100+ Web Services</a></li>
<li><a href="http://www.tportal.hr/scitech/tehno/282123/Nestanite-s-interneta.html">Disappears from the internet! | Tportal.hr</a></li>
<li><a href="http://www.gizmodo.fr/2013/08/26/supprimez-comptes-ligne-justdelete-me.html">Supprimez facilement vos comptes en ligne avec JustDelete.me</a></li>
<li><a href="http://www.dailydot.com/lifestyle/just-delete-me-web-accounts/">The Daily Dot - Just Delete Me helps you painlessly wipe out all your Web accounts</a></li>
<li><a href="http://dailygadgetry.com/justdelete-me-wants-to-help-you-commit-social-suicide/1629">Justdelete.me wants to help you commit social suicide – Daily Gadgetry</a></li>
<li><a href="http://stadt-bremerhaven.de/just-delete-me-hilft-bei-der-abmeldung-von-internet-diensten/">Just Delete Me helps cancellation of Internet services</a></li>
<li><a href="http://computerhoy.com/noticias/internet/borrate-facebook-twitter-google-justdeleteme-5893">Enrol yourself Delete Facebook, Twitter or Google with Justdelete.me - ComputerHoy.com</a></li>
<li><a href="http://techcrunch.com/2013/08/23/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">Justdelete.me Wants To Help You Pull The Plug On All Those Pesky Online Accounts | TechCrunch</a></li>
<li><a href="http://securityspread.com/2013/08/24/deleting-online-services-longer-need-easy/">Deleting online services you no longer want or need, the easy way | Security Spread</a></li>
<li><a href="http://www.mondoinformazione.com/notizie-estero/cancellarsi-dal-web-just-delete-me/113651/">Just-delete-me a help to unsubscribe from the web</a></li>
<li><a href="http://news.softpedia.com/news/Just-Delete-Me-Removes-You-from-the-Internet-377984.shtml">Just Delete Me Removes You from the Internet</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-08-18T12:44:06.279+00:00</pubDate>
</item>
<item>
<title>Compiling CSS with Eleventy</title>
<link>https://rknight.me/blog/compiling-css-with-eleventy/</link>
<guid>https://rknight.me/blog/compiling-css-with-eleventy/</guid>
<content:encoded><![CDATA[
<p>Yesterday I <a href="https://social.lol/@robb/110894030545897361">asked on Mastodon</a> what methods people are using for compiling CSS with Eleventy. It's been a while since I've need anything more than a single stylesheet but since I keep adding various things to my site, the stylesheet has got a bit unweildy. I'll admit, I know very little about the various css libraries and tools (the last time I did this I used Gulp which tells you how long ago that was) so I was coming to this with basically no knowledge. My basic requirements were:</p>
<ul>
<li>Compile multiple CSS files into one</li>
<li>Minify the CSS</li>
<li>Keep everything in Eleventy. I don't want to have to manage additional libraries and scripts outside the Eleventy build step.</li>
</ul>
<h3>PostCSS</h3>
<p>The first response was <a href="https://social.lol/@jgarber@mastodon.cc/110894115168581629">Jason</a> with his method of <a href="https://github.com/jgarber623/refresh-dc.org/blob/main/lib/plugins/postcss.js">using PostCSS</a> with the <code>easy-import</code> and <code>nesting</code> plugin. This is a nice solution and I have used <a href="https://postcss.org">PostCSS</a> a little bit in the past. <a href="https://martinschneider.me/articles/generating-css-with-postcss-and-eleventy-before/">Martin Schneider has a nice blog post</a> about using PostCSS before the site is built so they can inline and purge the CSS.</p>
<h3>Read the fucking manual</h3>
<p>David Darnes came at me with a classic <a href="https://en.wikipedia.org/wiki/RTFM">RTFM</a>. Turns out Eleventy has a <a href="https://www.11ty.dev/docs/languages/custom/#example-add-sass-support-to-eleventy">page on the docs for doing exactly this</a>. This method uses <a href="https://www.npmjs.com/package/sass">Sass</a> and requires a little bit of config. One thing to note is by default this will output <em>all</em> <code>.scss</code> file to the built site, so I added a check to see if the file is named <code>app</code> and if it's not, then skip it. Alternatively you can put your files in an <code>_includes</code> directory and these won't be output (thanks Dave). <code>style: 'compressed'</code> will minimise the CSS.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br /><span class="token keyword">const</span> sass <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'sass'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node:path'</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eleventyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">addTemplateFormats</span><span class="token punctuation">(</span><span class="token string">'scss'</span><span class="token punctuation">)</span><br /><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">addExtension</span><span class="token punctuation">(</span><span class="token string">'scss'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">outputFileExtension</span><span class="token operator">:</span> <span class="token string">'css'</span><span class="token punctuation">,</span><br /><br />    <span class="token function-variable function">compile</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">inputContent<span class="token punctuation">,</span> inputPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />      <span class="token keyword">let</span> parsed <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>inputPath<span class="token punctuation">)</span><br />      <span class="token keyword">if</span> <span class="token punctuation">(</span>parsed<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token string">'app'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token comment">// we only want the output of app.scss</span><br />      <span class="token keyword">let</span> result <span class="token operator">=</span> sass<span class="token punctuation">.</span><span class="token function">compileString</span><span class="token punctuation">(</span>inputContent<span class="token punctuation">,</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">loadPaths</span><span class="token operator">:</span> <span class="token punctuation">[</span>parsed<span class="token punctuation">.</span>dir <span class="token operator">||</span> <span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>dir<span class="token punctuation">.</span>includes<span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">'compressed'</span><span class="token punctuation">,</span><br />      <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />      <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> result<span class="token punctuation">.</span>css<br />      <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<h3>LightningCSS</h3>
<p>I hadn't heard of <a href="https://lightningcss.dev">LightningCSS</a> until yesterday but it's a &quot;CSS parser, transformer, bundler, and minifier&quot; built with Rust. <a href="https://thinkdobecreate.com/">Stephanie Eckles</a> has an <a href="https://github.com/5t3ph/eleventy-plugin-lightningcss">Eleventy plugin</a> for using LightningCSS which handles all the configuration and as a bonus ignores any files that start with <code>_</code> so they won't get copied to the build folder.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br /><span class="token keyword">const</span> lightningCSS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@11tyrocks/eleventy-plugin-lightningcss"</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eleventyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">addPlugin</span><span class="token punctuation">(</span>lightningCSS<span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>Ultimately I like how simple this is to add to my existing site without any additonal configuration so I think this is the way I'm going to go.</p>
]]></content:encoded>
<pubDate>2023-08-16T12:30:35.115+00:00</pubDate>
</item>
<item>
<title>Block ChatGPT and other AI Bots with robots.txt</title>
<link>https://rknight.me/blog/block-chatgpt-with-robotstxt/</link>
<guid>https://rknight.me/blog/block-chatgpt-with-robotstxt/</guid>
<content:encoded><![CDATA[
<p>A <code>robots.txt</code> file &quot;tells search engine crawlers which URLs the crawler can access on your site&quot;. Generally one would use this to tell a search engine which directories should be crawled, which ones shouldn't, or to completely block from crawling your site. The file lives at the root of your site. You can <a href="https://rknight.me/robots.txt">see mine here</a>.</p>
<p><a href="https://chat.openai.com">ChatGPT</a> has two user agents that might attempt to crawl your site: <a href="https://platform.openai.com/docs/gptbot"><code>GPTBot</code></a> and <a href="https://platform.openai.com/docs/plugins/bot/chatgpt-user"><code>ChatGPT-User</code></a>. To disallow crawling from both of these, we can set our <code>robots.txt</code> file like so:</p>
<pre class="language-txt"><code class="language-txt">User-agent: GPTBot<br />Disallow: /<br /><br />User-agent: ChatGPT-User<br />Disallow: /</code></pre>
<p>Update 2023-09-29: <a href="https://neil-clarke.com/block-the-bots-that-feed-ai-models-by-scraping-your-website/">Neil Clarke has a great post</a> with some additional bots that should be blocked:</p>
<pre class="language-txt"><code class="language-txt">User-agent: CCBot<br />Disallow: /<br /><br />User-agent: Google-Extended<br />Disallow: /<br /><br />User-agent: Omgilibot<br />Disallow: /</code></pre>
<h3>Adding a robots.txt file to Eleventy</h3>
<p>Using Eleventy's <a href="https://www.11ty.dev/docs/copy/">passthrough file copy</a> we can create a <code>robots.txt</code> file and then add the following to our Eleventy config to make sure the file is copied to your built site:</p>
<pre class="language-js"><code class="language-js">eleventyConfig<span class="token punctuation">.</span><span class="token function">addPassthroughCopy</span><span class="token punctuation">(</span><span class="token string">'robots.txt'</span><span class="token punctuation">)</span></code></pre>
<p>Alternatively you can do this with just a file and a permalink:</p>
<pre class="language-txt"><code class="language-txt">---<br />permalink: robots.txt<br />eleventyExcludeFromCollections: true<br />---<br /><br />// user agents here</code></pre>
<p>And there we go. ChatGPT, in theory, should be blocked from crawling our site.</p>
]]></content:encoded>
<pubDate>2023-08-12T09:12:43.328+00:00</pubDate>
</item>
<item>
<title>Three Years of Hemispheric Views Feedback</title>
<link>https://rknight.me/blog/three-years-of-hemispheric-views-feedback/</link>
<guid>https://rknight.me/blog/three-years-of-hemispheric-views-feedback/</guid>
<content:encoded><![CDATA[
<p>I recently started listening to the <a href="https://hemisphericviews.com/">Hemispheric Views</a> podcast and decided I would go back to the start and listen to the 74 previous episodes that I hadn't listened to. I wrote down <em>all</em> my feedback. I started this endevour on the 17th of May and finished the last episode this morning. <a href="https://grepjason.sh/">Jason</a> agreed to this:</p>
<blockquote>
<p>We will take any feedback, 3 years old or otherwise haha</p>
</blockquote>
<p>In total I listened to just over 58 hours of main show and over ten hours of the one prime plus dot com member show. About ten episodes in I started singing the theme song to Baby Knight.</p>
<h3>Main Show</h3>
<ul>
<li><a href="https://rknightuk.s3.amazonaws.com/site/desk-2023.jpg">Roast my desk please</a></li>
<li>001 Jason tried Vegemite, has he tried marmite?</li>
<li>002 Martins “Game Boy micro USB” joke wasn’t acknowledged as it should have been</li>
<li>003 Did Jason ever develop the 1926 camera film?</li>
<li>004 Halloween is the worst &quot;holiday&quot;</li>
<li>009 Of course the week starts on Monday, anything else is mayhem</li>
<li>009 I watched an episode of <a href="https://youtu.be/Fahf77qzEnE">Bargearse</a> and it was glorious</li>
<li>010 I love picking a random movie that's on TV when I’m away in a hotel or something but never do it at home</li>
<li>010 One of favourite bands <a href="https://www.youtube.com/watch?v=C7bnFPaGnkc">covered the Round the Twist theme song</a></li>
<li>011 Andrew is a <a href="https://www.youtube.com/watch?v=Qsj2-dWf1ko">briefcase wanker</a></li>
<li>012 Gabriel’s <a href="https://www.lego.com/en-gb/product/poe-s-x-wing-fighter-75102">Orange Lego X-Wing</a> is canon</li>
<li>014 What the hell is with Australian nature</li>
<li>014 I would die for <a href="https://www.youtube.com/watch?v=3vIaCXCkkrs">the Gobbledok</a></li>
<li>014 “Nissan <a href="https://en.wikipedia.org/wiki/Iambic_pentameter">Iambic pentameter</a>” 👏</li>
<li>016 Andrew hasn’t seen Batman and Robin?! He should rectify that</li>
<li>016 <a href="https://rknight.me/building-a-pisight/">I put a Raspberry Pi camera in an iSight</a></li>
<li>017 &quot;Double digit coffee action&quot; would be a good band name</li>
<li>019 My partner spent years using ~$10 headphones. When I gave her my good ones, she was blown away at how good music can sound</li>
<li>020 Screw it, I’m making my own asset deprecation spreadsheet</li>
<li>020 Sealed triangle toastie is the best toastie type</li>
<li>022 Alex makes the media corner theme tune, a few years later he’s in Eurovision. Suspicious.</li>
<li>022 The premise of <a href="https://en.wikipedia.org/wiki/Crackerjack_(2002_film)">Crackerjack</a> sounds identical to <a href="https://www.imdb.com/title/tt0337879/">Blackball</a></li>
<li>022 “Perthsuaded” I hate this</li>
<li>023 “<em>There still isn’t a good email app on iOS</em>” - Andrew. This is because email is bad, stop looking for your own sanity</li>
<li>023 “Everything surrounding email is wrong”</li>
<li>023 <a href="https://rknight.me/micro/110361312690891868/">Here’s my homescreen</a></li>
<li>023 I wish Apple would allow apps to be anywhere on the Home Screen too. Please Tim Apple.</li>
<li>023 I have 203 apps installed</li>
<li>025 Is Andrew still using the johnny decimal system?</li>
<li>027 Game preservation is why I’ve tried as best I can to only buy physical games - currently I have around <a href="https://rknight.me/collections/games">300 across a bunch of consoles</a></li>
<li>028 A few years ago we built a <a href="http://knockoffia.devsdodesign.com">Nokia 3310 simulator</a> in the browser</li>
<li>029 I wear shoes in the house, life is too short</li>
<li>031 I wear the same black socks all year round, regardless of jeans or shorts. All my socks are identical so I don’t have to pair them up. I say no to funny socks</li>
<li>031 Perhaps there’s a market for discounted once-used socks, then Jason could have new socks every day</li>
<li>031 This is more than I ever needed to know about air conditioning</li>
<li>033 I also love going to grocery stores in other countries</li>
<li>033 I laughed at Andrew’s joke about going to Cloud 9</li>
<li>034 My neighbour works at the Office of National Statistics and it sounds fascinating</li>
<li>034 I’ve never seen rocky road with Turkish delight. That sounds incredible.</li>
<li>036 I spat my drink out at “FinderJimbo”</li>
<li>038 “Clean show”? Jason has definitely sworn on at least 4 episodes</li>
<li>038 Movies our spouses don’t like? My partner refuses to watch any Fast and Furious movie despite the fact that <a href="https://wegot.family">I love them</a></li>
<li>038 TODAY!</li>
<li>039 I know my neighbours now but didn’t at my last house that I lived at for 10 years. I did what Jason did when we moved and drew a map with names of everyone. It helped that we moved in around Christmas so everyone sent cards with their names</li>
<li>040 I am furious Andrew doesn’t use “Grand Canion” as a username everywhere because that is so fucking good</li>
<li>040 Pen licence! I never actually got mine because my writing was (and still is) terrible, I outlasted them until year 4 when everyone had to use a pen anyway</li>
<li>042 Right at the start Jason swears and isn’t bleeped and then immediately after in the same sentence he is bleeped. No notes, just amused</li>
<li>042 That stupid EA Sports intro in burned into my brain from play FIFA World Cup ‘98 on the N64. Immediately after Song 2 by Blur would play so it wasn’t all bad</li>
<li>044 Never say “state daddy” again</li>
<li>044 Fruit Loops is a garbage cereal. Lucky Charms all the way</li>
<li>044 Andrew said the milk on the box looked too white and creamy. That’s because they usually use paint or PVA glue for milk in food photography</li>
<li>045 I couldn’t use just spotlight. I have so many <a href="https://rknight.me/alfred-workflows/">workflows</a> I use in Alfred</li>
<li>046 The shuffling albums on Spotify drama with Adele was so stupid</li>
<li>046 One arcade machine for my house? Time Crisis 2</li>
<li>046 It’s 7am here and a breakfast lasagne sounds amazing</li>
<li>046 What happened to <a href="https://decimeal.com/">Decimeal</a></li>
<li>049 “<em>I don’t know if anyone does this but go back to the beginning of the RSS archive, apparently people have other things to do</em>” - Martin</li>
<li>049 The formal intro thing is unsettling</li>
<li>050 What on earth was all this Dolly Parton talk?!</li>
<li>051 I hadn’t considered the comparison to Dharma for Severance but that is an excellent observation</li>
<li>051 🛎️ More Dolly Parton</li>
<li>051 I watched Severance in one night until 6am while sleep-deprived when Baby Knight was born. It definitely gave it a different vibe</li>
<li>052 Another recommendation for Punk Rock Factory: <a href="https://www.youtube.com/watch?v=CUbul4f8AX8">We Don't Talk About Bruno cover</a></li>
<li>053 The people saying sorry too much thing is a problem in the UK as well, I hate it</li>
<li>054 I refuse to listen to podcasts that have dynamically inserted ads</li>
<li>054 I have a disappearing dock and like it. Sorry Natasha</li>
<li>055 My MX Master works fine on Bluetooth</li>
<li>057 Martin on Elon buying Twitter “<em>I’m cautiously optimistic that something really useful will happen and it will change for the better</em>”</li>
<li>058 My entrance music would be <a href="https://song.link/s/0q6Qyd2QaHMHp7APKyQsyi">Not the Same by Bodyjar</a> because it’s a banger</li>
<li>059 I’m scared to do bad show notes lest I feel the wrath of Jason</li>
<li>061 I have my school yearbook but I never look at it</li>
<li>061 Perfect foods: pizza, spaghetti bolognese, donor kebab with lettuce and garlic sauce</li>
<li>061 “Feld tip” 👀</li>
<li>063 This was an excellent discussion about podcasts</li>
<li>064 I refuse to believe it's pronounced ex-mouth</li>
<li>064 This business corner was incredible</li>
<li>065 I guessed the bus story was fake</li>
<li>068 wtf was that Cappuccino talk</li>
<li>069 We have Nobby’s nuts here too</li>
<li>069 You’re making me want a Play Date</li>
<li>069 My top five movies:
<ul>
<li>Back to the Future (I even have a Back to the Future tattoo)</li>
<li>Hot Fuzz</li>
<li>Baby Driver</li>
<li>Captain America: Winter Soldier</li>
<li>Straight Outta Compton</li>
</ul>
</li>
<li>070 Benji said he doesn’t like the yellow bit of eggs. Notable.</li>
<li>070 “<em>Be more negative</em>” - Benji</li>
<li>072 Martin will hate this sign from a UK chain where <a href="https://www.alamy.com/stock-photo-a-poundland-store-sign-71740740.html?imageid=1F597E32-BEC1-46FC-9C74-1CCCBC895D64&amp;p=179593&amp;pn=1&amp;searchId=8798bbaa288a340a187eb179f2e6aaea&amp;searchtype=0">“everyday” should be two words</a></li>
<li>074 My favourite photos from 2022:</li>
</ul>
<p><img alt="A phonebox with the words criminal damage graffitied on it" src="https://rknightuk.s3.amazonaws.com/site/2022-criminal-damage.jpg" /></p>
<p>A phone box in Edinburgh</p>
<p><img alt="The Edinburgh skyline at night" src="https://rknightuk.s3.amazonaws.com/site/2022-edinburgh.jpg" /></p>
<p>The Edinburgh skyline at night</p>
<p><img alt="Two wine glasses with the Pantheon in the background" src="https://rknightuk.s3.amazonaws.com/site/2022-pantheon.jpg" /></p>
<p>Having a drink in front of the Pantheon</p>
<h3>one prime plus dot com member show</h3>
<ul>
<li>01 Now I need to make a home wiki</li>
<li>02 The eighties <em>were</em> sexy</li>
<li>06 This number plate story is wonderful</li>
<li>06 In the UK we didn’t line dance at school, but we did <a href="https://en.m.wikipedia.org/wiki/Morris_dance">Morris Dance</a></li>
<li>07 I started podcasting because I said, kind of as a joke, “Lets do a podcast?” to John Voorhees ~8 years ago</li>
<li>07 “<em>Am I being too intense?</em>” - Martin. No Martin, you crack on.</li>
<li>08 I guessed before I listened: I think Jason is tallest, then Andrew, then Martin.</li>
<li>08 UK folks uses imperial for height and a lot of the time weight as well. Oh and speed limits and distances are usually imperial too.</li>
<li>08 You are all very tall</li>
<li>09 The health insurance I have through work has a scheme to get a discounted Apple Watch if you do a certain amount of steps/exercise minutes every week</li>
<li>013 My mum was a social worker her entire career. I remember her saying “are you sure about these computers as a job?” when I was 16. Maybe she was right.</li>
<li>013 I have it on good authority that a lot of universities use group work so the students who are doing worse still pass because they get paired up with one or two people who will do the work</li>
<li>016 My pre-teen photo, 5 years old on my last day of a holiday in Cyprus:</li>
</ul>
<p><img alt="Me at 4 in Cyprus" src="https://rknightuk.s3.amazonaws.com/site/me-young.jpg" /></p>
<ul>
<li>016 wtf is ham sauce for beans</li>
<li>019 The kebab story 👏</li>
<li>020 A half onesie is mayhem</li>
<li>021 I view someone not voting essentially as a vote for the “winner”. Ultimately if you didn’t vote, you don’t have the same legitimacy to complain as someone who did.</li>
<li>023 Wogman. Just…wow. Incredible.</li>
<li>024 I will not download Day One again. I will not download Day One again.</li>
<li>026 I’ve been really enjoying Omnivore for my read later stuff</li>
<li>027 Arc is definitely a “have you heard the good word” product for sure</li>
<li>027 I like my gum the standard format</li>
<li>029 Andrews ability to improvised over-the-top intros is amazing</li>
<li>029 Food pleasures: crisps, literally any crisps</li>
<li>030 bullying</li>
<li>031 Some birds have been known to <a href="https://www.independent.co.uk/news/science/from-modems-to-alarms-the-world-of-bird-mimics-6105998.html">mimic car alarm sounds</a></li>
<li>031 We need a Mastodon instance called Screacher</li>
<li>032 Sorry Jason the opening the crisps with scissors thing is weird</li>
</ul>
]]></content:encoded>
<pubDate>2023-08-01T12:00:01.145+00:00</pubDate>
</item>
<item>
<title>Fix for Low Volume Exported Audio in GarageBand</title>
<link>https://rknight.me/blog/fix-for-low-volume-exported-audio-in-garageband/</link>
<guid>https://rknight.me/blog/fix-for-low-volume-exported-audio-in-garageband/</guid>
<content:encoded><![CDATA[
<p>Yesterday <a href="https://hachyderm.io/@mikestreety/110685303152811714">Mike pointed out</a> that the pilot episode of <a href="https://wegot.family/0">my new podcast</a> was quiet compared to other shows. I opened up the project files in GarageBand and couldn't see anything that would be causing this so I started hunting around in the settings. It turns out the &quot;Export projects at full volume&quot; was causing this. I don't know what this setting is supposed to do but I turned it off, exported the episode again, and it was fixed.</p>
<p><img alt="GarageBand setting for full volume export" src="https://rknightuk.s3.amazonaws.com/site/garageband-setting.png" /></p>
]]></content:encoded>
<pubDate>2023-07-10T08:28:42.770+00:00</pubDate>
</item>
<item>
<title>A Threads Thread Blog Post</title>
<link>https://rknight.me/blog/a-threads-thread-blog-post/</link>
<guid>https://rknight.me/blog/a-threads-thread-blog-post/</guid>
<content:encoded><![CDATA[
<p>I wanted to expand a bit on my <a href="https://social.lol/@robb/110665866974743896">Threads thread</a> so instead of adding to the thread, I've written a blog post about Threads. Clear? Good.</p>
<p>The Mastodon blog has <a href="https://blog.joinmastodon.org/2023/07/what-to-know-about-threads/">a good post about Threads</a> and what it means for the fediverse in general:</p>
<blockquote>
<p>The fact that large platforms are adopting ActivityPub is not only validation of the movement towards decentralized social media, but a path forward for people locked into these platforms to switch to better providers</p>
</blockquote>
<p>I have no intention of using Threads, signing up was purely an academic exercise. I'm not even going to link to my profile but if you happen to find me, I'll be posting random emojis when I remember the app exists.</p>
<blockquote>
<p>Threads shows me a load of crap from people I don’t follow.</p>
</blockquote>
<p>I said &quot;as expected&quot; in my Mastodon post but I'm not sure I'd actually thought about this. <em>Of course</em> they were going to dump random stuff into the timeline. And <em>of course</em> this will include ads/promoted posts in the future. I wonder if they intend to inject ads into a persons timeline when they support ActivityPub so even if you follow from Mastodon you see ads (until I immediately unfollow them). We shall see.</p>
<p>The app does that awful refresh like Instagram does when you open the app, start reading something, then it’s gone, never to be seen again. <a href="https://mastodon.social/@CTD/110665895008825097">CTD said</a> they have muscle memory to favourite posts on Instagram when it opens just in case this happens? That is <em>wild</em> that people feel the need to do that just because the app sucks. Now we have two apps that suck like that.</p>
<p>Speaking of ActivityPub, they say it's coming, it's mentioned in help docs but I agree with <a href="https://social.lol/@andyn/110665801776694098">Andy</a>:</p>
<blockquote>
<p>it either won’t happen at all, or won’t happen for a long time</p>
</blockquote>
<p>I made a <a href="https://rknight.me/building-an-activitypub-server/">basic ActivityPub server a few weeks ago</a> and while it doesn't implement everything that ActivityPub has to offer, it's close enough. I'm surprised a company the size of Meta, who has a huge team of engineers couldn't get this working for launch. To be clear I'm not saying &quot;herp derp I did it why can't they&quot; but still, I find it surprising. If we don't see it within a month, I think we might never see it.</p>
<p>Assuming they <em>do</em> release AP support, I <em>am</em> excited for that. Being able to follow people who will never join Mastodon sounds great. I don't want to use Threads (much like Bluesky) just to follow a handful of people. Here's hoping they <em>do</em> release it and that they don't inject ads into a user's posts.</p>
]]></content:encoded>
<pubDate>2023-07-06T08:05:16.652+00:00</pubDate>
</item>
<item>
<title>Custom Sidebar Icons in Finder</title>
<link>https://rknight.me/blog/custom-sidebar-icons-in-finder/</link>
<guid>https://rknight.me/blog/custom-sidebar-icons-in-finder/</guid>
<content:encoded><![CDATA[
<p><img alt="Custom icons in the Finder" src="https://rknightuk.s3.amazonaws.com/site/custom-icons.png" /></p>
<p>MacOS customisation is basically dead. Plenty of apps that used to work, no longer do. You can still have custom folder icons which is nice but I wanted custom sidebar icons for those folders, like <a href="https://rknight.me/micro/110615734381939778/">the developer one</a>.</p>
<p>I started googling around trying to find something for recent versions of MacOS and the only thing I found was <a href="https://www.reddit.com/r/mac/comments/seig87/how_to_make_custom_finder_sidebar_icons_big_sur/">this Reddit post</a> outlining a method to do it with PNGs. Between me and <a href="https://www.keiransell.com">Keir</a> we were able to make it work not only with any standard <a href="https://developer.apple.com/sf-symbols/">SF Symbol</a> but custom made ones as well.</p>
<p>You'll need Xcode installed to do this but the instructions relatively simple. I will say it's <em>really</em> flaky when building, sometimes it works, sometimes it doesn't, sometimes it just shows a random icon instead. All of the instructions are on <a href="https://github.com/rknightuk/custom-finder-sidebar-icons">the GitHub repository</a> including some dandy screencasts from Keir.</p>
]]></content:encoded>
<pubDate>2023-06-29T16:28:34.602+00:00</pubDate>
</item>
<item>
<title>Building an ActivityPub Server</title>
<link>https://rknight.me/blog/building-an-activitypub-server/</link>
<guid>https://rknight.me/blog/building-an-activitypub-server/</guid>
<content:encoded><![CDATA[
<p>To start with, I'm not convinced everything I've done here is exactly to the ActivityPub specification or if there will be problems interacting with Bugle on various ActivityPub servers outside the main ones (Mastodon, Calckey, etc). I'm also unclear on which parts of this are Mastodon-specific and which parts are pure ActivityPub. I will use Mastodon as the example external server throughout.</p>
<p>I won't go over setting up my database or server for this but at minimum you'll need a way to handle requests, render JSON, and a database to store posts and activities.</p>
<h3>WebFinger and Profile JSON</h3>
<p>This is the easiest part of the whole thing, two JSON files: <code>.well-known/webfinger</code> and <code>@bugle.json</code>.</p>
<p><code>.well-known/webfinger</code> is how ActivityPub finds links to your profile. Searching for <code>@bugle@bugle.lol</code> on Mastodon, for example, will send a <code>GET</code> request to <code>https://bugle.lol/.well-known/webfinger?resource=acct:bugle@bugle.lol</code> which will return the following:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br /><br />  <span class="token property">"subject"</span><span class="token operator">:</span> <span class="token string">"acct:bugle@bugle.lol"</span><span class="token punctuation">,</span><br />  <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />    <span class="token punctuation">{</span><br />      <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span><span class="token punctuation">,</span><br />      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"application/activity+json"</span><span class="token punctuation">,</span><br />      <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p>The server handles checking if the requested <code>resource</code> exists and returning the correct data. The <code>links</code> part is how it knows the account lives at <code>bugle.lol/@bugle</code>. This might seems obvious but it isn't always the case that the username match the domain where the profile lives. For example, the profile for <a href="https://mastodon.macstories.net/@viticci">viticci@macstories.net</a> is actually at <code>mastodon.macstories.net/@viticci</code>, which is indicated by the webfinger.</p>
<p>Once Mastodon has the link, it will make a request to that link (in this case <code>https://bugle.lol/@bugle</code>) for the profile json file which includes general profile information like name, avatar, and bio, as well as which endpoints it should send requests to. These are usually called an inbox although the actually name and path isn't important.</p>
<p>You can see a full example on <a href="https://social.lol/@robb.json">my Mastodon profile</a> but I'll go through the main important parts here. The first part is the <code>@context</code>, which as best I can tell it an indicator of the type of object(?) we're defining, in this case an activity stream.</p>
<pre class="language-json"><code class="language-json"><br /><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	    <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	    <span class="token string">"https://w3id.org/security/v1"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p>The next part is an ID to identify your user, a type to define that this is a <code>Person</code>, and endpoints for various features, some of which are Mastodon-specific (like <code>featured</code> and <code>featuredTags</code>).</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Person"</span><span class="token punctuation">,</span><br />	<span class="token property">"following"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/following"</span><span class="token punctuation">,</span><br />	<span class="token property">"followers"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/followers"</span><span class="token punctuation">,</span><br />	<span class="token property">"inbox"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/inbox"</span><span class="token punctuation">,</span><br />	<span class="token property">"outbox"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/outbox"</span><span class="token punctuation">,</span><br />	<span class="token property">"featured"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/collections/featured"</span><span class="token punctuation">,</span><br />	<span class="token property">"featuredTags"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/collections/tags"</span><span class="token punctuation">,</span><br />	<span class="token property">"endpoints"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />	    <span class="token property">"sharedInbox"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/inbox"</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>I'm not entirely sure when most of these are used aside from when first searching for a profile (because I see the requests in the logs) but the important ones here are <code>inbox</code> and <code>endpoints.sharedInbox</code>. This is where replies and mentions will get posted to (<code>sharedInbox</code>) and activities such as likes, follows, and boosts (<code>inbox</code>). I'll go into how that works further down.</p>
<p>We also need information about the profile itself like name, bio, profile picture, and so on. The <code>icon</code> attributes refer to your main profile image and <code>image</code> refers to a header image.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"bugle dot lol"</span><span class="token punctuation">,</span><br />	<span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"&lt;p>A bio goes here&lt;/p>\n"</span><span class="token punctuation">,</span><br />	<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />	<span class="token property">"manuallyApprovesFollowers"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><br />	<span class="token property">"discoverable"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br />	<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2022-12-16T00:00:00Z"</span><span class="token punctuation">,</span><br />	<span class="token property">"icon"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Image"</span><span class="token punctuation">,</span><br />		<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">,</span><br />		<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/200/300"</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token property">"image"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Image"</span><span class="token punctuation">,</span><br />		<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">,</span><br />		<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/600/300"</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>Finally we need a <code>publicKey</code> attribute. This is used to validate requests to and from the server:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"publicKey"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle#main-key"</span><span class="token punctuation">,</span><br />		<span class="token property">"owner"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />		<span class="token property">"publicKeyPem"</span><span class="token operator">:</span> <span class="token string">"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyB9YyNt5OB23VW3sFm5o\nPnV4phqSXgqwyqmjXIE6ZtwLE0I6JEeeqv+SD2pd9QDXiUfugEWuUyNImZCglNg2\nV3Vh/NNr/YX6tWW6VSkudJ/b8lNQF8Rr/Z9wK9jD0WUmFs+YjS0R/KePDtLt1HOX\nVfjPLyOCODO+ykXQkydLI1RZf3V+iJdiTP9e5nhBxQGHkbyVja/86uqJIC96zyX4\nQPteEtHjXngVgO6QozCQu6Null4WFOHUdPGHaN7wsJtkZV10BPp3yCOiirJQlXSp\no+7YfJuROFv8QU+jWitTPTYWQYEuRwUfDUsdThqSh/u6eZt2hHjTzcI0/qgpxWqI\n1wIDAQAB\n-----END PUBLIC KEY-----\n"</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<p>You can generate these in most languages. Here's how I did it in PHP on profile creation to store in the database:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$config</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />	<span class="token string double-quoted-string">"private_key_bits"</span> <span class="token operator">=></span> <span class="token number">2048</span><span class="token punctuation">,</span><br />	<span class="token string double-quoted-string">"private_key_type"</span> <span class="token operator">=></span> <span class="token constant">OPENSSL_KEYTYPE_RSA</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$keypair</span> <span class="token operator">=</span> <span class="token function">openssl_pkey_new</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token function">openssl_pkey_export</span><span class="token punctuation">(</span><span class="token variable">$keypair</span><span class="token punctuation">,</span> <span class="token variable">$private_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token function">openssl_pkey_get_details</span><span class="token punctuation">(</span><span class="token variable">$keypair</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token variable">$public_key</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"key"</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<h3>Receiving Activities</h3>
<p>As mentioned above there are two endpoints for receiving activities: The global inbox (<code>/inbox</code>) and the user inbox (<code>/@bugle/inbox</code>).</p>
<h3>Validating Requests</h3>
<p>All signature validation is handled in my <a href="https://github.com/rknightuk/bugle/blob/main/app/Services/HttpSignature.php"><code>HttpSignature</code> class</a> if you'd prefer to look at the code directly.</p>
<p>Every request that comes in should be validated against the signature to make sure it's a valid request. The first step is to extract the values into an array keyed by the name (other languages and frameworks might have an easier way to do this).</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$values</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// split the signature at ',' and assign each one</span><br /><span class="token comment">// to $values, keyed by its name</span><br /><span class="token variable">$parts</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'signature'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$parts</span> <span class="token keyword">as</span> <span class="token variable">$current</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token variable">$pair</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'='</span><span class="token punctuation">,</span> <span class="token variable">$current</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$pair</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />	<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$pair</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$values</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// $values is now:</span><br /><span class="token comment">// [</span><br /><span class="token comment">//    'keyId' => 'https://mas.to/users/rknightuk#main-key',</span><br /><span class="token comment">//    'algorithm' => 'rsa-sha256',</span><br /><span class="token comment">//    'headers' => ''(request-target) host date digest content-type',</span><br /><span class="token comment">//    'signature' => 'BIGLONGSIGNATURE',</span><br /><span class="token comment">// ];</span></code></pre>
<p>Next we need to get the <code>headers</code> value from the signature, and map over those, get the values from the request headers, and generate a string. This string is what we use to validate the request:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$inboxPath</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/@bugle/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headerList</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$values</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'headers'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// $headersList = [</span><br /><span class="token comment">//	'(request-target)',</span><br /><span class="token comment">//	'host',</span><br /><span class="token comment">//	'date',</span><br /><span class="token comment">//	'digest',</span><br /><span class="token comment">//	'content-type',</span><br /><span class="token comment">// ]</span><br /><br /><span class="token variable">$expectedHeaders</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />  <br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$headerList</span> <span class="token keyword">as</span> <span class="token variable">$h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$h</span> <span class="token operator">===</span> <span class="token string double-quoted-string">"(request-target)"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		<span class="token variable">$expectedHeaders</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"(request-target): post "</span> <span class="token operator">.</span> <span class="token variable">$inboxPath</span><span class="token punctuation">;</span><br />	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><br />		<span class="token variable">$expectedHeaders</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$h</span> <span class="token operator">.</span> <span class="token string double-quoted-string">": "</span> <span class="token operator">.</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">headers</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$signatureHeader</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'signature'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signaturePairs</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$signatureHeader</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signatureHeaderMap</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$signaturePairs</span> <span class="token keyword">as</span> <span class="token variable">$pair</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token variable">$pairParts</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'='</span><span class="token punctuation">,</span> <span class="token variable">$pair</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pairParts</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pairParts</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$signatureHeaderMap</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$expectedHeaders</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// $str:</span><br /><span class="token comment">// "(request-target): post /@bugle/inbox</span><br /><span class="token comment">// host: 9928-82-19-65-174.ngrok-free.app</span><br /><span class="token comment">// date: Tue, 27 Jun 2023 15:27:11 GMT</span><br /><span class="token comment">// digest: SHA-256=LdxwDtVsenhzJE0E3H2oj2C7cKPvZYEG5LrY0phH9Zc=</span><br /><span class="token comment">// content-type: application/activity+json"</span></code></pre>
<p>One thing to note here is if you set different inbox URLs for user and for local, then you need to specific which path you're validating for (either <code>/inbox</code> or <code>/@bugle/inbox</code>) otherwise the signatures won't match.</p>
<p>Lastly, we need to fetch the public key for the actor, and use that to validate the request:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$keyId</span> <span class="token operator">=</span> <span class="token variable">$signatureHeaderMap</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'keyId'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$actor</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'application/activity+json'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$keyId</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$publicKeyPem</span> <span class="token operator">=</span> <span class="token variable">$actor</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'publicKey'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'publicKeyPem'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$verifier</span> <span class="token operator">=</span> <span class="token function">openssl_get_publickey</span><span class="token punctuation">(</span><span class="token variable">$publicKeyPem</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$validate</span> <span class="token operator">=</span> <span class="token function">openssl_verify</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$signatureHeaderMap</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'signature'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$verifier</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_ALGO_SHA256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$isValid</span> <span class="token operator">=</span> <span class="token variable">$validate</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre>
<p>If <code>isValid</code> is true, we can carry on and accept requests. You should do this for all requests that come into the inboxes.</p>
<h3>Likes, Boosts, and Follows</h3>
<p>The user inbox will <code>POST</code> requests for follows, likes, and boosts. Likes and boosts are easy enough to handle as you don't need to respond to the request or even store them if you don't want to. A like is the simplest of the two. It contains an ID of the like, the type of activity, the actor, and the object - this is the post that has been liked.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb#likes/10253875"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Like"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb"</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/f6dfebf6-1a73-4b3e-8afa-28a768698579"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>Boosts are similar, but they also include <code>to</code> and <code>cc</code> arrays of users the post is being boosted to, as well as a <code>published_at</code> date.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb/statuses/110592144954280515/activity"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Announce"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb"</span><span class="token punctuation">,</span><br />	<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-23T06:36:51Z"</span><span class="token punctuation">,</span><br />	<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://8d19-82-19-65-174.ngrok-free.app/@bugle"</span><span class="token punctuation">,</span><br />		<span class="token string">"https://aninstance.social/users/robb/followers"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"https://8d19-82-19-65-174.ngrok-free.app/@bugle/f6dfebf6-1a73-4b3e-8afa-28a768698579"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>Follow events are more complicated because they require a response. A follow activity will look something like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/9bb08aae-c666-432f-a3e6-35617e32830d"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Follow"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb"</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>To respond to a follow, we need to send an <code>Accept</code> activity with a valid signature. To start with we need to build our activity message; it has an ID, type, actor (the user being followed) and an <code>object</code> which in this case, is the <code>Follow</code> activity we received.</p>
<pre class="language-php"><code class="language-php"><span class="token comment">// this isn't important unless you intend to store all</span><br /><span class="token comment">// follow requests that come into the system but a unique(ish)</span><br /><span class="token comment">// ID is required here</span><br /><span class="token variable">$guid</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$message</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />	<span class="token string single-quoted-string">'@context'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://www.w3.org/ns/activitystreams'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://bugle.lol'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$guid</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Accept'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'actor'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://bugle.lol/@bugle'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'object'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><br />		<span class="token string single-quoted-string">'@context'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://www.w3.org/ns/activitystreams'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://aninstance.social/9bb08aae-c666-432f-a3e6-35617e32830d'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Follow'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'actor'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://aninstance.social/users/robb'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'object'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://bugle.lol/@bugle'</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>To generate the signature we need the message we just created, the private key of the profile from the database, the host of the actor (in this case <code>aninstance.social</code>), the inbox path (<code>/@bugle/inbox</code>), and the url to the profile.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$host</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'aninstance.social'</span><span class="token punctuation">;</span><br /><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/@bugle/inbox'</span><span class="token punctuation">;</span><br /><span class="token variable">$privateKey</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'a_private_key'</span><span class="token punctuation">;</span><br /><span class="token variable">$keyId</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://bugle.lol/@bugle'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$hash</span> <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$digest</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$hash</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$date</span> <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'D, d M Y H:i:s \G\M\T'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signer</span> <span class="token operator">=</span> <span class="token function">openssl_get_privatekey</span><span class="token punctuation">(</span><span class="token variable">$privateKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$stringToSign</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"(request-target): post <span class="token interpolation"><span class="token variable">$path</span></span>\nhost: <span class="token interpolation"><span class="token variable">$host</span></span>\ndate: <span class="token interpolation"><span class="token variable">$date</span></span>\ndigest: SHA-256=<span class="token interpolation"><span class="token variable">$digest</span></span>"</span><span class="token punctuation">;</span><br /><span class="token function">openssl_sign</span><span class="token punctuation">(</span><span class="token variable">$stringToSign</span><span class="token punctuation">,</span> <span class="token variable">$signature</span><span class="token punctuation">,</span> <span class="token variable">$signer</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_ALGO_SHA256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signature_b64</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$signature</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$header</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'keyId="'</span> <span class="token operator">.</span> <span class="token variable">$keyId</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'",algorithm="rsa-sha256",headers="(request-target) host date digest",signature="'</span> <span class="token operator">.</span> <span class="token variable">$signature_b64</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'Host'</span> <span class="token operator">=></span> <span class="token variable">$host</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Date'</span> <span class="token operator">=></span> <span class="token variable">$date</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Signature'</span> <span class="token operator">=></span> <span class="token variable">$header</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Digest'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'SHA-256='</span> <span class="token operator">.</span> <span class="token variable">$digest</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Content-Type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'application/activity+json'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Accept'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'application/activity+json'</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Finally, we send the <code>Accept</code> activity:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$inbox</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://aninstance.social/users/robb/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">return</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">withBody</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'application/json'</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>We'll need this same header signature generation later for notifying followers of new posts.</p>
<p>If someone unfollows you, you'll receive an <code>Undo</code> request. Check the <code>actor</code> on that request and you can then remove them from your followers table.</p>
<h3>Replies</h3>
<p>The global inbox will receive a <code>POST</code> request with data about replies and @mentions with data that looks something like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk/statuses/110617068531392295/activity"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Create"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk"</span><span class="token punctuation">,</span><br />	<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T16:15:15Z"</span><span class="token punctuation">,</span><br />	<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	   <span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	    <span class="token string">"https://mas.to/users/rknightuk/followers"</span><span class="token punctuation">,</span><br />	    <span class="token string">"https://bugle.lol/@robb"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />	    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk/statuses/110617068531392295"</span><span class="token punctuation">,</span><br />	    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Note"</span><span class="token punctuation">,</span><br />	    <span class="token property">"inReplyTo"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />	    <span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T16:15:15Z"</span><span class="token punctuation">,</span><br />	    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/@rknightuk/110617068531392295"</span><span class="token punctuation">,</span><br />	    <span class="token property">"attributedTo"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk"</span><span class="token punctuation">,</span><br />	    <span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	        <span class="token property">"0"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><span class="token punctuation">,</span><br />	    <span class="token punctuation">]</span><span class="token punctuation">,</span><br />	    <span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	        <span class="token string">"https://mas.to/users/rknightuk/followers"</span><span class="token punctuation">,</span><br />	        <span class="token string">"https://bugle.lol/@robb"</span><span class="token punctuation">,</span><br />	    <span class="token punctuation">]</span><span class="token punctuation">,</span><br />	    <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"&lt;p>&lt;span class=\"h-card\">&lt;a href=\"https://bugle.lol/@robb\" class=\"u-url mention\">@&lt;span>robb&lt;/span>&lt;/a>&lt;/span> hello!&lt;/p>"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>If you only have one profile setup then you're golden: just save the <code>object.content</code> and the <code>object.id</code> somewhere and you have your reply. If you have a server with multiple profiles, you can map over the <code>object.cc</code> array to find matching profiles for your domain.</p>
<p>As a bonus here, unrelated to ActivityPub, I setup <a href="https://ntfy.sh/">https://ntfy.sh/</a> to send me notifications whenever I get a reply:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$ntfyKey</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'bugle.ntfy_key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token punctuation">[</span><br />	<span class="token string single-quoted-string">'Content-Type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'text/plain'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'Title'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'New mention from @'</span> <span class="token operator">.</span> <span class="token variable">$activity</span><span class="token operator">-></span><span class="token function">getActorUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'click'</span> <span class="token operator">=></span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'object.url'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">)</span><br /><span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'https://ntfy.sh/'</span> <span class="token operator">.</span> <span class="token variable">$ntfyKey</span><span class="token punctuation">,</span> <span class="token function">strip_tags</span><span class="token punctuation">(</span><span class="token variable">$activity</span><span class="token operator">-></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h3>Formatting Posts</h3>
<p>The post's content needs to be rendered to HTML. Bugle supports writing in Markdown so I use <a href="https://github.com/thephpleague/commonmark"><code>league/commonmark</code></a> to format the content for sending to followers. I also extract @mentions to generate links in the posts and add them to <code>tags</code> on the post JSON. See <a href="https://github.com/rknightuk/bugle/blob/main/app/Services/TootFormatter.php"><code>TootFormatter</code></a> for the full implementation.</p>
<p>A post that looks like this:</p>
<pre class="language-md"><code class="language-md">This toot has <span class="token url">[<span class="token content">a link</span>](<span class="token url">https://example.com</span>)</span> and a mention: @robb@social.lol ahoy!</code></pre>
<p>Is run through the formatter:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'This toot has [a link](https://example.com) and a mention: @robb@social.lol ahoy!'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$converter</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommonMarkConverter</span><span class="token punctuation">(</span><span class="token punctuation">[</span><br />	<span class="token string single-quoted-string">'html_input'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'strip'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'allow_unsafe_links'</span> <span class="token operator">=></span> <span class="token constant boolean">false</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$converter</span><span class="token operator">-></span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">nl2br</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$tags</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/@?\b([A-Z0-9._%+-]+)@([A-Z0-9.-]+\.[A-Z]{2,})\b/mi'</span><span class="token punctuation">;</span><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">[</span><span class="token variable">$fullUsernames</span><span class="token punctuation">,</span> <span class="token variable">$usernames</span><span class="token punctuation">,</span> <span class="token variable">$domains</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$matches</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$fullUsernames</span> <span class="token keyword">as</span> <span class="token variable">$i</span> <span class="token operator">=></span> <span class="token variable">$fu</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token variable">$tags</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />		<span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Mention'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'href'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://'</span> <span class="token operator">.</span> <span class="token variable">$domains</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/@'</span> <span class="token operator">.</span> <span class="token variable">$usernames</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'name'</span> <span class="token operator">=></span> <span class="token variable">$fu</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br />	<span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><br />		<span class="token variable">$fu</span><span class="token punctuation">,</span><br />		<span class="token function">sprintf</span><span class="token punctuation">(</span><br />			<span class="token string single-quoted-string">'&lt;span class="h-card">&lt;a href="https://%s/@%s" class="u-url mention">@&lt;span>%s&lt;/span>&lt;/a>&lt;/span>'</span><span class="token punctuation">,</span><br />			<span class="token variable">$domains</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />			<span class="token variable">$usernames</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />			<span class="token variable">$usernames</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><br />		<span class="token punctuation">)</span><span class="token punctuation">,</span><br />		<span class="token variable">$content</span><span class="token punctuation">,</span><br />	<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(&lt;br \/>)+$/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">return</span> <span class="token punctuation">[</span><br />	<span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$tags</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Becomes:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This toot has <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>a link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> and a mention: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h-card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://social.lol/@robb<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>u-url mention<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>robb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> ahoy!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>",</code></pre>
<p>And the <code>tags</code>, which we'll use later to determine who to notify of a mention, look like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">[</span><br />	<span class="token punctuation">{</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Mention"</span><span class="token punctuation">,</span><br />		<span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"https://social.lol/@robb"</span><span class="token punctuation">,</span><br />		<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"@robb@social.lol"</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">]</span></code></pre>
<h3>Notifying Followers about New Posts</h3>
<p>Unlike RSS where new posts can be fetched into a feed ActivityPub requires all followers are notified of new posts by the originating server. Here's an example payload to notify followers of a new post.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/7c01aab9-bc96-4773-b235-703a6d2a1f76"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Create"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />	<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://bugle.lol/@bugle/followers"</span><span class="token punctuation">,</span><br />		<span class="token string">"https://example.com/users/robb"</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/7c01aab9-bc96-4773-b235-703a6d2a1f76"</span><span class="token punctuation">,</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Note"</span><span class="token punctuation">,</span><br />		<span class="token property">"inReplyTo"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />		<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T20:42:43Z"</span><span class="token punctuation">,</span><br />		<span class="token property">"updated"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T21:30:10Z"</span><span class="token punctuation">,</span><br />		<span class="token property">"attributedTo"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />		<span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"&lt;p>Toot toot!&lt;/p>"</span><span class="token punctuation">,</span><br />		<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		  <span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><br />		<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		  <span class="token string">"https://bugle.lol/@bugle/followers"</span><span class="token punctuation">,</span><br />		  <span class="token string">"https://example.com/users/robb"</span><br />		<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token property">"senstive"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br />		<span class="token property">"summary"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />		<span class="token property">"attachment"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />			<span class="token punctuation">{</span><br />				<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Document"</span><span class="token punctuation">,</span><br />				<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">,</span><br />				<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/200/300"</span><span class="token punctuation">,</span><br />				<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"A kitten"</span><span class="token punctuation">,</span><br />				<span class="token property">"blurhash"</span><span class="token operator">:</span> <span class="token string">"L46[2Hofofof00j[offQ~qofofof"</span><span class="token punctuation">,</span><br />				<span class="token property">"width"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />				<span class="token property">"height"</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span><br />			<span class="token punctuation">}</span><br />		<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token property">"tag"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />			<span class="token punctuation">{</span><br />				<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Mention"</span><span class="token punctuation">,</span><br />				<span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/@rknightuk"</span><span class="token punctuation">,</span><br />				<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"@rknightuk@mas.to"</span><br />			<span class="token punctuation">}</span><br />		<span class="token punctuation">]</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>The <code>type</code> attribute has three possible values that I'm using:</p>
<ul>
<li><code>Create</code> - to notify of a new post</li>
<li><code>Delete</code> - to delete an existing post</li>
<li><code>Update</code> - to update an existing post after an edit. Mastodon (and I assume others) require the <code>updated</code> timestamp for a <code>Update</code> activity</li>
</ul>
<p>The <code>cc</code> field is how visibility is controlled on Mastodon (I think) but I haven't looked into it enough so Bugle only has the ability to send public posts.</p>
<p>To notify followers of a new post, send a <code>POST</code> request to the <em>global</em> of the followers instance. For the sake of simplicity I'm taking the users domain and appending <code>/inbox</code> to it. This won't work in a few edge-cases (like the MacStories example above) so I need to update Bugle to fetch the users endpoints using webfinger either when they follow an account, or each time I need to send to them.</p>
<p>If we assume I have one follower (@robb@example.com) and I make a post that mentioned another account (@dave@example.com) I need to make two requests to notify them both. A follower notification goes to the user inbox:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$follower</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/@robb'</span><span class="token punctuation">;</span><br /><span class="token variable">$inbox</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/@robb/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span> <span class="token comment">// generate header signture as we did above for `Accept`  </span><br /><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">withBody</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'application/json'</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /></code></pre>
<p>And an @mention goes to the global inbox. For mentions, you need to include the <code>tag</code> array in the post data (see above).</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$mention</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/@dave'</span><span class="token punctuation">;</span><br /><span class="token variable">$inbox</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span> <span class="token comment">// generate header signture as we did above for `Accept`  </span><br /><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">withBody</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'application/json'</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h3>Replying to a post</h3>
<p>If you look at the post data above you may have noticed a null value of <code>inReplyTo</code>. This is the part that needs to be filled in to reply to a specific post. Say I was replying to <a href="https://social.lol/@robb/109863669770547458">this <em>excellent</em> post</a> by a handsome internet person I need to include the URL as the value for <code>inReplyTo</code> like so:</p>
<pre class="language-php"><code class="language-php"><span class="token string double-quoted-string">"inReplyTo"</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">'https://social.lol/@robb/109863669770547458'</span><span class="token punctuation">,</span></code></pre>
<p>Any posts with that set will show up as replies to the original post.</p>
<h3>A note on attachments</h3>
<p>nb: I've only tested images because it's unlikely I'll need video any time soon.</p>
<p>Attachments are included as an array in the post JSON with their mime type, url, alt text, width/height, and something I hadn't heard of before: a <a href="https://blurha.sh/">blurhash</a>.</p>
<pre class="language-json"><code class="language-json"><br /><span class="token punctuation">{</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Document"</span><span class="token punctuation">,</span><br />	<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"imag/jpeg"</span><span class="token punctuation">,</span><br />	<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/200/300"</span><span class="token punctuation">,</span><br />	<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"A kitten"</span><span class="token punctuation">,</span><br />	<span class="token property">"blurhash"</span><span class="token operator">:</span> <span class="token string">"L46[2Hofofof00j[offQ~qofofof"</span><span class="token punctuation">,</span><br />	<span class="token property">"width"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />	<span class="token property">"height"</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>A blurhash is &quot;<em>a compact representation of a placeholder for an image.</em>&quot;. So when you see blurry images loading on Mastodon, these are blurhashes. To make one you need a library for your chosen language which in my case was PHP and I used <a href="https://github.com/bepsvpt/blurhash"><code>bepsvpt/blurhash</code></a>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$hash</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">blurhash</span><span class="token operator">-></span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$attachment</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// L46[2Hofofof00j[offQ~qofofof</span></code></pre>
<p>And there you go. Everything I (think) I understand about ActivityPub. All of the code for Bugle is <a href="https://github.com/rknightuk/bugle">on GitHub</a> for your perusal.</p>
<h3>Links and Resources</h3>
<p>Thanks to <a href="https://lewisdale.dev">Lewis</a> for his help with verify requests. Articles and implementations I found helpful to work out how all this works:</p>
<h4>Articles</h4>
<ul>
<li><a href="https://justingarrison.com/blog/2022-12-06-mastodon-files-instance/">Mastodon instance with 6 files - Justin Garrison</a></li>
<li><a href="https://macwright.com/2022/12/09/activitypub.html">Playing with ActivityPub - macwright.com</a></li>
<li><a href="https://blog.joinmastodon.org/2018/07/how-to-make-friends-and-verify-requests/">How to make friends and verify requests - Mastodon Blog</a></li>
<li><a href="https://hacks.mozilla.org/2018/11/decentralizing-social-interactions-with-activitypub/">Decentralizing Social Interactions with ActivityPub - Mozilla Hacks - the Web developer blog</a></li>
<li><a href="https://lewisdale.dev/post/you-can-be-friends-with-my-blog/">You can be friends with my blog | LewisDale.dev</a></li>
<li><a href="https://magazine.joomla.org/all-issues/february-2023/turning-the-joomla-website-into-an-activitypub-server">Turning the Joomla website into an ActivityPub server and being an independent participant in the Fediverse - A start - The Joomla Community Magazine</a></li>
<li><a href="https://seb.jambor.dev/posts/activitypub-academy/">ActivityPub.Academy - Sebastian Jambor's blog</a></li>
<li><a href="https://seb.jambor.dev/posts/understanding-activitypub/">Understanding ActivityPub - Sebastian Jambor's blog</a></li>
<li><a href="https://tinysubversions.com/notes/reading-activitypub/">reading-activitypub</a></li>
</ul>
<h4>Implementations</h4>
<ul>
<li><a href="https://github.com/dariusk/express-activitypub">dariusk/express-activitypub: A very simple reference implementation of an ActivityPub server using Express.js</a></li>
<li><a href="https://wordpress.org/plugins/activitypub/">ActivityPub – WordPress plugin | WordPress.org</a></li>
<li><a href="https://github.com/LewisDaleUK/slap">LewisDaleUK/slap: Super Lightweight Activity Pub</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-06-28T05:48:41.588+00:00</pubDate>
</item>
<item>
<title>The Biology of the Hey Bear Fruits Makes No Sense</title>
<link>https://rknight.me/blog/biology-of-hey-bear-fruits/</link>
<guid>https://rknight.me/blog/biology-of-hey-bear-fruits/</guid>
<content:encoded><![CDATA[
<p>Hey Bear is <a href="https://www.youtube.com/channel/UCtf9cFBJkHVAf2qMqF01xYg">a YouTube channel</a> with videos of dancing fruits, vegetables, and other nonsense designed to <s>make kids stfu</s> entertain young children. It works. <a href="https://rknight.me/micro/tags/babyknight/">Baby Knight</a> loves it.</p>
<p>Last night my partner asked if I was okay because I looked distant and downtrodden. I wasn't sad or tired, I was pondering the biology of the fruits that dance in these videos.</p>
<p><img alt="Hey Bear Fruits" src="https://rknightuk.s3.amazonaws.com/site/hey-bear-fruit-banner.jpg" /></p>
<p>The pineapple, Baby Knight's favourite, is a classic fruit-with-a-face; eyes and a mouth on the outside rind of the pineapple. Same with the strawberry, blueberry, and a bunch of others. Pretty standard fare for a children's cartoon, they seem to love it. Beyond those it gets a bit weird.</p>
<p>A single orange, in the Hey Bear cinematic universe, is actually two creatures. The face is on the fleshy inside of each half but how did they get like that? Does a bigger fruit, or a human perhaps, have to cut them in half so they can see and talk and do whatever a living orange half does? What happens if said cutter slices off-centre, does one of them die while the other stays alive but has a part of their sibling's face on theirs, forever haunted by the memory.</p>
<p>The banana's face is <em>inside</em> the peel, able to see only when it's pulled back. Is there a ceremony for this with family and friends gathered round as the local face-revealer performs the act? Perhaps cards are sent to the parents, adorned with &quot;congrats on your baby's face&quot; and &quot;Let's face it, today is a good day&quot; on the front. They don't seem to have the ability to hear or make sound so the face is probably pretty important. Maybe the movie Face-Off is unsettling in their world, or that sewed-up-mouth scene from the Matrix.</p>
<p>And finally the millennial favourite, the avocado. The one we see on screen has the stone in tact but we never other half, the sibling. Is the stoneless sibling an outcast in Hey Bear world or are they lauded for surviving without a fairly important part of an avocado? We might never know.</p>
]]></content:encoded>
<pubDate>2023-06-22T17:44:51.466+00:00</pubDate>
</item>
<item>
<title>Asset Lifespan Spreadsheet</title>
<link>https://rknight.me/blog/asset-lifespan-spreadsheet/</link>
<guid>https://rknight.me/blog/asset-lifespan-spreadsheet/</guid>
<content:encoded><![CDATA[
<p>In <a href="https://listen.hemisphericviews.com/020">episode 20 of Hemispheric Views</a> Andrew talks about his asset lifespan spreadsheet which shows the cost of an item, the date purchased, and the cost per week for said item.</p>
<p>I figured I'd have a crack at making my own and after some wrangling with formula in Numbers I was able to get something up and running. The key part was using the <code>DATEDIF</code> function to get how many days it has been since purchase:</p>
<pre><code>=(cost_of_item / DATEDIF(date_purchased, todays_date, diff_type))

=(B3 / DATEDIF(B2, TODAY, &quot;D&quot;) / 7) // for cost per week
=(B3 / DATEDIF(B2, TODAY, &quot;M&quot;)) // for cost per month
</code></pre>
<p>Which gives me an output like this:</p>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
<th>D</th>
<th>E</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Product</strong></td>
<td><strong>Purchase Date</strong></td>
<td><strong>Cost</strong></td>
<td><strong>Cost Per Week</strong></td>
<td><strong>Cost Per Month</strong></td>
</tr>
<tr>
<td>ATH-M50X</td>
<td>2015-12-13</td>
<td>£85.60</td>
<td>£0.22</td>
<td>£0.96</td>
</tr>
</tbody>
</table>
<p>I don't know what I'm going to do with this information beyond obsess over it but I do know I'm getting my money's worth with those Audio-Technica headphones.</p>
]]></content:encoded>
<pubDate>2023-06-02T16:22:40.119+00:00</pubDate>
</item>
<item>
<title>Brian Butterfield Diet Soundboard</title>
<link>https://rknight.me/blog/brian-butterfield-diet-soundboard/</link>
<guid>https://rknight.me/blog/brian-butterfield-diet-soundboard/</guid>
<content:encoded><![CDATA[
<p>Over the weekend I spent some time splitting the audio from <a href="https://www.youtube.com/watch?v=1NjTWvl8x-U">the Brian Butterfield Diet sketch</a> and then subsequently the <a href="https://www.youtube.com/watch?v=Nyk6sXHY9Vg">Christmas version</a>. Both of these sketches are from <a href="https://en.wikipedia.org/wiki/The_Peter_Serafinowicz_Show">The Peter Serafinowicz Show</a> from 2007.</p>
<p>I split the audio using <a href="https://www.felttip.com/ss/">Sound Studio</a> which has a handy &quot;split by markers&quot; feature then used <a href="https://www.11ty.dev">Eleventy data files</a> to output those files including some titles from a JSON files of all the audio. As much as I'd like to sit and sketch some terrible icons for each food item I went with <a href="https://fontawesome.com">Font Awesome</a> to save some time.</p>
<p>See the <a href="https://treatday.rknight.me/">Brian Butterfield Diet Soundboard</a>.</p>
]]></content:encoded>
<pubDate>2023-05-22T14:27:43.112+00:00</pubDate>
</item>
<item>
<title>One Year of Pizza Making</title>
<link>https://rknight.me/blog/one-year-of-pizza-making/</link>
<guid>https://rknight.me/blog/one-year-of-pizza-making/</guid>
<content:encoded><![CDATA[
<p>In November 2021 I bought an <a href="https://uk.ooni.com/products/ooni-fyra">Ooni Frya 12</a> (thanks Black Friday discounts!) and since then I've used it somewhere between 10 and 15 times. Each time I've managed to make <em>something</em> about the pizza better; the sauce, the dough, the topping ratio. Herein lies my notes about making better pizzas.</p>
<p>For all my pizzas, I've used the <a href="https://ooni.com/blogs/recipes/classic-pizza-dough">Ooni classic dough recipe</a> and I'm always aiming for a (sort of) Neapolitan style pizza.</p>
<h3>Equipment</h3>
<p>When I bought the oven I also picked up two peels: a <a href="https://uk.ooni.com/collections/accessories/products/ooni-wooden-pizza-peel">wooden one</a> and a <a href="https://uk.ooni.com/collections/accessories/products/ooni-pizza-peel">metal one</a>. I tend to only use the metal one so the wooden one has just become a standard chopping board. Ooni's accessories are far more expensive than other brands so I picked up a much cheaper <a href="https://www.amazon.co.uk/dp/B08BFJ3QX5">dough scraper</a> on Amazon and I plan to get a <a href="https://uk.ooni.com/collections/accessories/products/ooni-pizza-turning-peel">turning peel</a> at some point but I won't be paying Ooni's price.</p>
<h3>Dough</h3>
<p><img alt="My first attempt" src="https://rknightuk.s3.amazonaws.com/site/pizza-first.jpg" /></p>
<p>My first batch was reasonably tasty but completely misshapen and definitely not thin enough. I figured using a rolling pin would be fine for rolling out the dough but that doesn't really get it thin enough and also removes a lot of the gas that makes a nice fluffy but crunchy crust. Rolling also made the dough stick to the peel and was really difficult to slide it off into the oven, even with a lot of flour underneath.</p>
<p><a href="https://www.youtube.com/watch?v=Entzcl8q7H4">This video from Ooni</a> helped a lot with working out the stretching technique. I'd also recommend any of <a href="https://www.youtube.com/playlist?list=PL_f8scwrXT8tfSJpDPfGozK2QKj-mEmCA">Brian Lagerstrom's pizza videos</a> to see how he strengthens the dough before proofing.</p>
<p>I used bread flour I had lying around for the first attempt which I've since found out is not ideal. 00 flour, which is a much finer flour, is far better. I switched to <a href="https://www.sainsburys.co.uk/gol-ui/product/all-flour/sainsburys-grade-pasta-flour--taste-the-difference-1kg">Sainsbury's 00 flour</a> and then recently to <a href="https://www.rattonpantry.co.uk/products/caputo%C2%AE-blue-pizzeria-00-italian-pizza-flour">Caputo Pizzeria 00</a>. Each time the dough has gotten tastier and much easier to stretch and shape. One other change I've made is better yeast. I previously used Tesco dried yeast but I found this wasn't raising the dough as much as I liked, so I switched to <a href="https://www.rattonpantry.co.uk/products/caputo-yeast-100g">Caputo yeast</a> which has much better results.</p>
<p>I mix everything by hand (if someone wants to buy me a stand mixer I won't say no) in a metal mixing bowl, and use that for the first 2 hour proofing, then transfer the individual balls of dough into <a href="https://www.amazon.co.uk/dp/B07D7MNHVP">these pots</a>, with a bit of oil to stop them from sticking, and leave them to proof for another 2 hours. If I'm making more than I need I freeze after the first proof and get them out 12-24 hours before I need them and defrost in the fridge.</p>
<p><img alt="Dough in a pot" src="https://rknightuk.s3.amazonaws.com/site/pizza-pot.jpg" /></p>
<h3>Sauce</h3>
<p>I want my sauce to be as easy as possible to make and after some messing around with different recipes, this is what I've come up with for a tasty but easy-to-make sauce:</p>
<ul>
<li>400g chopped tomatoes or passata</li>
<li>100g tomato puree</li>
<li>5g garlic powder</li>
<li>5g salt</li>
<li>5g pepper</li>
<li>5g chilli flakes (optional)</li>
</ul>
<p>This is usually enough for 6-10 pizzas.</p>
<h3>Toppings</h3>
<p>My partner is a bit fussier than I am so we've mostly stuck to chicken and ham for toppings but if I have friends round I'll grab some pepperoni or similar from the supermarket. We've used cheap ham if we have it in the fridge and even that tastes great when combined with the sauce and cheese.</p>
<p>Speaking of cheese, because of availability we've mostly used cheddar which has been fine. Recently I picked up some aged mozzarella and used a 50/50 mix of that and cheddar and it tastes fantastic. <a href="https://www.sainsburys.co.uk/gol-ui/product/galbani-cucina-mozzarella%C2%A0cheese%C2%A0400g">Galbani Cucina Mozzarella</a> is the only aged mozzarella I've been able to find that is available in UK supermarkets.</p>
<p>Finally some other ingredients I've been enjoying:</p>
<ul>
<li><a href="https://jdshothoney.com">JDs Hot Honey</a> which I pop on right as the pizza comes out the over adds a nice bit of sweet flavour.</li>
<li>Candied Jalapenos. I've been using <a href="https://www.amazon.co.uk/Haynes-Gourmet-Candied-Jalapenos-%C2%AE/dp/B07JDSP47S/">these ones from Haynes</a> but I have some fresh jalapenos on the way to attempt to make my own.</li>
<li>A liberal sprinkle of parmesan (or whatever hard italian cheese I can get my hands on).</li>
</ul>
<p><img alt="My latest pizza" src="https://rknightuk.s3.amazonaws.com/site/pizza-latest.jpg" /></p>
]]></content:encoded>
<pubDate>2023-05-03T12:24:32.372+00:00</pubDate>
</item>
<item>
<title>The Knightpool</title>
<link>https://rknight.me/blog/the-knightpool/</link>
<guid>https://rknight.me/blog/the-knightpool/</guid>
<content:encoded><![CDATA[
<p><a href="https://social.lol/@robb/109988701670297916">From me, yesterday</a>:</p>
<blockquote>
<p>We setup a baby name pool at work, £1 a guess. We have 50 names, £51 in the pot. Someone has guessed the name so no money for me.</p>
</blockquote>
<p>Some additional rules we discussed:</p>
<ul>
<li>If the correct answer is guessed by more than one person, the pot is split</li>
<li>Spelling is not important. So &quot;Emelia&quot; and &quot;Amelia&quot; are the same name for the purposes of the Knightpool</li>
</ul>
<p>I'm calling this the Knightpool because I can and definitely not <a href="https://www.marvel.com/characters/deadpool-wade-wilson/in-comics">stealing the idea from Marvel</a>. Here are the 50 names that have been guessed:</p>
<ul>
<li>Abby</li>
<li>Alice</li>
<li>Amy</li>
<li>Ava</li>
<li>Ayla</li>
<li>Beth</li>
<li>Blair</li>
<li>Chantell</li>
<li>Chloe</li>
<li>Claire</li>
<li>Cleo</li>
<li>Daisy</li>
<li>Ella</li>
<li>Ellie</li>
<li>Elsie</li>
<li>Emilia</li>
<li>Emma</li>
<li>Eve</li>
<li>Evie</li>
<li>Faye</li>
<li>Flick</li>
<li>Freya</li>
<li>Gemma</li>
<li>Grace</li>
<li>Hannah</li>
<li>Jane</li>
<li>Jess</li>
<li>Jill</li>
<li>Jo (note: Two people guessed this name)</li>
<li>Joy</li>
<li>Kate</li>
<li>Kayleigh</li>
<li>Laura</li>
<li>Leah</li>
<li>Lilly</li>
<li>Liz</li>
<li>Lucy</li>
<li>Maisie</li>
<li>Mia</li>
<li>Millie</li>
<li>Nora</li>
<li>Olivia</li>
<li>Paige</li>
<li>Phoebe</li>
<li>Quinn</li>
<li>Rose</li>
<li>Sarah</li>
<li>Sophie</li>
<li>Tess</li>
<li>Zoe</li>
</ul>
]]></content:encoded>
<pubDate>2023-03-09T10:02:00.753+00:00</pubDate>
</item>
<item>
<title>Food Graveyard</title>
<link>https://rknight.me/blog/food-graveyard/</link>
<guid>https://rknight.me/blog/food-graveyard/</guid>
<content:encoded><![CDATA[
<p>Discontinued food items I miss.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=gFurmW0iajM">Fruit Allsorts</a></li>
<li><a href="https://inews.co.uk/inews-lifestyle/food-and-drink/brannigans-crisps-discontinued-pub-classic-britons-mourning-657852">Brannigans beef and mustard</a></li>
<li><a href="http://www.collectingcandy.com/wordpress/?attachment_id=4204">Wonkalate</a></li>
<li><a href="https://candymail.co.uk/products/campino-strawberry-and-yogurt-120g">Campino Strawberry and Yoghurt</a></li>
<li><a href="https://www.ukfoodexport.com/nestle_toffee_crisp_honeycomb_38g/">Toffee Crisp honeycomb</a></li>
<li><a href="https://www.mirror.co.uk/news/uk-news/nestl-discontinued-tooty-frooties-after-14175754">Tooty Frooties</a></li>
<li><a href="https://en.wikipedia.org/wiki/Mingles">Mingles</a></li>
<li><a href="https://www.betterretailing.com/br/product-news/walkers-launches-limited-edition-sensations-to-mark-coronation/">Sensations Regal Lamb and Mint</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-02-24T22:54:57.098+00:00</pubDate>
</item>
<item>
<title>No More Ratings</title>
<link>https://rknight.me/blog/no-more-ratings/</link>
<guid>https://rknight.me/blog/no-more-ratings/</guid>
<content:encoded><![CDATA[
<p>When I used to use <a href="http://plotapp.io/">Plot</a> (RIP) to track movies that had a thumbs up or down system. When I switched to my own CMS for this I did the same thing. Then when I switched to Letterboxd I translated what was essentially a 1-3 rating system to the five-star system (even though it's actually out of ten not five) Letterboxd uses. From <a href="https://letterboxd.com/rknightuk/">my Letterboxd profile</a>:</p>
<blockquote>
<p>★☆☆☆☆ : Never again</p>
<p>★★★☆☆ : Fine</p>
<p>★★★★★ : Good movie, would watch again</p>
</blockquote>
<p>The problem with this system is I mostly don't watch bad movies. Or a better way to put it is I kinda like <a href="https://en.wikipedia.org/wiki/Fast_&amp;_Furious">bad movies</a>. Despite knowing intellectually that <a href="https://en.wikipedia.org/wiki/The_Shawshank_Redemption">Shawshank Redemption</a> is a &quot;better&quot; movie than <a href="https://en.wikipedia.org/wiki/Olympus_Has_Fallen">Olympus Has Fallen</a> they're both rated 5 stars in my system. I could change my system to use the full spectrum of the five stars but I just don't have the energy or the inclination to do it. How do I decide what gets 4.5 stars and what gets a 5? Is there really a discernible difference between those two ratings? Also, who gives a shit what number I've ordained upon a movie?</p>
<p>So fuck it. No more ratings.</p>
]]></content:encoded>
<pubDate>2023-02-14T09:52:15.619+00:00</pubDate>
</item>
<item>
<title>Add to MusicThread Shortcut</title>
<link>https://rknight.me/blog/add-to-musicthread-shortcut/</link>
<guid>https://rknight.me/blog/add-to-musicthread-shortcut/</guid>
<content:encoded><![CDATA[
<p><a href="https://musicthread.app/">MusicThread</a> is &quot;<em>a website to create and share lists of music</em>&quot; by <a href="https://mastodon.social/@edwellbrook">Ed Wellbrook</a>. I recently started using it to save <a href="https://musicthread.app/thread/2L6IuBPKCCo7fsA8SFyXZLirH5W">new tracks I've found</a> and <a href="https://musicthread.app/thread/2L6LZz60026Onq3waGuwt7WdJ5x">new albums</a>, which are then cross-posted to <a href="https://social.lol/@robb">my Mastodon account</a> with <a href="https://echo.rknight.me">Echo</a>.</p>
<p>The iOS app, currently in beta, has a share sheet extension for adding to a thread, but for MacOS I needed to make something in Shortcuts. The shortcut I've made (after a lot of ranting about how bad shortcuts is) can either ask for a music link to add, or be used directly from Apple Music under the share menu. It then asks which thread to add the link to.</p>
<p><a href="https://www.icloud.com/shortcuts/d127fd30d412423b86c06bcff7f9cea6">Download Add to MusicThread Shortcut</a></p>
]]></content:encoded>
<pubDate>2023-02-06T18:04:43.513+00:00</pubDate>
</item>
<item>
<title>Notes on Migrating a Wordpress Site to Eleventy</title>
<link>https://rknight.me/blog/note-on-migrating-wordpress-site-eleventy/</link>
<guid>https://rknight.me/blog/note-on-migrating-wordpress-site-eleventy/</guid>
<content:encoded><![CDATA[
<p>I recently helped my friend Tim move <a href="https://nahumck.me/">his site</a> from a Wordpress install to a much simpler Eleventy setup. The biggest hurdle was transforming the Wordpress exported data into Markdown files. Thankfully <a href="https://github.com/lonekorean/wordpress-export-to-markdown"><code>wordpress-export-to-markdown</code></a> exists. This is a command line tool that takes a wordpress export, puts all the posts in markdown files, and downloads all the images contained in the posts.</p>
<p>I did make an adjustment to this script so I could add a <code>permalink</code> attribute to each post by editing the <code>parser.js</code> file:</p>
<pre class="language-diff"><code class="language-diff">frontmatter: {<br /><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   title: getPostTitle(post),<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   permalink: `${getPostSlug(post)}/index.html`,<br /></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   date: getPostDate(post),<br /></span><span class="token prefix unchanged"> </span><span class="token line">   categories: getCategories(post),<br /></span><span class="token prefix unchanged"> </span><span class="token line">   tags: getTags(post)<br /></span></span>}</code></pre>
<p>The image download will take a while but once it was done I had all the posts and all the images ready to pop into an Eleventy site.</p>
<p>To match Tim's existing site it needed support for markdown footnotes and image captions. As a side note here, footnotes <em>do not</em> export well from Wordpress via the CLI tool so I had to manually fix all of them which was not fun. <a href="https://www.alpower.com/">Al Power</a> had an article for both of these features which was handy. To add footnote support I followed the steps in <a href="https://www.alpower.com/tutorials/configuring-footnotes-with-eleventy/">this article</a> which outlines how to include <code>markdown-it-footnote</code> for the markdown parsing and <a href="https://www.alpower.com/tutorials/adding-figures-with-captions-to-images-in-markdown-with-eleventy/">this article</a> to add image captions.</p>
<p>All in all it went fairly smoothly - without <code>wordpress-export-to-markdown</code> I would have had to write my own parsing script which I'm very glad I didn't have to do.</p>
]]></content:encoded>
<pubDate>2023-01-31T22:13:16.196+00:00</pubDate>
</item>
<item>
<title>Additional Webmention Resources</title>
<link>https://rknight.me/blog/additional-webmention-resources/</link>
<guid>https://rknight.me/blog/additional-webmention-resources/</guid>
<content:encoded><![CDATA[
<p>Some more links and tools I've found or had saved about webmentions. Read my post on <a href="https://rknight.me/adding-webmentions-to-your-site/">adding webmentions here</a>.</p>
<h3><a href="https://github.com/remy/wm">@remy/webmention</a></h3>
<p>Sadly the webapp side of this is <a href="https://remysharp.com/2023/01/30/on-vercel-if-some-of-my-sites-are-down">down at the moment</a> but the command line tool for <em>sending</em> webmentions is completely standalone.</p>
<p>You can pass the script a url or an RSS feed and it will scan it to find links, confirm those sites accept web mentions, and send those mentions. I ran it once on my whole feed to send any mentions and then added it to my build steps to run it on the latest post:</p>
<pre class="language-bash"><code class="language-bash">npx webmention /path/to/feed.xml <span class="token parameter variable">--limit</span> <span class="token number">1</span> <span class="token parameter variable">--send</span></code></pre>
<h3><a href="https://github.com/CodeFoodPixels/eleventy-plugin-webmentions">eleventy-plugin-webmentions</a></h3>
<blockquote>
<p>An eleventy plugin to fetch webmentions and helper methods to display them</p>
</blockquote>
<p>Why didn't I look for a plugin when I was doing webmentions? No idea. This is going on my list to review and see if I can streamline my code a bit.</p>
<h3>Links</h3>
<p>Some other articles I had saved related to this:</p>
<ul>
<li><a href="https://ashleykolodziej.com/add-webmentions-to-static-site/">How I added Webmentions support to my static website | Ashley Kolodziej - Boston Freelance Web Designer</a></li>
<li><a href="https://sia.codes/posts/webmentions-eleventy-in-depth/">An In-Depth Tutorial of Webmentions + Eleventy</a></li>
<li><a href="https://rowanmanning.com/posts/webmentions-for-your-static-site/">Webmentions for your Static Site | Rowan Manning</a></li>
<li><a href="https://css-irl.info/scheduling-netlify-deployments-with-github-actions/">Scheduling Netlify Deployments with Github Actions</a></li>
<li><a href="https://cactus.chat/">Cactus Comments - Federated Web Comments</a></li>
<li><a href="https://cassidyjames.com/blog/fediverse-blog-comments-mastodon/">Toot toot! Mastodon-powered Blog Comments ⋅ Cassidy James Blaede</a></li>
<li><a href="https://git.lewisdale.dev/lewis/webmentions">lewis/webmentions - OpenWebmentions - Gitea: Git with a cup of tea</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-01-31T00:00:00+00:00</pubDate>
</item>
<item>
<title>Adding Webmentions to Your Site</title>
<link>https://rknight.me/blog/adding-webmentions-to-your-site/</link>
<guid>https://rknight.me/blog/adding-webmentions-to-your-site/</guid>
<content:encoded><![CDATA[
<p>Right off the bat, I read the following two articles to get a sense of how to do this so I won't go over too much of the same content but rather add some thoughts of my own about the process. I would highly recommend reading both of these.</p>
<ul>
<li><a href="https://janmonschke.com/adding-webmentions-to-your-static-blog/">Adding webmentions to your static blog by Jan Monschke</a></li>
<li><a href="https://mxb.dev/blog/using-webmentions-on-static-sites/">Using Webmentions in Eleventy by Max Böck</a></li>
</ul>
<p>Also, I feel like I muddled through this to get it to work. JSON and API requests I can understand. The <em>how</em> of webmentions I'm still a bit confused on but we will proceed nonetheless.</p>
<h3>What are webmentions?</h3>
<p><a href="https://webmention.net/">Webmentions are</a>:</p>
<blockquote>
<p>a simple way to notify any URL when you link to it from your site</p>
</blockquote>
<p>Sounds simple enough. It's a link (or a comment, or reply, or like) to an article on my site. What I do know of webmentions from sites like <a href="https://localghost.dev/">Sophie's</a> and <a href="https://www.zachleat.com/">Zach's</a> is that <em>somehow</em> I can have likes, boosts, and replies from Mastodon show up on my blog posts.</p>
<h3>How though?</h3>
<p>This bit has confused me for months (I had a note about this dated November last year). Admittedly I didn't look too far into it but pretty much every article about webmentions will link to two sites: <a href="https://webmention.io/">webmention.io</a> and <a href="https://brid.gy/">Bridgy</a>.</p>
<h4><a href="http://Webmention.io">Webmention.io</a> and IndieLogin</h4>
<p><a href="http://Webmention.io">Webmention.io</a> is:</p>
<blockquote>
<p>a hosted service created to easily receive webmentions on any web page</p>
</blockquote>
<p><a href="http://Webmention.io">Webmention.io</a> <em>collects</em> your webmentions and exposes an API to be able to fetch these mentions but to start off you need to login which was my first hurdle: <code>We couldn't find any way to authenticate you using your website.</code>. <a href="http://Webmention.io">Webmention.io</a> uses <a href="https://indielogin.com/setup">IndieLogin</a> to log you in and apparently I hadn't added <code>rel=&quot;me&quot;</code> to any of my social links. So I added a Github link, deployed it, and was then able to login. Success.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/rknightuk<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>me<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>github.com/rknightuk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p>Once I logged in I was presented with tags to add to my site to accept webmentions so I promptly added those:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webmention<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://webmention.io/rknight.me/webmention<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br />&lt;link rel="pingback" href="https://webmention.io/rknight.me/xmlrpc" /</code></pre>
<p>At this point, this system will work for &quot;proper&quot; webmentions (although not added to my site yet) but what about conversations on Mastodon? That's where Bridgy comes in.</p>
<h4>Bridgy</h4>
<p>Bridgy &quot;connects your web site to social media&quot; according to the home page but moreso it converts conversations on social media to webmentions to send back to <a href="http://webmention.io">webmention.io</a>.</p>
<p>I went ahead and signed in with my Mastodon account. After a few minutes Bridgy started showing responses to some recent Mastodon posts that had links to my blog posts. I then went back to <a href="http://webmention.io">webmention.io</a> and there they all were. I'm not sure of the limitations of the initial scan but it only showed the last few posts I had done so I manually went and grabbed some Mastodon posts linking to my blog and put them in the &quot;Resend for post&quot; input box to grab some earlier responses.</p>
<h3>Showing Webmentions on my Site</h3>
<p>I'm using <a href="https://www.11ty.dev/docs/data-global/">Eleventy data files</a> extensively to power my <a href="https://rknight.me/automating-my-now-page/">now page</a> so I knew this would be trivial to pull into my site. Because I already have my <a href="https://github.com/rknightuk/api">&quot;api&quot;</a> I decided to fetch it there instead and <em>then</em> pull it into my site. For the sake of simplicity assume you don't like making your life difficult and all this would exist in Eleventy (or your site of choice).</p>
<h4>Fetching Mentions</h4>
<p><a href="http://Webmention.io">Webmention.io</a> has <a href="https://github.com/aaronpk/webmention.io#api">an API</a> to fetch mentions. There are a few different endpoints but I wasn't able to work out what all the differences were so I went with the <code>mention.jf2</code> with no other options. <a href="https://github.com/rknightuk/api/blob/main/services/webmentions.js">Source on GitHub</a>.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// this API also accepts `since_id` to only get new mentions</span><br /><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://webmention.io/api/mentions.jf2?token=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>webmentionskey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;per-page=1000</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">const</span> newMentions <span class="token operator">=</span> body<span class="token punctuation">.</span>children</code></pre>
<p>I've set this up to run every hour on a cron, merge new data with the existing data, and then write the data to <a href="https://api.rknight.me/api/webmentions.json">a JSON file</a>. <a href="http://Webmention.io">Webmention.io</a> <em>does</em> have an option for sending a webhook when a new mention comes in (under &quot;settings&quot;) but that might be a lot of rebuilding if a post gets popular so I'm sticking with this method for now. Then in Eleventy, I fetch this data in <a href="https://github.com/rknightuk/rknight.me/blob/master/src/_data/webmentions.js"><code>src/_data/webmentions.js</code></a>.</p>
<p>To get this to render on my post pages, I lifted most of <a href="https://mxb.dev/blog/using-webmentions-on-static-sites/">Max's solution</a> with a few changes like grouping the different types of responses together. As an aside, I still don't know what a <code>mention-of</code> webmention looks like or how one happens.</p>
<p><strong>Update 07/07/2023</strong></p>
<p>I finally got some data to see what <code>mention-of</code> gives. I decided against showing these though because at least half of them didn't exist after only ~6 months.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"entry"</span><span class="token punctuation">,</span><br />    <span class="token property">"author"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"card"</span><span class="token punctuation">,</span><br />    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><br />    <span class="token property">"photo"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><br />    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">""</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blog.luiscarlospando.com/coding/2023/02/hay-nuevo-sistema-de-comentarios-en-mi-blog-2/"</span><span class="token punctuation">,</span><br />    <span class="token property">"published"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-received"</span><span class="token operator">:</span> <span class="token string">"2023-07-07T00:18:46Z"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-id"</span><span class="token operator">:</span> <span class="token number">1693400</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-source"</span><span class="token operator">:</span> <span class="token string">"https://blog.luiscarlospando.com/coding/2023/02/hay-nuevo-sistema-de-comentarios-en-mi-blog-2/"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-target"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/adding-webmentions-to-your-site/"</span><span class="token punctuation">,</span><br />    <span class="token property">"mention-of"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/adding-webmentions-to-your-site/"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-property"</span><span class="token operator">:</span> <span class="token string">"mention-of"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-private"</span><span class="token operator">:</span> <span class="token boolean">false</span><br /><span class="token punctuation">}</span></code></pre>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br />eleventyConfig<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span><span class="token string">'webmentionsByUrl'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">webmentions<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> allowedTypes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'in-reply-to'</span><span class="token punctuation">,</span> <span class="token string">'like-of'</span><span class="token punctuation">,</span> <span class="token string">'repost-of'</span><span class="token punctuation">]</span><br /><br />    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'like-of'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'repost-of'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'in-reply-to'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">const</span> <span class="token function-variable function">hasRequiredFields</span> <span class="token operator">=</span> <span class="token parameter">entry</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> <span class="token punctuation">{</span> author<span class="token punctuation">,</span> published<span class="token punctuation">,</span> content <span class="token punctuation">}</span> <span class="token operator">=</span> entry<br />        <span class="token keyword">return</span> author<span class="token punctuation">.</span>name <span class="token operator">&amp;&amp;</span> published <span class="token operator">&amp;&amp;</span> content<br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">const</span> filtered <span class="token operator">=</span> webmentions<br />        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">entry</span> <span class="token operator">=></span> entry<span class="token punctuation">[</span><span class="token string">'wm-target'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://rknight.me</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">entry</span> <span class="token operator">=></span> allowedTypes<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>entry<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br />    filtered<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token keyword">const</span> isReply <span class="token operator">=</span> m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'in-reply-to'</span><br />            <span class="token keyword">const</span> isValidReply <span class="token operator">=</span> isReply <span class="token operator">&amp;&amp;</span> <span class="token function">hasRequiredFields</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span>isReply<span class="token punctuation">)</span><br />            <span class="token punctuation">{</span><br />                <span class="token keyword">if</span> <span class="token punctuation">(</span>isValidReply<span class="token punctuation">)</span><br />                <span class="token punctuation">{</span><br />                    m<span class="token punctuation">.</span>sanitized <span class="token operator">=</span> <span class="token function">sanitizeHTML</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>content<span class="token punctuation">.</span>html<span class="token punctuation">)</span><br />                    data<span class="token punctuation">[</span>m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><br />                <span class="token punctuation">}</span><br /><br />                <span class="token keyword">return</span><br />            <span class="token punctuation">}</span><br /><br />            data<span class="token punctuation">[</span>m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">return</span> data<br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<pre class="language-js"><code class="language-js"><span class="token comment">// _templates/post.njk</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> webmentionUrl <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> page<span class="token punctuation">.</span>url <span class="token operator">|</span> stripIndex <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> endset <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> include <span class="token string">'webmentions.njk'</span> <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
<pre class="language-js"><code class="language-js"><span class="token comment">// webmentions.njk</span><br /><span class="token comment">// Then the same again as this for `repost-of` and `in-reply-to`</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> mentions<span class="token punctuation">[</span><span class="token string">'like-of'</span><span class="token punctuation">]</span><span class="token operator">|</span>length <span class="token operator">%</span><span class="token punctuation">}</span><br />    <span class="token operator">&lt;</span>h4<span class="token operator">></span>Likes<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span><br />    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"webmentions--likeboost"</span><span class="token operator">></span><br />        <span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">for</span> like <span class="token keyword">in</span> mentions<span class="token punctuation">[</span><span class="token string">'like-of'</span><span class="token punctuation">]</span> <span class="token operator">%</span><span class="token punctuation">}</span><br />            <span class="token operator">&lt;</span>a target<span class="token operator">=</span><span class="token string">"_blank"</span> rel<span class="token operator">=</span><span class="token string">"noopener"</span> href<span class="token operator">=</span><span class="token string">"{{like.author.url}}"</span><span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"{{like.author.photo}}"</span> title<span class="token operator">=</span><span class="token string">"{{like.author.name}}"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><br />        <span class="token punctuation">{</span><span class="token operator">%</span> endfor<span class="token operator">%</span><span class="token punctuation">}</span><br />    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><br /><span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
<p>A little bit of CSS later and we have lift off:</p>
<p><img alt="Webmentions example" src="https://rknightuk.s3.amazonaws.com/site/webmentions.png" /></p>
<p>You might even see some webmentions below this post if I'm lucky.</p>
]]></content:encoded>
<pubDate>2023-01-30T00:00:00+00:00</pubDate>
</item>
<item>
<title>Twitter Backup and Archiving Options</title>
<link>https://rknight.me/blog/twitter-backup-and-archiving-options/</link>
<guid>https://rknight.me/blog/twitter-backup-and-archiving-options/</guid>
<content:encoded><![CDATA[
<p>If you want to make your Twitter archive a bit more useful than the standard backup Twitter give you, there are 3 options of varying complexity I'm aware of.</p>
<h3>Option 0: Don't do anything</h3>
<p>This is by far the easiest option. Don't care about your tweets. Let them wither away into the ether. Be free from the shackles of hoarding your data.</p>
<h3>Option 1: Tiny Subversions</h3>
<p><a href="https://tinysubversions.com/twitter-archive/make-your-own/">Darius Kazemi of Tiny Subversions</a> made this tool to make a self hosted, searchable archive. It's as simple as uploading the <code>.zip</code> file of your archive, give it a minute, and the new archive will be downloaded.</p>
<p><img alt="Tiny Subversions twitter archive" src="https://rknightuk.s3.amazonaws.com/site/twitter-tiny-subversions.png" /></p>
<h3>Option 2: TwitVault</h3>
<p><a href="https://terhechte.github.io/twitvault/">TwitVault/</a> is a desktop App for Mac, Windows, and Linux that has the biggest feature set. Download it, login with your Twitter credentials, and let it do it's thing. This initial setup will pull everything is can from the Twitter API but that has limits: 3200 tweets and 800 mentions. Once that part of the setup is done (this can take a while), you can then pull in your full archive in the terminal.</p>
<p><img alt="TwitVault screenshot" src="https://rknightuk.s3.amazonaws.com/site/twitter-twitvault.png" /></p>
<h3>Option 3: Tweetback</h3>
<p><a href="https://github.com/tweetback/tweetback">Tweetback</a> is a tool built with <a href="https://www.11ty.dev/">Eleventy</a> and is my current choice for making my archive available. You can see mine at <a href="https://hellsite.rknight.me/">hellsite.rknight.me</a>. The steps to get this working are more involved than the previous options but I'm a big fan of the output. I won't go through the steps here but the <a href="https://github.com/tweetback/tweetback/blob/main/README.md">readme</a> has detailed instructions.</p>
<p><img alt="Tweetback screenshot" src="https://rknightuk.s3.amazonaws.com/site/twitter-tweetback.png" /></p>
<p>One other related part of Tweetback is <a href="https://github.com/tweetback/tweetback-canonical">tweetback-canonical</a>. If you add your archive and username to the repository, anyone who uses Tweetback and has tweets that mention you, those tweets will link back to your archive rather than Twitter's website itself. For example, <a href="https://hellsite.rknight.me/1489618994000805889/">this tweet</a> where I mention Zach links to <a href="https://www.zachleat.com/twitter/1489616692678434816">his archive</a>.</p>
]]></content:encoded>
<pubDate>2023-01-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>Letters: January 2023</title>
<link>https://rknight.me/blog/letters/</link>
<guid>https://rknight.me/blog/letters/</guid>
<content:encoded><![CDATA[
<p>Letters is a ongoing project by <a href="https://json.blog/2022/11/28/a-new-project.html">Jason Becker</a> that I was involved in for this month. The what:</p>
<blockquote>
<p>Letters will involve me corresponding with someone else on the internet over the course of a month. Each week, we will each write a letter to each other. There are no set topics.</p>
</blockquote>
<p>The why:</p>
<blockquote>
<p>I was thinking about how much of our history (in the West at least) comes from important figures having extensive private correspondences that were saved, catalogued, and released after their deaths. And while I’d love some private pen pals, it just got me thinking that public letters are a rich way to discuss complex issues.</p>
</blockquote>
<p>Jason posted that in November and I thought it sounded like an interesting thing to be involved in. While I don't think we hit the heights of &quot;historical figures discussing complex issues&quot;, we did have conversations about taking stock, finding time for personal projects and hobbies, and of course my Topic of the Year™ 2022: DIY. Below are the four emails from me with Jason's responses (and links to the posts on Jason's site).</p>
<p>Jason is doing this for the rest of the year which I'm looking forward to.</p>
<hr />
<h3><a href="https://json.blog/2023/01/01/letters-january-w.html">Week 1: 2023-01-01</a></h3>
<blockquote>
<p>Hi Jason,</p>
<p>We have only interacted briefly on Micro.blog so I figured I should start by introducing myself. I’m a 30-something developer working on software for the property industry. I live with my partner, Jess, and two cats in Portsmouth on the south coast of the UK.</p>
<p>We have spent the past 12 months decorating and redoing every room in our house - the previous owners lived here since it was built in 1971 and hadn’t done any work to it since then. This involved me learning a whole set of new skills like floor laying, wallpapering, and fitting new skirting boards (baseboards for Americans).</p>
<p>In July we found out my partner was pregnant with a girl and she is due in March 2023. This accelerated the timeline of getting the house finished but we are now ready for her arrival at least in terms of furniture and the nursery. Mentally ready? I’m not so sure.</p>
<p>Look forward to hearing from you, Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
<p>First of all, congratulations on pending fatherhood! I’m glad we were able to slip in our month of correspondance before the pending sleep depravation.</p>
<p>What an exciting and busy year. Even though we moved into our home 5 years ago (and it was new construction), I still feel like we need to keep decorating and redoing. Our work has been less skills-based and more “accumulating more stuff than I am comfortable owning”-based, since our new(ish) home is much larger than the 700 square feet we lived in previously. I have always found that I have ambitious of being handy in theory, but mostly fail when it comes to applying that ambition. At this stage, my partner Elsa just pays people to do things before telling me they’ve gone wrong or haven’t happened.</p>
<p>I am curious, what room or project are you most proud of? I’m not quite “done”, but pretty close to having my office set up how I’d like. It was a big pandemic project since we got rid of the company office right away. Having my own space has changed my whole relationship with my home.</p>
<p>I took a peek at the work you do and it’s fascinating. I have actually discussed this area (home management, focused on home inspections in the US followed by “asset management” and warranty support nad the like) with my work partner multiple times as an idea to pursue{^tech]. The intersection of home-renovation and your work must have been an interesting exercise. I’d be curious what you’ve learned managing your house that suprised you or changed your perspective on the work you do day to day.</p>
<p>Thanks for your participation in Letters. I’m already enjoying this project, and I hope others will as well.</p>
<p>Jason</p>
</blockquote>
<h3><a href="https://json.blog/2023/01/10/letters-january-w.html">Week 2: 2023-01-10</a></h3>
<blockquote>
<p>Good Morning Jason,</p>
<p><em><strong>what room or project are you most proud of?</strong></em></p>
<p>The office was my top priority (my partner had different ideas) as I spend 3-4 days a week working in there and I’m very proud of how that turned out. I built the desktop and matching shelves myself from scaffold boards because finding something in the exact size I wanted turned out to be fairly difficult. This was a project that took a few weekends of lots of sanding, glueing, and staining but the final results is something I’m very proud of. Here’s an in-progress shot and the final result in situ. I also did the faux wood-panelling in our bedroom which we’re both very pleased with.</p>
<p>The work I do is primarily focused on property reports for tenants (inventories, fire risk assessments, etc) so there isn’t much crossover with renovating the house but I what I did learn is that planning is key. We wish we had spent a few weeks planning what we wanted to achieve before jumping into the renovation. There were definitely things that made our life a bit more difficult because we did some work when we should have waited for another job to be finished first.</p>
<p>That sounds like an interesting job but it must be difficult to work with organisations like schools that can be slow and unwieldy to get new tech implemented. How long have you been doing that?</p>
<p>I saw you posted yesterday about being ill, hope you’re feeling a bit better today?</p>
<p>Speak soon,<br />
Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
<p>Luckily, I am feeling better. Note to self, when you order a steak medium and it comes out <em>just barely rare</em> just send the damn thing back. The day of suffering that followed was not worth it.</p>
<p>I've done some more work in my office since this last photo, but this is a <a href="https://json.blog/2021/07/18/current-state-of.html">not-terribly-inaccurate representation of where things are</a>. I also use the IKEA pegboard. I did not quite get as fancy on the desk itself-- which is an IKEA Karlby 98&quot; top that I had a friend cut to 80&quot; and then added some really cool metal legs from an Etsy shop. When the pandemic hit we went 100% remote, which meant tha this room got transformed into an office. I probably have 6-10 scattered blog posts about the process that landed on the setup linked above-- most of the changes by now are additional plants and things hung on the wall (plus some equipment changes).</p>
<p>I think it's pretty natural for the office to be the place you're most proud of-- it's one you get to call your own and the spot you're probably stuck spending the most time in.</p>
<p>We've been thinking about doing a similar paneling look either behind our bed or possibly behind our TV. Maybe that'll be a project for when we return home. It's hard to have a big wall behind a TV-- it looks bare without anything, but most things we could put there would be distracting.</p>
<p><a href="https://json.blog/uploads/2023/938df46b2f.jpg">https://json.blog/uploads/2023/938df46b2f.jpg</a></p>
<p>I've been working at my current company nearly 9 years. Before that, I worked at a university research center working with school districts on early warning systems, and before that, I worked for the state department of education. I think what's most challenging is that everyone is well-established. There aren't new school districts popping up building their systems and processes from scratch. The people, organizations, culture, and work processes are all fairly fixed. So we have to do things much more completely and better than most companies to even get in the door. Then we have to get a large set of folks on board so that we can deliver on our promise. We're a small team and we're supporting billions of dollars of budgeting and monitoring. There's a lot of technical/systems and cultural debt that we have to work with to succeed.</p>
<p>That said, the opportunity for improvement is huge, and it's very satisfying when someone gets it and we can make their work so much easier and more effective.</p>
<p>Looking forward to next week<br />
Jason</p>
</blockquote>
<h3><a href="https://json.blog/2023/01/19/letters-january-w.html">Week 3: 2023-01-19</a></h3>
<blockquote>
<p>Hi Jason,</p>
<p>A late reply this week - I completely forgot about this until very late last night.</p>
<p>Your TV setup looks very similar to ours but we're lucky enough to have two wall lights behind it so the wall looks much less bare but you're right it's hard to put anything to garish there otherwise it's distracting.</p>
<p>With 10 weeks to go, I've been thinking a lot about technology and how that will affect my duaghter. <a href="https://sallylait.com/blog/2022/08/25/digital-shadow-inheritance/">This post</a> in particular made me think about how much I'm going to share about her online once she's here. I don't think there's any right answer but it has occupied my mind the past few days.  Come to think of it, the impending birth is basically the only thing I can think about at the moment. I'm sure that we'll be fine but I can't help but worry that we won't have enough clothes or nappies, or something I haven't even thought of will go wrong.</p>
<p>As for non-baby things, I've been having fun messing around with the omg.lol API <a href="https://github.com/rknightuk/omglolcli">building a CLI to interact with the service</a> and I'm working on add a /now page to my website (as well as the new omg.lol now pages). How has your week been this week?</p>
<p>Speak soon,<br />
Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
<p>Easily excusing the &quot;late&quot; reply (rules are once per week, doesn't have to be right at the start), with a later reply of my own. This week has been incredibly busy at work as the post-holiday break, post-three day weekend, we're really back at it and in it, started to kick in. It's been long but rewarding-- one of those weeks where you're exhausted, but I'm doing the kind of work I do well bringing the energy and attention I need to.</p>
<p>In particular, I've recently reorganized our team so that I have slightly smaller set of direct reports that are more &quot;coherent&quot; structurally-- I am managing directly one person who leads each function below me. It's too early to say if this is working better for the whole team, but this week made me feel confident that it works better for <em>me</em>, which is really important for avoiding burn out.</p>
<p>On the TV side, wall lights were another thing we considered-- a sconce on each side just to give it <em>something</em>. It just feels strange to have so much blank space <em>above</em> the TV as well. I need someone to, I don't know, share a Pinterest board or something with me so I can figure out what people actually do. The entire dilemma of what to do behind the TV reinforces a personal frustration of mine. It feels wrong that our &quot;living room&quot; is oriented toward a television. I would like for things to be different, but I don't think my partner or her mother would be sufficiently on board to make that change. It's more aspirational, really, to make sure that all television time is <em>appointment</em> time and not casual watching.</p>
<p>I cannot imagine the stack of worry that comes with being just weeks away from being a dad. It's good to work with fun new tools right now while you can-- a good distraction before side projects get put aside for a while. My gut is that it's not worth worrying too much about online presence. I'm not a parent, and I'm not facing that decision, but my gut is that it's easy to overthink the consequences (or lack thereof). Short of straight up exploitation, which is rare, these things seem to work out ok for parents and kids regardless of the choices they make. That's not to say the choices don't matter, but it seems like there aren't wrong choices.</p>
<p>I'm a big fan of /now pages (I really need to update mine). I really value the narrative of a Now page. For me, it's a time I get to think about what matters that gets lost in the series of smaller posts or dripped out updates. I have resisted adding any &quot;automated&quot; elements-- it'd be easy to add the book I'm currently reading, for example, or maybe something like starred articles from my RSS reader. Something to think about.</p>
<p>We're coming to the end of our time in Mexico. I'm thinking a lot about what makes home, well, home, and what I've learned about where I want to live and what I want my life to be like from 2+ months away. It's a different kind of taking stock than becoming a parent, but I find myself taking stock nonetheless.</p>
<p>Looking forward to next week,<br />
Jason</p>
</blockquote>
<h3><a href="https://json.blog/2023/01/28/hi-jason.html">Week 4: 2023-01-28</a></h3>
<blockquote>
<p>Hi Jason,</p>
<p>Another later-in-the-week reply for our last week of this project. To what you said about taking stock, I think a break or a big life change is an excellent time to think about these things. We found ourselves doing that when we moved into this house and once again when we knew we were having a child.</p>
<p>Onto which, the final preparations are now taking place: washing the clothes, organising the nursery, and prepping the hospital bag (a long with many pregnancy and post-pregnancy products I'd never realised even existed). I've gone past the worrying stage now for the most part and I'm focusing on things I <em>can</em> control.</p>
<p>Mexico sounds wonderful and I hope you've been able to relax and enjoy it - spending an extended time away from home in somewhere so different sounds lovely.</p>
<p>Now to get a little bit meta about this project of yours. Having done this for four weeks now I'm struck by how difficult I've found being committed to writing <em>something</em> every week - it's certainly a good job I suggested early in the year pre-baby else I'm not sure it would have gone quite as well. Despite having ideas here and there for little projects or blog posts something about the somewhat stricter schedule I've struggled to do it &quot;on time&quot; (despite the loose rules).</p>
<p>I have, however, really enjoyed being part of this project and I'm looking forward to reading in the coming months.</p>
<p>Speak soon,<br />
Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
<p>It’s funny, because here at the beginning of this project, while taking stock, I’ve had two contrary reactions. First, it does take a surprising amount of discipline to sit down and write to someone. It’s certainly harder than just shooting off whatever is at the top of my mind. Second, it feels so feeble to just write a letter once a week while I see all the progression you’ve been making on several side projects, while preparing for the baby, during this same month.</p>
<p>You’ve been <a href="https://rknight.me/automating-my-now-page/">automating your now page</a>, <a href="https://rknightuk.github.io/mac-30-font-svg/">released a widely celebrated set of icons</a>, built a <a href="https://github.com/rknightuk/omglolcli">CLI for omg.lol</a>, and a host of other small projects. Based on <a href="https://chaosweb.space">chaosweb.space</a>, I think you’d like <a href="https://mynameiser.in">mavica’s work</a>.</p>
<p>It’s generating that itch in me again to figure out how to leave some energy at the end of the day to do the things I love on the computer after doing those things at work all day on the computer. Part of my taking stock is realizing that I have to find a way to push over that activation energy hump so that I can just work on small tools for myself all the time.</p>
<p>I’m glad this first month felt like just writing letters to a friend about what’s happening— it feels like an easy introduction. Maybe they’ll all go this way, but maybe some folks will want to really dig into a specific topic. I’m glad that I am not responsible for writing the first letter, because I think that makes it more likely that each month will be a bit different based on who is participating.</p>
<p>Thanks for helping me kick off this project.<br />
Jason</p>
</blockquote>
]]></content:encoded>
<pubDate>2023-01-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>Get Mastodon Account ID from Username</title>
<link>https://rknight.me/blog/get-mastodon-account-id-from-username/</link>
<guid>https://rknight.me/blog/get-mastodon-account-id-from-username/</guid>
<content:encoded><![CDATA[
<p>Note: Every Mastodon has an RSS feed you can use to get statuses if you don't need the data in JSON format <code>https://example.social/@foobar.rss</code>.</p>
<p>If you want to get a user's statuses from Mastodon you can't just look these up with the username. You need, to quote the documentation, &quot;the ID of the Account in the database&quot;. To get this, we can use the <a href="https://docs.joinmastodon.org/methods/accounts/#lookup">lookup endpoint</a> that will return what we need:</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># for an account on example.social</span><br /><span class="token function">curl</span> https://example.social/api/v1/accounts/lookup?acct<span class="token operator">=</span>foobar<br /><br /><span class="token comment"># also works for remote accounts</span><br /><span class="token function">curl</span> https://example.social/api/v1/accounts/lookup?acct<span class="token operator">=</span>foobar@another.social</code></pre>
<p>Assuming the username is valid, you will receive a response like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"1234567891011121314"</span><span class="token punctuation">,</span><br />    <span class="token property">"acct"</span><span class="token operator">:</span> <span class="token string">"foobar"</span><span class="token punctuation">,</span><br />    <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"foobar"</span><br />    <span class="token comment">// ...</span><br /><span class="token punctuation">}</span></code></pre>
<p>Then you can use that ID to make a request for a users statuses:</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">curl</span> https://example.instance/api/v1/accounts/1234567891011121314/statuses</code></pre>
]]></content:encoded>
<pubDate>2023-01-27T00:00:00+00:00</pubDate>
</item>
<item>
<title>Everything Should Have an API: I'm Done with Closed Services</title>
<link>https://rknight.me/blog/im-done-with-closed-services/</link>
<guid>https://rknight.me/blog/im-done-with-closed-services/</guid>
<content:encoded><![CDATA[
<p>I'm not signing up to any service that doesn't offer at minimum RSS feeds for my data. Ideally an API, even a simple one. No more apps that aren't <a href="https://www.jwz.org/blog/2022/11/psa-do-not-use-services-that-hate-the-internet/">part of the web</a>. I'm done.</p>
<p>To quote <a href="https://localghost.dev/blog/everything-should-have-an-api-adventures-in-trying-to-automate-stuff/">Sophie</a>:</p>
<blockquote>
<p>Why bother tracking what you're playing/reading/watching if you can't then do fun stuff with that data?</p>
</blockquote>
<p>Is it too much to ask for an RSS feed of listen history from my podcast apps? Every single one of them collects and stores that data but (as far as I know) don't make that data available easily via RSS or an API. One of the apps must have this, please let me know.</p>
<p>There are a loads of mobile apps for tracking game collections, movies watched, habits logged, but most of of them have no way to access the data on the web, let alone programatically; god forbid I want to access stuff from a browser on my Mac instead of using my phone all the time.</p>
<p>I shouldn't need to set a reminder every week/month/year to go and request an export of <em>my</em> data just to have it backed up, posted to my blog, or whatever else I want to do with it.</p>
<p>I'm done with closed services.</p>
]]></content:encoded>
<pubDate>2023-01-24T00:00:00+00:00</pubDate>
</item>
<item>
<title>Web Scraping with Node and Cheerio</title>
<link>https://rknight.me/blog/web-scraping-with-node-and-cheerio/</link>
<guid>https://rknight.me/blog/web-scraping-with-node-and-cheerio/</guid>
<content:encoded><![CDATA[
<p><em>This post is a spin-off from <a href="https://rknight.me/automating-my-now-page/">Automating My Now Page</a>.</em></p>
<p>If you want to programatically get data from a site that doesn't have an API, scraping is the solution. Keep in mind scraping could be against the terms of service of some websites or illegal in some places. To scrape a website there are (at least in this tutorial) two steps:</p>
<ol>
<li>Get the web page content</li>
<li>Find the data inside the HTML you've collected</li>
</ol>
<p>For this tutorial, we'll scrape two things from <a href="https://psnprofiles.com/rknightuk">my PSN profile</a>:</p>
<ul>
<li>The latest game I'm playing</li>
<li>The link to the game</li>
</ul>
<p>We should end up with an object that looks something like this:</p>
<pre class="language-js"><code class="language-js">scrapedData <span class="token operator">=</span> <span class="token punctuation">{</span><br /> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Marvel's Guardians of the Galaxy"</span><span class="token punctuation">,</span><br /> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">"https://psnprofiles.com/trophies/14419-marvels-guardians-of-the-galaxy/rknightuk"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<h3>Setup</h3>
<p>For this tutorial you'll need <a href="https://nodejs.org/en/">Node</a> installed - version 17 or higher to make use of the native version of <code>fetch</code>.</p>
<p>Create a directory and navigate to it:</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">mkdir</span> psn-scraper<br /><br /><span class="token builtin class-name">cd</span> psn-scraper<br /></code></pre>
<p>Next we will initialise the project. You can either fill in all the details or append <code>-y</code> to the command to skip all the questions:</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># with questions</span><br /><span class="token function">npm</span> init<br /><br /><span class="token comment"># skip all questions</span><br /><span class="token function">npm</span> init <span class="token parameter variable">-y</span></code></pre>
<p>Next we need to install <a href="https://www.npmjs.com/package/cheerio">Cheerio</a>. Cheerio is a subset of jQuery designed to run on the server for DOM parsing and manipulation.</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> cheerio</code></pre>
<p>If then install works correctly you should have a <code>package.json</code> and <code>package.lock</code> file in your directory.  In the <code>package.json</code></p>
<p>Finally, we'll create our scraper file:</p>
<pre><code>touch index.js
</code></pre>
<h3>Fetching the HTML</h3>
<p>The first step is to fetch the HTML of the page we want to scrape which we'll do with <code>fetch</code>. In your <code>index.js</code> require <code>cheerio</code> and add a <code>run</code> function that using <code>async</code> (we'll be using <code>await</code> so this needs to be in a function).</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cheerio'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br /> <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://psnprofiles.com/rknightuk'</span><span class="token punctuation">)</span><br /><br /> <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br /><br /><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
<p>If we call <code>node index.js</code> a large amount of HTML will be output to the terminal. At this point we could use regex to find the data we want but using regex on HTML is notoriously difficult and unreliable. Instead Cheerio will do all the heavy lifting for us.</p>
<h3>Parsing the Data</h3>
<p>The first thing we need to do is find a class name or ID on the list of games so we can correctly target it. If we inspect the first game in the list of games on my profile, we can see that the link itself which contains the title and url has a class of <code>title</code>:</p>
<p><img alt="Web inspector showing the link with class names" src="https://rknightuk.s3.amazonaws.com/site/psn-profile-inspector.png" /></p>
<p>On some websites this might be enough to get what we need, but a quick check in the console with <code>document.getElementsByClassName('title').length</code> shows there are 91 elements on the profile page with that class but the games list only has 75 games in it so we need to be more specific. The list of games is inside a <code>table</code> element with an ID of <code>gamesTable</code> so we can use that in combination with the <code>title</code> class name. If you've used jQuery before the syntax will be familiar to you:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// ...</span><br /><span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// load the HTML into Cheerio</span><br /><span class="token keyword">const</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><br /><br /><span class="token comment">// this will return elements we don't want</span><br /><span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.title'</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// this is more specific and only returns elements inside the games table</span><br /><span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gamesTable .title'</span><span class="token punctuation">)</span><br /><br />console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>games<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 75</span><br /></code></pre>
<p>We now have an array of games which we can get the title and link from. Because Cheerio's API is the same as jQuery we can used <code>first</code>,  <code>attr</code>, and <code>text</code> to get the values we need:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// ...</span><br /><span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gamesTable .title'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> path <span class="token operator">=</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> parsedData <span class="token operator">=</span> <span class="token punctuation">{</span><br /> <span class="token literal-property property">title</span><span class="token operator">:</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br /> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://psnprofiles.com</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// the href doesn't include the domain so we add it here</span><br /><span class="token punctuation">}</span><br /><br />console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedData<span class="token punctuation">)</span><br /><span class="token comment">// {</span><br /><span class="token comment">//  title: "Marvel's Guardians of the Galaxy",</span><br /><span class="token comment">//  link: '/trophies/14419-marvels-guardians-of-the-galaxy/rknightuk'</span><br /><span class="token comment">// }</span></code></pre>
<p>If we wanted to get <em>all</em> the games in the list, we can use <code>each</code>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> parsedData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br /><br />games<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> el</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br /> <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span><br /> games<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />  <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://psnprofiles.com</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br /> <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedData<span class="token punctuation">)</span><br /><span class="token comment">// [</span><br /><span class="token comment">//  {</span><br /><span class="token comment">//    title: "Marvel's Guardians of the Galaxy",</span><br /><span class="token comment">//    link: 'https://psnprofiles.com/trophies/14419-marvels-guardians-of-the-galaxy/rknightuk'</span><br /><span class="token comment">//  },</span><br /><span class="token comment">//  {</span><br /><span class="token comment">//    title: 'Peggle 2',</span><br /><span class="token comment">//    link: 'https://psnprofiles.com/trophies/2935-peggle-2/rknightuk'</span><br /><span class="token comment">//  }</span><br />  <span class="token comment">// ...</span><br /><span class="token comment">// ]</span></code></pre>
<p>All together:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cheerio'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://psnprofiles.com/rknightuk'</span><span class="token punctuation">)</span><br />    <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><br />    <span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gamesTable .title'</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> parsedData <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">title</span><span class="token operator">:</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">link</span><span class="token operator">:</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedData<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br /><br /><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
<p>Now we have that data, we could do anything we want with it like post it to a blog or add it to an RSS feed. The source code for this tutorial is <a href="https://github.com/rknightuk/psn-scraper-demo">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-01-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Automating My Now Page</title>
<link>https://rknight.me/blog/automating-my-now-page/</link>
<guid>https://rknight.me/blog/automating-my-now-page/</guid>
<content:encoded><![CDATA[
<p>This post outlines how I automated my now page(s) but I should start with what a now page <em>is</em>. From <a href="https://nownownow.com/about">nownownow.com</a>:</p>
<blockquote>
<p>a website with a link that says “now” goes to a page that tells you what this person is focused on at this point in their life. For short, we call it a &quot;now page&quot;</p>
</blockquote>
<p>I had heard of now pages a long time ago and always meant to add one to my site but just never got round to it. A few weeks ago <a href="https://home.omg.lol/referred-by/robb">omg.lol</a> launched their now page feature which made me think about this again (and I want to keep both my personal site and the omg.lol now page up to date and in sync). One problem with a page that should, in theory, be updated regularly is I will <em>definitely</em> forget to do it. Automation to the rescue! Or more specifically a veritable grab-bag of python and node scripts, web scraping, and APIs.</p>
<p>If you just want to see the pages here are the links:</p>
<ul>
<li><a href="https://rknight.me/now">/now</a></li>
<li><a href="https://robb.omg.lol/now">robb.omg.lol/now</a></li>
</ul>
<p>The <a href="https://github.com/rknightuk/api">source code is on GitHub</a>.</p>
<h3>Overview</h3>
<p>For each service I'm pulling data from I'm doing mostly the same thing:</p>
<ol>
<li>Fetch some data from <em>somewhere</em></li>
<li>Format that data to make is easier to work with</li>
<li>Add it to <a href="https://api.rknight.me/api/data.json"><code>data.json</code></a></li>
</ol>
<p>I then call <a href="https://github.com/rknightuk/api/blob/main/now/generate.js"><code>now/generate.js</code></a> which goes through each key in <code>data.json</code> and outputs it to two markdown files: <a href="https://api.rknight.me/api/now-omg.txt"><code>now-omg.txt</code></a> (for omg.lol) and <a href="https://api.rknight.me/api/now-web.txt"><code>now-web.txt</code></a> (for my website). The web version skips the omg.lol-specific syntax and intro section.</p>
<p>For omg.lol, I wanted to append icons to each line so they display as the bullet on my omg.lol now page. I grabbed icons for each section from <a href="https://fontawesome.com/">Font Awesome</a> and apply them as I loop through item in a section:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Some text from an item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token string">'making'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token keyword">const</span> <span class="token function-variable function">getIcon</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> icons <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">making</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'microphone-lines'</span><span class="token punctuation">,</span> <span class="token string">'laptop-code'</span><span class="token punctuation">,</span> <span class="token string">'terminal'</span><span class="token punctuation">,</span> <span class="token string">'code-pull-request'</span><span class="token punctuation">,</span> <span class="token string">'bug'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">reading</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'book'</span><span class="token punctuation">,</span> <span class="token string">'book-bookmark'</span><span class="token punctuation">,</span> <span class="token string">'book-open'</span><span class="token punctuation">,</span> <span class="token string">'book-open-reader'</span><span class="token punctuation">,</span> <span class="token string">'bookmark'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">music</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'headphones'</span><span class="token punctuation">,</span> <span class="token string">'radio'</span><span class="token punctuation">,</span> <span class="token string">'guitar'</span><span class="token punctuation">,</span> <span class="token string">'compact-disc'</span><span class="token punctuation">,</span> <span class="token string">'drum'</span><span class="token punctuation">,</span> <span class="token string">'sliders'</span><span class="token punctuation">,</span> <span class="token string">'volume-high'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">podcast</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'headphones'</span><span class="token punctuation">,</span> <span class="token string">'microphone-lines'</span><span class="token punctuation">,</span> <span class="token string">'comments'</span><span class="token punctuation">,</span> <span class="token string">'tower-broadcast'</span><span class="token punctuation">,</span> <span class="token string">'podcast'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">return</span> icons<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p><img alt="Example of icons on omg.lol" src="https://rknightuk.s3.amazonaws.com/site/now-podcasts.png" /></p>
<h3>Getting the data</h3>
<h4>Music</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/lastfm.js"><code>services/lastfm.js</code></a></li>
</ul>
<p>This was a nice easy one: show the albums, tracks, and artists I've been listening to the past seven days. <a href="https://www.last.fm/api">Last.fm</a> have a decent, if slightly oddly designed, API to get this data.</p>
<p>Not so easy is that <a href="http://Last.fm">Last.fm</a> no longer return artist or track images. To get around this I do a lookup with the <a href="https://musicbrainz.org/doc/MusicBrainz_API">MusicBrainz</a> which gives me a link to <a href="https://www.allmusic.com/artist/mn0000289599">AllMusic</a> which I then scrape and grab the main image with <a href="https://cheerio.js.org/">Cheerio</a>.</p>
<p>I also use <a href="https://www.npmjs.com/package/text-to-image"><code>text-to-image</code></a> to generate images for artists and albums where I'm unable to get one either from <a href="http://Last.fm">Last.fm</a> or AllMusic:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">await</span> textToImage<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>album<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>album<span class="token punctuation">.</span>artist<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">customHeight</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">textColor</span><span class="token operator">:</span> <span class="token string">'white'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">bgColor</span><span class="token operator">:</span> <span class="token string">'black'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">verticalAlign</span><span class="token operator">:</span> <span class="token string">'center'</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p><img alt="Example of top album output" src="https://rknightuk.s3.amazonaws.com/site/now-albums.png" /></p>
<h4>Github, Books, and Statuses</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/github.js"><code>services/github.js</code></a></li>
<li><a href="https://github.com/rknightuk/api/blob/main/services/books.js"><code>services/books.js</code></a></li>
<li><a href="https://github.com/rknightuk/api/blob/main/services/statuses.js"><code>services/statuses.js</code></a></li>
</ul>
<p>These are all straight-forward API calls with a slightly manually process of tagging projects on GitHub with <code>now</code> - I don't want every recent project showing up and GitHub doesn't have an API for star lists yet.</p>
<h4>Games</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/psn.js"><code>services/psn.js</code></a></li>
</ul>
<p>Like the missing artist images, this involved scraping a page because PSN doesn't have an API. I scrape my <a href="https://psnprofiles.com/rknightuk">PSN Profiles</a> and use Cheerio to grab the latest games I've got trophies for. It's not a perfect system, but it's likely the current game I'm playing will be the top of that list.</p>
<h4>Overcast</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/overcast"><code>services/overcast.js</code></a></li>
</ul>
<p><strong>This export isn't a secret, nor are the scripts to download it but don't hammer this endpoint. I'm downloading once a week. I have emailed Marco to ask if he'd implement an RSS feed of listen history so this isn't required.</strong></p>
<p>This one was trickier but doable. Overcast offers an <a href="https://overcast.fm/account">&quot;All Data&quot; export</a> but you need to be logged in to access it. And it's in OPML format. So this is a two step process:</p>
<ol>
<li>Use <a href="https://github.com/rknightuk/api/tree/main/services/overcast/fetcher">this python script</a> to login and download the export</li>
<li>Run <a href="https://github.com/rknightuk/api/tree/main/services/overcast/parser">this node script</a> to convert the OPML to JSON and then to <a href="https://api.rknight.me/api/podcasts.json">a valid JSON feed</a></li>
</ol>
<p>One thing I noticed is that <a href="https://www.relay.fm/membership">Relay's member show</a> feeds show the episode and show URL as <code>relay.fm/membership</code> so I had to handle this myself. Example here with <a href="https://www.relay.fm/connected">Connected Pro</a>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> isConnectedPro <span class="token operator">=</span> podcast<span class="token punctuation">.</span>title <span class="token operator">===</span> <span class="token string">'Connected Pro'</span><br /><br /><span class="token keyword">let</span> episodeUrl <span class="token operator">=</span> episode<span class="token punctuation">.</span>url<br /><span class="token keyword">if</span> <span class="token punctuation">(</span>isConnectedPro<span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token keyword">const</span> episodeNumber <span class="token operator">=</span> episode<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br />    episodeUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://relay.fm/connected/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>episodeNumber<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span></code></pre>
<p>From this data, I take the last 30 episodes, group them by show, and rank them by episode count which then becomes the podcasts section of the now page.</p>
<h4>Other</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/other"><code>services/other.js</code></a></li>
</ul>
<p>For the &quot;about&quot; and &quot;tv&quot; sections, I wanted to be able to update these from anywhere so I opted to dump some yaml in an <a href="https://robb.paste.lol/now.yaml">omg.lol pastebin</a> and fetch it from there.</p>
<h3>Syncing the changes</h3>
<p>Each data source doesn't need to be updated every hour or day, so I split them out into a <a href="https://github.com/rknightuk/api/blob/main/makefile"><code>makefile</code></a> for jobs to run on a Monday (music, books, games), a Friday (Overcast), and daily (about, tv, github projects). (I could have done these all as separate cron jobs but it was easier to split them in a make file and just have three scheduled jobs instead).</p>
<p>Each time a job runs, it updates the <code>data.json</code> file so I can run <code>generate.js</code> and <a href="https://github.com/rknightuk/api/blob/main/now/update.js"><code>update.js</code></a> at any time throughout the week to update my now pages. The <code>update</code> script posts the contents of <code>web-omg.txt</code> to the <a href="https://api.omg.lol/">omg.lol API</a> and sends a webhook to <a href="https://forge.laravel.com">Forge</a> to deploy my main site.</p>
<p>All of the code for this is <a href="https://github.com/rknightuk/api/">on GitHub</a> if you want to do something similar.</p>
]]></content:encoded>
<pubDate>2023-01-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>Navigate Project Folders with Pick</title>
<link>https://rknight.me/blog/navigate-project-folders-with-pick/</link>
<guid>https://rknight.me/blog/navigate-project-folders-with-pick/</guid>
<content:encoded><![CDATA[
<p>When I started my industrial placement at Radweb nearly 10 years ago (👴), <a href="https://github.com/danharper">Dan Harper</a> sent me his <a href="https://github.com/danharper/dotfiles">bash aliases</a> which included a lot of handy Git ones including this one that uses <a href="https://github.com/mptre/pick"><code>pick</code></a> to list git branches. I can either do <code>gco</code>, search, and enter to checkout to that branch, or do <code>gco branchName</code> to checkout immediately to a branch:</p>
<pre class="language-bash"><code class="language-bash"><span class="token keyword">function</span> <span class="token function-name function">gco</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />        <span class="token function">git</span> checkout <span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> branch <span class="token operator">|</span> pick<span class="token variable">)</span></span><br />    <span class="token keyword">else</span><br />        <span class="token function">git</span> checkout <span class="token string">"<span class="token variable">$@</span>"</span><br />    <span class="token keyword">fi</span><br /><span class="token punctuation">}</span></code></pre>
<p>I do use <a href="https://github.com/martvdmoosdijk/zsh-marks"><code>zsh-marks</code></a> already to jump to folders I've expicitly marked (as well as jumping to the root of projects with <code>jump sites</code>) but last night while doing the <code>cd ..; cd project-name</code> dance between different projects I <em>hadn't</em> marked I realised I could apply this same thing to my personal sites folder which as the time of this writing has 97 folders. To do this, I needed to list out the directories with <code>ls</code> and the <code>-1</code> option which tells <code>ls</code> to show one per line and just the folder name:</p>
<pre class="language-bash"><code class="language-bash"><span class="token keyword">function</span> <span class="token function-name function">site</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />        <span class="token builtin class-name">cd</span> ~/path/to/sites/<span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token parameter variable">-1</span> <span class="token string">"~/path/to/sites"</span> <span class="token operator">|</span> pick<span class="token variable">)</span></span><br />    <span class="token keyword">else</span><br />        <span class="token builtin class-name">cd</span> ~/path/to/sites/<span class="token string">"<span class="token variable">$@</span>"</span><br />    <span class="token keyword">fi</span><br /><span class="token punctuation">}</span></code></pre>
<p>So now to jump directly to the folder for this website instead of doing <code>j sites</code> then <code>cd personal/rknight.me</code> I can simply do <code>site rknight.me</code>. You can see all my aliases in <a href="https://github.com/rknightuk/dotfiles">my dotfiles on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-01-19T00:00:00+00:00</pubDate>
</item>
<item>
<title>Link Dump</title>
<link>https://rknight.me/blog/link-dump/</link>
<guid>https://rknight.me/blog/link-dump/</guid>
<content:encoded><![CDATA[
<ul>
<li><a href="https://austinkleon.com/2014/04/29/a-brief-history-of-my-newspaper-blackout-poems/">A brief history of my newspaper blackout poems</a>. Not sure how I've not seen this before, but I'll be buying <a href="https://austinkleon.com/newspaperblackout/">the book ASAP</a>.</li>
<li><a href="https://www.razzem.com/these-ai-generated-marvel-cat-characters-could-make-for-a-cute-animated-series/">AI generated Marvel cat-characters</a>. Cute AF.</li>
<li><a href="https://www.pocket-lint.com/phones/reviews/sony-mobile/71544-sony-ericsson-xperia-pureness-review/">Sony Ericsson Xperia Pureness</a>. Not sure why this was in my read later list but very cool (article is from 2009)</li>
<li><a href="https://www.wearerewind.com/">Audio Cassette Player | We Are Rewind</a>. A cassette player with Bluetooth. It's like this product was made for me.</li>
<li><a href="https://github.com/ngagesdk/wordle">A portable clone of Wordle designed for the Nokia N-Gage</a>. Cool.</li>
<li><a href="https://writteninstone.photo/">Written in Stone • A gallery of sidewalks, and the stamps and seals left by the people who laid them.</a> I already posted this but figured I'd pop it here too.</li>
</ul>
]]></content:encoded>
<pubDate>2023-01-15T00:00:00+00:00</pubDate>
</item>
<item>
<title>Bye Almanac, Hello Lantern</title>
<link>https://rknight.me/blog/bye-almanac-hello-lantern/</link>
<guid>https://rknight.me/blog/bye-almanac-hello-lantern/</guid>
<content:encoded><![CDATA[
<p>I am a hoarder of data. I have exports from dead Tumblr sites, Twitter accounts,  Pinboard, Instapaper, and probably more I'm not thinking of. I also like to be able to check when I did something, watched something, or just tweeted something funny (it happened <a href="https://hellsite.rknight.me/656762307494682624/">at least once</a>).</p>
<h3>Bye Almanac</h3>
<p>In February 2015 <a href="https://hellsite.rknight.me/569782414899355648/">I started using</a> <a href="http://plotapp.io/">Plot</a> (RIP) for tracking movies I've watched. This was before I'd heard of <a href="https://letterboxd.com/">Letterboxd</a> and before the proliferation of the many TV and movie tracking apps on iOS. Within a few months I decided I wanted the same for TV shows I'd watched and games I played so I started work on the first version of Almanac. I built this with <a href="https://www.11ty.dev/">Eleventy</a> which worked well but was missing any kind of search and I couldn't post from my phone (I suppose I could but I <em>hate</em> doing things on my phone). Sadly I don't have a copy of this version of site but I do have this rather natty screenshot of it:</p>
<p><img alt="A screenshot of version one of Almanac" src="https://rknightuk.s3.amazonaws.com/site/almanac-screenshot.png" /></p>
<p>Fast forward to 2018 and I did the <a href="https://github.com/rknightuk/almanac/commit/2595bc622f75ef5ddc9a85cd745dd216b69fbddc">first commit</a> on version two. This version was built on Laravel for the backend and a React front end. It used the <a href="https://www.themoviedb.org/">TMDB API</a> for movies and TV, and the <a href="https://www.giantbomb.com/api/">GiantBomb API</a> for games. I built a <a href="https://github.com/rknightuk/almanac/blob/master/app/LetterboxdFetcher.php">Letterboxd importer</a> to poll my profile RSS feed to grab new reviews and store them in Almanac, kept track of how many times I'd watched a movie, and more recently used it to cross-post Letterboxd reviews to Micro.blog. This has now been replaced with <a href="https://echo.rknight.me">Echo</a>.</p>
<p>When I started using Micro.blog early last year I realised it made no sense to have all these different places I was posting things so I spent some time exporting the ~1200 posts from Almanac and importing them into Micro.blog. Since then I've been posting directly to Micro.blog, with the exception of movies which are still fed in from Letterboxd. For the sake of posterity, here's a couple of screenshots of Almanac as it exists now:</p>
<p><img alt="A screenshot of the front end of Almanac" src="https://rknightuk.s3.amazonaws.com/site/almanac-screenshot-1.png" /></p>
<p><img alt="A screenshot of the backend of Almanac" src="https://rknightuk.s3.amazonaws.com/site/almanac-screenshot-4.png" /></p>
<h3>Hello Lantern</h3>
<p>Like version one of Almanac, I've missed being able to quickly search for a movie or TV show to grab the year or link when posting to Micro.blog. Which is why I built <a href="https://lantern.rknight.me">Lantern</a>. Lantern uses the same APIs as Almanac (and even shares some of the same design for search). It grabs the year (release or first aired) as well as the poster and converts it to Markdown for posting to Micro.blog. Of course it also pops the <a href="https://help.micro.blog/t/emoji-in-discover/34">discover emoji</a> in there too.</p>
<p><img alt="Lantern screenshot" src="https://rknightuk.s3.amazonaws.com/site/lantern-screenshot.png" /></p>
<p>I started with a version that logged you in and would post automatically but realised that made it more complicated that it needs to be. I switched it over to use <a href="https://www.netlify.com/products/functions/">Netlify functions</a> for the API and a mess of vanilla JS for the front end. Micro.blog has the posting UI so I just needed to generated the main content. Micro.blog already has book support so I don't think I'll be adding too many features to Lantern but please let me know if you find any bugs or you have any litte requests.</p>
]]></content:encoded>
<pubDate>2023-01-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Import RSS to Micro.blog and Mastodon with Echo</title>
<link>https://rknight.me/blog/echo-rss-to-microblog/</link>
<guid>https://rknight.me/blog/echo-rss-to-microblog/</guid>
<content:encoded><![CDATA[
<p><img alt="Screenshot of Echo running in a terminal" src="https://rknightuk.s3.amazonaws.com/site/echo-screenshot.png" /></p>
<p><strong>Update 13/01/23</strong>: Echo now supports Mastodon and webhooks as well as Micro.blog. <a href="https://echo.rknight.me">Check out the website for more details</a>.</p>
<p>After a conversation with <a href="https://zoeaubert.me">Zoe</a> about <a href="https://status.lol">status.lol</a>, as well as <a href="https://micro.blog/muhh/15830286">this reply from Markus</a>, I decided to write <a href="https://github.com/rknightuk/echo">Echo</a> last night (do I know how to party on my birthday or what?). From the readme:</p>
<blockquote>
<p>Echo is a node script to post new items from an RSS feed to Micro.blog</p>
</blockquote>
<p>Micro.blog already supports importing RSS feeds and handles it very well but <s>I'm a control freak</s> I wanted a bit more control over the formatting as well as assigning categories on import.</p>
<p>Echo takes a config of RSS feeds as well as some formatting functions for items and posts them to Micro.blog. I run mine every 15 minutes but you could set it up to run whenever you want. The only requirements are <code>node</code> and <code>npm</code> and a server to run it on (or you could run it on your computer and manually run it as and when).</p>
<p><a href="https://github.com/rknightuk/echo">Download Echo on GitHub</a></p>
]]></content:encoded>
<pubDate>2023-01-10T00:00:00+00:00</pubDate>
</item>
<item>
<title>Blogs and Wikis and Links</title>
<link>https://rknight.me/blog/blogs-and-wikis-and-links/</link>
<guid>https://rknight.me/blog/blogs-and-wikis-and-links/</guid>
<content:encoded><![CDATA[
<p>I've been thinking about how better to handle all the different places I'm posting too including this site,  <a href="https://micro.blog/rknightuk">Micro.blog</a>, and <a href="https://intersect.rknight.me/">my wiki</a>.  To quote <a href="https://toot.rknight.me/2023/01/07/starting-to-think.html">myself</a>:</p>
<blockquote>
<p>Starting to think some things I’ve put into my wiki might be better served as a blog post that I just update as and when I find things. The discoverability of pages is kinda crappy for anyone who isn’t me (because I know to go there to look for things)</p>
</blockquote>
<p>For example, <a href="https://intersect.rknight.me/buying-a-house/">this page about buying a house</a>. Why isn't this a blog post? It <em>looks</em> just like one, it's unlikely I'm going to buy another house so this is likely to be all I ever write about it. <a href="https://intersect.rknight.me/cli/git/">This git page</a>. There's no reason I couldn't have this as a blog post and just update it as I find other things. People are more likely to find it as a blog post than a page on my wiki.</p>
<p>Then there's the opposite: <a href="https://intersect.rknight.me/hardware/raspberry-pi/pisight/">this PiSight page</a> is 100% links. I wonder if a link system with tags would be better than posting to a specific page each time I find a new link. Or I could add the links to <a href="https://rknight.me/building-a-pisight/">the PiSight blog post I wrote</a>.</p>
<p>The Intersect was fun to build but it's <em>complicated</em>. The build process takes a while, making any structural changes is a pain. Something simpler might be better. I should reduce it to the bare minimum of things that I need from it.</p>
<p>Should I incorporate the wiki into my personal site instead of having it on a different domain perhaps? Should I just do more blog posts when I find interesting things and not worry if it's &quot;worth it&quot; to post? Who knows.</p>
]]></content:encoded>
<pubDate>2023-01-07T00:00:00+00:00</pubDate>
</item>
<item>
<title>Using PageFind with Eleventy for Search</title>
<link>https://rknight.me/blog/using-pagefind-with-eleventy-for-search/</link>
<guid>https://rknight.me/blog/using-pagefind-with-eleventy-for-search/</guid>
<content:encoded><![CDATA[
<p>In the past, I have implemented my own search for static sites and while it's good <em>enough</em>, it's not great. Recently <a href="https://github.com/tweetback/tweetback">Tweetback</a>, a self-hosted Twitter archive, added search using <a href="https://pagefind.app">PageFind</a> so I dug into the code to see how it's done. PageFind is:</p>
<blockquote>
<p>a fully static search library that aims to perform well on large sites, while using as little of your users’ bandwidth as possible, and without hosting any infrastructure</p>
</blockquote>
<p>I hadn't even heard of PageFind until a few weeks ago so most of what I've learnt here came from the PageFind docs and the <a href="https://github.com/tweetback/tweetback/pull/27">pull request</a> that added search to Tweetback so a big thanks to <a href="https://alistairshepherd.uk">Alistair</a> for writing the PR.</p>
<h3>Installation</h3>
<p>Note: I had to change some directories for <a href="https://github.com/rknightuk/eleventy-pagefind-demo/">the demo</a> to get this to work on GitHub pages but everything works exactly the same as below.</p>
<p>To get started, install <a href="https://www.npmjs.com/package/pagefind">the package</a> to your Eleventy project. PageFind has <a href="https://pagefind.app/docs/installation/">more detailed installation instructions on their website here</a>.</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev pagefind</code></pre>
<h3>Build the index</h3>
<p>PageFind works by scanning a bunch of HTML files and looking for <a href="https://pagefind.app/docs/indexing/">one of the <code>data-pagefind</code> attributes</a>.  We'll add the <code>data-pagefind-body</code> attribute to the article element that wraps the posts to tell it to index the post content:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">data-pagefind-body</span><span class="token punctuation">></span></span><br />    {{ content | safe }}<br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span></code></pre>
<p>We want to run the PageFind CLI <em>after</em> the site has been built so we use the <a href="https://www.11ty.dev/docs/events/#eleventy.after"><code>after</code> Eleventy event</a> and run the command with <a href="https://nodejs.org/api/child_process.html#child_processexecsynccommand-options"><code>execSync</code></a> on all HTML files in the built site:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">eleventyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'eleventy.after'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">npx pagefind --source _site --glob \"**/*.html\"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">'utf-8'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p><strong>Update 24/07/23</strong>: If you have a lot (read: ~3000) of pages like I do then you might find the build crashes trying to build the index. If that's the case, do the pagefind command <em>after</em> your Eleventy site build script has finished instead of in the <code>after</code> event.</p>
<p>Note the <code>_site</code> source option - if your site is built to a different directory then change this. This outputs a <code>_pagefind</code> directory to the build folder.</p>
<h3>Add a Search Box</h3>
<p>PageFind has <a href="https://pagefind.app/docs/api/">an API</a> if you want to make your own search interface but for this we'll use the built-in UI. Add the following to wherever you want the search box to appear, in the case of this demo it's going on the home page.</p>
<p>Add the PageFind stylesheet either in the head or above your search box element. The additional styles are optional and only needed if you need a dark theme/mode.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/_pagefind/pagefind-ui.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><br />  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-color-scheme</span><span class="token punctuation">:</span> dark<span class="token punctuation">)</span></span> <span class="token punctuation">{</span><br />    <span class="token selector">:root</span> <span class="token punctuation">{</span><br />      <span class="token property">--pagefind-ui-primary</span><span class="token punctuation">:</span> #eeeeee<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-text</span><span class="token punctuation">:</span> #eeeeee<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-background</span><span class="token punctuation">:</span> #152028<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-border</span><span class="token punctuation">:</span> #152028<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-tag</span><span class="token punctuation">:</span> #152028<span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">}</span><br /></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>PageFind requires an element with an ID which can then be passed to the script.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/_pagefind/pagefind-ui.js<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token keyword">new</span> <span class="token class-name">PagefindUI</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">element</span><span class="token operator">:</span> <span class="token string">'#search'</span><span class="token punctuation">,</span> <span class="token literal-property property">showImages</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Run your Eleventy serve script and if everything has worked, you should have a functioning search that searches all your posts:</p>
<p><img alt="Search box with McFly as the search term and three results" src="https://rknightuk.s3.amazonaws.com/site/pagefind-eleventy.png" /><br />
The code for this is <a href="https://github.com/rknightuk/eleventy-pagefind-demo">on GitHub</a> and there is a <a href="https://rknightuk.github.io/eleventy-pagefind-demo">live demo here</a>.</p>
]]></content:encoded>
<pubDate>2023-01-04T00:00:00+00:00</pubDate>
</item>
<item>
<title>Just 2022 Things</title>
<link>https://rknight.me/blog/just-2022-things/</link>
<guid>https://rknight.me/blog/just-2022-things/</guid>
<content:encoded><![CDATA[
<p>Inspired by <a href="https://localghost.dev/blog/2022-the-year-in-lists/">Sophie's post</a> I decided to do a little roundup of things I've done the year.</p>
<h3>House Project</h3>
<p>We purchased our house in November 2021 and it hadn't been decorated since 1971 so everything needed doing; most of this year has been spent getting all the rooms fixed up. In July, we found out my partner was pregnant (🎉) which is very exciting but also added an extra bit of stress to making sure the house was done by the end of this year. Things I learnt how to do:</p>
<ul>
<li><a href="https://toot.rknight.me/2022/11/06/its-finally-finished.html">Fitting laminate flooring</a> - This isn't difficult per se, but it is <em>hard</em> work.</li>
<li><a href="https://toot.rknight.me/2022/08/07/my-first-and.html">Wallpapering</a> - This is a pain in the arse, I hate it, and will never do it again. I do like the finished wall <a href="https://toot.rknight.me/2022/12/27/final-floor-in.html">now it has the mirror and radiator though</a>.</li>
<li><a href="https://toot.rknight.me/2022/11/24/in-better-news.html">Installing skirting boards</a> - Again, a bit of a pain but with a decent mitre saw and some <a href="https://trade.evo-stik.co.uk/products/grab-adhesives/gripfill">Gripfill</a> it doesn't take too long.</li>
<li><a href="https://toot.rknight.me/2022/04/06/im-like-ron.html">Building a desk from scratch</a> - This was a fun woodworking project. I'm pretty happy with <a href="https://toot.rknight.me/2022/04/22/i-heard-were.html">how it turned out.</a></li>
</ul>
<h3>Travel</h3>
<p>In February we went to Rome, visited all the normal sites, and ate so much <a href="https://toot.rknight.me/2022/02/24/pizza.html">incredible pizza</a>. We stayed right near <a href="https://en.wikipedia.org/wiki/Pantheon,_Rome">The Pantheon</a> which was perfect for walking everywhere we needed to go.</p>
<p>In April we went to Bournemouth for a few days and saw <a href="https://en.wikipedia.org/wiki/Bowling_for_Soup">Bowling for Soup</a> on the last day.</p>
<p>Right before Christmas we went to Edinburgh to visit the Christmas market (which was a bit disappointing) but we did a tour of the <a href="https://en.wikipedia.org/wiki/Edinburgh_Vaults">Edinburgh Vaults</a>, rubbed the nose of <a href="https://toot.rknight.me/2022/12/19/edinburgh-day.html">Greyfriar's Bobby</a>, and visited some great book shops.</p>
<p>We saw a bunch of theatre shows this year as well:</p>
<ul>
<li><a href="https://www.hamiltonwestendshop.com">Hamilton</a></li>
<li><a href="https://www.sixthemusical.com">Six</a></li>
<li><a href="https://thebookofmormonmusical.com/london/?utm_source=search&amp;utm_medium=google&amp;campaign_id=17961066709&amp;adset_id=&amp;ad_id=&amp;gclid=Cj0KCQiAtbqdBhDvARIsAGYnXBPs12fWJd3GhcOAKGkJVZVY33b3MIfGN8yz0HqLDzKh0NCaommr2GQaAgAPEALw_wcB">Book of Mormon</a></li>
<li><a href="https://www.backtothefuturemusical.com">Back to the Future: The Musical</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cinderella_(Lloyd_Webber_musical)">Cinderella</a> - This was an interesting one because the front 8 rows rotate with the stage so you're facing everyone else. This got cancelled right after we saw it.</li>
</ul>
<h3>Web</h3>
<p>I made a bunch of little plugins/webapps for <a href="https://mbtools.rknight.me">Micro.blog</a> and the <a href="https://potimages.rknight.me">Monzo Pot Image Generator</a> hit over 40k images generated. I stopped using Twitter so I'm <a href="https://rknight.me/two-social-networks-in-this-economy/">using a combination</a> of <a href="https://micro.blog">Micro.blog</a> and Mastodon - the latter is run by <a href="https://home.omg.lol/referred-by/robb">omg.lol</a>. omg.lol is such a fun site and has a bunch of services, including a Mastodon instance. You can get it for $5 a year until tomorrow.</p>
<h3>Games</h3>
<p>I didn't play many games due to the aforementioned home project but I did manage to play through the <a href="https://store.rockstargames.com/game/buy-grand-theft-auto-the-trilogy-the-definitive-edition">GTA Trilogy</a> as well as <a href="https://www.playstation.com/en-gb/games/horizon-forbidden-west/">Horizon Forbidden West</a>.</p>
<h3>Movies</h3>
<p>According to <a href="https://letterboxd.com/rknightuk/films/diary/for/2022/">Letterboxd</a> I've watched 103 movies this year. Of those, 12 of them came out this year. My favourites of those are:</p>
<ul>
<li><a href="https://letterboxd.com/rknightuk/film/thor-love-and-thunder/1/">Thor: Love and Thunder</a> - This movie is a bit divisive but I loved it.</li>
<li><a href="https://letterboxd.com/rknightuk/film/glass-onion-a-knives-out-mystery/">Glass Onion: A Knives Out Mystery</a> - An excellent sequel to Knives Out.</li>
<li><a href="https://letterboxd.com/rknightuk/film/the-guardians-of-the-galaxy-holiday-special/">The Guardians of the Galaxy Holiday Special</a> - This was so much fun and <a href="https://www.youtube.com/watch?v=-E1ULv6LcOk">the main song</a> is a banger.</li>
</ul>
<h3>TV</h3>
<p>I didn't watch all that much TV this year but the two stands outs were:</p>
<ul>
<li><a href="https://toot.rknight.me/2022/07/14/finished-the-first.html">Reacher</a> -  As a fan of the books, I was impressed how closely this matched up. A really great adaptation.</li>
<li><a href="https://toot.rknight.me/2022/08/16/cant-believe-better.html">Better Call Saul</a> - This show is perfect in every way.</li>
<li><a href="https://toot.rknight.me/2022/09/09/for-all-mankind.html">For All Mankind</a> - No other show builds suspense like For All Mankind does</li>
</ul>
<h2>Books</h2>
<p>I read zero books this year which is embarrassing, I hope to change this next year. I did start <a href="https://micro.blog/books/9781728236254">Men Who Hate Women</a> and hopefully will finish it soon.</p>
]]></content:encoded>
<pubDate>2022-12-30T00:00:00+00:00</pubDate>
</item>
<item>
<title>Building a Podcast Site with Eleventy</title>
<link>https://rknight.me/blog/bulding-podcast-site-eleventy/</link>
<guid>https://rknight.me/blog/bulding-podcast-site-eleventy/</guid>
<content:encoded><![CDATA[
<p>When me and John started <a href="https://ruminatepodcast.com">Ruminate</a>, we didn't know much about hosting podcasts so we decided to go with <a href="https://simplecast.com">Simplecast</a> to host and manage the podcast. Seven years later, Simplecast has changed quite a bit to the point that it's hindering rather than helping me post the show. It's not a bad service, but it's overkill for posting one episode every two weeks.</p>
<p>I <a href="https://toot.rknight.me/2022/12/23/has-anyone-moved.html">asked</a> last week if anyone had self-hosted a podcast and a few people I trust said it should be easy enough to do so I got to work. As with most of my projects, I used <a href="https://www.11ty.dev/">Eleventy</a>. Eleventy is a very powerful static site generator that this site is built with. <a href="https://www.marclittlemore.com/create-an-eleventy-podcast-feed/">This post</a> was very helpful in pointing me in the right direction.</p>
<h2>Importing existing posts</h2>
<p>The first step was to import the existing 156 episodes into the new site. I had a look at the RSS feed to see what metadata each episode would need. Here is an example from <a href="https://ruminatepodcast.com/156/">episode 156</a>:</p>
<pre class="language-yaml"><code class="language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> episode<br /><span class="token key atrule">guid</span><span class="token punctuation">:</span> ff7d5a18<span class="token punctuation">-</span>c87c<span class="token punctuation">-</span>4420<span class="token punctuation">-</span>a6dd<span class="token punctuation">-</span>965be716aa12<br /><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"156 - For Listeners Only"</span><br /><span class="token key atrule">published</span><span class="token punctuation">:</span> <span class="token string">"Wed, 7 Dec 2022 20:55:06 +0000"</span><br /><span class="token key atrule">permalink</span><span class="token punctuation">:</span> 156/index.html<br /><span class="token key atrule">file</span><span class="token punctuation">:</span> <span class="token string">"https://ruminatepod.s3-us-west-2.amazonaws.com/156.mp3"</span><br /><span class="token key atrule">length</span><span class="token punctuation">:</span> <span class="token number">10993430</span><br /><span class="token key atrule">duration</span><span class="token punctuation">:</span> <span class="token datetime number">00:22:49</span><br /><span class="token key atrule">summary</span><span class="token punctuation">:</span> <span class="token string">"Baguettes and Obsidian."</span><br /><span class="token key atrule">episodeNumber</span><span class="token punctuation">:</span> <span class="token number">156</span></code></pre>
<p>I created a new script called <a href="https://github.com/rknightuk/ruminate/blob/main/scripts/feedtomarkdown.js"><code>feedtomarkdown.js</code></a>, used <a href="https://www.npmjs.com/package/node-fetch"><code>node-fetch</code></a> and <a href="https://www.npmjs.com/package/xml2json"><code>xml2json</code></a>  to parse the feed, and then looped through each episode to get the data. For the shownotes, I needed to covert that back to markdown with <a href="https://www.npmjs.com/package/turndown"><code>turndown</code></a>. I also learnt about <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart"><code>padStart/padEnd</code></a> to pad the episode numbers from <code>21</code> to <code>021</code>:</p>
<pre class="language-js"><code class="language-js"><span class="token string">'21'</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span> <span class="token comment">// 021</span></code></pre>
<p>Finally I output all the file names into <code>filenames.sh</code> to download all the episodes with <code>wget</code> with consistent naming:</p>
<pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><br /><span class="token function">wget</span> http://path.to/file <span class="token parameter variable">-O</span> 001.mp3<br /><span class="token function">wget</span> http://path.to/file <span class="token parameter variable">-O</span> 002.mp3<br /><span class="token comment"># and so on</span></code></pre>
<h2>Creating new episodes</h2>
<p>I'm hosting the episode files on S3 and I didn't want to have to manually get the filesize, duration, and generate a UUID for each episode so I wrote <a href="https://github.com/rknightuk/ruminate/blob/main/scripts/new.js"><code>new.js</code></a>. This script takes an episode number, finds the mp3 file, reads the duration, title, and summary from the mp3 and outputs a new episode (with a UUID as well). This uses <a href="https://www.npmjs.com/package/mp3-duration"><code>mp3-duration</code></a> and <a href="https://www.npmjs.com/package/node-id3"><code>node-id3</code></a> to extract that data. I can then fill in the shownotes and push the new episode.</p>
<h2>RSS feed</h2>
<p>I was able to replicate <a href="https://ruminatepodcast.com/feed.xml">the RSS feed</a> from Simplecast with this new setup but for some reason Safari doesn't auto-recognise it as a feed that can be opened in Podcasts/NetNewsWire. If anyone knows what attribute triggers this, I'd love to know.</p>
<p>All of the code for this is <a href="https://github.com/rknightuk/ruminate">on GitHub</a> and you can see see the <a href="https://ruminatepodcast.com">new website here</a>.</p>
]]></content:encoded>
<pubDate>2022-12-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>Two Social Networks? In This Economy?</title>
<link>https://rknight.me/blog/two-social-networks-in-this-economy/</link>
<guid>https://rknight.me/blog/two-social-networks-in-this-economy/</guid>
<content:encoded><![CDATA[
<p>The past few months Micro.blog (M.b.) has improved its support for Mastodon and thanks to Space Karen doing what he does best, I've been following more and more people from there as they join via M.b.</p>
<p>This has led to my timeline being busy which <em>is</em> good, but the way people post on Mastodon is very different to M.b. Threads (write a damn blog post please), posts with content that warnings (which rightly in my opinion M.b doesn't support), boosts (again not supported on M.b.), as well as hashtags have made the timeline feel messy and disconnected from the rest of M.b.</p>
<p>Enter <a href="https://omg.lol">omg.lol</a>. omg.lol is a service that has a whole bunch of features, one of which is a Mastodon instance for users, <a href="https://rknight.me/social.lol">social.lol</a>. As a side note, until the end of the year it's only $5 a year (going up to $20 in 2023) so now is a good time to <a href="https://home.omg.lol/referred-by/robb">sign up</a>.</p>
<p>One thing that had put me off signing up on any given instance is what if it shuts down because most of them are free and although some have Patreons, I'm not sure that's a sustainable model for smaller instances in the long run. Because social.lol is linked directly to a service I'm paying for I feel confident it's not going anywhere any time soon.</p>
<p>After <a href="https://toot.rknight.me/2022/12/16/those-of-you.html">asking on M.b</a> about how people use both I made the decision to cross-post everything to Mastodon, keeping M.b as the source of truth. This has worked pretty well the past week, although I did hit some cross-posting issues of my own doing but I should be able to iron these out as I go. I'm also boosting some posts on Mastodon and may even do a <a href="https://social.lol/@sophie/109550690932963078">bit of shitposting</a> from time to time.</p>
<p>I don't really have a conclusion here other than I'm using both things for now. I might even checkout <a href="https://pixelfed.org/">Pixelfed</a> at some point.</p>
<p>If you want to follow me you can do so on <a href="https://micro.blog/rknightuk">Micro.blog</a> or on <a href="https://social.lol/@robb">social.lol/@robb</a>. But probably don't follow me on both lest you see every post twice.</p>
]]></content:encoded>
<pubDate>2022-12-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Prami's Challenge</title>
<link>https://rknight.me/blog/pramis-challenge/</link>
<guid>https://rknight.me/blog/pramis-challenge/</guid>
<content:encoded><![CDATA[
<p><a href="https://social.lol/@prami/109530090151262300">Prami posted a challenge on social.lol</a> to decode this string and win a lifetime subscription to <a href="https://home.omg.lol/referred-by/robb">omg.lol</a>.</p>
<blockquote>
<p>The string below is an encoded lifetime omg.lol gift code:</p>
<p>eoad1o1fpoawctnjeiri11dmj7rir6d8ehadkt4seo6u4</p>
<p>[...]</p>
<p>in this format: XXXX-XXXX-XXXX-XXXX</p>
</blockquote>
<p>I figured I'd have a go which ended up being a good few hours. Then I <a href="https://toot.rknight.me/2022/12/17/this-challenge-from.html">kind of lost my mind a bit</a>. Then went to bed having given up (and needing to be up for a flight this morning).</p>
<p>Overnight, <a href="https://social.lol/@jmj">Joanna</a> solved it and I felt like I'd been presented with a sock, I was free. <a href="https://social.lol/@prami/109531877004198974">The solution</a> was 3 schemes: <code>z-base-32</code> then <code>rot13</code> then <code>base64</code>. I googled <em>a lot</em> last night and not once did I see <a href="https://en.wikipedia.org/wiki/Base32#z-base-32"><code>z-base-32</code></a> so I had no chance (although I <em>was</em> <a href="https://cryptii.com/pipes/z-base-32">on a website that supports it</a> but clearly didn't see it).</p>
<p>Other things I tried:</p>
<ul>
<li>Various different cypher detectors</li>
<li>Asking <a href="https://chat.openai.com/chat">ChatGPT</a> nicely</li>
<li><a href="https://hashcat.net/hashcat/">hashcat</a></li>
<li><a href="https://github.com/Ciphey/Ciphey">Ciphey</a> - this one crashed my computer trying to run overnight</li>
</ul>
]]></content:encoded>
<pubDate>2022-12-18T07:43:47.235+00:00</pubDate>
</item>
<item>
<title>ChatGPT and mySQL Database Schemas</title>
<link>https://rknight.me/blog/chatcgt-and-mysql-database-schemas/</link>
<guid>https://rknight.me/blog/chatcgt-and-mysql-database-schemas/</guid>
<content:encoded><![CDATA[
<p><a href="https://chat.openai.com/chat">ChatGPT</a> is wild. I entered &quot;<em>Describe a mysql database schema for tracking the owned books of multiple people</em>&quot; and it came back with the queries to write the tables including foreign keys:</p>
<pre class="language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> people <span class="token punctuation">(</span><br />  id <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span><br />  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> books <span class="token punctuation">(</span><br />  id <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span><br />  title <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  author <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  <span class="token keyword">year</span> <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> owned_books <span class="token punctuation">(</span><br />  person_id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  book_id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>person_id<span class="token punctuation">,</span> book_id<span class="token punctuation">)</span><span class="token punctuation">,</span><br />  <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>person_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> people<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span><br />  <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>book_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> books<span class="token punctuation">(</span>id<span class="token punctuation">)</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>I do things like this regularly so I <em>can</em> do this no problem but having a rough draft dumped in front of me within seconds is handy. It even gives examples of what queries you could run with the data, so I followed up with &quot;<em>What would the query for how many books each person owns look like?</em>&quot;</p>
<pre class="language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> p<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span>book_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> num_books<br /><span class="token keyword">FROM</span> people p<br /><span class="token keyword">JOIN</span> owned_books ob <span class="token keyword">ON</span> p<span class="token punctuation">.</span>id <span class="token operator">=</span> ob<span class="token punctuation">.</span>person_id<br /><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> p<span class="token punctuation">.</span>id</code></pre>
<p>I'm not convinced I'm getting replaced <em>yet</em> but I'm a tiny bit more worried than I was a few weeks ago.</p>
]]></content:encoded>
<pubDate>2022-12-16T19:38:40.307+00:00</pubDate>
</item>
<item>
<title>Lite YouTube for Micro.blog</title>
<link>https://rknight.me/blog/lite-youtube-for-micro-blog/</link>
<guid>https://rknight.me/blog/lite-youtube-for-micro-blog/</guid>
<content:encoded><![CDATA[
<p>I've published a new <a href="https://micro.blog">Micro.blog</a> plugin called <a href="https://github.com/rknightuk/micro-blog-lite-youtube">Lite YouTube</a> which does one thing: finds YouTube links in posts and appends a <a href="https://github.com/paulirish/lite-youtube-embed">lite-youtube-embed</a> to the post. Example before and after below:</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/lite-youtube-before.png" /></p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/lite-youtube-after.png" /></p>
<p>You can see it working on <a href="https://toot.rknight.me/2022/12/04/last-of-us.html">this post about The Last of Us</a> or on <a href="https://toot.rknight.me/2022/11/22/i-just-realised.html">this post with two videos</a>.</p>
<p>Why did I do this instead of using <a href="https://discourse.gohugo.io/t/embed-youtube-video/2692/7">YouTube shortcodes</a>? Two reasons:</p>
<ol>
<li>Shortcodes are great but what if I change where my site is hosted? Those links won't work any more</li>
<li>(This is the real reason) I will forget, I'm too lazy to do it, this is automatic.</li>
</ol>
<p>You can install it <a href="https://micro.blog/account/plugins/view/83">from the plug-in directory</a> and <a href="https://github.com/rknightuk/micro-blog-lite-youtube">view the code on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2022-12-06T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Office Setup</title>
<link>https://rknight.me/blog/office-setup/</link>
<guid>https://rknight.me/blog/office-setup/</guid>
<content:encoded><![CDATA[
<p><em>My office setup as of April 2022. (This post originally appeared in <a href="https://club.macstories.net/posts/reader-setup-2">MacStories Weekly)</a>.</em></p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/office-setup-tv.jpg" /></p>
<p>A couple of weeks ago I posted a photo in the MacStories Discord and Federico <s>demanded</s> asked very nicely if I would write about it, so here we are. I have a lot of consoles which means I have a lot of games and controllers. I’ve never been one to sell games after I’ve finished them so I always had a collection of some sort. I worked at a second hand game shop while I was at university so my collection grew rapidly in the 11 months I was there and I have continued to pick up games here and there over the years. As of right now I have 315 games across 12 systems, a third of which are for the PlayStation 2. A lot of my all-time favourite games are for the PS2 including:</p>
<ul>
<li>Tony Hawk Pro Skater 3 and 4</li>
<li>Jak and Daxter</li>
<li>Grand Theft Auto: Vice City (side note: despite the launch bugs, the remaster version of this is excellent)</li>
<li>Mashed: Fully Loaded</li>
</ul>
<p>I’m a big fan of single-player story-driven games so the majority of my collection are those types of games. I’m currently playing through Horizon Forbidden West which I am loving.</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/office-setup-cupboard.jpg" /></p>
<p>My setup consists of a PS5, a PS3, a pink PS2 which I adore, an Xbox 360, and an Xbox One all hooked up to a HiSense 4K 43&quot; TV that I bought a few years ago. I’m not sure in 2022 if I would even be able to buy a TV with this many inputs. The modern consoles use HDMI and the PS2 and 360 use <a href="https://en.wikipedia.org/wiki/SCART">SCART cables</a> which was widely used on TVs in the UK and Europe and is somewhat better than using component input.</p>
<p>I use <a href="https://gameye.app/">GameEye</a> to keep track of my the games and consoles I own. I log the games I’ve played with Almanac, a custom blogging system I made for tracking things I’ve watched and played. (Update: I now use <a href="https://micro.blog/rknightuk">Micro.blog</a> for this). In my attic I have a Sega Master System, Nintendo 64, and a Nintendo Wii, plus there is a Nintendo Switch in the living room.</p>
<p>Until I add shelves to my office to have at least some of my games on display, I’m using the built-in cupboard as storage for my games. I built the shelves in there myself so they are a perfect size for double-stacking games. I added an <a href="https://www.ikea.com/gb/en/p/skadis-pegboard-combination-white-s09216595/">Ikea Skadis</a> to the inside of the door to various gaming-related things like cables, controllers, and memory cards for the older consoles.</p>
<p>I have some ideas for the office including a custom controller holder, shelves to display my games and my many collector’s edition statues (these are also in storage right now), and I’m also considering wall-mounting the TV. I also need to alphabetise the games instead of dumping them in the cupboard like they are right now.</p>
]]></content:encoded>
<pubDate>2022-12-05T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Favourite Albums of 2022</title>
<link>https://rknight.me/blog/my-favourite-albums-of-2022/</link>
<guid>https://rknight.me/blog/my-favourite-albums-of-2022/</guid>
<content:encoded><![CDATA[
<p>It's been a really good year for music especially for artists I've been listening to for years.</p>
<ul>
<li><a href="https://music.apple.com/gb/album/love-sux-deluxe/1655449416">Avril Lavinge - Love Sux</a> - This is the link to the deluxe version which contains some excellent acoustic versions of some of the tracks.</li>
<li><a href="https://music.apple.com/gb/album/kings-of-the-new-age/1607207409">State Champs - Kings of the New Age</a></li>
<li><a href="https://music.apple.com/us/album/harder-than-it-looks/1600965603">Simple Plan - Hard Than It Looks</a> - This is as good an album as they've ever made.</li>
<li><a href="https://music.apple.com/gb/album/holy-fvck/1628440994">Demi Levato - HOLY FVCK</a> - this was a suprise entry for me, I didn't expect to like it as much as I do.</li>
<li><a href="https://music.apple.com/gb/album/just-woke-up/1603918127">Jaret Jay Reddick - Just Woke Up</a></li>
<li><a href="https://music.apple.com/gb/album/super-relatable/1637732324">Beefy - Super Relatable</a></li>
<li><a href="https://music.apple.com/gb/album/a-whole-new-wurst-2/1625667455">Punk Rock Factory - A Whole New Wurst 2</a> - Their  cover of <em>Surface Pressure</em> is amazing.</li>
</ul>
<p>The released tracks on <a href="https://music.apple.com/gb/album/tear-me-to-pieces/1647133854">Story of the Year's new album</a> are fantastic. I can't wait to hear the rest of them.</p>
<p>Finally I discovered <a href="https://music.apple.com/gb/album/never-look-back-deluxe/1634447768">Never Look Back by Goldfinger</a>. Apparently it came out in 2020 and I completely missed it. There's a great version of <em>Here In Your Bedroom</em> featuring Avril on this deluxe version of the album.</p>
]]></content:encoded>
<pubDate>2022-12-02T19:50:00.081+00:00</pubDate>
</item>
<item>
<title>How to Copy Gifs to Clipboard Programatically</title>
<link>https://rknight.me/blog/how-not-to-copy-gif-to-clipboard-programatically/</link>
<guid>https://rknight.me/blog/how-not-to-copy-gif-to-clipboard-programatically/</guid>
<content:encoded><![CDATA[
<p><strong>Update 1</strong></p>
<p><a href="https://github.com/edwellbrook/grabgif">Ed Wellbrook solved this with grabgif</a> like the absolute hero he is.</p>
<p><strong>Update 2</strong></p>
<p>Turns out in my frustrated state, some of the things I tried <em>did</em> work but I just didn't notice (or I did something like clear the clipboard by accident). After looking at Ed's solution it clicked. This solution <em>does</em> work:</p>
<pre class="language-bash"><code class="language-bash">osascript <span class="token parameter variable">-e</span> 'set the clipboard to POSIX <span class="token function">file</span> <span class="token string">"/path/to/animated.gif"</span></code></pre>
<p>I will leave the rest of the article but everything below is kind of useless now.</p>
<hr />
<p>If you've come to this post to find out how to copy an animated gif to the clipboard programatically: I'm sorry. All I have is many solutions that either don't work at all, or only partially work.</p>
<p>Why was I doing this? I've had an idea for an <a href="https://www.alfredapp.com/">Alfred</a> workflow for a while that would list all the gifs in my gif folder then copy it to the clipboard so I can paste in to Slack (or anywhere that supports copy/pasting animated gifs). I like to keep things as simple as possible with <a href="https://github.com/rknightuk/alfred-workflows">my Alfred workflows</a> so I figured I'd try AppleScript/JXA first.</p>
<h2>AppleScript and JXA</h2>
<p>There are loads of StackOverflow posts describing how to copy <em>images</em>, some of which even say it works with gifs. They do not. At best, some of them will copy the first frame of the gif to the clipboard, at worst they flat out don't work.</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># these work but will only get the first frame</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to (read (POSIX file "/path/to/animated.gif") as {«class GIFf»})'</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to (read "/path/to/animated.gif" as GIF picture)'</span><br /><br /><br /><span class="token comment"># these do not work at all</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to (read (POSIX file "/path/to/animated.gif")'</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to POSIX file "/path/to/animated.gif"'</span></code></pre>
<h2>Command Line Tools</h2>
<p>I found a number of CLI tools that looked promising. The first of these I came across was <a href="https://gist.github.com/mwender/49609a18be41b45b2ae4"><code>impbcopy</code></a> but this only works with <code>png</code> files. Perhaps there's a way to modify this to work but I wasn't able to see how to do that. Likewise with <a href="https://github.com/moicci/pngpaste"><code>pngpaste</code></a> which claims to support gifs.</p>
<h2>Conclusion</h2>
<p>Having spent a good few hours on this at this point I am assuming this can't be done. If someone knows of a way to do this I would be very interested to see a solution.</p>
]]></content:encoded>
<pubDate>2022-12-01T00:00:00+00:00</pubDate>
</item>
<item>
<title>Music Replay 2022</title>
<link>https://rknight.me/blog/music-replay-2022/</link>
<guid>https://rknight.me/blog/music-replay-2022/</guid>
<content:encoded><![CDATA[
<p><a href="http://replay.music.apple.com">Apple Music Replay</a> is a vast improvement on last year. I grabbed some of the data so I have a record of it (I have no idea if you can access a previous years data or not).</p>
<p>No suprises Hamilton is top again with Lin-Manuel Miranda and Leslie Odom, Jr. taking 2 of the top artist spots. Combined, they take the real top spot.</p>
<p>I was in the top 100 listeners for Punk Rock Factory and Goldfinger.</p>
<p><strong>3695 songs</strong></p>
<p><strong>696 Artists</strong></p>
<p>Top artists:</p>
<ol>
<li><a href="https://music.apple.com/us/artist/punk-rock-factory/975678831">Punk Rock Factory</a> - 4,447 minutes</li>
<li><a href="https://music.apple.com/us/artist/goldfinger/2089079">Goldfinger</a> - 3,354 minutes</li>
<li><a href="https://music.apple.com/us/artist/lin-manuel-miranda/329027198">Lin-Manuel Miranda</a> - 3,292 minutes</li>
<li><a href="https://music.apple.com/us/artist/linkin-park/148662">Linkin Park</a> - 3,046 minutes</li>
<li><a href="https://music.apple.com/us/artist/leslie-odom-jr/580650079">Leslie Odom, Jr.</a> - 2,886 minutes</li>
<li><a href="https://music.apple.com/us/artist/simple-plan/150861">Simple Plan</a> - 2,303 minutes</li>
<li><a href="https://music.apple.com/us/artist/bowling-for-soup/1650849">Bowling for Soup</a> - 2,015 minutes</li>
<li><a href="https://music.apple.com/us/artist/machine-gun-kelly/465954501">Machine Gun Kelly</a> - 1,920 minutes</li>
<li><a href="https://music.apple.com/us/artist/avril-lavigne/459885">Avril Lavigne</a> - 1,837 minutes</li>
<li><a href="https://music.apple.com/us/artist/mc-lars/45378751">MC Lars</a> - 1,772 minutes</li>
</ol>
<p><strong>231 Albums</strong></p>
<p>I have no idea how it works out the play count on albums but I assume this is individual tracks so I've worked out the times I've played an album based on this. Apple doesn't give numbers for albums 6-10.</p>
<p>Top Albums:</p>
<ol>
<li><a href="https://music.apple.com/us/album/hamilton-an-american-musical-original-broadway-cast/1025210938">Hamilton: An American Musical (Original Broadway Cast Recording)</a> - 1,581 plays / ~35 times</li>
<li><a href="https://music.apple.com/us/album/never-look-back-deluxe/1634447768">Never Look Back (Deluxe) - Goldfinger</a> - 1,099 plays / ~57 times</li>
<li><a href="https://music.apple.com/us/album/harder-than-it-looks/1600965603">Harder Than It Looks - Simple Plan</a> 503 plays / ~50 times</li>
<li><a href="https://music.apple.com/us/album/love-sux-deluxe/1655449416">Love Sux - Avril Lavigne</a> - 464 plays / ~38 times</li>
<li><a href="https://music.apple.com/us/album/just-woke-up/1603918127">Just Woke Up - Jaret Ray Reddick</a> - 448 plays / ~37 times</li>
<li><a href="https://music.apple.com/us/album/tickets-to-my-downfall-sold-out-deluxe/1533882860">Tickets to My Downfall (SOLD OUT Deluxe)</a></li>
<li><a href="https://music.apple.com/us/album/recharged/701162375">RECHARGED - Linkin Park</a></li>
<li><a href="https://music.apple.com/us/album/kings-of-the-new-age/1607207409">Kings of the New Age - State Champs</a></li>
<li><a href="https://music.apple.com/us/album/with-sprinkles/372936293">With Sprinkles - Beefy</a></li>
<li><a href="https://music.apple.com/us/album/single-and-famous/328126452">Single and Famous - K.Flay and MC Lars</a></li>
</ol>
]]></content:encoded>
<pubDate>2022-11-29T16:33:59.480+00:00</pubDate>
</item>
<item>
<title>Importing Tweets into Micro.blog</title>
<link>https://rknight.me/blog/importing-tweets-into-microblog/</link>
<guid>https://rknight.me/blog/importing-tweets-into-microblog/</guid>
<content:encoded><![CDATA[
<p>I wanted to import a bunch of tweets from my archive (mostly cat photos and a few other bits) but I didn't want to have to manually go through each tweet, copy the text and download the photos. So I wrote a script to do it for me once I had the IDs (which I got with my <a href="https://rknight.me/get-safari-tabs-shortcut/">Safari shortcut</a>).</p>
<p>One thing that had annoyed me for a while is I didn't keep a diary/note of things that happened and my thoughts during the first year of so of the pandemic but thanks to going through my archive I now <a href="https://toot.rknight.me/categories/covid/">have that</a>. On a cheerier note I have a lovely collection of animals in the <a href="https://toot.rknight.me/categories/pets/">pets category</a>. These additional categories were done manually (with the help of <a href="https://github.com/sbarex/QLMarkdown">QLMarkdown</a>) as I couldn't think of a way to automate this.</p>
<p>Once I had the IDs it was a case of getting the format correctly (for example, Micro.blog will fail an import with empty categories in the YAML). I was able to take ~450 tweets, convert them to markdown and <a href="https://toot.rknight.me/categories/imported-tweets/">import them into Micro.blog</a>. For example, this tweet:</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/boristweet.png" /></p>
<p>becomes:</p>
<pre><code>---
date: 2022-10-20T13:56:19+00:00
categories: Imported Tweets
---

&quot;You could not live with your own failure. Where did that bring you? Back to me&quot;

![](https://pbs.twimg.com/media/Ffg6jkDXkAARD4p.jpg)
</code></pre>
<p>The script isn't perfect. It doesn't do anything with hashtags or usernames, nor does it check if a tweet is a reply or a retweet. The <a href="https://github.com/rknightuk/twitter-to-micro-blog">project readme.md</a> has steps for using it on your own archive.</p>
]]></content:encoded>
<pubDate>2022-11-17T00:00:00+00:00</pubDate>
</item>
<item>
<title>The "Best" Tweets</title>
<link>https://rknight.me/blog/the-best-tweets/</link>
<guid>https://rknight.me/blog/the-best-tweets/</guid>
<content:encoded><![CDATA[
<p>A few days ago <a href="https://twitter.com/jamesthomson/status/1591538731756191745">James Thomson posted</a> that you can find your tweets based on how many likes they got with the following link (switching my username for yours):</p>
<p><a href="https://twitter.com/search?q=from%3Arknightuk%20min_faves%3A1000&amp;src=typed_query&amp;f=live">https://twitter.com/search?q=from%3Arknightuk%20min_faves%3A1000&amp;src=typed_query&amp;f=live</a></p>
<p>I think it's very likely my account will be deleted at some point so I figured I'd have a little look at my best tweets and archive them here (I am using &quot;best&quot; in the loosest possible way here).</p>
<p><strong>Back to the Future Day tweet - 2015-10-21 (<a href="https://hellsite.rknight.me/656762307494682624">link</a></strong>)</p>
<p>This has a typo that will haunt me forever (should be &quot;Emmett&quot; not &quot;Emmet&quot;).</p>
<blockquote>
<p>“Are you Marty McFly? I’ve got something for you”</p>
<p><em>opens letter</em></p>
<p>“Emmet Brown would like you to join his professional network on LinkedIn”</p>
</blockquote>
<p>I also did <s>the same tweet</s> a totally original tweet when GDPR caused everyone to send a thousand emails (<a href="https://hellsite.rknight.me/999648514534764544">link</a>).</p>
<blockquote>
<p>“Are you Marty McFly? I’ve got something for you”</p>
<p><em>opens letter</em></p>
<p>“Please confirm you want to continue to receive letters from Dr. Emmett Brown”</p>
</blockquote>
<p><strong>Alt Key - 2016-08-21 (<a href="https://hellsite.rknight.me/767337245133144064">link</a>)</strong></p>
<blockquote>
<p>The alt symbol (⌥) is like a track switch. An alternate route. Alt.</p>
<p>Mind blown.</p>
</blockquote>
<p><strong>Dark Pattern - 2018-05-27 (<a href="https://hellsite.rknight.me/1000748036367310848">link</a>)</strong></p>
<blockquote>
<p>This “no I hate myself” pattern is horrible.</p>
</blockquote>
<img alt="" height="282" src="https://rknightuk.s3.amazonaws.com/site/hate_discounts.jpg" width="600" />
<p><strong>Boris × Thanos - 2022-10-20 (<a href="https://hellsite.rknight.me/1583079656760410112">link</a>)</strong></p>
<p>I didn't make this image. I had the idea and then grabbed the image from <a href="https://twitter.com/mattlcapon/status/1421631601902039043">this tweet</a>.</p>
<blockquote>
<p>&quot;You could not live with your own failure. Where did that bring you? Back to me&quot;</p>
</blockquote>
<img alt="" height="332" src="https://rknightuk.s3.amazonaws.com/site/boris_thanos.jpg" width="600" />
]]></content:encoded>
<pubDate>2022-11-15T00:00:00+00:00</pubDate>
</item>
<item>
<title>Year of Renovation</title>
<link>https://rknight.me/blog/year-of-renovation/</link>
<guid>https://rknight.me/blog/year-of-renovation/</guid>
<content:encoded><![CDATA[
<p>We moved into our house November 3rd 2021, just over a year ago. Most of the house hadn't been decorated since it was built in the '70s so everything needed redoing. With the exception of a few carpets and a bit of painting, everything is now done.</p>
<h3>Bathroom</h3>
<img src="https://rknightuk.s3.amazonaws.com/site/house/bathroom_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/bathroom_after.jpg" />
<h3>Main Bedroom</h3>
<img src="https://rknightuk.s3.amazonaws.com/site/house/main_bedroom_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/main_bedroom_after.jpg" />
<h3>Spare Room</h3>
<img src="https://rknightuk.s3.amazonaws.com/site/house/spare_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/spare_after.jpg" />
<h3>Office</h3>
<img src="https://rknightuk.s3.amazonaws.com/site/house/office_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/office_after.jpg" />
<h3>Nursery</h3>
<img src="https://rknightuk.s3.amazonaws.com/site/house/nursery_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/nursery_after.jpg" />
<h3>Kitchen</h3>
<p>This was the biggest project. We extended into the garage to make a kitchen/diner and add a utility room.</p>
<img src="https://rknightuk.s3.amazonaws.com/site/house/kitchen_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/kitchen_after.jpg" />
<h3>Living Room</h3>
<img src="https://rknightuk.s3.amazonaws.com/site/house/lounge_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/lounge_after.jpg" />
]]></content:encoded>
<pubDate>2022-11-08T00:00:00+00:00</pubDate>
</item>
<item>
<title>Follow Mastodon User on Micro.blog Shortcut</title>
<link>https://rknight.me/blog/follow-mastodon-user-on-micro.blog-shortcut/</link>
<guid>https://rknight.me/blog/follow-mastodon-user-on-micro.blog-shortcut/</guid>
<content:encoded><![CDATA[
<p><a href="https://micro.blog">Micro.blog</a> has support for following and replying to Mastodon users but getting from someone's profile on Mastodon to the follow page on Micro.blog can be a pain. To search for a user you need have it in the format of <code>cooluser@mastodon.instance</code> which isn't the same as the profile URLs. To make this easier I made a shortcut that does the following:</p>
<ol>
<li>Takes the current Safari URL, for example <code>https://mastodon.instance/@cooluser</code></li>
<li>Gets the domain (<code>mastodon.instance</code>) and the path (<code>@cooluser</code>)</li>
<li>Swaps those round to become <code>cooluser@mastodon.instance</code></li>
<li>Opens the page on Micro.blog to be able to follow that user (<code>https://micro.blog/cooluser@mastodon.instance</code>)</li>
</ol>
<p>It will also check to see if the path/username contains an <code>@</code> symbol and if it doesn't will show an alert instead. This isn't ideal but given that Mastodon can have any domain, it's much harder to detect if it's a Mastodon site or not.</p>
<p>There is a meta tag in the HTML with <code>profile:username</code> as the property name but I don't know enough about Shortcuts to do this.</p>
<p><a href="https://www.icloud.com/shortcuts/fe47f7e4ed104f7dbb8202b49c3482c4">Download Follow Mastodon User on Micro.blog shortcut v1.1</a></p>
<h3>Previous Versions</h3>
<ul>
<li><a href="https://www.icloud.com/shortcuts/c055237a4b744d9eb5b120fe017b8356">v1.0</a> - this version won't work if the user hasn't been seen before by Micro.blog</li>
</ul>
]]></content:encoded>
<pubDate>2022-11-03T00:00:00+00:00</pubDate>
</item>
<item>
<title>Fix for Bluetooth Audio Cutting Out on the Mac</title>
<link>https://rknight.me/blog/fix-for-bluetooth-audio-cutting-out-on-the-mac/</link>
<guid>https://rknight.me/blog/fix-for-bluetooth-audio-cutting-out-on-the-mac/</guid>
<content:encoded><![CDATA[
<p>Bluetooth cutting out randomly on my Mac when using wireless headphones has been an issue for me for ages. I assumed it was because of everyones BT devices in the office but I'm here by myself this morning and it was still happening.</p>
<p>Had a google around and found <a href="https://www.reddit.com/r/MacOSBeta/comments/qjgqjx/i_think_ive_found_a_fix_for_the_bluetooth/">this thread</a> on Reddit and it solved it. Settings &gt; Sharing &gt; Turn off AirPlay Reciever.</p>
<p>I wish I'd looked for a solution sooner.</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/settings_airplay.png" /></p>
<p>Update for Ventura: System Settings &gt; General &gt; AirDrop &amp; Handoff. Thanks <a href="https://www.trevorkay.me">Trevor</a>.</p>
]]></content:encoded>
<pubDate>2022-09-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on Micro.blog</title>
<link>https://rknight.me/blog/thoughts-on-micro-blog/</link>
<guid>https://rknight.me/blog/thoughts-on-micro-blog/</guid>
<content:encoded><![CDATA[
<p>A couple of weeks ago I signed up to <a href="https://micro.blog">Micro.blog</a> and stopped using Twitter, Instagram, and Pocket.</p>
<h3>Twitter</h3>
<p>Micro.blog (MB for the rest of the post) has no likes, no follower counts, no retweets, and no <s>post dunking</s> quote tweets. If I post something, I don't know who saw it or who enjoyed it but it doesn't matter; I'm posting it because I want to. Might be <a href="https://toot.rknight.me/2022/05/12/stripe-have-opensourced.html">something interesting</a> or me <a href="https://toot.rknight.me/2022/05/13/mcr-released-a.html">being nostalgic for a time when I thought I was, but definitely wasn't, cool</a> but none of it is being posted to try and &quot;go viral&quot; or get likes.</p>
<p>The lack of follower count, or even knowing if someone follows you, means there's no guilt for unfollowing someone or wondering why someone unfollowed you. No likes means if someone really does like a post a lot, they can reply and say so. <a href="https://blog.ayjay.org/a-bit-of-advice/">Alan Jacobs has an excellent post</a> about this.</p>
<p>I've looked at Twitter a few times in the past month and I was reminded just how negative it is. I'm as guilty as anyone for dunking on politicians, crypto bros, and general idiots. They probably deserve it but it is <em>exhausting</em> and it's pretty much every other tweet. I don't follow news sites or &quot;brands&quot; on Twitter, these are all just normal people but we're all (rightly) angry about <em>the things</em>. I just don't think it's good for my mental health to be that annoyed about a thousand things all the time.</p>
<h3>Instagram</h3>
<p>I hadn't posted to Instagram for a long time. I'd felt uneasy about feeding content to the beast that is Facebook for a while but I also thought perhaps I didn't have anything <em>worth</em> posting. A few days after I signed up, MB were running the <a href="https://micro.welltempered.net/2022/04/30/the-may-photoblogging.html">May Photoblogging challenge</a>. 30 days, 30 prompts, post a photo each day. Turns out I do have things to post and you can <a href="https://toot.rknight.me/categories/may-2022-photoblogging-challenge/">view my challenge photos here</a>. Challenge photos are collected in this <a href="http://micro.blog/discover/mbmay/grid">nice grid view</a> and it's been a great way to find all the cat people.</p>
<h3>Pocket</h3>
<p>This one is less &quot;stick it to the man&quot; and more &quot;just use one service for a bunch of things&quot;. MB has a bookmarking feature that works for exactly my needs and I <a href="https://rknight.me/save-bookmark-to-micro-blog-shortcut/">whipped together a shortcut</a> as well as making a <a href="https://micromarks.rknight.me">little web app to manage my bookmarks</a>.</p>
<h3>Other things I like about Micro.blog</h3>
<p>Editable posts. What a concept.</p>
<p>The <a href="https://micro.blog/discover">discover timeline</a> is a manually curated timeline of features posts from real people and is an excellent starting point to find users to follow. <a href="https://micro.blog/jean">Jean</a> does an excellent job of curating posts for the discover page as well as helping new people to the service. The other way to find interesting posts are the automatic timelines based on <a href="https://help.micro.blog/t/emoji-in-discover/34">emoji topics</a>.</p>
<p>You can follow Mastodon users from MB which mean I can still get updates from <a href="https://duck.haus/about">the duck haus</a> or any other Mastodon instance. Mastodon users can follow MB users as well. When using a custom domain with MB you can set a Mastodon-compatible username. For example mine is <a href="https://micro.blog/rknightuk?remote_follow=1">robb@toot.rknight.me</a>.</p>
<p>There's <a href="https://help.micro.blog/t/json-api/97">an API</a> which I'm sure I'll be using more in the future.</p>
<h3>Missing Pieces</h3>
<p>As much as I've complained about Twitter, there are people who I still want to subscribe to. Of course Twitter doesn't have RSS feeds any more but thankfully <a href="https://netnewswire.com">NetNewsWire</a> allows me to subscribe to specific people so I'm &quot;following&quot; a handful of Twitter accounts there instead.</p>
]]></content:encoded>
<pubDate>2022-05-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Get Safari Tabs Shortcut</title>
<link>https://rknight.me/blog/get-safari-tabs-shortcut/</link>
<guid>https://rknight.me/blog/get-safari-tabs-shortcut/</guid>
<content:encoded><![CDATA[
<p>For <a href="https://www.macstories.net/stories/introducing-automation-april/">Automation April</a> MacStories ran a <a href="https://www.macstories.net/stories/introducing-the-2022-automation-april-shortcuts-contest-winners/">contest</a> where people could submit a shortcut and be in with a chance of winning an Analogue Pocket and a Stream Deck.</p>
<p>Until the announcement of the contest I had never made a shortcut but I wanted to enter just for the fun of it (and that sweet role icon <a href="http://plus.club">in the members Discord</a>). I decided to convert my existing <a href="https://rknight.me/alfred-workflows/#085F8761-9FB4-492D-B466-D7CE943DCE60"><em>Get Safari Tabs</em> Alfred workflow</a> to a shortcut.</p>
<p>The shortcut gets all currently open tabs in Safari and converts them into one of 6 formats and then copies them to the clipboard</p>
<ul>
<li>Markdown list: <code>- [Robb Knight](https://rknight.me)</code></li>
<li>Markdown links: <code>[Robb Knight](https://rknight.me)</code></li>
<li>Links only: <code>https://rknight.me</code></li>
<li>Titles only <code>Robb Knight</code></li>
<li>Titles with links <code>Robb Knight https://rknight.me</code></li>
</ul>
<p>I use the workflow, and now the shortcut, fairly regularly for making <a href="https://ruminatepodcast.com">shownotes for Ruminate</a> and for adding links to <a href="https://intersect.rknight.me">the Intersect</a>.</p>
<p>The shortcut is MacOS only because it uses <a href="https://developer.apple.com/library/archive/releasenotes/InterapplicationCommunication/RN-JavaScriptForAutomation/Articles/Introduction.html#//apple_r">JXA</a> to get the current tabs and formatting them. I'm sure this could be done with shortcut actions but I already had the existing logic from the workflow and I couldn't see any advantage in converting the logic to actions.</p>
<p><a href="https://www.icloud.com/shortcuts/bfe5827f709a47909e6e81d098d5e507">Download Get Safari Links Shortcut for MacOS</a></p>
]]></content:encoded>
<pubDate>2022-05-13T00:00:00+00:00</pubDate>
</item>
<item>
<title>Save Bookmark to Micro.blog Shortcut</title>
<link>https://rknight.me/blog/save-bookmark-to-micro-blog-shortcut/</link>
<guid>https://rknight.me/blog/save-bookmark-to-micro-blog-shortcut/</guid>
<content:encoded><![CDATA[
<p>I recently signed up (again) to <a href="https://micro.blog">Micro.blog</a> in an attempt to move away from services run by <a href="https://en.wikipedia.org/wiki/Elon_Musk">billionare shitposters</a>. I will probably write up a full post about it soon but you can hear me talk about it on <a href="https://ruminatepodcast.com/episodes/144">episode 144 of Ruminate</a> or <a href="https://toot.rknight.me">view my micro blog here</a>.</p>
<p>One of the features Micro.blog offers is bookmarking of posts and links. After a <a href="https://micro.blog/rknightuk/12770616">conversation about using micro.blog as a read later service</a> and finding the correct API I put together a shortcut to save bookmarks. You'll need to get an access token from <a href="https://micro.blog/account/apps">the apps settings page</a>.</p>
<p><a href="https://www.icloud.com/shortcuts/876d4c98272c4deb9f155a656a6929ec">Download Bookmark on Micro.blog</a></p>
<p>MacOS shortcuts lacks support for using the sharesheet without a <a href="https://apps.apple.com/us/app/sharebot-for-shortcuts/id1597340986?mt=12">third-party app</a> so instead you can run this shortcut whenever and it gets the current Safari page URL. The iOS version shows up in the share sheet so it can be used wherever you share links.</p>
<p><s>If there's a way to combine these so one shortcut works for both MacOS and iOS, I'd love to hear it.</s> Thanks to <a href="https://micro.blog/pratik/12775485">Pratik</a> for showing me how to check the device type and make this one shortcut for both platforms.</p>
]]></content:encoded>
<pubDate>2022-04-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>Building a PiSight</title>
<link>https://rknight.me/blog/building-a-pisight/</link>
<guid>https://rknight.me/blog/building-a-pisight/</guid>
<content:encoded><![CDATA[
<p><img alt="My finished PiSight" src="https://rknightuk.s3.amazonaws.com/site/pisight.jpg" /></p>
<p>During the pandemic Max Braun managed to squeeze a Pi Zero with camera module <a href="https://debugger.medium.com/todays-webcams-are-boring-so-i-brought-back-a-classic-291cc7c94c76">into an Apple iSight camera</a>. I came across the post a few weeks ago and decided to have a go myself.</p>
<p>Despite the <a href="https://www.raspberrypi.com/news/supply-chain-shortages-and-our-first-ever-price-increase/">Rapsberry Pi shortage</a> I was able to order a Pi Zero, the <a href="https://shop.pimoroni.com/products/raspberry-pi-camera-module-v2?variant=19833929735">camera module</a>, the <a href="https://shop.pimoroni.com/products/camera-cable-raspberry-pi-zero-edition?variant=32092803891283">Pi Zero camera cable</a>, and an <a href="https://en.wikipedia.org/wiki/ISight">iSight</a>. I ordered the <a href="https://github.com/maxbbraun/pisight/blob/master/PiSight.stl">3D-printed internal chassis</a> and <a href="https://github.com/maxbbraun/pisight/issues/16">this USB adaptor</a> from <a href="https://sgd3d.co.uk">SGD3D</a> which took about a week to arrive.</p>
<p>I followed these <a href="https://www.ifixit.com/Device/Apple_iSight_Webcam">iFixIt teardowns</a> to work out how to take the iSight apart, then looked at the <a href="https://github.com/maxbbraun/pisight/issues">issues on the PiSight repo</a>, and <a href="https://muffinresearch.co.uk/building-a-pisight/">this blog post</a>, to see other people putting theirs together. The main issue I had was having to trimming off the bottom two corners of the camera module to be able to fit it inside the iSight tube. I used <a href="https://github.com/showmewebcam/showmewebcam"><code>showmewebcam</code></a> for the software, which boots incredibly quickly and makes it very easy to get going.</p>
<p>Once I'd wrangled it all together I used <a href="https://handmirror.app">Hand Mirror</a> to check everything was working (the lighting is terrible in this temporary office hence why it's looks so bad):</p>
<center><img src="https://rknightuk.s3.amazonaws.com/site/pisight-hand-mirror.png" /></center>
<p><img alt="The chassis" src="https://rknightuk.s3.amazonaws.com/site/pisight-chassis.jpg" /></p>
<p>It may not be the best webcam in the world, but it's easily as good as the one I have in my MacBook, and I can move it around wherever I want.</p>
<h3>Additional Links</h3>
<ul>
<li><a href="https://debugger.medium.com/todays-webcams-are-boring-so-i-brought-back-a-classic-291cc7c94c76">Today’s Webcams Are Boring, so I Brought Back a Classic | by Max Braun | Debugger</a></li>
<li><a href="https://www.youtube.com/watch?v=8l0kpQ_2rj4">Apple FireWire iSight Teardown - YouTube</a></li>
<li><a href="https://muffinresearch.co.uk/building-a-pisight/">Building a PiSight</a></li>
<li><a href="https://github.com/maxbbraun/pisight/tree/26c4cef49d1f5b3d396f66f86c58a1d579e686a7/monitor_stand">PiSight Monitor Stand</a></li>
<li><a href="https://www.thingiverse.com/thing:11761">iSight Clamp for ToM by quadrivia - Thingiverse</a></li>
<li><a href="https://handmirror.app/">Hand Mirror, for Mac</a></li>
<li><a href="https://github.com/peterbay/camera-control">peterbay/camera-control: Simple command-line application for controlling camera settings through V4L2.</a></li>
</ul>
]]></content:encoded>
<pubDate>2022-02-10T00:00:00+00:00</pubDate>
</item>
<item>
<title>Monzo Pot Image Generator Version Two</title>
<link>https://rknight.me/blog/monzo-pot-image-generator-version-2/</link>
<guid>https://rknight.me/blog/monzo-pot-image-generator-version-2/</guid>
<content:encoded><![CDATA[
<p>It's been a while since I <a href="https://rknight.me/monzo-pot-image-generator/">released the first version</a> of the <a href="https://potimages.rknight.me/">Monzo pot image generator</a> and there's been a <a href="https://community.monzo.com/t/monzo-pot-image-generator/102120">lot of requests</a> on the Monzo forum for various new features.</p>
<p>So I spent some time adding and updating the site:</p>
<ul>
<li>New about modal with credits for the new icons:
<ul>
<li>Nearly 2000 brand logos from <a href="https://simpleicons.org/">Simple Icons</a></li>
<li>Country flags from <a href="https://github.com/lipis/flag-icon-css">lipis/flag-icon-css</a></li>
<li>Country icons from <a href="https://github.com/djaiss/mapsicon">djaiss/mapsicon</a></li>
<li>Full set of emoji from <a href="https://openmoji.org/library/">Openmoji</a></li>
</ul>
</li>
<li>Premium backgrounds from <a href="https://community.monzo.com/t/monzo-pot-image-generator/102120/178">Ben in the forums</a></li>
<li>Upload your own background image</li>
<li>New coloured Monzo logo from the Monzo press kit</li>
<li>Offline support</li>
</ul>
<p>Try the <a href="https://potimages.rknight.me/">Monzo Pot Image Generator</a>.</p>
]]></content:encoded>
<pubDate>2021-08-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>The Intersect: My Personal Wiki</title>
<link>https://rknight.me/blog/intersect/</link>
<guid>https://rknight.me/blog/intersect/</guid>
<content:encoded><![CDATA[
<p>I came across <a href="https://wiki.nikitavoloboev.xyz/">Nikita Volodoev's wiki</a> recently when looking for other things and realised this was exactly the type of things I'd been looking for to store snippets, links, and other notes about various things that don't justify a full blog post. And because I'm an idiot I ended up <a href="https://hellsite.rknight.me/1426307649365286921">building my own solution</a> with <a href="https://11ty.dev">Eleventy</a>. The result is <a href="https://intersect.rknight.me">Intersect</a>.</p>
<p>Aside from just rendering a bunch of markdown files it has a number of additional features.</p>
<ul>
<li>Table of contents and breadcrumbs</li>
<li>Syntax highlight for code blocks with copy code button</li>
<li>Full search of content and links</li>
<li>Highlight search queries on navigation to a result</li>
<li>Popular pages using the <a href="https://usefathom.com/ref/IXCLSF">Fathom API</a></li>
<li>Recently updated pages by parsing the git log</li>
</ul>
<p>There are a bunch of pages where you can read about what Intersect is and how it works on Intersect itself:</p>
<ul>
<li><a href="https://intersect.rknight.me">The introduction page</a> has some more details about the why</li>
<li><a href="https://intersect.rknight.me/meta">The meta page</a> sets out what the purpose of the site is</li>
<li><a href="https://intersect.rknight.me/meta/readme">The readme page</a> has installation instructions, and more technical information about how it was built</li>
</ul>
<p>The <a href="https://github.com/rknightuk/intersect">source code is on GitHub</a> but to paraphrase <a href="https://github.com/andy-piccalilli/11ty-base">Andy Bell</a> it's not open source so much as it is free. I doubt this will meet the requirements of anyone else, it's a good base to start with, but any features I add will be because I want them.</p>
<p>There is a companion <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/intersect">Alfred workflow</a> that also searches the content and links and can also open the page in VSCode for editing.</p>
<p>I even went full <a href="http://devsdodesign.com">#devsdodesign</a> and made a logo:</p>
<p><img alt="Intersect Logo" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/intersect-logo.png" /></p>
]]></content:encoded>
<pubDate>2021-08-23T00:00:00+00:00</pubDate>
</item>
<item>
<title>Calendar Events Alfred Workflow</title>
<link>https://rknight.me/blog/calendar-events-alfred-workflow/</link>
<guid>https://rknight.me/blog/calendar-events-alfred-workflow/</guid>
<content:encoded><![CDATA[
<p>NB: This workflow has been deprecated and replaced with the <a href="https://github.com/rknightuk/alfred-workflows/raw/main/workflows/agenda">Agenda Workflow</a></p>
<p>tl;dr: Calendar events workflow for Alfred. <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/calendar-events">Download it here</a>.</p>
<p>I released a <a href="https://rknight.me/reminders-alfred-workflow/">Reminders workflow</a> a few days ago and while working on that I realised a lot of the code would be reusable for a version to manage calendar events. So I went at it tonight while it was too hot to sleep (it's 3am).</p>
<p><img alt="Calendar Events workflow for Alfred" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/calendar-events.png" /></p>
<p>Like the reminders one, it uses an only-for-this-use-case CLI tool which you <a href="https://github.com/rknightuk/alfred-calendars-helper">can view on Github here</a>.</p>
<p>One difference with this one is opening and creating events. I wanted the workflow to stand on it's own but I use Fantastical as my calender so it has two modes: one for default Calendar.app and one for Fantastical. By changing the <code>usefantastical</code> workflow variable events will be opened and created in Fantastical. This is the recommended way of using it.</p>
<p>With this workflow you can:</p>
<ul>
<li>View upcoming events for the next 5 days (all or a specific calendar)</li>
<li>Open events in Calendar.app or Fantastical</li>
<li>Set a default calendar for creating events</li>
</ul>
<p><a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/calendar-event">Download Calendar Events for Alfred</a>.</p>
]]></content:encoded>
<pubDate>2021-07-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Reminders Alfred Workflow</title>
<link>https://rknight.me/blog/reminders-alfred-workflow/</link>
<guid>https://rknight.me/blog/reminders-alfred-workflow/</guid>
<content:encoded><![CDATA[
<p>NB: This workflow has been deprecated and replaced with the <a href="https://github.com/rknightuk/alfred-workflows/raw/main/workflows/agenda">Agenda Workflow</a></p>
<p>tl;dr: Reminders workflow for Alfred. <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/reminders">Download it here</a>.</p>
<p>There are a number of workflows available for <a href="https://www.alfredapp.com">Alfred</a> to manage Reminders on the Mac and I've tried most of them; none of them do everything I want. Most of them have one of these problems:</p>
<ul>
<li>They don't order reminders based on due date</li>
<li>You can create reminders but can't view them</li>
<li>They rely on a default list for creating with no option to choose</li>
</ul>
<p>I decided to have a go at building my own this weekend (and this evening). I tried a number of approaches including Javascript for automation (JXA) which was too slow and AppleScript which opens the app to access your reminders so is also slow. I then found <a href="https://github.com/keith/reminders-cli">reminders-cli</a> which is a command line tool written in Swift.</p>
<p>This tool was as close as I was able to get in terms of accessing reminders but it didn't order them by due date, and didn't allow me to view reminders from all lists, only specific ones. I cloned the repo and starting changing some stuff to do what I wanted; I've never written Swift before, so the code is <em>bad</em>. <em>Really bad</em>. I also modified the date parsing script from <a href="https://github.com/surrealroad/alfred-reminders">alfred-reminders</a>, which uses (an admittedly older version of) <a href="https://github.com/wanasit/chrono">Chrono</a> but works for this purpose.</p>
<p>After a bit more wrangling of various things like bash, AppleScript, and Alfred's various features like script filters and workflow variables I was able to get something I'm happy with.</p>
<p><img alt="Reminders workflow for Alfred" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/reminders-for-alfred.png" /></p>
<p>With this workflow you can:</p>
<ul>
<li>View all upcoming reminders</li>
<li>View upcoming reminders from a specific list</li>
<li>Mark reminders complete</li>
<li>Set a default list for creating reminders (or create for a specific list)</li>
<li>Create new reminders with natural language (e.g. &quot;Lunch with John tomorrow 1pm&quot;)</li>
</ul>
<p><a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/reminders">Download Reminders for Alfred</a>.</p>
]]></content:encoded>
<pubDate>2021-07-19T00:00:00+00:00</pubDate>
</item>
<item>
<title>Monzo Pot Image Generator</title>
<link>https://rknight.me/blog/monzo-pot-image-generator/</link>
<guid>https://rknight.me/blog/monzo-pot-image-generator/</guid>
<content:encoded><![CDATA[
<p>While browsing <a href="https://community.monzo.com/t/custom-pot-images-to-use/62748/325">this thread on the Monzo forums</a> I came up with an idea to generate Monzo pot images whenever I want so I created the <a href="https://potimages.rknight.me/">Monzo Pot Image Generator</a>.</p>
<p><img alt="Monzo Pot Image Generator" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/preview-image.png" /></p>
<p>First thing was to work out how to generate and download the images. This turned out to be relatively easy with a combination of <a href="https://github.com/tsayen/dom-to-image">dom-to-image</a> and <a href="https://github.com/eligrey/FileSaver.js">FileSaver</a>. To generate a list of the <a href="https://fontawesome.com/">Font Awesome icons</a> output in the search, I grabbed <a href="https://github.com/FortAwesome/Font-Awesome/blob/master/metadata/icons.json">the JSON config</a>, did a little bit of manipulating in Sublime and used <a href="https://www.11ty.dev/">Eleventy's global data files</a> to use that data when building the site.</p>
<p>I wanted to keep everything as simple as possible; no crazy build scripts and as few files as possible. I used <a href="https://watercss.kognise.dev/">Water.css</a> for the base css and the rest of the css is in a <code>style</code> tag in the <code>head</code> (is that legal?). I also learnt that there is a <code>type=&quot;color&quot;</code> input - although I might replace this at some point because it's not particularly nice on mobile Safari.</p>
<p>You can also share you pot images with a link <a href="https://potimages.rknight.me/?i=chess-queen&amp;ip=fas&amp;c=333333&amp;bg=b7edd0">like this</a>. I initially used url hashes to keep the url updated all the time, but when sharing these to Twitter they get stripped out so I switched to using query strings instead.</p>
]]></content:encoded>
<pubDate>2020-07-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>Game FAQs</title>
<link>https://rknight.me/blog/fifa-street-ps2-game-faqs/</link>
<guid>https://rknight.me/blog/fifa-street-ps2-game-faqs/</guid>
<content:encoded><![CDATA[
<p>Before YouTube was the go-to place for game tutorials, <a href="https://gamefaqs.com">GameFAQs</a> was one of the only decent places online to get in-depth guides on how to complete games or get cheat codes. GameFAQs only allowed text posts on the site so people came up with interesting ways to navigate chapters and sections in what feels like a precursor to <a href="https://daringfireball.net/projects/markdown/">Markdown</a>.</p>
<p>Every guide would have an ASCII art heading and a table of contents with some unique key so you could use <code>CMD/CTRL+F</code> to find the relevant section. Today I remembered my only contribution to GameFAQs was a <a href="https://gamefaqs.gamespot.com/gamecube/924938-fifa-street/faqs/36247">Fifa Street PS2 guide</a>. I'm pretty sure a lot of it was just copied from magazines and other websites but I wanted to grab a copy of it just in case it ever removed or GameFAQs shuts down. So if that link doesn't work, I've also uploaded <a href="https://rknight.me/files/fifa-street-guide.txt">the original text file</a>.</p>
<p>I haven't used GameFAQs in a <em>long</em> time but it's nice to know all those guides are still available.</p>
<p><img alt="GTAIII ASCII Heading" src="https://rmlewisuk.s3.us-east-1.amazonaws.com/gta3-ascii.png" /></p>
<p>Image from <a href="https://gamefaqs.gamespot.com/ps2/466217-grand-theft-auto-iii/faqs/14620">this GTA III guide</a> I remember using <em>a lot</em>.</p>
]]></content:encoded>
<pubDate>2020-02-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Changing Your Name by Deed Poll</title>
<link>https://rknight.me/blog/changing-your-name-by-deed-poll/</link>
<guid>https://rknight.me/blog/changing-your-name-by-deed-poll/</guid>
<content:encoded><![CDATA[
<p>I changed my name (and my email) a couple of weeks ago and I have a few thoughts about the process. Most of this should also apply if you've changed your name because of marriage.</p>
<h3>Make a List</h3>
<p>Before you do anything else, make a list of everywhere you need to change your name, along with the process to do it (letter, email, in branch). If it's a letter or email, I used this to send to each of them:</p>
<blockquote>
<p>Please be advised that on {name change date} my name was legally changed from {old name} to {new name}.</p>
</blockquote>
<blockquote>
<p>My new name should be reflected on my {credit card|account|whatever}, account number {12345}, previously held in the name of {old name}.</p>
</blockquote>
<blockquote>
<p>I have included a copy of my Deed Poll. If you have further questions, please contact me at {phone number} or {email}.</p>
</blockquote>
<blockquote>
<p>Sincerely,<br />
{New Name} (previously {Old Name})</p>
</blockquote>
<p>You'll also need to sign that letter with your old and new signature. Becuase signatures are proof of...something?</p>
<p>I won't list everywhere I had to change my name, but here's a good list of places to start:</p>
<ul>
<li>HMRC. You can do this online through the government gateway.</li>
<li>Passport. Again, it can be done online, but you'll need to send your deed poll and another &quot;proof&quot;. I used a bank statement in my new name.</li>
<li>Driving Licence. Requires a new application form, order online or pickup in a Post Office.</li>
<li>Bank. Depends on the bank, check their website.</li>
<li>Credit Cards.</li>
<li>Insurance (house, car, phone, etc)</li>
<li>Utilities (water, gas, electric)</li>
<li>Mortgage/Landlord</li>
<li>Electoral Register. You can do this online by registering to vote and it will ask if you've changed your name.</li>
<li>Council Tax</li>
<li>Paypal. They require additional proof including photo ID and a bank statement.</li>
</ul>
<h3>Make Multiple Deed Polls</h3>
<p>I used <a href="https://freedeedpoll.org.uk/">Free UK Deed Poll</a> to make my deed poll, printed on some certificate paper I got on Amazon. This is 100% legal and any company that charges you for a deed poll is just printing a piece of paper for you. I would suggest getting at least four or five deed polls signed (you need two witnesses); I currently have three in the mail and a final one at home which won't be leaving my sight until at least one has been returned.</p>
<h3>Do Your Passport or Driving Licence as Soon as Possible</h3>
<p>Despite a deed poll being a legal document, there are some places that won't accept that as proof without additional documentation, namely a photo ID of some kind. Getting either your passport or driving licence done quickly will make the process a lot easier. If you don't have either of those, you'll have to argue with them like I did with my mortgage company while I was waiting for my new passport.</p>
<h3>Try Live Chat First</h3>
<p>A lot of companies have pages explaining how to change your name with them, which is usually something like &quot;Send us a letter in the post with a copy of your deed poll&quot; but if you ask them on live chat, a lot of them will do it without having to send them a physical letter like a caveman.</p>
<h3>You Won't Get Confirmation</h3>
<p>Of the seven places I've sent letters to, only one of them has actually confirmed that the change has happened, I had to call the others to confirm the change.</p>
<h3>Everyone Sucks Except Monzo</h3>
<p>I was able to change my name on Monzo within five minutes using the in-app chat. A week later, I'm still waiting for my high street bank to change even though I went in branch to make the change, which they force you to do.</p>
<h3>If All Else Fails, Say the Magic Word</h3>
<p>I also changed my email at the same time as my name, so I had to go through all my online accounts to change it.</p>
<p>If you find a company who refuses to change your name or email, say the magic word: GDPR. There are multiple companies who won't change your email address at all so it almost always ended in me sending an email something like this:</p>
<blockquote>
<p>You have an obligation under GDPR to keep my personal information correct and up to date. If you're unable or unwilling to change my {name|email}, please delete my account as soon as possible.</p>
</blockquote>
<p>For the most part, these companies would &quot;suddenly&quot; find a way to change it or, in a few cases, they would delete the account.</p>
]]></content:encoded>
<pubDate>2019-09-08T00:00:00+00:00</pubDate>
</item>
<item>
<title>Convert a Spotify Account From Facebook to Email Login</title>
<link>https://rknight.me/blog/convert-spotify-facebook-to-email-login/</link>
<guid>https://rknight.me/blog/convert-spotify-facebook-to-email-login/</guid>
<content:encoded><![CDATA[
<p>This morning <a href="https://hellsite.rknight.me/976392265374535680">I tweeted</a> that there's no way to convert a Spotify account from Facebook login to email and password login. I even spoke to Spotify support who said:</p>
<blockquote>
<p>As your account was created via Facebook, it can't be unlinked. Don't worry, we can free up your email address so you can create a new account. Once that's done, we'll transfer all of your tunes and student details across.</p>
</blockquote>
<p>I complained about this in one the Slack groups I'm in, and Nathaniel suggested I try doing a &quot;forgot password&quot; to set a password on the account and it worked. After that I was able to disconnect Spotify from the <a href="https://facebook.com/settings?tab=applications">Facebook settings page</a>.</p>
<ol>
<li>On the <a href="https://www.spotify.com/">Spotify website</a>, log out</li>
<li>Go to the login page and choose &quot;forgot password&quot; and use the email associated with your Facebook account</li>
<li>Reset your password from the email link</li>
<li>Disconnect Spotify in Facebook</li>
<li>Log in with your new password</li>
</ol>
<p>The above steps that I followed have also been confirmed to work by <a href="https://iwader.co.uk">Wade</a>.</p>
]]></content:encoded>
<pubDate>2018-03-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Home Screen (November 2017)</title>
<link>https://rknight.me/blog/homescreen-november-2017/</link>
<guid>https://rknight.me/blog/homescreen-november-2017/</guid>
<content:encoded><![CDATA[
<p><em>My iPhone home screen as of November 2017. This post originally appeared in <a href="https://club.macstories.net/posts/home-screen-robb-lewis">issue 104 of MacStories Weekly</a>.</em></p>
<p><a href="https://rmlewisuk.s3.amazonaws.com/homescreen-november-2017.jpg" target="_blank"><img height="auto" src="https://rmlewisuk.s3.amazonaws.com/homescreen-november-2017.jpg" style="float: left; padding: 10px;" width="250" /></a></p>
<p>A lot of things have changed for me since I last <a href="https://robblewis.me/homescreen-september-2015/">shared my Home screen in 2015</a>. Last year I switched to Android, using a Pixel XL as my phone because I had become frustrated with some of the interface changes to iOS. Just under a year later I was as irked with Android as I previously was with iOS, but for different reasons (Seriously Android? No way to choose audio output is ridiculous). I also missed my Apple Watch and I wanted to try out AirPods which, surprising no one, I love.</p>
<p>One of the things I did like about Android is that every app you install doesn't have to be on the Home screen. I got pretty use to this so I now have my most used apps on first screen, everything else in a folder on the second, and I use spotlight to find those apps. This did have its downsides on Android though; some apps I would simply forget to check, or post to, so I've made an effort to put those apps on the Home screen on my iPhone, namely Instagram, Reddit, and Buzzfeed.</p>
<p>Starting with my dock, Overcast and Tweetbot were the apps I missed the most. The plethora of great podcast, and to some extent Twitter, clients on iOS isn't mirrored on Android and Pocketcasts is basically the only decent option. As much as I like Pocketcasts, Overcast works better for the way I like to listen and subscribe to podcasts. I do still have Pocketcasts and Castro installed so I can check out any new features and switch easily if I want to.</p>
<p>Mac counterparts isn't something offered by a lot of Android apps so coming back to iOS I was happy download Fantastical and PCalc although the latter isn't as much a calculator for me as it is a game that can also do calculations.</p>
<p>Before I used Android I was a plug-in-and-sync-from-iTunes person but I signed up for Spotify the day I got my Pixel and I've been using it ever since. I have considered Apple Music but it doesn't integrate with my Amazon Echo so that's a no-go, at least for now.</p>
<p>The rest of the apps are fairly self-explanatory; Amazon, eBay, and my bank's <a href="https://hellsite.rknight.me/927502202914123776">terrible app</a> because <a href="https://hellsite.rknight.me/701068051840630784">I buy a lot of Lego</a>, Google Inbox because email is a necessary evil, and notes because I like the simplicity of it.</p>
<p>Spending a year on Android gave me an appreciation for the things I really like about iOS as well as the areas I hope they improve on in the future like the Home screen layout and notifications.</p>
]]></content:encoded>
<pubDate>2018-03-15T15:25:45+00:00</pubDate>
</item>
<item>
<title>Notes About Setting up RetroPie</title>
<link>https://rknight.me/blog/notes-about-setting-up-retropie/</link>
<guid>https://rknight.me/blog/notes-about-setting-up-retropie/</guid>
<content:encoded><![CDATA[
<p>Setting up <a href="https://retropie.org.uk/">RetroPie</a> on a Raspberry Pi is fairly easy but I did come up against a couple of issues that I needed to fix. This post is just a collection of quick fixes for those issues.</p>
<h3>Remove underscored games when transferring from a Mac</h3>
<p>When copying ROMs from a Mac, you may end up with a bunch of files that start with an underscore. To remove them all, run the following:</p>
<pre><code>find /home/pi/RetroPie -name &quot;._*&quot; -exec rm -rf {} \;
</code></pre>
<p>[<a href="https://retropie.org.uk/forum/topic/4348/removing-_-files-from-rom/10">source</a>]</p>
<h3>Finding Installed Themes</h3>
<p>For the theme I'm using, I wanted to edit the SNES background image to use the non-US SNES (read: the one true SNES). Installed themes are stored in <code>/etc/emulationstation/themes</code>.</p>
<h3>Finding decent ROMs</h3>
<p>The best site I've found for searching for specific ROMs is <a href="http://www.completeroms.com/">Complete ROMS</a>. They don't have <em>everything</em> but the site is clean and easy to find exactly what you're looking for.</p>
]]></content:encoded>
<pubDate>2017-07-04T10:14:15+00:00</pubDate>
</item>
<item>
<title>Getting Closer to the Perfect TV</title>
<link>https://rknight.me/blog/getting-closer-to-the-perfect-tv/</link>
<guid>https://rknight.me/blog/getting-closer-to-the-perfect-tv/</guid>
<content:encoded><![CDATA[
<p>In 2015, Pieter Siekerman <a href="http://technology.siekerman.nl/post/133644449664/the-perfect-tv">wrote a blog post</a> describing what the perfect TV should be:</p>
<blockquote>
<p>For two years now I’ve closely watched various TV manufacturers trying to find their way in the changing landscape of TV platforms and I just don’t get it.</p>
</blockquote>
<p>In September, (and again this week), I ordered the <a href="https://hisense.co.uk/electronics/tvs/m3000/43">Hisense H43M3000</a> despite it being a relatively unknown brand in the UK and I was pleasantly surprised at how good it was given the price of ~£300. This is the closest I've come to the perfect TV thus far, but it still has a long way to go based on Peter's list.</p>
<blockquote>
<p>First of all and most importantly, it should not be a TV platform.</p>
</blockquote>
<p>Unfortunately, it is. It has built-in apps but no app store to download other apps. It's slow to load anything including switching inputs, which is infuriating. The remote is a hot mess of useless buttons including app-specific buttons like Netflix, YouTube and Wuaki which can't be changed to open a different app.</p>
<blockquote>
<p>A large number of HDMI ports</p>
</blockquote>
<p>The TV has 4 HDMI ports but annoyingly only two of them support UHD/4K/HDR/whatever. I assume this is a cost-saving measure but if they removed the TV tuner or the &quot;common interface&quot; slot, whatever the hell that is, this would cover it. It does have a SCART socket, component, and 3 USB ports but I'd prefer to replace all of those with HDMI if I could. I can <a href="https://hellsite.rknight.me/863400075338371072">rename the inputs though</a> which is the best feature of this TV by a long shot.</p>
<blockquote>
<p>The display should be great</p>
</blockquote>
<p>The display is so nice I bought another one to replace my aging HDTV from ~5 year ago. Even with non-4K content, everything looks fantastic.</p>
<p>There are a number of other points on Peter's list which I care less about than the ones listed above and there's still a long way to go before I can buy the perfect TV. However, if you're looking for a good value 4K TV this is a pretty good option. Just buy yourself a Fire TV box to go with it so you can avoid thier &quot;smart&quot; software.</p>
]]></content:encoded>
<pubDate>2017-05-15T00:00:00+00:00</pubDate>
</item>
<item>
<title>Enable HDR with PS4 on Hisense H43M3000</title>
<link>https://rknight.me/blog/hdr-hisense-tv-ps4/</link>
<guid>https://rknight.me/blog/hdr-hisense-tv-ps4/</guid>
<content:encoded><![CDATA[
<p>My Hisense TV (<a href="https://hisense.co.uk/electronics/tvs/m3000/43">H43M3000</a>) recently received an update to support HDR, which is something the PS4 supports for some games. After plugging the console in, the PS4 told me my TV doesn't support HDR but after some playing around with settings and ports I managed to get it to work:</p>
<ol>
<li>The PS4 must be using either HDMI port 3 or 4</li>
<li>Open the TV settings and go to System then the &quot;HDMI &amp; CEC Function&quot; section</li>
<li>Select &quot;Adjust&quot; on the HDMI 2.0 Format setting and choose &quot;Enhanced Format&quot;</li>
</ol>
<p>Once I restarted the PS4 and TV, HDR was supported (and looked beautiful in <a href="http://media.rbbl.ws/game/2017/05/01/horizon-zero-dawn/">Horizon Zero Dawn</a>) 🎉.</p>
<p><s><em>nb: I have an <a href="https://hellsite.rknight.me/736500604705591297">original PS4</a> so I can't confirm if this TV works with 4K on the PS4 Pro.</em></s></p>
<p><strong>24/01/2018 Update: I now have a PS4 Pro and can confirm it works with 4K as well.</strong></p>
]]></content:encoded>
<pubDate>2017-05-05T00:00:00+00:00</pubDate>
</item>
<item>
<title>Jekyll Post Archive Grouped by Year</title>
<link>https://rknight.me/blog/jekyll-category-year-archive/</link>
<guid>https://rknight.me/blog/jekyll-category-year-archive/</guid>
<content:encoded><![CDATA[
<pre class="language-html"><code class="language-html"><br />    <span class="token comment">&lt;!-- Check if the date has been output --></span><br />    {% assign datePrinted = false %}<br />    <span class="token comment">&lt;!-- Assign year to something we're not using --></span><br />    {% assign currentYear = 1000 %}<br />    <span class="token comment">&lt;!-- Get number of posts --></span><br />    {% assign postCount = archivePosts | size %}<br />    <br />    <span class="token comment">&lt;!-- If no posts, say that --></span><br />    {% if postCount == 0 %}<br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>No posts yet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />    {% endif %}<br /><br />    <span class="token comment">&lt;!--  Loop thrugh posts --></span><br />    {% for post in archivePosts %}<br /><br />        {% assign postYear = post.date | date: "%Y" %}<br /><br />        <span class="token comment">&lt;!-- Output posts if this is a new year --></span><br />        {% unless postYear == currentYear %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>{{ postYear }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><br />        {% endunless %}<br /><br />        {% assign currentYear = postYear %}<br /><br />        <span class="token comment">&lt;!-- Output post --></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><br />            {{ post.date | date: "%d/%m" }} - <br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ post.url }}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />                {{ post.title }}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />        <br />    {% endfor %}<br /></code></pre>
]]></content:encoded>
<pubDate>2017-01-12T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on OnePlus 3 and Switching to Android</title>
<link>https://rknight.me/blog/oneplus-3-and-switching-to-android/</link>
<guid>https://rknight.me/blog/oneplus-3-and-switching-to-android/</guid>
<content:encoded><![CDATA[
<p><em>If you want to hear more about this, or just prefer listening over reading (hi Myke), I spoke about this with John on episode 30 of our podcast, <a href="http://ruminatepodcast.com/31">Ruminate</a>. Find it in <a href="https://overcast.fm/itunes1033235350/ruminate-podcast">Overcast</a>, <a href="http://pca.st/ruminate">Pocketcasts</a>, or <a href="https://itunes.apple.com/gb/podcast/ruminate-podcast/id1033235350">iTunes</a>, or any other podcast app you use.</em></p>
<hr />
<p>I wrote about <a href="http://robblewis.me/replacing-apps-on-android">replacing all my apps on Android</a> just under a week ago, but I wanted to lay out some of my thoughts about the <a href="https://oneplus.net/uk/3">OnePlus 3</a> and Android in general.</p>
<p>Firstly, I've had a few people ask <em>why</em> I switched to Android. There wasn't a single reason but a plethora of little things that started to bug me about iOS. First off, as I <a href="http://www.ruminatepodcast.com/30">discussed here</a>, I'm no longer using iTunes because of how buggy it is when downloading music, as well as it constantly messing up my album artwork. Without iTunes, the only thing locking me into iOS was iMessage and I realised I could live without it. After the &quot;upgrade&quot; to iOS10 a lot of things bugged me about it. In no particular order:</p>
<ul>
<li>Pressing notifications would sometimes not open the related app, they would just disappear</li>
<li>The feature where it would show Overcast on the lock screen when I plugged my headphones in no longer worked</li>
<li>Because iOS10 splits control center into two panels, whenever I opened it to use something it was inevitably on the wrong panel</li>
<li>No way to clear all notifications from the lock screen without 3D touch (without swiping down notification center which you can only do from the widget lock screen)</li>
<li>Widgets can't be placed wherever I want</li>
<li>Actions on notifications (reply, archive, etc) take twice as many presses to get to as before without 3D touch</li>
<li>Even with <a href="http://www.howtogeek.com/262837/how-to-unlock-your-ios-10-device-with-a-single-click-like-in-ios-9/">rest to unlock</a> enabled, my iPhone still wouldn't always unlock properly, or at all</li>
<li>Fucking iMessage stickers and apps</li>
</ul>
<p>All of the above made me hate using my phone and on top of all that the way I use my phone has changed significantly in the past year so I decided the best thing for me to do was to switch to Android.</p>
<h3>OnePlus 3</h3>
<p>I won't be going in depth into the phone but <a href="https://www.youtube.com/watch?v=ycIpOZY03OM">MKBHD reviewed it here</a>. The OnePlus is similar in size to the iPhone 7 plus and after a few days of using it my iPhone 6 felt ridiculously small; turns out Myke was right.</p>
<p>The OnePlus build quality is not quite as nice as an iPhone, which I expected, but it is still a really nice device. The thing I love the most about it is the fingerprint unlock. Not only has it never failed to read my fingerprint but it's also <em>really</em> fast, as you can see in <a href="https://www.youtube.com/watch?v=fOIfTNfdZUk">this video</a>.</p>
<p>Dash is OnePlus's quick charging feature that uses their <a href="https://oneplus.net/uk/3/dashcharge">dash charger and cable</a>. I'm able to charge my phone from ~15% to 70% in about 30 minutes, and another 15 to reach the full 100%. Because of this I've started charging my phone in the evening before I go to bed and the battery lasts the entirety of the next day well into the late evening before I need to charge again. It's worth noting that dash charging only works with both the USB plug <em>and</em> the dash cable, so it won't work with third-party USB cables.</p>
<p>OnePlus 3, like the previous models, has an alert slider on the side to switch between silent, priority notifications, and all notifications. This is really useful and not something that appears on a lot of Android phones (although the modes exist as a software feature). By default priority includes alarms, music, messages, and phone calls but any app can be treated as priority in the global notification settings. Coming from an iPhone, it's nice to have a physical switch and as someone who had a lot of <a href="https://en.wikipedia.org/wiki/Nokia_3310">old Nokia phones</a> I love having a modern equivalent of profiles. I use silent for when I'm sleeping, priority for when I'm at work, and all for any other time.</p>
<p>The OnePlus runs <a href="https://en.wikipedia.org/wiki/OxygenOS">OxygenOS</a> which is a slightly modified version of stock Android, currently on 6.0 Marshmallow. Although it's frustrating to not have the latest version of Android, I'm pretty happy with it and OnePlus have confirmed they are working on an Android N update which should be out in the next few months.</p>
<p>The camera is no iPhone competitor but the photos it takes <a href="http://rmlewisuk.s3.amazonaws.com/one-plus-sample-cat.jpg">are pretty good</a>. I don't take a lot of photos with my phone so this isn't massively important to me, but your mileage may vary.</p>
<p><img alt="One Plus cat sample image" src="http://rmlewisuk.s3.amazonaws.com/one-plus-sample-cat-preview.jpg" /></p>
<p>Lets be honest, it's a slab of glass with some buttons next to it. It's not the world's greatest device but it's nowhere near the worst and for £330, you can't go wrong.</p>
<h3>Android</h3>
<p>Android is much as you'd expect; it's a mobile operating system that has apps, widgets, notifications, just like iOS. There are, however, some significant differences. Some of them I like, some not so much.</p>
<p>Being able to install an app from the Google Play store from my Mac (and choose which device to install to) is so natural, and works so well, that I'm amazed Apple hasn't implemented this. Opening iTunes seems archaic in comparison. Once I'd downloaded a few apps, I was impressed with Google's ability to suggest apps tailored to my interests, something which Apple have been trying to do for years on the App Store with little success (remember <a href="http://appleinsider.com/articles/12/09/03/apple_turns_on_app_store_genius_recommendations_for_developers">Genius for Apps</a>?).</p>
<p>The home screen(s) is where Android differs significantly; I can put apps wherever I want, and have widgets all over the place. This is the biggest improvement using my phone day-to-day because if I only want four apps on the home screen, they don't have to be right at the top of the screen. The left-most home screen is Google Now which shows weather, news, and a host of other &quot;cards&quot; based on emails and apps I use (for example, it now shows me my eBay saved searches). It's supposed to show me delivery information based on my emails, but this <a href="http://www.droid-life.com/2015/07/06/gmail-google-now-package-tracking-card-is-showing-up-or-some-google-apps-users/">might be disabled for Google Apps accounts</a> so I don't get the benefit of this. I currently have two home screen; one with my most used apps and the <a href="https://pocketcasts.com">Pocketcasts</a> widget, and one with some lesser used apps and the <a href="https://spotify.com">Spotify</a> widget. Apps that aren't on either home screen can be accessed through search or from the app drawer.</p>
<p>Setting default apps is great (I swapped out the default SMS app for <a href="https://play.google.com/store/apps/details?id=com.textra&amp;hl=en_GB">Textra</a>) but the best part about setting defaults is opening specific type of links and files in specific apps. For example, all Twitter links open in Fenix and all Reddit links open in Relay. This is <em>so</em> much better than ending up on the mobile Twitter site when I have a perfectly good Twitter client installed. Talking of opening links, <a href="https://play.google.com/store/apps/details?id=com.linkbubble.playstore&amp;hl=en_GB">Link Bubble</a> is fantastic. When I click a link in Twitter, for example, it shows a floating bubble on my screen which will expand once the page has loaded. Being able to scroll through Twitter, open a bunch of links, and then review them all at once is amazing.</p>
<p><img alt="Default links and Link Bubble" src="http://rmlewisuk.s3.amazonaws.com/default-links-and-link-bubble.png" /></p>
<p>One of the things I thought I'd miss most is sending messages from my Mac through the Messages app. <a href="https://www.pushbullet.com/">Push Bullet</a> fixes this by allowing me to mirror all notifications to my Mac, send messages, send files between devices, and interact with the notifications just like I can on the phone. It also has a <a href="https://www.pushbullet.com/pro">bunch of other really useful features</a>. I was concerned that apps like this might massively affect battery life, but this hasn't been the case.</p>
<p>Something I wasn't able to work out was how to choose where to output audio when I'm connected to a Bluetooth device. On iOS, the &quot;AirPlay&quot; menu serves this function. I looked around for a solution to this but came up short so if anyone knows of an app that might fix this, let me know. Speaking of Bluetooth, unlike iOS, there is no way to see the battery life of Bluetooth devices like headphones. Although not a huge problem, it's frustrating that Android lacks this feature.</p>
<p>On iOS both the banking apps I used, HSBC and Lloyds, allowed me to use TouchID to login. On Android, this isn't the case, despite Android having support for such a system (PayPal use it). This, I assume, is because not all Android phones have fingerprint sensors so there's a smaller market for it. Again, not something I can't deal with, but a pain none the less.</p>
<p>I'd be remiss if I didn't mention the clusterfuck that is Amazon's presence on Android. I wanted to download the Amazon Video app but the Play Store said it wasn't compatible with my device, which seemed odd. When I asked <a href="https://danharper.me">Dan</a>, he informed me I should download it through the normal Amazon app. Except my Amazon app didn't have the option he showed me because I downloaded the Amazon app from the Play Store and not the <a href="https://www.amazon.co.uk/Amazon-com-Amazon-Underground/dp/B004GJDQT8">Amazon Underground</a> app which is a combination of the standard shopping app, plus an app store. To download the Underground app, I had to turn off the security setting to only allow apps from trusted sources. Then, and only then, was I able to download the Amazon Video app from inside <em>that</em> app. What.</p>
<p>I'm pretty happy with using Android. I don't do Real Work™ on my phone and mostly use it for Twitter, phone calls, and buying stuff on Amazon when I'm not at my Mac. Almost any problem or tweak I want to make I can through apps or widgets; Android definitely feels like it's geared more towards power users and people who want to tinker with settings or &quot;fix&quot; things but that's perfect for me.</p>
<p>Finally, because the Apple Watch doesn't work with Android, I'm getting rid of it. As I <a href="https://hellsite.rknight.me/783674253807845376">said on Twitter</a> the only thing I miss is not being able to quickly see the time so I'm currently eyeing up <a href="http://www.nixon.com/uk/en/sentry-leather-sw/A105SW.html?dwvar_A105SW_color=2244&amp;dwvar_A105SW_size=00#gclid=Cj0KEQjw1ee_BRD3hK6x993YzeoBEiQA5RH_BHLZjplqhtoBrlGuj7TgwFVJGVScjX9UVaU9d1tOVwgaAmee8P8HAQ&amp;start=1">one of these</a>.</p>
]]></content:encoded>
<pubDate>2016-10-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>Replacing Apps on Android</title>
<link>https://rknight.me/blog/replacing-apps-on-android/</link>
<guid>https://rknight.me/blog/replacing-apps-on-android/</guid>
<content:encoded><![CDATA[
<p><img alt="" src="http://rmlewisuk.s3.amazonaws.com/home-screen-tiles.png" /></p>
<p>If you follow me on Twitter, you probably already know I've ditched my iPhone in favour of a <a href="https://oneplus.net/uk/3">OnePlus 3</a>. The biggest hurdle to switching is the apps I used regularly (and some not-so-regularly). After <a href="http://rmlewisuk.s3.amazonaws.com/apps.md">making a list of apps I had installed</a> on my iPhone, I was able to filter it down to just two lists: ones with no equivalent, and ones I needed to find an Android alternative for. The three with no equivalent were:</p>
<ul>
<li>Apple Store</li>
<li>Blink</li>
<li>Plot</li>
</ul>
<p>None of these will make a massive difference to my life, but I will definitely miss <a href="http://squibner.com/blink/">Blink</a> and <a href="http://plotapp.io/">Plot</a>. The following apps are ones I need replacements for:</p>
<ul>
<li>Apple Notes</li>
<li><a href="https://geo.itunes.apple.com/gb/app/clear-tasks-reminders-to-do/id493136154?mt=8&amp;at=1001l3gY&amp;ct=twitter">Clear</a></li>
<li><a href="http://junecloud.com/support/deliveries-ios/">Deliveries</a></li>
<li><a href="http://www.dueapp.com/">Due</a></li>
<li><a href="https://flexibits.com/fantastical">Fantastical</a></li>
<li><a href="http://www.itvshowsapp.com/">iTV Shows</a></li>
<li><a href="https://itunes.apple.com/gb/app/narwhal-for-reddit/id845422455?mt=8">Narwhal</a></li>
<li><a href="https://overcast.fm">Overcast</a></li>
<li><a href="http://tapbots.com/tweetbot/">Tweetbot</a></li>
</ul>
<p>I haven't been able to find anything that is as easy for creating lists as Clear but <a href="https://keep.google.com">Google Keep</a>'s lists feature does the job reasonably well and also doubles as a good replacement for Apple's notes app.</p>
<p><img alt="Google Inbox' inline delivery information" src="http://rmlewisuk.s3.amazonaws.com/google-inbox-inline-delivery.jpg" /></p>
<p>I switched to <a href="https://inbox.google.com">Google Inbox</a> prior to buying the OnePlus and it manages to show delivery tracking inline with the email so I decided I didn't need Deliveries anymore. <a href="https://danharper.me">Dan</a> also told me Google Now should tell me about my deliveries based on my email, but I haven't seen that working yet. Google Now also has a reminders feature, which has mostly replaced Due.</p>
<p>The stock <a href="https://play.google.com/store/apps/details?id=com.google.android.calendar&amp;hl=en_GB">Google calendar</a> app and widget replaced Fantastical for what I needed with no problems.</p>
<p>Tweetbot is a solid app and I knew finding a decent alternative would be hard given Twitter's disdain for third party developers. <a href="https://play.google.com/store/apps/details?id=it.mvilla.android.fenix">Fenix for Twitter</a> has most of the features I want from a Twitter app, and the design is fantastic.</p>
<p><a href="https://play.google.com/store/apps/details?id=fema.serietv2">TV Series</a>, as of right now, seems like a pretty good app although I'll need a few more weeks to know if it works as well as iTV Shows which I was using on iOS. Overcast and Narwhal are both fantastic apps, but also reasonably easy to find quality Android equivalents. I replaced them with <a href="https://play.pocketcasts.com/web/podcasts/index">Pocketcasts</a> and <a href="https://play.google.com/store/apps/details?id=free.reddit.news&amp;hl=en_GB">Relay</a> respectively.</p>
<p>Overall, I'm really pleased so many of the apps I used have Android and iOS versions, because it made switching <em>much</em> easier. And, despite what some in the Apple community have you believe, the Android-only apps that I've tried are really great quality and on par with their iOS equivalents. And someone should show Apple how great installing apps from the Google Play site is, because it's a damn sight easier than opening iTunes.</p>
]]></content:encoded>
<pubDate>2016-10-06T00:00:00+00:00</pubDate>
</item>
<item>
<title>Amazon Echo Initial Thoughts</title>
<link>https://rknight.me/blog/amazon-echo-initial-thoughts/</link>
<guid>https://rknight.me/blog/amazon-echo-initial-thoughts/</guid>
<content:encoded><![CDATA[
<p>I have no self control so I bought an <a href="https://www.amazon.co.uk/Amazon-SK705DI-Echo-Black/dp/B01GAGVIE4/ref=sr_1_1?sr=8-1&amp;ie=UTF8&amp;keywords=echo&amp;qid=1475139825">Echo</a> while Amazon were offering £50 off for Prime members last week. Here's a brain dump of my initial thoughts on the device.</p>
<h3>Setup</h3>
<p>Setup is pretty easy using the <a href="https://geo.itunes.apple.com/us/app/amazon-alexa/id944011620?mt=8&amp;at=1001l3gY&amp;ct=twitter">Alexa app</a>. The Echo creates it's own wifi network which you need to connect to so you can choose your home wifi network. Once that's done, you can connect services and products like Spotify and Hue lights from within the app, as well as add additional &quot;skills&quot; (Skills are what Amazon call apps for the Echo).</p>
<h3>Spotify</h3>
<p><strong>Update</strong>: As <a href="https://www.reddit.com/r/amazonecho/comments/551frl/my_initial_thoughts_on_the_amazon_echo_uk/d88129p?context=3">/u/jennorocks pointed out</a>, if you say the word &quot;playlist&quot; when asking for a playlist, it works pretty well.</p>
<p>I linked my Spotify account in the Alexa app and once setup, I was able to do a two things with it: either tell Alexa to play music on Spotify (playlist, artist, album, genre) or start playing through <a href="https://www.spotify.com/us/connect/">Spotify Connect</a> which sees the Echo as a device from within the Spotify app. Getting Alexa to play one of my saved playlists was difficult as it seems to just search Spotify and play the first search result. For example, I have a playlist called &quot;90s Hits&quot; but it kept playing a similarly named playlist. I don't know if there's some trick to force it play my playlists, but I haven't found it yet.</p>
<h3>Bluetooth</h3>
<p>The Echo also functions as a bluetooth speaker. Saying &quot;Alexa, pair my device&quot; will turn on the Echo's discovery mode which I could then select from my phone's bluetooth settings. The Echo can then control my phone playback by asking Alexa to play or pause. If my phone is disconnected from the Echo (e.g. if I leave the house), when I come back I can say &quot;Alexa, connect to my phone&quot; and the Echo will reconnect.</p>
<h3>Everything else</h3>
<p>Alexa understood every command I gave her <a href="https://hellsite.rknight.me/781140637089423360">including when we played around with it in the office</a> and you can see a list of commands you've asked in the Alexa app, which has Google Now-style cards with extra information for some things like traffic, timers, or shopping lists.</p>
<p>I was looking forward to using <a href="https://ifttt.com">IFTTT</a> to automate some tasks such as moving my Alexa shopping list items to <a href="https://todoist.com">Todoist</a> but IFTTT doesn't currently support Echo in the UK which is disappointing, but IFTTT say they're working on it. Hopefully this will be fixed soon.</p>
<p>The Alexa app is pretty slow and janky (it's a web app in a wrapper) but it's only used for setup of the device, and adding new skills. You can access the &quot;app&quot; from <a href="http://alexa.amazon.com">alexa.amazon.com</a> as well if you prefer to setup from a browser.</p>
<p>I don't currently have any smart home devices so I wasn't able to try these features out, but given how well everything else works I'm sure this will work equally well. The Echo does feel like somewhat of a novelty right now, but it works as a Spotify device, bluetooth speaker, and for timers while I'm cooking so I'm pretty happy with it.</p>
]]></content:encoded>
<pubDate>2016-09-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>Saving Money on Lego in the UK</title>
<link>https://rknight.me/blog/saving-money-on-lego-in-the-uk/</link>
<guid>https://rknight.me/blog/saving-money-on-lego-in-the-uk/</guid>
<content:encoded><![CDATA[
<p>Although there always seems to be some great Lego bargains to be had in the US from the likes of Walmart and Target, the UK doesn't really have equivalent stores that do reductions like those stores do. But there are a number of ways to save significant money on Lego in the UK.</p>
<h3>Lego VIP Points</h3>
<p>Lego's <a href="http://shop.lego.com/en-GB/VIP">VIP points</a> is a points system where for every £1 you spend (either online or in an official Lego store) you get 1 point. When you have 100 points, you get £5 off a purchase. Usually twice a year (around March and September), Lego run a double points promotion, so for every pound, you get 2 points; these promotions are a good time (if you have the willpower to wait) to order larger, Lego-exclusive sets or place a large order. So depending on how and when you order, you can get 5%-10% back in money off of other purchases. Being a VIP member also allows you early-access to exclusive sets, normally a few weeks early.</p>
<p>Although VIP is an always-on promotion, I personally buy from Lego for two reasons:</p>
<ul>
<li>A double VIP points promotion is running</li>
<li>When a free gift with a purchase is being offered — if the free gift (normally a polybag) is difficult, or not available, elsewhere they tend to sell for between £10-£15 on eBay. Personally, I would rather buy extra Lego with that money and get the polybag free, rather than spending the money on the polybag on it's own.</li>
</ul>
<p>Disadvantages:</p>
<ul>
<li>Delivery times when buying online can be anywhere from a few days to nearly two weeks.</li>
<li>Discounts and sales are few and far between so saving money on a specific set can be difficult</li>
</ul>
<p><a href="http://shop.lego.com/en-GB/VIP/registration/index.jsp?joinow=true">Sign up to become a VIP member here</a></p>
<h3>Amazon, CamelCamelCamel and Brickset</h3>
<p>A significant portion of the Lego I buy comes from Amazon for one reason: discounts. Lego sets sold by Amazon <em>always</em> become discounted by at least 10%; with non-licensed themes like City or Friends, the discounts can go as high as 30%.</p>
<p>To guarantee I save money on Lego bought from Amazon, I do two things: add all the sets I want to a wish list (so I can manually check the prices every week) and install the <a href="https://chrome.google.com/webstore/detail/the-camelizer/ghnomdcacenbmilgjigehppbamfndblo?hl=en">CamelCamelCamel Chrome extension</a>. <a href="http://uk.camelcamelcamel.com/">CamelCamelCamel</a> (herein referred to as CCC) is a site that tracks prices on Amazon and can alert you when a product reaches a certain price.</p>
<p>To setup a price watch on Amazon, go to the product page and click the CCC button in the Chrome toolbar. This will show a price history graph for the product, and below that you can set a price that you want to be alerted at. CCC will send you an email when the product is available at that price.</p>
<p><img alt="" src="http://studshq.s3.amazonaws.com/camelcamelcamel.jpg" /></p>
<p>If you use Brickset's wanted sets functionality (<a href="https://rknight.me/posts/manage-your-lego-collection-with-brickset">read our guide to Brickset here</a>), visit their <a href="http://brickset.com/buy/amazon">Amazon shopper page</a>, check the &quot;Sets on my wanted list only&quot; checkbox and Brickset will show you the current Amazon price for sets from your wanted list.</p>
<p>Disadvantages:</p>
<ul>
<li>Amazon doesn't generally sell the Lego-exclusive sets (although sometimes third-parties sell them but they're usually above retail price)</li>
<li>If you don't subscribe to Amazon Prime, you have to pay postage for orders under £20.</li>
</ul>
<h3>Hot UK Deals and Retailer Promotions</h3>
<p>The <a href="http://www.hotukdeals.com/">Hot UK Deals</a> app allows you to setup notifications based on keywords. By setting &quot;Lego&quot; as one of your keywords, any time a deal is posted containing the word Lego, you'll get a notifications.</p>
<p>A lot of the UK supermarkets sell Lego, so when they get reduced, someone always posts it pretty quickly to Hot UK Deals. Something to look out for here is that some of the deals will be store specific so may not be applicable to you. However, when a retailer is doing 3 for 2 on Lego (like Tesco did recently), this can be a great time to save a significant amount of money on sets you want.</p>
<p>Disadvantages:</p>
<ul>
<li>Notifications can be hit or miss; there are a lot of deals on the Lego video games so those will show up as well.</li>
</ul>
<p><img alt="" src="http://studshq.s3.amazonaws.com/hot-uk-deals.png" /></p>
<h3>Flubit</h3>
<p><a href="https://flubit.com">Flubit</a> is a site that tries to get you a better price than Amazon are currently offering. You give them a link to a product on Amazon, and they come back with a better offer. Read their <a href="https://flubit.com/about#!/how-it-works">How it Works</a> page to find out more. I've only used Flubit once, but I saved 20% on a set that was full-price on Amazon.</p>
<p>Disadvantages:</p>
<ul>
<li>Your order could come from any retailer so delivery might not be very quick.</li>
</ul>
<h3>eBay: Sets with no minifigures</h3>
<p>If a set you want it out of your price range, you're not interested in the minifigures, or you particularly like a specific vehicle from a set, eBay can be a great place to pick these up. Lots of people buy sets, take out the minifgures, and then sell the sets on their without them. For example, I picked up <a href="https://www.reddit.com/r/lego/comments/38wvv6/i_wasnt_planning_on_getting_any_jurassic_world/">all these Jurassic World sets</a> with no figures/dinosaurs for £35. Even used for spares, this was a great price. Set up eBay saved searches for what you're looking for, be patient, and you can get some great deals.</p>
<h3>Individual Minifigures</h3>
<p>There are three places I buy individual minifigures:</p>
<ul>
<li><a href="http://www.theminifigurestore.co.uk?affiliates=18">The Minifigure Store</a>: Prices are competitive with Bricklink and they run money off promotions through their Twitter account on a regular basis.</li>
<li><a href="http://bricklink.com">Bricklink</a>: Bricklink is best place to pick up spare pieces as well as individual minifigures. If you're buying just one minifigure, the price with postage can be the same as the Minifigure store/eBay, but buying a few at a time can have some good savings. Read our <a href="http://guidetobricklink.com">Guide to Bricklink</a> to find out about buying from Bricklink.</li>
<li><a href="http://ebay.co.uk">eBay</a>: Prices are slightly higher than Bricklink, but most of the times postage is free and just-released minifigures are generally available within a few days.</li>
</ul>
<p>Disadvantages:</p>
<ul>
<li>For smaller sets, it can be more economical to just buy the complete set, even if you only want the minifigures</li>
</ul>
<h3>Collectible Series Minifigures</h3>
<p><a href="http://brickset.com/sets/theme-Collectable-Minifigures">Lego's collectible minifigures</a> are hugely popular but have one large disadvantage: they come in blind bags so unless you can get really good at feeling for a specific one (I'm terrible at it), you can end up with a lot of duplicates.</p>
<p>If you want individual minifigures from a series, see the advice above. But if, like me, you like to collect the whole series, I've found that by watching auctions on eBay, I can pick up a whole series for around £45 (I never pay more than £48), which works out at just under £3 a minifigure. The collectible minifigures are usually priced at £2.50 so this might not seem like a money-saving tip, but if you end up with more than two duplicates when trying to buy the blind bags, then this will save you money.</p>
<h3>Miscellaneous</h3>
<p>If there is a specific set you're looking for that is recently retired, or isn't discounted in the places listed above, these are the retailers I tend to look at:</p>
<ul>
<li><a href="http://www.debenhams.com/">Debenhams</a></li>
<li><a href="http://www.smythstoys.com/">Smyths</a></li>
<li><a href="http://www.toysrus.com/">Toys R Us</a></li>
<li><a href="http://www.johnlewis.com/">John Lewis</a></li>
<li><a href="https://www.ocado.com/">Ocado</a></li>
</ul>
<p>I've had some luck checking Tesco's reduced section (assuming your local Tesco sells Lego) where some store-specific reductions can happen on smaller Lego sets and Sainsbury's tend to reduce all their Lego once every 3 months or so as well.</p>
]]></content:encoded>
<pubDate>2016-03-31T00:00:00+00:00</pubDate>
</item>
<item>
<title>Convert LXF to Bricklink XML</title>
<link>https://rknight.me/blog/convert-lxf-to-bricklink-xml/</link>
<guid>https://rknight.me/blog/convert-lxf-to-bricklink-xml/</guid>
<content:encoded><![CDATA[
<p>When you've created a model in Lego Digital Designer, you likely want get those parts into a Bricklink wanted list so you can order them. Unfortunately, LDD doesn't have an option to export to the required <a href="http://www.bricklink.com/help.asp?helpID=207">Bricklink XML format</a>. Thankfully, <a href="http://rebrickable.com">Rebrickable</a> has the ability to convert an LDD model to Bricklink XML. You'll need a Rebrickable account to do this, so if you haven't got one yet, <a href="http://rebrickable.com/signup">register for one</a>, and sign in.</p>
<p>Once you're signed in, choose &quot;My Private MOCs&quot; from the account dropdown menu and click &quot;Add New Private MOC&quot;, give it a name, and then press &quot;Save Details&quot;. Below this you will see a number of import options, but for the purposes of this article, we'll be focusing only on the LXF import. Click &quot; Import from MPD/LDR/LXF file&quot;, choose your LXF file from your computer, and press &quot;import&quot;.</p>
<p><img alt="" src="http://studshq.s3.amazonaws.com/rebrickable-import.jpg" /></p>
<p>Rebrickable will then show all the parts from the model and indicate if any colours you've used don't exist. To fix any errornous colours, click on the part and choose a valid colour from the dropdown, and hit &quot;Save&quot;. This is also a good time to change the colour of any parts that Rebrickable marks as &quot;rare&quot; — you may want to switch to a more common colour to make it easier to buy.</p>
<p>Once you're happy with your part list, click &quot;Add to your Bricklink Wanted List&quot;. A window will popup allowing you to login to Bricklink. You can choose to add them to an existing list, or create a new one from this window. Once you click &quot;Add parts&quot;, a message will confirm that the parts have been added, and there will be a button to view your wanted list.</p>
<p><img alt="" src="http://studshq.s3.amazonaws.com/rebrickable-add-to-list.jpg" /></p>
<hr />
<p><strong>Update: When this post was written, I didn't realise Rebrickable had a feature to automatically add parts to a Bricklink wanted list.</strong></p>
<p><s>Once you're happy with your part list, click &quot;Export to Bricklink (XML)&quot; and your parts list will be downloaded in the correct format to import into Bricklink.</s></p>
<p>If you want to upload the parts list to a specific wanted list on Bricklink, you will need to edit the XML file in a text editor (I recommend <a href="https://www.sublimetext.com/">Sublime Text</a>). You'll need to add <code>&lt;WANTEDLISTID&gt;12345&lt;/WANTEDLISTID&gt;</code> to every part in the XML file, where <code>12345</code> refers to your Bricklink wanted list ID.</p>
<p>Once all that is done, you can <a href="http://www.bricklink.com/wantedXML.asp">upload it to Bricklink</a>.</p>
]]></content:encoded>
<pubDate>2016-03-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Third Party Apple Watch Bands Review</title>
<link>https://rknight.me/blog/third-party-apple-watch-bands/</link>
<guid>https://rknight.me/blog/third-party-apple-watch-bands/</guid>
<content:encoded><![CDATA[
<p><img alt="" src="http://rmlewisuk.s3.amazonaws.com/apple-watch-bands.jpg" /></p>
<p>When I first saw the <a href="http://www.apple.com/pr/library/2015/09/09Apple-and-Herm-s-Unveil-the-Apple-Watch-Herm-s-Collection.html">Hermès Cuff for Apple Watch</a> I thought it looked like a great watch band but also knew that there was no way I was going to pay upwards of a thousand pounds for one. So I kept an eye on eBay, looking for third party manufacturers making similar bands. These became available for purchase about a month after the announcement so I decided to order one. The seller also had some other copies of Apple's bands and I ordered a blue sport band, a black Milanese loop, as well as a pair of black adaptors to better match my space grey sport watch.</p>
<h3>Leather Cuff (£20)</h3>
<p><a href="http://www.ebay.co.uk/itm/301765700770?_trksid=p2057872.m2749.l2649&amp;var=600584661853&amp;ssPageName=STRK%3AMEBIDX%3AIT">eBay link</a></p>
<p>I haven't seen the Hermès band in real life so I can only compare against photos but this band is more or less identical in design to the Hermès version. But as you might imagine, it feels cheap. The leather is pretty thin, not particularly soft, and it's generally uncomfortable to wear. The buckle feels like a toy from a Christmas cracker. There are some third party version that are around the £100 mark that would likely not have these issues but something I did notice whilst wearing the band, is that because of the way the band is designed my Apple Watch sits significantly higher on my wrist then when I using a sport band. I found this to be annoying and it's possible that the Hermès version has the same problem.</p>
<h3>Black Milanese (£20)</h3>
<p><a href="http://www.ebay.co.uk/itm/301743856877?_trksid=p2057872.m2749.l2649&amp;var=600570788016&amp;ssPageName=STRK%3AMEBIDX%3AIT">eBay link</a></p>
<p>Apple only makes the Milanese loop milanese loop in one colour, so for someone like me with the space grey watch, my only option for a milanese loop is third party. The band I ordered is comfortable, but it <em>does</em> feel like it costs. There are some more expensive options available but I can't speak for how these compare to this one. The magnet is strong, but the materials used for the band itself just aren't that great and can get uncomfortable with continued use.</p>
<h3>Blue Sport Band (£5)</h3>
<p><a href="http://www.ebay.co.uk/itm/301743860511?_trksid=p2057872.m2749.l2649&amp;var=600570790558&amp;ssPageName=STRK%3AMEBIDX%3AIT">eBay link</a></p>
<p>After trying the leather cuff and seeing how cheap it felt, I was surprised to find that the sport band from the same seller felt great. The design is identical in every way to the official version and feels more or less the same when wearing it. The only noticeable difference between this one and the Apple version is that Apple's feels a little bit thicker and sturdier. The band doesn't fit quite as snugly is the slots as it's official counterpart, but it's still feels sturdy. It's just as comfy as Apple's and at £5, it's a bargain.</p>
<p>These bands are fine if you want something that's not a sport band and aren't willing to spend out the money for the offical onces but overall, you get what you pay for. I think, as usual, <a href="http://www.relay.fm/upgrade/56">Myke was right</a>. I'm going to stick to sport bands for the forseeable future. They're much more comfortable to wear for an extended period and that's more important to me than anything else.</p>
]]></content:encoded>
<pubDate>2015-11-16T00:00:00+00:00</pubDate>
</item>
<item>
<title>Game Controller Double Standards</title>
<link>https://rknight.me/blog/game-controller-double-standards/</link>
<guid>https://rknight.me/blog/game-controller-double-standards/</guid>
<content:encoded><![CDATA[
<p>The new Apple TV supports game controllers which is great. What's not so great is the fact that developers can't require them. By not allowing developers to require a game controller, what Apple have done is limited the platform and the games produced for it. I bought a <a href="http://www.apple.com/uk/shop/product/HJ162ZM/A/steelseries-nimbus-wireless-gaming-controller">Nimbus controller</a> so I could play games like <a href="https://itunes.apple.com/nz/app/rayman-adventures./id973020044?mt=8&amp;at=1001l3gY&amp;ct=twitter">Rayman Adventures</a> and <a href="https://itunes.apple.com/gb/app/asphalt-8-airborne/id610391947?mt=8&amp;at=1001l3gY&amp;ct=twitter">Asphalt 8</a> but I only ever use 1 or 2 buttons on the controller in any given game. It's unreasonable to expect developers to have one set of controls for the Siri remote and another for a controller, without changing the game significantly to support this.</p>
<p>Guitar Hero, however, is allowed to require a controller but not a standard MFi controller; Guitar Hero requires a purpose-built controller that presumably won't be able to be used for other games on Apple TV (except more Guitar Hero games). This kind of double standard is frustrating for both developers and owners of the Apple TV and I hope Apple decide to reverse their decision on not requiring game controllers soon.</p>
]]></content:encoded>
<pubDate>2015-11-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>Tips for Apple TV App Developers</title>
<link>https://rknight.me/blog/tips-for-apple-tv-app-developers/</link>
<guid>https://rknight.me/blog/tips-for-apple-tv-app-developers/</guid>
<content:encoded><![CDATA[
<p>Since the Apple TV got released I have been running <a href="http://atvapps.net">Apple TV Apps</a>, a blog and Twitter account showcasing the best Apple TV apps available. With discoverability being sub-par compared to the iOS app store, the site has been moderately successful and I've been contacted by a number of developers with iTunes links to their apps asking me to feature them, but there's a problem. Those links don't go anywhere; no web previews, no way to view these apps in iTunes.</p>
<p><img alt="Connecting to iTunes" src="http://rmlewisuk.s3.amazonaws.com/connecting-to-itunes.png" /></p>
<p>Graham Spencer summed up what is needed from developers really well:</p>
<blockquote>
<p>Apple TV developers, <em>please</em> make sure you have a landing page with screenshots, info, price and press kit!</p>
</blockquote>
<p>The page doesn't have to be the most beautiful website in the world but the information needs to be available if you expect your app to be featured anywhere. There are a number of options to get a simple website up and running with very little effort.</p>
<h3>Free options</h3>
<ul>
<li><a href="https://wordpress.com/">Wordpress</a></li>
<li><a href="http://tumblr.com">Tumblr</a></li>
</ul>
<p>Although Wordpress and Tumblr are both blogging platforms, they can be used as landing pages with a little bit of tweaking in the settings.</p>
<ul>
<li><a href="https://pages.github.com/">GitHub Pages</a> - If you know some HTML and CSS, you can get a GitHub pages site up in a matter of minutes.</li>
</ul>
<h3>Paid options</h3>
<ul>
<li><a href="http://squarespace.com/coverpage">Squarespace</a> - Their cover page starts at just $5 a month and is perfect for an app landing page.</li>
<li>Roll your own - If you're comfortable with setting everything up yourself, you can build and host your own website. <a href="https://hover.com/scHIv4WR">Hover</a> is a great option for domains and <a href="https://www.digitalocean.com/?refcode=8e1d8283bd20">Digital Ocean</a> offer one-click installs for loads of web applications like Wordpress and <a href="https://ghost.org/">Ghost</a>.</li>
</ul>
<h3>Checklist</h3>
<p>At a minimum, you should have:</p>
<ul>
<li>A few screenshots of the various parts of your apps (ideally the same ones featured in the store)</li>
<li>A description of your app (again, the same description as you have in the app store is ideal)</li>
<li>The price — this is a more difficult one because of pricing in different countries, but put the price in at least one currency.</li>
</ul>
<p>Some other things that will help market your app:</p>
<ul>
<li>A video of your app. This is useful for helping people decide whether they want to but your app or not.</li>
<li>A press kit. This is normally a zip file which includes all the the above information (screenshots, description, video) as well as your app icon and any other marketing materials you might have.</li>
</ul>
<p>For an example that fits all of these criteria, check out the <a href="http://almostimpossible.co/">landing page for Almost Impossible!</a>.</p>
<p><img alt="Almost Impossible Landing Page" src="http://rmlewisuk.s3.amazonaws.com/almost-impossible.png" /></p>
<p>Until Apple allows web previews for Apple TV apps, your goal should be to replicate all of the information you have in the app store. If you at least some of the above, your app is much more likely to be featured and also it will help customers decide if they want to buy your app.</p>
]]></content:encoded>
<pubDate>2015-11-09T00:00:00+00:00</pubDate>
</item>
<item>
<title>The Best Apple TV Apps</title>
<link>https://rknight.me/blog/the-best-apple-tv-apps/</link>
<guid>https://rknight.me/blog/the-best-apple-tv-apps/</guid>
<content:encoded><![CDATA[
<p>I've started a new blog to highlight some the best and most interesting Apple TV apps available. If you're interested you can <a href="http://twitter.com/_atvapps">follow @_atvapps on Twitter</a> or check out the blog at <a href="http://atvapps.net">http://atvapps.net</a>.</p>
]]></content:encoded>
<pubDate>2015-10-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Home Screen (September 2015)</title>
<link>https://rknight.me/blog/homescreen-september-2015/</link>
<guid>https://rknight.me/blog/homescreen-september-2015/</guid>
<content:encoded><![CDATA[
<p><em>My iPhone home screen as of September 2015. This post originally appeared in the <a href="https://www.macstories.net/club/">MacStories newsletter (now Club MacStories)</a>.</em></p>
<p><a href="http://rmlewisuk.s3.amazonaws.com/homescreen-september-2015.jpg" target="_blank"><img height="auto" src="http://rmlewisuk.s3.amazonaws.com/homescreen-september-2015.jpg" style="float: left; padding: 10px;" width="250" /></a></p>
<p>I like to try and keep all of my apps on one page, hence the large number of folders. In the fight between quick access to apps and tidiness, tidiness always wins. Having said that, I do still like to keep my most used apps one tap away. The empty bottom row is used primarly for apps that I'm trying out which, at the moment, happens to be <a href="https://itunes.apple.com/gb/app/bf-news/id981609476?mt=8&amp;at=1001l3gY&amp;ct=blog">BuzzFeed News</a>.</p>
<p>Because I only have one screen of apps, my dock is less important than if I had multiple pages. I have always kept phone and Safari in those spots and as I've added more messaging apps (<a href="https://itunes.apple.com/us/app/facebook/id284882215?mt=8&amp;at=1001l3gY&amp;ct=blog">Facebook</a>, <a href="https://itunes.apple.com/us/app/slack-team-communication/id618783545?mt=8&amp;at=1001l3gY&amp;ct=blog">Slack</a>, <a href="https://itunes.apple.com/us/app/snapchat/id447188370?mt=8&amp;at=1001l3gY&amp;ct=blog">Snapchat</a>) the Messages app has been replaced by a folder to contain them all. Similarly, because I switch between listening to podcasts in <a href="https://itunes.apple.com/us/app/overcast-podcast-player/id888422857?mt=8&amp;at=1001l3gY&amp;ct=blog">Overcast</a> and music, all media-related apps go into the media folder in the dock.</p>
<p>The app I use the most is definitely <a href="https://itunes.apple.com/us/app/tweetbot-3-for-twitter.-elegant/id722294701?mt=8&amp;at=1001l3gY&amp;ct=blog">Tweetbot</a>; I spend a lot of time on Twitter so I need to be able to get to it quickly. I also regulary catch on a number of subreddits and <a href="https://itunes.apple.com/us/app/narwhal-for-reddit/id845422455?mt=8&amp;at=1001l3gY&amp;ct=blog">Narwhal</a> is easily the best Reddit client I've found as the official one is far too confusing. <a href="https://itunes.apple.com/us/app/clear-tasks-reminders-to-do/id493136154?mt=8&amp;at=1001l3gY&amp;ct=blog">Clear</a> and <a href="https://itunes.apple.com/us/app/fantastical-2-for-iphone-calendar/id718043190?mt=8&amp;at=1001l3gY&amp;ct=blog">Fantastical</a> are the best apps in their respective categories and I wouldn't even considering removing them from the home screen. Although I don't use it as much as Tweetbot or Narwhal, <a href="https://itunes.apple.com/us/app/plot-discover-track-movies/id922985808?mt=8&amp;at=1001l3gY&amp;ct=blog">Plot</a> is a fantastic app for keeping track of movies I want to watch and ones that I have watched.</p>
<p><a href="https://simplecast.fm">Simplecast</a> is a saved web site and not a native application, but I like to check up on the download numbers for <a href="http://ruminatepodcast.com">my podcast</a> so that earns a spot on my home screen. Some of the other apps that are hidden away that I use regularly include <a href="https://itunes.apple.com/us/app/due-reminders-countdown-timers/id390017969?mt=8&amp;at=1001l3gY&amp;ct=blog">Due</a>, a simple but really powerful reminders app, <a href="https://itunes.apple.com/us/app/blink-better-affiliate-links/id946766863?mt=8&amp;at=1001l3gY&amp;ct=blog">Blink</a> for generating iTunes affiliate links and <a href="https://itunes.apple.com/us/app/deliveries-a-package-tracker/id290986013?mt=8&amp;at=1001l3gY&amp;ct=blog">Deliveries</a> for tracking parcels.</p>
<p>The background is a Star-Lord wallpaper (that I also use <a href="https://hellsite.rknight.me/635851605364051968">on my desktop</a>) and you can <a href="http://justinmaller.com/project/helmetica/">download it here</a>.</p>
]]></content:encoded>
<pubDate>2015-09-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>New Podcast: Ruminate</title>
<link>https://rknight.me/blog/ruminate-podcast/</link>
<guid>https://rknight.me/blog/ruminate-podcast/</guid>
<content:encoded><![CDATA[
<p><a href="https://johnvoorhees.co/">John Voorhees</a> and I decided to have a go at creating out own podcast. The current description of the show is:</p>
<blockquote>
<p>A podcast about the opportunities and challenges that technology presents us with every day</p>
</blockquote>
<p>This might change in the future (podcasts are harder than they seem) but for now we'll be talking about how technology helps solve problems, as well as some non-tech related topics like terrible food, and why you would save a pair of shoes for 10 years.</p>
<p>~You can subscribe and listen to the first episode at <a href="http://ruminatepodcast.com/1">http://ruminatepodcast.com/1</a> and follow us <s>on Twitter</s> on <a href="https://social.lol/@ruminate">Mastodon</a>.</p>
]]></content:encoded>
<pubDate>2015-08-24T00:00:00+00:00</pubDate>
</item>
<item>
<title>Manage Your LEGO Collection with Brickset</title>
<link>https://rknight.me/blog/manage-your-lego-collection-with-brickset/</link>
<guid>https://rknight.me/blog/manage-your-lego-collection-with-brickset/</guid>
<content:encoded><![CDATA[
<p><a href="http://brickset.com/">Brickset</a>, as well as being a great source for LEGO news and reviews, is a also an excellent service for keeping a list of all the sets and minifigures that you own. Brickset also has some more advanced features for marking sets that you own without minifigures and custom flags to make managing your collection even easier. Once you've set up your collection, you can also share it publicly if you desire. For example, <a href="http://brickset.com/sets/ownedby-rmlewisuk">here is my collection</a>. If you haven't already, <a href="http://brickset.com/signup">signup for a Brickset account</a>.</p>
<h2>Sets</h2>
<p>There are a number of different ways you can search for sets to add them to your collection: by set number, by set name or by tag. To add a set to your collection, type the set name or number into the search box and once you've found the set you want to add, simply check the &quot;I own&quot; checkbox and it will be added to your collection. A large number of sets on Brickset are also tagged to make searching for a set easier; if you type <code>Emmet</code> into the search box you will see <code>Emmet Brickowski [Tag]</code> as one of the suggestions. Selecting this option will show you <a href="http://brickset.com/sets/tag-Emmet-Brickowski">all sets that contain an Emmet minifigure</a>. You can then view a list of all the sets you by selecting <code>Sets you own</code> from the <code>My sets</code> menu. You can also set up a wanted list of sets by checking the <code>I want</code> checkbox: your wanted list can be found by selecting <code>Sets you want</code> from the <code>My sets</code> menu.</p>
<p><a href="http://studshq.s3.amazonaws.com/brickset-search.png"><img alt="brickset-search.png" src="http://studshq.s3.amazonaws.com/brickset-search.png" /></a></p>
<p>Once you've added a set, you will also be able to view a list of all the minifigures you own by going to <a href="http://brickset.com/minifigs/mycollection-owned">brickset.com/minifigs/mycollection-owned</a>. Brickset will automatically work out which minifigures you have based on the sets you own. However, if you're like me, you may on occasion buy a set without the minifigures and Brickset has a feature to cope with this: flags.</p>
<h3>Custom Flags and No Minifigures</h3>
<p>Flags are a way for you to add extra metadata to the sets you own. To set up flags, go to <a href="http://brickset.com/mycollection">brickset.com/mycollection</a> and select <code>Set up flags</code>. Brickset allows you up to four custom flags: I have a <code>Bricklinked</code> flag for noting when I bought the parts of a set from <a href="https://www.bricklink.com/">Bricklink</a>, a <code>To build</code> flag to note when I haven't yet opened a set and a <code>Maybe</code> flag to use in conjunction with my wanted list. The blue flag has an extra checkbox to make the flag indicate that you don't own the minifigures for a set. By using this flag, Brickset will not show that you own the minifigures from any set with this flag applied.</p>
<p><a href="http://studshq.s3.amazonaws.com/brickset-flags.png"><img alt="brickset-flags.png" src="http://studshq.s3.amazonaws.com/brickset-flags.png" /></a></p>
<h2>Loose Minifigures</h2>
<p>If you have purchased a minifigure individually, there are two ways you can add this to your minifigures collection. The first is to find the set the minifigure comes from, select the <code>minifigures</code> tab from the set page, and check the <code>I own</code> checkbox. These will be added to your minifigure collection. The second method is to search by the name of the minifigure: simply change the search dropdown to <code>minifigs</code>. Once you have found the minifigure you want to add to your collection, simple check the  <code>I own</code> checkbox.</p>
<h2>Custom lists</h2>
<p>Once you've set up your collection, you can filter by theme, year and sort it by various different methods (e.g. number of pieces). This is great for sets that are directly linked together by something official like a theme, but if you want to create a custom list  of sets, or BrickLists as Brickset calls them, you can. For example, I've made <a href="http://brickset.com/sets/list-12524">a list of the sets given away with the Daily Mail last year</a> for my own reference. To create a new BrickList, select <code>BrickLists</code> from <code>My Menu</code> and then select <code> Create new BrickList</code>. Give your list a title and description and then you can start adding sets to it. You can choose to make it public or keep it private.</p>
<h2>Find out if you own a specific part</h2>
<p>As an additional bonus of having catalogued your collection, if you are looking for a specific part, Brickset will tell you which sets that you own contain that part you are looking for. Change the search dropdown to <code>part</code>, find the part you want to find, choose a colour and then select <code>View sets in your collection that contain this part</code>.</p>
<h2>Collection Summary</h2>
<p>Now you've added all your sets and minifigures, you can view your collection summary by selecting <code>Collection summary</code> from the <code>My Sets</code> menu. This summary will show you, by theme, the total cost of the sets you own, the total numbers of sets in a theme and how many of them you own as well as a number of other data points. Fair warning: if you don't want to know how much you've spent on LEGO, avoid this page.</p>
]]></content:encoded>
<pubDate>2015-04-16T00:00:00+00:00</pubDate>
</item>
<item>
<title>Simple Git Deploy</title>
<link>https://rknight.me/blog/simple-git-deploy/</link>
<guid>https://rknight.me/blog/simple-git-deploy/</guid>
<content:encoded><![CDATA[
<p>This is a simple way to deploy to a remote server, more for my reference than anything else.</p>
<p>Create a new folder on the server and initialise a bare git repository in it.</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">mkdir</span> /root/repos/project-name<br /><span class="token builtin class-name">cd</span> /root/repos/project-name<br /><span class="token function">git</span> init <span class="token parameter variable">--bare</span></code></pre>
<p>Create a post-receive hook (<code>nano /hooks/post-receive</code>) with this as the contents:</p>
<pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><br /><span class="token assign-left variable">REPO</span><span class="token operator">=</span>/root/repos/project-name<br /><span class="token assign-left variable">TMP_GIT_CLONE</span><span class="token operator">=</span>/tmp/project-name<br /><span class="token assign-left variable">PUBLIC_DIR</span><span class="token operator">=</span>/var/www/project-name<br /><br /><span class="token function">git</span> clone <span class="token variable">$REPO</span> <span class="token variable">$TMP_GIT_CLONE</span><br /><span class="token function">cp</span> <span class="token parameter variable">-rp</span> <span class="token variable">$TMP_GIT_CLONE</span>/* <span class="token variable">$PUBLIC_DIR</span><br /><span class="token function">rm</span> <span class="token parameter variable">-rf</span> <span class="token variable">$TMP_GIT_CLONE</span></code></pre>
<p>Make sure to create the public directory if it doesn't already exist. Then add the remote to your local repo.</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">git</span> remote <span class="token function">add</span> live ssh@server:/root/repos/project-name</code></pre>
]]></content:encoded>
<pubDate>2015-03-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>Remove Laravel Homestead Environment Variables</title>
<link>https://rknight.me/blog/remove-homestead-environment-variables/</link>
<guid>https://rknight.me/blog/remove-homestead-environment-variables/</guid>
<content:encoded><![CDATA[
<p>When you add environment variables to Laravel homestead, they get added so you can access them within your applications. The problem is, if you delete a varaible from your <code>homestead.yaml</code> file, it doesn't get deleted within Homestead. If you need to remove them, you can delete them from <code>php-fpm.conf</code> located at <code>/etc/php5/fpm/php-fpm.conf</code>.</p>
]]></content:encoded>
<pubDate>2015-03-27T00:00:00+00:00</pubDate>
</item>
<item>
<title>Stig Quote Generator</title>
<link>https://rknight.me/blog/stig-quote-generator/</link>
<guid>https://rknight.me/blog/stig-quote-generator/</guid>
<content:encoded><![CDATA[
<p>This morning, I was watching Top Gear and decided it would be fun to create the <a href="http://code.robblewis.me/stig-quotes/">Stig quote generator</a>. I grabbed all the &quot;some say&quot; quotes from the <a href="http://en.wikiquote.org/wiki/Top_Gear">Top Gear Wikiquote</a> page and split them into two parts (the &quot;some say&quot; part and the &quot;and that&quot; parts). The generator then grabs two of them at random, one of each type, and joins them together. Example:</p>
<blockquote>
<p>Some say that his heart is in upside down, and that if he felt like it he could fire Alan Sugar.</p>
</blockquote>
<p>The <a href="https://github.com/rmlewisuk/stig-quotes">code is on GitHub</a> if that's your thing.</p>
]]></content:encoded>
<pubDate>2015-03-26T00:00:00+00:00</pubDate>
</item>
<item>
<title>UltraViolet: Everything is Not Awesome</title>
<link>https://rknight.me/blog/ultraviolet/</link>
<guid>https://rknight.me/blog/ultraviolet/</guid>
<content:encoded><![CDATA[
<p>Joe Steel <a href="http://joe-steel.com/2015-02-20-Discs-not-Included.html">wrote about digital content</a> following an interview with a Kevin Tsujihara, CEO of Warner Bros. Entertainment:</p>
<blockquote>
<p>Incredibly, he highlights that they’re still trying to push hard on UltraViolet. Consumers have roundly rejected this as any kind of solution. Disney, Google, and Apple won’t participate — but sure, let’s prop this sucker up, Weekend at Bernie’s style! It is a farce of a system that has wronged many that dare to use it.</p>
</blockquote>
<p>Joe and Dan also spoke about how bad UltraViolet is on <a href="http://defocused.co/defocused/ep-36-youre-a-soldier-arry.html">this week's Defocused</a> so I thought I would take the oppurtunity to get an UltraViolet copy of The Lego Movie that came with the blu ray I bought. The UltraViolet slip in the blu ray suggests to &quot;instantly stream or download&quot; it takes &quot;3 easy steps&quot;.</p>
<ol>
<li>Go to <a href="http://flixter.com/getuv">http://flixter.com/getuv</a></li>
<li>Enter the code</li>
<li>Follow the instructions</li>
</ol>
<p>Step one and two went smoothly. The page at stage two noted that the UltraViolet download is for the &quot;cinema version&quot; only although it wasn't clear if the blu ray version was different. I was informed I would have to create <em>two</em> accounts, Flixter and UltraViolet. These are for &quot;<em>storing your film and TV collection in the cloud</em>&quot; and to &quot;<em>stream and download your UltraViolet Digital Collection to your favourite compatible screens</em>&quot; respectively.</p>
<p>Signing up for a Flixter account requires a name, email addrees and date of birth; this data can be used for the UltraViolet account as well, which is convenient. Alternatively, you can login with Facebook which asks for access to your profile, friends list and email address, or Google Plus which requests access to a list of all the people in your circles. To finalise the account(s) creation, the terms and conditions that you must agree to state (emphasis mine):</p>
<blockquote>
<p>I accept UltraViolet's Terms of Use and Privacy Policy; agree to allow Flixster to link to my UltraViolet account and allow me to manage it through Flixster; and <strong>request that Flixster and Warner Bros. send me offers</strong> and make product recommendations and use my UltraViolet account information for such purposes.</p>
</blockquote>
<p>On submission an error told me &quot;<em>The UV username is not valid.</em>&quot;. I subsequently received an email asking me to confirm my Flixter account. Ignoring the error, I confirmed the account and was prompted to link my UltraViolet account, which I'm pretty sure didn't exist. It didn't.&quot;<em>Your connection to UltraViolet needs to be reset. Please click here to resolve this issue.</em>&quot; Flixter told me. The same UltraViolet linking page was presented with no way to sign up for a new account so I Googled for the <a href="https://www.uvvu.com/signup">sign up page</a> and filled in the form. Success. Back to Flixter to link my brand new UltraViolet account, which worked this time and then redirected back to Flixter where I can finally view my collection. Of no movies. Nothing there. The code I originally entered hadn't worked so I selected &quot;redeem&quot; from the main menu.</p>
<p>Redemption of a code on Flixter requires searching for the movie in their database rather than just entering the code directly. Then back to the UltraViolet site to enter the code again. After a few minutes of &quot;updating my collection&quot; I finally had the Lego Movie available to watch in my collection.</p>
<p>This whole process took me about 40 minutes for &quot;3 easy steps&quot;. Everything is not awesome, Mr. Tsujihara. Not even close.</p>
]]></content:encoded>
<pubDate>2015-02-20T00:00:00+00:00</pubDate>
</item>
<item>
<title>Fix Gmail SMTP Offline Error in Yosemite Mail</title>
<link>https://rknight.me/blog/fix-gmail-offline-os-x-yosemite-mail/</link>
<guid>https://rknight.me/blog/fix-gmail-offline-os-x-yosemite-mail/</guid>
<content:encoded><![CDATA[
<p>Yosemite Mail will sometimes show Gmail outgoing mail as being offline when you first setup a Gmail account. To fix this open up Mail and do the following steps:</p>
<ol>
<li>Open preferences and go to Accounts.</li>
<li>Select &quot;Edit SMTP Server List&quot; from the &quot;Outgoing Mail Server Dropdown&quot;.</li>
<li>Select &quot;Advanced&quot; and put your account password in the password input.</li>
<li>Voila, all fixed.</li>
</ol>
<p>For some reason, Mail doesn't always save the password here on setup, so these are steps required to fix it.</p>
]]></content:encoded>
<pubDate>2014-10-17T00:00:00+00:00</pubDate>
</item>
<item>
<title>Apple Privacy Statement</title>
<link>https://rknight.me/blog/apple-privacy-statement/</link>
<guid>https://rknight.me/blog/apple-privacy-statement/</guid>
<content:encoded><![CDATA[
<p><a href="http://www.apple.com/privacy/government-information-requests/">Apple:</a></p>
<blockquote>
<p>On devices running iOS 8, your personal data such as photos, messages (including attachments), email, contacts, call history, iTunes content, notes, and reminders is placed under the protection of your passcode. Unlike our competitors, Apple cannot bypass your passcode and therefore cannot access this data. So it's not technically feasible for us to respond to government warrants for the extraction of this data from devices in their possession running iOS 8.</p>
</blockquote>
<p>This is excellent news.</p>
]]></content:encoded>
<pubDate>2014-09-18T00:00:00+00:00</pubDate>
</item>
<item>
<title>Relay FM</title>
<link>https://rknight.me/blog/relay-fm/</link>
<guid>https://rknight.me/blog/relay-fm/</guid>
<content:encoded><![CDATA[
<p><a href="http://relay.fm">Myke and Stephen</a>:</p>
<blockquote>
<p>Relay FM is our new home on the Internet, and where you can find all of our podcasts. The shows you have known and loved for years are being rebooted as part of the new network. Everything we have done so far in our podcasting careers has led us here, and we're pouring all of our love, knowledge and attention into this thing.</p>
</blockquote>
<p>I've already listened to the <a href="http://relay.fm/analogue/1">first episode of Analog(ue)</a> and <a href="http://relay.fm/inquisitive/1">Inquisitive</a> and, as with everything Myke produces, they are fantastic. I wish him, Stephen and all the other hosts the best of luck.</p>
]]></content:encoded>
<pubDate>2014-08-18T00:00:00+00:00</pubDate>
</item>
<item>
<title>An Ode to Bionic</title>
<link>https://rknight.me/blog/bionic/</link>
<guid>https://rknight.me/blog/bionic/</guid>
<content:encoded><![CDATA[
<div style="text-align: center;">
<p>Things Are Happening,<br />
Is This The End?,<br />
It's What Panda's Must Feel Like,<br />
All The Time.</p>
<p>Stop Belling Yourself,<br />
What's The Point,<br />
Do You Remember Rogif Moore?,<br />
Too Sad.</p>
<p>World's Latest Podcast,<br />
Our Non-Specific Internet Phone Calls​,<br />
To Our Child Bionique,<br />
The Magnificent Meese​.</p>
<p>You, I and Our Love Child,<br />
I Put A Bell On The End,<br />
Not Even a Full Ding,<br />
I've Got To Get It All In.</p>
<p>I Want To Sell You Clothes,<br />
Potential, That's What It's Loaded With​,<br />
It's A Team Effort, I'd Like to Say,<br />
Tinkerbell Button.</p>
<p>This Show Isn't About Ecosystems,<br />
One Star,<br />
It's Probably Swearing​,<br />
Fuck You, Everyone.</p>
<p>They Come In Sets of Two,<br />
Did It Hard and Fast,<br />
World's Greatest Finale,<br />
<a href="http://vlcnr.rknight.me">VLCNR forever</a>.</p>
</div>
]]></content:encoded>
<pubDate>2014-07-09T00:00:00+00:00</pubDate>
</item>
<item>
<title>How to Install iOS8 Beta Without a Developer Account</title>
<link>https://rknight.me/blog/how-to-install-ios8-without-a-developer-account/</link>
<guid>https://rknight.me/blog/how-to-install-ios8-without-a-developer-account/</guid>
<content:encoded><![CDATA[
<p>No no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no.</p>
<p>If you're not a developer, this is not for you. If you do install it, don't go reviewing apps in the App Store because they don't work. Don't complain when shit breaks. Don't moan when the beta expires. Don't be surprised if your phone becomes unusable.</p>
<p>Just don't.</p>
]]></content:encoded>
<pubDate>2014-06-03T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on Google Chromecast</title>
<link>https://rknight.me/blog/thoughts-on-chromecast/</link>
<guid>https://rknight.me/blog/thoughts-on-chromecast/</guid>
<content:encoded><![CDATA[
<p>The Chromecast got released in the UK on Wednesday and I bought one, in the hopes it will be better than the plethora of other streaming devices I have (Apple TV, Google TV, Xbox 360, PS3). As a side note, the Google TV, specifically <a href="https://www.sony.co.uk/support/en/product/NSZ-GS7">this model</a> is the worst peice of equipment I've ever owned.</p>
<h3>Setup</h3>
<p>The Chromecast is really easy to setup; plug in the dongle into an HDMI port, plug in the power cable (either USB or mains) and turn your TV on. Then go to <a href="http://chromecast.com/setup">chromecast.com/setup</a> and follow the instructions. I set it up on my Mac so I can't vouch for the Windows setup, but I think it'd be pretty similar. Download and run the companion Mac app, setup your preferred wifi network, let any Chromecast updates run and you're good to go. None of the setup is done on the Chromecast itself, so there's no bullshit of trying to put in your wifi password with an on screen keyboard.</p>
<h3>Apps</h3>
<p>Google lists a number of apps <a href="http://chromecast.com/apps">on the Chromecast site</a> that have support for the Chromecast but the ones I am most interested in were BBC iPlayer, Netflix, Plex and YouTube.<br />
If you've ever used AirPlay on an iOS device, using Chromecast is just as simple. In any supported app, select the &quot;cast button&quot;, choose your Chromecast from the list and the video will start playing through your TV.</p>
<p>YouTube, Netflix and BBC iPlayer were fairly straight forward and worked without a hitch. Plex required me to update the server on my Mac to the latest version (I hadn't updated it for over a year). You can also use the Chromecast within Chrome on the desktop by installing the <a href="https://chrome.google.com/webstore/detail/google-cast/boadgeojelhgndaghljhdicfkmllpafd">Chromecast extension</a>.</p>
<p>One of the biggest advantages of Chromecast over AirPlay to an Apple TV is the ability to leave the app your streaming from and do other things. When AirPlaying video, the app your streaming from has to be open the whole time, whereas the Chromecast loads the stream to the device itself, allowing you to check Twitter, Facebook or whatever else you want to do.</p>
<p>If you use any of the apps listed on the Chromecast site on a regular basis, for £30 you really can't go wrong.</p>
]]></content:encoded>
<pubDate>2014-03-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>New York</title>
<link>https://rknight.me/blog/new-york/</link>
<guid>https://rknight.me/blog/new-york/</guid>
<content:encoded><![CDATA[
<p>I visited my friend over Christmas who is currently working in New York. I had an amazing time and I thought I would recommend some places I visited for anyone who is planning on visiting in the future, as well as to keep a record of what I got up to.</p>
<h3>Restaurants</h3>
<p>We ate at quite a few restaurants and these three are the ones I would recommend to anyone:</p>
<ul>
<li><a href="http://roguenyc.com">Rogue</a> - Rogue is a sports bar but the food is absolutely fantastic. As long as you can put up with all the sports (I counted seven simultaneous games on one occasion) being shown on their 14+ televisions, it's well worth a visit.</li>
<li><a href="http://www.rubytuesday.com/">Ruby Tuesday, Times Square</a> - Ruby Tuesday is exactly what you'd expect from an American restaurant; huge portions, lots of meat and amazing buffalo chicken.</li>
<li><a href="http://bellanapoli.com/">Bella Napoli, 7th Avenue</a> - An excellent Italian restaurant, great service and reasonably priced.</li>
</ul>
<h3>Attractions</h3>
<p>Ignoring the obvious, well-known attractions such as Times Square and the Empire State Building, <a href="http://thehighline.org">the High Line</a> was a personal highlight. The High Line is <em>&quot;a public park built on an historic freight rail line elevated above the streets on Manhattan’s West Side&quot;</em> and definitely makes a nice change of pace from barging past people on the streets. We took a ride on the <a href="http://www.circlelinedowntown.com/">Circleline Downtown Cruise</a> which gives great views of the Statue of Liberty, the Manhattan skyline as well as Ellis Island and Governor's Island. We also did a helicoptor tour which gave spectacular views, but it is a little on the pricy side (~£100 p/person for 15 minutes). And I turned into a little kid when I visited the <a href="http://www.nintendoworldstore.com/">Nintendo Store</a> at the Rockefeller Center.</p>
<h3>Photos</h3>
<p><a href="http://edpoole.me">Ed</a> was kind enough to lend me his Canon 650D to take photos which was an interesting experience. Apparently, a good camera <em>doesn't</em> make you a good photographer. I got used to it after a couple of days and managed to get a few nice photos which I have <a href="https://rmlewisuk.exposure.so/new-york-2013">posted on Exposure</a>.</p>
]]></content:encoded>
<pubDate>2014-01-05T00:00:00+00:00</pubDate>
</item>
<item>
<title>Create a Table in Markdown with No Headers</title>
<link>https://rknight.me/blog/create-a-blank-no-header-markdown-table/</link>
<guid>https://rknight.me/blog/create-a-blank-no-header-markdown-table/</guid>
<content:encoded><![CDATA[
<p>Whilst creating a document which requires me to put some data (which isn't in the slightest way tabular data) into a table, I wanted to create the table with no headers. However the way markdown works mean it requires you to set a header for it to create a table in the first place. By using the HTML non-breaking space entity it can be done:</p>
<pre class="language-markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token table-header important"><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span> </span><span class="token punctuation">|</span><span class="token table-header important"> <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span></span><br /></span><span class="token table-line"><span class="token punctuation">------</span> <span class="token punctuation">|</span> <span class="token punctuation">-----</span><br /></span><span class="token table-data-rows"><span class="token table-data">Stuff  </span><span class="token punctuation">|</span><span class="token table-data"> More things</span></span></span></code></pre>
<p>Simple.</p>
]]></content:encoded>
<pubDate>2013-11-12T00:00:00+00:00</pubDate>
</item>
<item>
<title>Parents: Take Some Fucking Responsibility</title>
<link>https://rknight.me/blog/parents-take-some-responsibility/</link>
<guid>https://rknight.me/blog/parents-take-some-responsibility/</guid>
<content:encoded><![CDATA[
<p>The <a href="http://www.telegraph.co.uk/technology/apple/10346236/Twins-rack-up-1000-iPad-bill-buying-virtual-pets.html">Telegraph reported this morning</a> that two six-year-olds racked up a £1000 bill through in app purchases because they knew their parents iTunes password. And of course the parents are placing the blame entirely on the developers of apps that include in-app purchases.</p>
<h3>Parental controls</h3>
<p>iOS has built in parental controls that allow for restrictions on downloading apps and when a password is required (either every 15 minutes, or always) among other settings. The problem is, there is no mention of these controls in the initial setup process, presumably to keep setup as simple as possible.</p>
<p>Parents may not be aware these settings exist and therefore just assume they can't restrict access to purchases or other features of the operating system. For reference, restrictions are in settings:</p>
<p>settings&gt;general&gt;restrictions</p>
<h3>The Blame Game</h3>
<p>The parents of the twins claim they knew the password for the account:</p>
<blockquote>
<p>...his children knew the password after using the iPad for schoolwork and games.</p>
</blockquote>
<p>&quot;Using the iPad for schoolwork&quot;? In what way would that involve needing the password for the iTunes account? So because they couldn't be bothered to check what their children were purchasing, they just gave them the password. Perhaps give them the pin number to your credit card so they can go and do their own shopping? They're six years old.</p>
<p>This is not the first time this has happened. Back in March an eight-year-old <a href="http://www.belfasttelegraph.co.uk/breakingnews/offbeat/boy-racks-up-a-1000-ipad-bill-29128775.html">spent £980 on The Simpsons: Tapped Out</a>. The parents responded by saying:</p>
<blockquote>
<p>I appreciate children are their target audience but it is not right and there needs to be specific controls in place to stop this from happening.</p>
</blockquote>
<p>Specific controls? Perhaps like the ones in settings?</p>
<p>In both cases, Apple refunded the money to the parents as a gesture of good will. Jim Darymple nails it in this peice entitled &quot;<a href="http://www.loopinsight.com/2013/03/05/its-not-apples-job-to-be-a-parent-to-your-kids/">It's not Apple's Job to be a parent to your kids</a>&quot;:</p>
<blockquote>
<p>The simple fact is, as parents, it’s up to us to monitor what our kids do with technology or any toy. If you choose not to use the included controls because they are a hassle, then that’s your choice. You made that decision.</p>
</blockquote>
<p>Parents: take some fucking responsibility, stop blaming everyone else and use some common sense instead of letting your kids do whatever the hell they want.</p>
]]></content:encoded>
<pubDate>2013-10-01T00:00:00+00:00</pubDate>
</item>
<item>
<title>Pub Hack #1</title>
<link>https://rknight.me/blog/pub-hack-1/</link>
<guid>https://rknight.me/blog/pub-hack-1/</guid>
<content:encoded><![CDATA[
<p>The first <a href="http://pubhack.co.uk">Pub Hack</a> took place yesterday. Jo and Lillian did an excellent job of organising everything including food, t-shirts, trophies as well as all the other behind-the-scenes stuff that needed doing.</p>
<p>The theme was &quot;post-apocolypse&quot; so pretty much everyone, including our team, took that to mean zombies. We wasted the first hour on an idea that we found had already been done and then got to work on &quot;<a href="http://blownover.meteor.com">Has It Blown Over Yet?</a>&quot;. Blown Over takes inspiration from <a href="http://uksnowmap.com">UK Snow Map</a>, and Shaun of the Dead, and allows people to report a zombie attack on Twitter (using the hashtag #pompeyzombie) or on the website. And of course it will show you pubs close to your location to wait for this to all blow over.</p>
<p>We only had 10 hours to build it so the Twitter integration is a little bit buggy and the map pins just keep building up forever. But overall I'm really happy with what we built.</p>
<p>There were some excellent entries including &quot;Apocalhipster&quot; which used an iPhone accelarometer and web sockets to control a zombie-shooting hipster, &quot;Last Man Standing&quot; which used the battery level API to allow people to set off alarms on the laptops of those plugged into power and a first-person game set in the <a href="http://brewhouseandkitchen.com/">Brewhouse &amp; Kitchen</a>, where Pub Hack took place. There was also a similiar entry to ours tracking disasters across the world on a map and a directory of &quot;forts&quot; (read: pubs) in which to stay safe from the apocolypse.</p>
<p>Our team won &quot;Most Likely to Commercially Suceed&quot; which was awesome, Apocalhipster won &quot;Best Design&quot; and the 3D game won overall. It was a really great day and I can't wait for the next one.</p>
<p><strong>Update:</strong> <a href="https://vimeo.com/75569166">Pub Hack on Vimeo</a></p>
]]></content:encoded>
<pubDate>2013-09-18T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on the iPhone 5S and 5C</title>
<link>https://rknight.me/blog/thoughts-on-the-iphone-5s-and-5c/</link>
<guid>https://rknight.me/blog/thoughts-on-the-iphone-5s-and-5c/</guid>
<content:encoded><![CDATA[
<p>So Apple had their iPhone event. <a href="http://www.apple.com/iphone-5s/">iPhone 5S</a>. <a href="http://www.apple.com/iphone-5c/">iPhone 5C</a>. Nothing particularly surprising but interesting nonetheless.</p>
<h2>iPhone 5S</h2>
<p>The same solid design of the iPhone 5 with an improved camera, A7 chip and fingerprint scanner system called Touch ID. Touch ID is the feature I'm most excited about. Not because I find inputting a pin code &quot;cumbersome&quot;, as Phil Schiller said, but because I don't have to enter my password for iTunes purchases. And <a href="http://www.loopinsight.com/2013/09/10/hands-on-with-the-iphone-5c-and-iphone-5s/">according to Jim Darymple</a>, it works well:</p>
<blockquote>
<p>I went through the process of adding my fingerprint to the 5S and then unlocking the phone using the fingerprint. It’s pretty seamless to do, just following the onscreen instructions.</p>
</blockquote>
<p>The 5S comes in three colours, including the now-infamous &quot;gold&quot;. From what I've seen of it, this isn't some flashy over-the-top monstrosity but a more subtle gold finish. I still won't be buying a gold one though.</p>
<p>The camera has a lot of improvements including video recording at 120fps, a new burst mode for capturing action shots and a dual LED flash to &quot;light your subject perfectly&quot;.</p>
<h2>iPhone 5C</h2>
<p>The 5C is more or less an iPhone 5, with a slightly bigger battery and plastic back. It comes in five colours and you can get a <a href="http://store.apple.com/uk/product/MF035/iphone-5c-case-blue">hideous case</a> for it, if you so choose.</p>
<p>The interesting part about this model is it's not &quot;cheap&quot; per se. Yes, it £80 cheaper than the 5S but that's still not what I would call cheap. But it's cheap enough that it'll likely be free on most contracts in the UK.</p>
<p>Taking a quick look around some carriers websites today, I can't seem to find a mention of the 5S, but the 5C is on all the home pages. It seems to me that this is the phone they're going to be trying to sell over the 5S for obvious reasons.</p>
<h2>iWork, iMovie and iPhoto</h2>
<p>From now on, when you buy a new iPhone or iPad, you're going to get the complete iOS iWork suite, as well as iMovie and iPhoto, for free. This is a great move by Apple and I wouldn't be surprised if the same deal was announced for iWork for Mac when Mavericks is released.</p>
<h2>Release dates</h2>
<p>Pre orders for the 5C and 5S <a href="http://store.apple.com/uk">open on Friday</a>. iOS7 will be released the the public on 18th September, two days before the new iPhones.</p>
<p>You can <a href="http://www.apple.com/apple-events/september-2013/">watch the announcement here</a>.</p>
]]></content:encoded>
<pubDate>2013-09-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>JustDelete.me: One Million Page Views</title>
<link>https://rknight.me/blog/just-delete-me-one-million-page-views/</link>
<guid>https://rknight.me/blog/just-delete-me-one-million-page-views/</guid>
<content:encoded><![CDATA[
<p>When I wrote <a href="https://rknight.me/24-hours-of-just-delete-me/">this post</a> about <a href="http://justdelete.me">justdelete.me</a> I assumed that would pretty much be the best I could hope for in terms of traffic. 3000 visitors in 24 hours was an amazing response to get.The last few days? We’ve been doing that in half an hour.</p>
<h2>News coverage</h2>
<p>The coverage in the news has been insane. We were picked up by <a href="http://minimalmac.com/post/58698882020/robb-lewis-just-delete-me">Minimal Mac</a> on Monday and the traffic stayed pretty steady for the next couple of days. Then we were <a href="http://www.wired.com/gadgetlab/2013-08-just-delete-me/">featured in WIRED</a> which skyrocketed traffic. From there, many of the other tech blogs picked up the story and we ended up at number one on Hacker News, trending on GitHub, number one on <a href="https://pinboard.in/popular/">Pinboard popular</a> and Christina Warren was interviewed about the site on <a href="http://www.foxbusiness.com/on-air/varney-co/index.html">Varney and Co on Fox Business</a>. Other sites that picked it up include <a href="http://techcrunch.com/2013-08-23/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">TechCrunch</a>, <a href="http://mashable.com/2013-08-24/justdelete-me/?utm_cid=mash-com-fb-main-link">Mashable</a> and <a href="http://gigaom.com/2013-08-23/painlessly-erase-your-internet-life-with-justdelete-me/">Gigaom</a>. I was also interviewed for <a href="http://thetechtailor.com/justdeleteme">The Tech Tailor podcast</a>. All of the links I have found about the site are <a href="https://pinboard.in/search/u:rmlewisuk?query=justdeleteme">on Pinboard</a> tagged as justdeleteme.</p>
<h2>Hosting</h2>
<p>I’ve got a little confession to make. I’ve never had more than 10 visitors on my site at the same time (except that one time Panic linked to me and the site died immediately). My hosting was costing me $1.50 a month. The server held up until around Thursday night when CPU usage was at 100%. <a href="http://edpoole.me">Ed</a>, <a href="http://mikerogers.io">Mike</a> and myself all jumped on a Skype call to work out what to do. Stupidly, I hadn’t even made the site static (thinking that hardly anyone would be interested) so we immediately converted it to static. We then cloned the site to <a href="http://mdtm.pl/17Wu4ia">MediaTemple</a>, changed the name servers and waited. It took about 2 days for it to fully transfer over but the majority of traffic was going to MT which has held up really well. Since we moved the site, we’ve used over 80gb of bandwidth even though the site is only around 200kb.</p>
<h2>Contributors and Future plans</h2>
<p>We’re going to continue adding services from pull requests (We’ve done 130 from 61 different contributors so far) and I will open email submission again soon. We now have over 180 services listed (the current count is shown in the console on page load if you’re interested) which I’m sure will expand in the coming weeks. In terms of making some money to cover hosting and analytics costs we’re going to see how the traffic is in a week or two when the frenzy has died down and make a decision then.</p>
<p><a href="http://tosdr.org">Terms of Service; Didn’t Read</a> are looking at integrating our data with theirs to keep as much information up to date as possible. The <a href="https://chrome.google.com/webstore/detail/justdeleteme/hfpofkfbabpbbmchmiekfnlcgaedbgcf">JustDelete.me Chrome Extension</a> is receiving some great feedback and Mike is currently considering creating versions for Firefox and Safari.</p>
<h2>Statistics</h2>
<p>We have been tracking visitor numbers with <a href="https://www.gosquared.com/r/NjE0MzM4">GoSquared</a>. GoSquared are a real-time analytics company and they have been awesome in terms of supporting us and helping with upgrades. I can’t recommended, and thank, them enough. The top sources of traffic for the last 10 days are:</p>
<ul>
<li><a href="http://www.spiegel.de/netzwelt/web/online-account-webseite-mit-anleitungen-um-profil-zu-loeschen-a-918850.html">Spiegel.de</a></li>
<li><a href="http://mashable.com/2013-08-24/justdelete-me/?utm_cid=mash-com-fb-main-link">Mashable</a></li>
<li><a href="https://rknight.me/wired.com/gadgetlab/2013-08-just-delete-me/">Wired</a></li>
<li>Tumblr (<a href="http://tumblr.thefjp.org/post/59394819304/delete-yourself-from-web-services-with-justdelete-me">likely this post</a>)</li>
<li><a href="http://techcrunch.com/2013-08-23/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">TechCrunch</a></li>
</ul>
<p>We’ve had visitors from at least 150 countries with United States, Germany and Italy making up the top three. Here’s a chart showing the last 10 day’s visitors, uniques and page views:</p>
<p><img alt="chart_1" src="http://rmlewisuk.s3.amazonaws.com/just-delete-me-one-million-page-views-chart.png" /></p>
<p>Some other random snippets of information about the site:</p>
<ul>
<li>Over 13k likes on Facebook.</li>
<li>The most used browser was Chrome.</li>
<li>There have been over 6500 tweets about the site.</li>
<li>The most used operating system was Windows 7.</li>
<li>Half a million pages views were served on Monday and Tuesday alone.</li>
<li>The average time spent on the site is around four minutes.</li>
<li>The most used monitor size was 1366 x 768.</li>
<li>Someone made a copy of the site trying to cash in on the press attention. As soon as we created an official Twitter account, he stopped getting mentioned. BOOM.</li>
<li>The highest amount of people on the site at one time was 1842, on Tuesday.</li>
<li>The Twitter account has more followers than me and Ed combined.</li>
</ul>
]]></content:encoded>
<pubDate>2013-08-29T08:04:32+00:00</pubDate>
</item>
<item>
<title>24 Hours of Just Delete Me</title>
<link>https://rknight.me/blog/24-hours-of-just-delete-me/</link>
<guid>https://rknight.me/blog/24-hours-of-just-delete-me/</guid>
<content:encoded><![CDATA[
<p>“<em>I’m sure I’ll get a couple of hundred visitors</em>”. That’s what I was thinking yesterday when I launched <a href="http://justdelete.me">justdelete.me</a>. I wasn’t completely wrong.</p>
<p>The response to <a href="http://justdelete.me">justdelete.me</a> has been incredible. In just 24 hours it was linked to by <a href="http://minimalmac.com/post/58698882020/robb-lewis-just-delete-me">Minimal Mac</a> (swoon!), tweeted and retweeted by hundreds of people and had over 3000 visitors.</p>
<p>Since launch five additional services have been added: Reddit, Lovefilm, MySpace, Amazon and Klout. To add Klout, I had to sign up for it to immediately delete my account. I saw things. Crazy, strange things. How’s that for dedication?</p>
<p>Other stats of note:</p>
<ul>
<li>Visitors from over 70 different countries</li>
<li>Around 30% of people were using Chrome</li>
<li>Someone from <a href="http://d.pr/i/I8JN">Apple visited</a></li>
<li>The top three operating systems were OS X 10.8, iOS 6.1 and Windows 7</li>
</ul>
<p>Also Ed, who designed the site, isn’t getting anywhere near enough credit for the project so <a href="http://edpoole.me/portfolio">go visit his portfolio</a>.</p>
]]></content:encoded>
<pubDate>2013-08-20T13:49:57+00:00</pubDate>
</item>
<item>
<title>Just Delete Me</title>
<link>https://rknight.me/blog/just-delete-me/</link>
<guid>https://rknight.me/blog/just-delete-me/</guid>
<content:encoded><![CDATA[
<p>After seeing a few tweets about how difficult it can be to delete your Skype account and then hearing that Netflix flat-out <em>won’t</em> delete your details I decided to build <a href="http://justdelete.me">JustDelete.me</a>.</p>
<p><a href="http://JustDelete.Me">JustDelete.Me</a> is a directory of urls to delete your account from web services. (Yes, I am aware how terrible that description is. If you’ve got a better one, <a href="https://rknight.me/contact">let me know</a>). Services are marked either easy, medium or hard depending on how difficult it is to delete that account. Those marked as hard have additional information on how to completely remove your account, such as Skype which requires you to contact customer services to do so.</p>
<p>A lot of inspiration for the site came from Steve Streza’s <a href="http://devcenter.me">DevCenter.me</a> and the search functionality is modified from the repository. I thought about just forking the repo and modifying it but the sites are different enough to warrant the time to build it myself. Also, where would have been the fun in that? <a href="http://edpoole.me">Ed Poole</a> did a great on job on taking the initial concept and making it look a hell of a lot nicer than what I &quot;designed&quot;.</p>
<p>At present there are 16 services listed. If you want to add a new service, <a href="https://rknight.me/contact">drop me an email</a> and let me know. Alternatively, <a href="https://github.com/rmlewisuk/justdelete.me">fork the repo</a> on GitHub, add the site to the json file and submit a pull request.</p>
<p>Update: <a href="https://rknight.me/24-hours-of-just-delete-me/">24 Hours of Just Delete Me</a></p>
]]></content:encoded>
<pubDate>2013-08-19T08:00:34+00:00</pubDate>
</item>
<item>
<title>How PF Meet Helped Me Get a Placement</title>
<link>https://rknight.me/blog/how-pf-meet-helped-me-get-a-placement/</link>
<guid>https://rknight.me/blog/how-pf-meet-helped-me-get-a-placement/</guid>
<content:encoded><![CDATA[
<p>I <a href="http://www.pfmeet.co.uk/how-pf-meet-helped-me-get-a-placement">wrote a post over on the PF Meet blog</a> about how the event helped me get an industrial placement. Worth a read if you're going to be applying for placements or wondering about the benefits of events like PF Meet.</p>
]]></content:encoded>
<pubDate>2013-08-16T16:03:13+00:00</pubDate>
</item>
<item>
<title>Lego Back to The Future Set Review</title>
<link>https://rknight.me/blog/lego-back-to-the-future-set-review/</link>
<guid>https://rknight.me/blog/lego-back-to-the-future-set-review/</guid>
<content:encoded><![CDATA[
<p><img alt="" src="http://rmlewisuk.s3.amazonaws.com/lego-back-to-the-future-set-review.png" /></p>
<p>I <em>love</em> Back to The Future. I even have a <a href="http://instagram.com/p/HZnNqHMrQx/">DeLorean tattoo</a>. Back in December of last year, <a href="http://blog.lego.cuusoo.com/2012-12-20/results-of-the-summer-lego-review/">Lego announced that </a> that they were going to be making a Back to The Future themed set. On Saturday my Back to The Future Lego set arrived and I opened it like a kid on Christmas morning.</p>
<p>The set has 401 pieces, plus the usual random selection of spares, and a <em>huge</em> instruction manual. A majority of the manual is to construct the DeLorean from the first film with the last few pages showing the modifications needed to make the other two versions. You get both the “OUTATIME” licence plate as well as the barcode one from the future.</p>
<p>The flux capacitor custom brick is great and the time circuit states the destination time, rather than 1955, as 1958 which is the year the first Lego brick was introduced. The gull-wing doors are particularly fun to use, despite not having actual windows in them. They can be a little fragile and tend to fall off if I try and move the set whilst holding them.</p>
<p>The Marty and Doc minifigures have double-sided faces (happy and shocked) and Doc has a double sided body; one side is his lab coat and one is a radiation suit. The figures are slightly too big to fit comfortably into the car, making it somewhat frustrating to close the doors. Although the finished product doesn’t look <em>exactly</em> like the films, it’s pretty close considering it’s made of Lego and if you’re a fan of Back to The Future, you’re going to want this set. I got mine from <a href="http://shop.lego.com/en-GB/The-DeLorean-time-machine-21103">the Lego online store</a> but it’s available pretty much anywhere Lego sets are sold.</p>
]]></content:encoded>
<pubDate>2013-08-12T10:00:52+00:00</pubDate>
</item>
<item>
<title>Instapaper Beta</title>
<link>https://rknight.me/blog/instapaper-beta/</link>
<guid>https://rknight.me/blog/instapaper-beta/</guid>
<content:encoded><![CDATA[
<p>Instapaper, having been <a href="http://www.marco.org/2013-04-25/instapaper-next-generation">sold to Betaworks</a> in April, has a <a href="http://beta.instapaper.com">shiny new beta</a> for the web interface which is long overdue. Not that the site wasn’t usable, but it was starting to feel very dated when compared to the likes of <a href="http://getpocket.com">Pocket</a>. Despite this I had stuck with Instapaper as it had the one thing Pocket still doesn’t have: a way for me to pay them for the service, but that’s a topic for another day.</p>
<p>The new interface is a complete overhaul of the old site and looks great. There are a number of things that could do with improvement (too much whitespace, not great on smaller screens) but it’s still in beta so I’m sure things will get better before the public release.</p>
<p>It’s nice, for once, to see something be sold and not just left to fade into internet history. Although it was fairly certain this wouldn’t happen based on what Marco Arment said in this announcement of the sale:</p>
<blockquote>
<p>We’ve structured the deal with Instapaper’s health and longevity as the top priority, with incentives to keep it going well into the future.</p>
</blockquote>
<p>On top of the web beta, <a href="http://blog.instapaper.com/post/57817543037">Betaworks said in a blog post</a> that there will be “<em>..new versions of the Instapaper iOS and Android apps</em>”. This is an exciting time for Instapaper users and the future looks great for the service.</p>
]]></content:encoded>
<pubDate>2013-08-10T00:00:00+00:00</pubDate>
</item>
<item>
<title>Automatically Rename TV Shows with Hazel and TVNamer</title>
<link>https://rknight.me/blog/automatically-rename-tv-shows-with-hazel-and-tvnamer/</link>
<guid>https://rknight.me/blog/automatically-rename-tv-shows-with-hazel-and-tvnamer/</guid>
<content:encoded><![CDATA[
<p>I download a lot of TV shows (all legal of course) and have been renaming the files using <a href="https://github.com/tvrenamer/tvrenamer">TVRenamer</a>. After using TVRenamer manually for months I got fed up with having to do it, or the much more likely scenario happened where I would just leave them to build up in my downloads folder. I recently started using <a href="http://www.noodlesoft.com/hazel.php">Hazel</a> to automatically rename and organise my photos. This works well because Hazel simply changes the filename to the date they were taken. TV shows are a little more complex than that as they have season and episode numbers as well as titles. Enter <a href="https://github.com/dbr/tvnamer">TVNamer</a>.</p>
<p>TVNamer is a command line utility that takes a TV episode with an ugly filename (show.name.3x20.720[HD].avi) and changes it to something much more readable (ShowName S03E20 - Episode Title.avi). To install TVNamer follow the simple instructions in the <a href="https://github.com/dbr/tvnamer/blob/master/readme.md">readme</a>, it only takes a couple of minutes. Once it’s installed to can use it by simple typing:</p>
<pre><code>tvnamer filename
</code></pre>
<p>TVNamer will then parse the file, look for episode information and, if it finds more than one result, will prompt you to choose the correct one and confirm the rename. When I tested this the correct result was always the first one which makes using Hazel to automate the process much easier.</p>
<p>If you’re not familiar with Hazel, it’s a preference pane for Mac that monitors folders and matches files based on rules much like iTunes smart playlists. You can then set actions to perform when your rules are matched such as move files, rename them or run shell scripts.</p>
<p>To setup automatic renaming, open Hazel, select the folder where your TV shows download to, then add a new rule. Obviously rules will entirely depend on the type of files you choose to download but personally I set Hazel to find any files that have the extension <em>mkv</em>, <em>avi</em> or <em>mp4</em>. Then choose to run a shell script on the matched files and choose <em>“embedded script”</em>.</p>
<p><img alt="Hazel Screenshot" src="http://rmlewisuk.s3.amazonaws.com/automatically-rename-tv-shows-with-hazel-and-tvnamer-sshot.png" /></p>
<p>Select edit script and paste in the following:</p>
<p>/usr/local/bin/tvnamer --batch &quot;$1&quot;</p>
<p>The <em>–batch</em> option tells TVNamer to automatically choose the first result and rename it and the <em>$1</em> refers to the matched file Hazel found. To test your rule is working select the cog dropdown in the main Hazel screen and select <em>&quot;Run rules now&quot;</em>. Any files that match your Hazel rule should be renamed.</p>
<p>Initially I found that Hazel can sometimes have issues with running TVNamer if you’re matching files within subdirectories of your downloads folder. To remedy this I have Hazel move matched files to another folder and rename them from there. Refer to <a href="http://mac.tutsplus.com/tutorials/app-training/9-hazel-rules-to-increase-your-productivity/">this Tuts+ guide</a> to find out how to use Hazel to move files automatically.</p>
]]></content:encoded>
<pubDate>2013-08-08T00:00:00+00:00</pubDate>
</item>
<item>
<title>Hold Alt When Resizing to Center Windows on OS X</title>
<link>https://rknight.me/blog/hold-alt-when-resizing-to-center-windows-on-os-x/</link>
<guid>https://rknight.me/blog/hold-alt-when-resizing-to-center-windows-on-os-x/</guid>
<content:encoded><![CDATA[
<p>Spotted this tip on Twitter (I can't remember/find who tweeted it, sorry!) and it blew my mind. When resizing a window in OS X, hold down alt. The window will stay centered on the screen. Amazing.</p>
]]></content:encoded>
<pubDate>2013-03-20T00:00:00+00:00</pubDate>
</item>
<item>
<title>70Decibels and 5by5</title>
<link>https://rknight.me/blog/70decibels-and-5by5/</link>
<guid>https://rknight.me/blog/70decibels-and-5by5/</guid>
<content:encoded><![CDATA[
<p><a href="http://www.70decibels.com/blog/2013/3/13/were-moving-to-5by5.html">70Decibels is merging with 5by5</a> which is great news for everyone involved, including listeners. Myke has worked incredibly hard to get 70Decibels to where it is today, starting with The Bro Show and expanding to the packed list of shows now:</p>
<blockquote>
<p>70Decibels is nearly 18 months old. It's amazing what has happened in that time and we all know that we owe it all to you, the listeners. Without you tuning in every week, getting involved, asking questions, promoting us and letting us know when we fall short, we wouldn't be here. I just want to thank you all from the bottom of my heart for everything you've done to get us to this point. All of us at the network cannot wait to share what comes next. Thank you all so much.</p>
</blockquote>
<p>I'm not only a fan of 70Decibels and 5by5 but also, I'm glad to say, Myke's friend. I couldn't be happier for him and this merger is one step closer to him going full time as a podcaster extraordinaire. Myke and Dan announced and talked at length about the merger, as well as podcasting in general on <a href="http://www.70decibels.com/cmdspace/2013/3/13/033-a-big-announcement-with-dan-benjamin.html">CMD+Space 033</a>.</p>
]]></content:encoded>
<pubDate>2013-03-14T10:11:46.223+00:00</pubDate>
</item>
<item>
<title>Google Reader and Alternatives</title>
<link>https://rknight.me/blog/google-reader-and-alternatives/</link>
<guid>https://rknight.me/blog/google-reader-and-alternatives/</guid>
<content:encoded><![CDATA[
<p>Google have announced that they're shutting down Google Reader come July 1st:</p>
<blockquote>
<p>We launched Google Reader in 2005 in an effort to make it easy for people to discover and keep tabs on their favorite websites. While the product has a loyal following, over the years usage has declined. So, on July 1, 2013, we will retire Google Reader. Users and developers interested in RSS alternatives can export their data, including their subscriptions, with Google Takeout over the course of the next four months</p>
</blockquote>
<p>They call it usage decline but it's more likely that most users are simply using it as a sync engine to access their feeds through apps like <a href="http://reederapp.com/">Reeder</a>. Whatever the reasons, this leaves many of us at a dead end in terms of reading RSS. You can of course export your data and Dave Caolo has <a href="http://52tiger.net/daily-tip-export-your-feeds-from-google-reader/">outlined the process on 52Tiger</a>. Other have mentioned using services like <a href="http://flipboard.com/">Flipboard</a> or <a href="https://www.pulse.me/">Pulse</a> but I've always found these apps to be a little bloated and they don't really fit with how I like to consume news. The only viable alternative as of right now is <a href="http://www.feedafever.com/">Fever</a>. Fever is a self-hosted aggregator and is supported on iOS by the aforementioned Reeder as well as <a href="https://itunes.apple.com/ca/app/sunstroke/id488564806?mt=8">Sunstroke</a>. Of course, being self-hosted means you're going to have to have somewhere to install it and at least some knowledge of server-side tech. <a href="http://www.macstories.net/tutorials/how-anyone-can-install-fever-in-ten-minutes/">MacStories</a> have got a great tutorial to get you started. There is hope, however, in the form of <a href="http://feedwrangler.net/">Feed Wrangler</a> a project by <a href="https://alpha.app.net/davidsmith">David Smith</a>:</p>
<blockquote>
<p>This project is already well along in development, with a working web interface and native apps. I was expecting to launch early this summer but Google has announced that they are closing down Reader July 1. That accelerates my plans and I am now working to get ready for public consumption as soon as possible.</p>
</blockquote>
<p>Between Fever, Feed Wrangler as well as projects that haven't been announced yet June might not be so bad for RSS after all.</p>
]]></content:encoded>
<pubDate>2013-03-14T10:11:45.223+00:00</pubDate>
</item>
<item>
<title>DIY Game Controller Rack</title>
<link>https://rknight.me/blog/diy-game-controller-rack/</link>
<guid>https://rknight.me/blog/diy-game-controller-rack/</guid>
<content:encoded><![CDATA[
<p>Two Playstation 2, two GameCube, four N64, two Xbox, four Wii, two Guitar Hero. You get the idea, I have lots of controllers. So does <a href="http://mattgemmell.com/2013/03-02-playing-nintendo-games-on-a-mac/">Matt Gemmell</a>. And I'm sure, so do a lot of other people. My solution for organising them is a fairly simple one, but I haven't seen it documented elsewhere on the web. So here it is.</p>
<p>I had an old DVD rack not being used for anything so I figured using that would be a good start (and avoid any cost to me). I purchased some blank DVD cases and popped them in every forth slot. This gave me enough spaces to house all of my controllers as well as a couple of spaces for Wii Nunchucks. I also left a larger space at the bottom for those damn Wii wheels and a mug which holds all of my controller extension cables, extra memory cards for the PS2 and GameCube.</p>
<p><img alt="Whole game controller rack" src="http://rmlewisuk.s3.amazonaws.com/diy-game-controller-rack-whole.png" /> For the Guitar Hero controllers, I put some screws in each side of the rack (measuring the width before, of course) and wrapped them in Cellotape although electrical tape, which I didn't have, would have been better. The Guitars slot nicely into these and hang out the way. I also stuck one screw in the front of the rack for the Wii Zapper.</p>
<p><img alt="guiter hero controller holder" src="http://rmlewisuk.s3.amazonaws.com/diy-game-controller-rack-guitar.png" /></p>
<p>And that's all there is to it.</p>
]]></content:encoded>
<pubDate>2013-03-11T10:00:31+00:00</pubDate>
</item>
<item>
<title>I am a Tool</title>
<link>https://rknight.me/blog/i-am-a-tool/</link>
<guid>https://rknight.me/blog/i-am-a-tool/</guid>
<content:encoded><![CDATA[
<p>As many of you noticed, moments ago my timeline (and yours) was filled with tweets from every single blog post I've ever written. I apologise, I am a tool. Pro tip: Import posts <em>before</em> setting up Wordpress to Twitter.</p>
]]></content:encoded>
<pubDate>2013-03-05T17:46:51+00:00</pubDate>
</item>
<item>
<title>The Difference Between Fact and Trivia</title>
<link>https://rknight.me/blog/the-difference-between-fact-and-trivia/</link>
<guid>https://rknight.me/blog/the-difference-between-fact-and-trivia/</guid>
<content:encoded><![CDATA[
<p>This morning I took a practice exam for one of the web units I’m studying. Most of the questions were fairly easy but one of them in particular annoyed me. The question was:</p>
<blockquote>
<p>“PageRank is so named because it was created by Larry Page, not because it ranks pages”</p>
</blockquote>
<p>I incorrectly marked this as <em>false</em>. When I asked how much trivia we would be asked in the exam, my lecturer told me (quite agressively) that the question is not trivia but a fact that is useful to know. I argued the counterpoint, saying a fact is something useful to developing my understanding of a specific topic or technology, in this case, PageRank. She disagreed.</p>
<p>Here is a quote from an archived version of a <a href="http://web.archive.org/web/20090424093934/http://www.google.com/press/funfacts.html">Google Fun Facts Page</a>:</p>
<blockquote>
<p>The basis of Google’s search technology is called PageRank™, and assigns an “importance” value to each page on the web and gives it a rank to determine how useful it is. However, that’s not why it’s called PageRank. It’s actually named after Google co-founder Larry Page.</p>
</blockquote>
<p>The first part of that statement is the fact. The last sentence is trivia. It holds no bearing on my understanding of PageRank. Should we really be tested on trivial facts about Google, or any other company for that matter? In my opinion, no.</p>
<p>Rant over.</p>
]]></content:encoded>
<pubDate>2013-02-27T13:11:01+00:00</pubDate>
</item>
<item>
<title>What to Do When Your iTunes Account Gets Hacked</title>
<link>https://rknight.me/blog/what-to-do-when-your-itunes-account-gets-hacked/</link>
<guid>https://rknight.me/blog/what-to-do-when-your-itunes-account-gets-hacked/</guid>
<content:encoded><![CDATA[
<p>Early Saturday morning, 2am to be exact, I recieved an email from Apple confirming my lastest purchase. Nothing unusual, I buy apps all the time. Didn’t bother checking it, just marked it as read and archived it. Then I started thinking about what I had bought that day from the iTunes store. I couldn’t think of anything, so I checked the email: £149.99 for an in-app purchase of NBA Season Pass. “Shit” was my first reaction. My account had been comprimised.</p>
<p>As someone with a keen interested in technology and specifically Apple, I’ve read about this stuff countless times and yet I had no idea what to do. So I had to wing it. First thing was fairly obvious: change my password. If your account gets comprimised, this is the first thing you need to do. To do this go to <a href="http://iforgot.apple.com">http://iforgot.apple.com</a> and reset your password.</p>
<p>Once I had done that, I had no idea how to go about getting Apple to stop/refund the charge. I Googled around and came across <a href="http://www.apple.com/support/contact/">this contact page</a> on Apple’s site. I went through the various options and eventually got to a point where I could request a support call. No sooner had I selected for Apple to call me, than my phone rang.</p>
<p>Trying to sound reasonably calm, I explained to the lady on the phone that the purchase was not me and I needed a refund. She very clearly told me what she was doing at all times, confirmed with me that I had changed my password and told me I would get a refund within 24 hours.</p>
<p>At this point (around 3am) I went to sleep. When I woke up I had an email from both Apple, and Click and Buy, confirming that the refund had been sucessfully processed. And breath. To clarify, for anyone who is reading this because their account has been comprimised:</p>
<ol>
<li>Change you password immediately <a href="http://iforgot.apple.com">http://iforgot.apple.com</a></li>
<li>Request a support call from <a href="http://www.apple.com/support/contact/">http://www.apple.com/support/contact/</a></li>
<li>Relax</li>
</ol>
<p>The most annoying part about the whole thing? Because I’m in the UK, I couldn’t have purchased the season pass even if I wanted to, as it’s US only. It was a scary moment that I hope not to have to repeat. However, Apple’s fast response time and the helpfulness of the representative who I spoke to on the phone are exactly the reason why I buy into Apple’s ecosystem.</p>
]]></content:encoded>
<pubDate>2012-11-26T20:30:49+00:00</pubDate>
</item>
<item>
<title>The State of Passbook in the UK</title>
<link>https://rknight.me/blog/the-state-of-passbook-in-the-uk/</link>
<guid>https://rknight.me/blog/the-state-of-passbook-in-the-uk/</guid>
<content:encoded><![CDATA[
<p>As you probably know, Passbook support is a little bit sparse in the UK at the moment.</p>
<p>Yesterday, the Eventbrite app got <a href="http://blog.eventbrite.com/add-eventbrite-tickets-to-passbook-on-ios-6/">updated to support Passbook</a> which is great news for anyone who uses the service. But what about the somewhat more day-to-day apps? I searched around, or asked directly, to get some answers.</p>
<p><a href="https://twitter.com/UKTesco/status/253465105130479616">Tesco</a>:</p>
<blockquote>
<p>”We don’t have any information as yet”</p>
</blockquote>
<p><a href="https://twitter.com/nectar/status/253477171304226816">Nectar</a>:</p>
<blockquote>
<p>”Hi James, passbook on ios6 does look exciting and we’re looking into it’s opportunities, so watch this space :) ^SD”</p>
</blockquote>
<p><a href="https://twitter.com/AskAmex/status/252113756950249472">American Express </a> (which already has Passbook support in the US):</p>
<blockquote>
<p>”Hi there Andy! Regrets, at this time we do not have any information in regards to AMEX Pass in the UK. We will update you if avail.”</p>
</blockquote>
<p><a href="https://twitter.com/CostaCoffee/status/251300909336903680">Costa Coffee</a>:</p>
<blockquote>
<p>”not as yet :-( this is something we are reviewing - Thanks Hannah”</p>
<p>”this is not something that has been confirmed unfortunately, hopefully it may be something that is implemented in the future.”</p>
</blockquote>
<p><a href="https://twitter.com/British_Airways/status/251324123026964480">British Airways</a>:</p>
<blockquote>
<p>”…That’s something our team are currently looking into. Thanks.”</p>
</blockquote>
<p>Promising, but when asked about an ETA:</p>
<blockquote>
<p>”Not yet but we are certainly aware of the interest.”</p>
</blockquote>
<p><a href="https://twitter.com/Starbucks/status/249202870891728896">Starbucks (US account)</a>:</p>
<blockquote>
<p>”Updated to iOS 6? Our Passbook update is coming at the end of this month! 00111010 00101001”</p>
</blockquote>
<p>That was on the 21st of September. Although judging by some of their tweets, it seems it might be stuck in review. I have been unable to find any information as to whether this update will support the UK as well. From the <a href="https://twitter.com/StarbucksUK/status/250958138176569344">Starbucks UK account</a>:</p>
<blockquote>
<p>”Not too much to ask! We’re working on it.”</p>
</blockquote>
<p>Somewhat inconclusive.</p>
<p>There is some hope, however. Amsys are <a href="http://www.amsys.co.uk/2012/blog/passbook-comes-to-amsys-apple-training/">sending Passbook passes</a> when you book a training course with them and I did find an online <a href="http://www.odeon.co.uk/film30/">Passbook coupon from Odeon</a>, so there are a couple of companies who “get it”. Hopefully, more companies will begin to understand how important this could be to thier business, we’ll start to see the Passbook page populated with more than just airlines and that one hotel company. If there’s any apps, services or other Passbook related paraphernalia I may have missed, drop me a message <a href="http://twitter.com/rmlewisuk">on Twitter</a> or <a href="http://alpha.app.net/rmlewisuk">App.net</a>.</p>
]]></content:encoded>
<pubDate>2012-10-03T14:16:50+00:00</pubDate>
</item>
<item>
<title>Delivery Companies: The Antithesis of Convenience</title>
<link>https://rknight.me/blog/delivery-companies-the-antithesis-of-convenience/</link>
<guid>https://rknight.me/blog/delivery-companies-the-antithesis-of-convenience/</guid>
<content:encoded><![CDATA[
<p>I wrote about delivery companies a couple of weeks ago and I have been thinking about the issues surrounding this and how it could be fixed (in an ideal world).</p>
<p><strong>Operating hours</strong></p>
<p>The thing that annoys me the most is the operating hours of delivery companies. As an example, my local Domino’s is open from midday until midnight every day. The opening hours are set based on when people would most likely want pizza. McDonald’s opens at 7am for people who want breakfast. Newsagents open early to be able to sell newspapers while they’re still relevant. And yet, delivery companies continue to maintain a schedule that is the antithesis of convenience.</p>
<p><strong>Notification and tracking</strong></p>
<p>Most delivery companies offer some kind of order tracking, but rarely is this as useful in real life as it is in theory. Telling me every time someone scans my parcel at some middle-of-nowhere sorting office is not helpful. Here’s what I actually want to know:</p>
<ul>
<li>When my parcel is dispatched</li>
<li>When my parcel is on the delivery van</li>
<li>When my parcel is an hour away, or at least an estimated delivery slot</li>
</ul>
<p>That’s all. Whether it’s by phone, email, text or Twitter, just let me know when my parcel is going be arriving, within a reasonable time slot.</p>
<p><strong>Solutions</strong></p>
<p><a href="http://www.amazon.co.uk/gp/help/customer/display.html?nodeId=200742950">Amazon Locker</a> goes some way to solving at least some of the issues. But at the moment, it can only be used for specific items that Amazon sell. It’s a start, but we’re a long way off of a seamless online buying experience. As a side note, I used Amazon Locker for the first time this week, and was very impressed with the entire process.</p>
<p><strong>The problem</strong></p>
<p>As a business, your operating hours should match the hours that are convenient to your customers. You should want to make the experience as seamless and easy as possible for your customers. The problem is, we are not the customers. Much like Facebook’s customers are their advertisers and not the users, delivery companies are accountable only to thier customers: the businesses that are sending us our latest toys that we’ve ordered online. The problem is the delivery companies don’t care how the experience is for us, how difficult is it to take a day off work just to sign for a parcel or how annoying it is to go to the “local” sorting office between similarly inconvenient hours. We don’t pay them, we are not thier customers. And that’s the problem.</p>
]]></content:encoded>
<pubDate>2012-08-20T18:26:47+00:00</pubDate>
</item>
<item>
<title>Get Custom Screensavers on the Kindle 4 on OS X</title>
<link>https://rknight.me/blog/get-custom-screensavers-on-the-kindle-4-mac-osx/</link>
<guid>https://rknight.me/blog/get-custom-screensavers-on-the-kindle-4-mac-osx/</guid>
<content:encoded><![CDATA[
<p>This guide is for getting custom screensavers onto the new Kindle (Non-Touch) using Mac OSX.</p>
<p>The first thing you need to do is plug your Kindle into your Mac via USB. Then create a file with the name <code>ENABLE_DIAGS</code> and make sure it has <em>no extension</em> (e.g. .txt, .jpg). Copy this file to the root of your Kindle and then eject. Now go into settings and restart your Kindle and it should enter diagnostics mode.</p>
<p>Once your in the diagnostics mode, go to <code>Misc individual diagnostics &gt; Utilities &gt; Enable USBnet</code> and press the right arrow to confirm. You are now ready to create the folder you'll need to add custom screensavers.  Connect your Kindle to your Mac and open up network preferences.</p>
<p>On the left hand side you should see <code>RNDIS/…Gadget</code> in the connections list. Select this and then change <code>Configure Ipv4</code> to &quot;manually&quot;. Change the IP address to <code>192.168.15.1</code>. Now open up the Terminal (Applications &gt; Terminal). From the terminal you will need to enter each of these commands one by one either by typing them out, or copying and pasting each one. I would suggest using <a href="http://pastebin.com/17czdUS7">this pastebin dump</a> to copy from to avoid any weird issues. The root password is <code>mario</code>, enter this when prompted (after the first command).</p>
<p>The commands you need to enter are as follows:</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">ssh</span> root@192.168.15.1<br /><br /><span class="token comment"># enter password if/when prompted</span><br /><br />mntroot rw <span class="token function">mkdir</span> /mnt/us/screensaver <span class="token function">mount</span> /dev/mmcblk0p1 /mnt/base-mmc <span class="token function">mv</span> /mnt/base-mmc/opt/amazon/screen_saver/600x800 /mnt/base-mmc/opt/amazon/screen_saver/600x800.old <span class="token function">ln</span> <span class="token parameter variable">-sfn</span> /mnt/us/screensaver /mnt/base-mmc/opt/amazon/screen_saver/600x800</code></pre>
<p>Now you can disconnect your Kindle and exit the diagnostics mode. To do this, simply press the right arrow to exit each menu until you see <code>Exit, Reboot or Disable Diags</code>. Select this and then choose <code>Disable diags</code> and confirm with the left arrow and your Kindle should reboot. Once your Kindle has rebooted, connect it back up to your Mac and open it in Finder. There should be a new folder called &quot;Screensavers&quot;. Simply put your custom screensavers in that folder and restart your Kindle. And voila, custom screensavers!</p>
<p>If you need screensavers, I found most of the ones I'm using from <a href="http://kindlewallpapers.tumblr.com/">here</a>. If you want to create your own, screensavers must be in .jpg or .png format and have dimensions of 600 x 800. Have fun!</p>
]]></content:encoded>
<pubDate>2012-03-21T01:17:56+00:00</pubDate>
</item>
<item>
<title>Just 2024 Things</title>
<link>https://rknight.me/just-2024-things/</link>
<guid>https://rknight.me/just-2024-things/</guid>
<content:encoded><![CDATA[
<div> 婚礼、博客、媒体、音乐、游戏
<br />结婚并生孩子，时间紧张，无法做其他事情。
<br />总结: 今年写了60篇博客，观看了几部新电影和电视剧，喜欢了几张音乐专辑，玩了一些游戏，还有一些其他的项目和活动。 <div>
<p>I got married and had a child. No time for anything else. Thank you for reading.</p>
<hr />
<h3>Writing</h3>
<p>This year I wrote 60 blog posts including this one which is a big jump compared to last year's 19. My most popular posts<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> for the year are:</p>
<ul>
<li><a href="https://rknight.me/please-expose-your-rss/">Please, Expose your RSS</a> - this one hit the <a href="https://news.ycombinator.com/item?id=38595855">front page of Hacker News</a></li>
<li><a href="https://rknight.me/app-defaults/">App Defaults</a> - see the everything else section below for more info on this</li>
<li><a href="https://rknight.me//adding-webmentions-to-your-site/">Adding Webmentions to Your Site</a></li>
<li><a href="https://rknight.me//automating-my-now-page/">Automating My Now Page</a></li>
<li><a href="https://rknight.me/using-pagefind-with-eleventy-for-search/">Using PageFind with Eleventy for Search</a></li>
</ul>
<h3>Media</h3>
<h4>Movies</h4>
<p>Checking my <a href="https://letterboxd.com/rknightuk">Letterboxd</a> I only watched a handful of <em>new-to-me</em> movies this year. <a href="https://www.imdb.com/title/tt9114286/">Black Panther: Wakanda Forever</a> and <a href="https://www.imdb.com/title/tt10954600/">Ant-Man and the Wasp: Quantumania</a> were equally disappointing in their own special ways. <em>Barbie</em> was...fine? Maybe the hype set my expectations too high but it was fine. Whatever. It's a sad state of affairs that <a href="https://www.imdb.com/title/tt2933474/">Superfast!</a> was the best new-to-me movie I watched this year (here my review on <a href="https://wegot.family/5/">episode 5 of We Got Family</a>).</p>
<h4>TV</h4>
<p>Just two shows jump out at me as worth recommending this year:</p>
<ul>
<li><a href="https://www.imdb.com/title/tt11280740/">Severance</a></li>
<li><a href="https://www.imdb.com/title/tt3581920/">The Last of Us</a> accompanied with <a href="https://www.theincomparable.com/tcou/">The Incomparable's <em>The Cast of Us</em> podcast</a><br />
I have yet to watch For All Mankind season 4 and the Scott Pilgrim show.</li>
</ul>
<h4>Music</h4>
<p>I've continued to use <a href="https://rknight.me/add-to-musicthread-shortcut/">my MusicThread shortcut</a> to send new albums and tracks to the relevant playlists:</p>
<ul>
<li><a href="https://musicthread.app/thread/2L6LZz60026Onq3waGuwt7WdJ5x">2023 Albums</a></li>
<li><a href="https://musicthread.app/thread/2L6IuBPKCCo7fsA8SFyXZLirH5W">2023 Tracks</a></li>
</ul>
<p><a href="https://musicthread.app/link/2VIGOGRMFyCta6smxRY0H5jKPQq">Punk Tactics by Joey Valence &amp; Brae</a> has easily been my favourite album of the year, with <a href="https://musicthread.app/link/2X1GTScJIyLzJugjczig4sWFn66">One More Time by blink-182</a> a close second. The <a href="https://musicthread.app/link/2YgZCdX5aTVecEnkxXiVFpnTRaI?share_prompt=1">Meteora 20th Anniversary Edition</a> was also in heavy rotation for me this year as well. According to Apple Music my top artists were (I promise this is a 2023 list and not 2005):</p>
<ol>
<li>Linkin Park</li>
<li>Simple Plan</li>
<li>Punk Rock Factory</li>
<li>Blink 182</li>
<li>State Champs</li>
<li>Zebrahead</li>
<li>Bowling for Soup</li>
<li>Allister (top 100 listeners!)</li>
<li>Eminem</li>
<li>Story of the Year</li>
</ol>
<h4>Games</h4>
<p>According to Playstation Wrap-Up, I played four games this year:</p>
<ul>
<li>Last of Us Part 1</li>
<li>Stray</li>
<li>Spider-Man 2</li>
<li>Guardian of the Galaxy</li>
</ul>
<p>Of those I stopped playing Guardians because I found it boring and I'm halfway through Spider-Man and Last of Us. Stray is the only game I've finished.</p>
<h4>Books</h4>
<p>In <a href="https://rknight.me/just-2022-things/">last year's end of year post</a> I said:</p>
<blockquote>
<p>I did start <a href="https://micro.blog/books/9781728236254">Men Who Hate Women</a> and hopefully will finish it soon.</p>
</blockquote>
<p>I did not finish it yet. Maybe next year. The only book I read this year was the <a href="https://johnnydecimal.com/10-19-concepts/14-build-your-system/14.02-the-decimal-workbook/">Johnny Decimal workbook</a> which I enjoyed so much I <a href="https://rknight.me/using-the-johnny-decimal-system/">wrote a post about it</a>.</p>
<h4>Podcasts</h4>
<p>The only new podcast I added to <a href="http://localhost:8080/podcasts/roll/">my subscriptions</a> is <a href="https://hemisphericviews.com/">Hemispheric Views</a>. I enjoyed it so much I went back and <a href="http://localhost:8080/three-years-of-hemispheric-views-feedback/">listened to all 78 episodes</a> over three months. Hemispheric Views was also how <a href="https://defaults.rknight.me/">App Defaults</a> started, more about that below.</p>
<h3>Side Projects</h3>
<h4>January: omg! lol!</h4>
<p>At the start of the year I switched over to social.lol and using Mastodon rather than micro.blog which led to a few related projects:</p>
<ul>
<li><a href="https://github.com/rknightuk/omglolcli">omglolcli</a></li>
<li><a href="https://recentfm.rknight.me/">recentfm.js</a></li>
<li><a href="https://omgnow.rknight.me/">omgnow.js</a></li>
<li><a href="https://echo.rknight.me/">Echo</a></li>
<li><a href="https://lantern.rknight.me/">Lantern</a></li>
</ul>
<p>Echo I am still using heavily and I know that RecentFM and omgnow.js is being used by at least a few people. I have plans to make Echo a more user-friendly project but that's a way off yet I think.</p>
<h4>September: The Donation Daddy Cometh</h4>
<p>This year I was organised enough to setup a sub-campaign for <a href="https://relay.experience.stjude.org">Relay's annual St Jude fundraising campaign</a> and I (with the help of <a href="https://neatnik.net">Adam</a>) was able to raise $12,590.57. You can <a href="https://rknight.me/st-jude-2023-final-numbers/">read the blog post here</a> for more of the juicy details on the campaign itself.</p>
<p>The <em>real</em> fun (aside from raising lots of money of course) comes from the japes in the Relay discord. It started with <a href="http://septembed.rknight.me">Septembed</a>, then <a href="https://deskmat.help">deskmat.help</a>, then <a href="https://coinme.dad/dy">Coin Me, Daddy</a>, and finally <a href="https://donationtreats.rknight.me">Donation Treats</a>. These were all separate websites for the majority of the campaign but towards the end I merged them into a single project for my own sanity and slapped Zach's incredible <a href="https://donationdaddy.rknight.me">donation daddy logo on it</a>. I can't wait for next year, me and Adam have some fun ideas already (it's basically September anyway).</p>
<p>We also sent out over 100 sets of stickers to people who donated. I was pretty proud of how well the stickers I designed looked, so much so I made the Ruminate one our proper artwork.</p>
<p><img alt="omg.lol × St Jude stickers" src="https://rknightuk.s3.amazonaws.com/site/omg-lol-st-jude-stickers.jpg" /></p>
<p><em>Photo courtesy of <a href="https://lmika.org/">Leon Mika</a></em></p>
<h4>Everything Else</h4>
<ul>
<li><a href="https://rknightuk.github.io/mac-30-font-svg/">Mac 30th Anniversary Icons</a>. I couldn't have done with without <a href="https://keiransell.com/">Keir</a> and <a href="https://calvetti.me/">Josh</a></li>
<li><a href="https://treatday.rknight.me/">Brian Butterfield Diet Soundboard</a>. One of the more popular projects. It keeps ending up getting posted on random newsletters, gets a big spike of traffic, then dies down again. I use it all the time.</li>
<li><a href="https://bugle.lol/">Bugle</a> - My ActivityPub server I'm using for <a href="https://bugle.lol/@wegotfamily">We Got Family</a> and <a href="https://knightbot.rknight.me">my bots</a></li>
<li><a href="https://github.com/rknightuk/custom-finder-sidebar-icons">Custom Finder Sidebar Icons</a>. A fun but frustrating project I did with Keir</li>
<li><a href="https://wegot.family/">We Got Family Podcast</a>. We got a bit behind on this but we will finish it. It's been a lot of fun talking about the Fast and Furious movies.</li>
<li><a href="https://podduration.rknight.me/">Podcast Duration Calculator</a> and <a href="https://defocused-vs-the-movies.netlify.app/">Defocused vs. the Movies</a>. I don't even remember why I wanted to know how many hours of audio a podcast was but these two projects were a result of that.</li>
<li>Secret <a href="http://Relay.fm">Relay.fm</a> project. Can't say what this is but it involved the Google Sheets API and Eleventy data files.</li>
<li><a href="https://vlcnr.rknight.me/">VLCNR</a>. I had wanted to revive this app for a while and finally found the time to do it.</li>
<li><a href="https://defaults.rknight.me/">App Defaults</a>. My most popular project this year by far. In the 50 days from launching it there was only three days where I didn't have to add at least one site to the list. As of today, there are 282 blog posts.</li>
<li><a href="https://pokedon.rknight.me/">Pokédon</a>. My first hackathon in seven years, this time on my own instead of part of <a href="https://devsdodesign">my team</a>. I think I spent more time on the Pokédex design that I did the actual code.</li>
<li><a href="https://doubleshift.rknight.me">DoubleShift</a> and <a href="https://crossover.rknight.me">Crossover</a>. Two projects that scratched an itch for me to know where I'd seen other actors in similar shows. A lot fun data stuff in here.</li>
<li><a href="https://postgraph.rknight.me/">Eleventy Post Graph</a>. The graph I added on my stats page was pretty popular so I made it into an Eleventy Plugin. This was also somehow the first time I've published an npm package. <a href="https://rknight.me/eleventy-post-graph-plugin/">Read the blog post</a>.</li>
<li>This site. Last month I redesigned the site after seeing <a href="https://simplebits.shop/products/cartridge">SimpleBits Cartridge font</a> and knew I had to use it somewhere. Now I've redesigned it to make it more flexible I can start porting over some of the content from <a href="https://intersect.rknight.me">the Intersect</a>.</li>
</ul>
<p>It's been a pretty good year all told. Now if I could find a way to get paid to make stupid web apps all day that'd be great.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I've excluded <a href="https://rknight.me/convert-spotify-facebook-to-email-login/">these</a> <a href="https://rknight.me//create-a-blank-no-header-markdown-table/">two</a> posts because although they are really popular they are very boring <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-22T10:11:45.223+00:00</pubDate>
</item>
<item>
<title>Puff Pastry Sausage Roll Recipe</title>
<link>https://rknight.me/puff-pastry-sausage-roll-recipe/</link>
<guid>https://rknight.me/puff-pastry-sausage-roll-recipe/</guid>
<content:encoded><![CDATA[
<div> sausage, pastry, egg, oven, baking tray
总结:<br /><br />这篇文章介绍了制作香肠卷的简易食谱。首先准备香肠肉、面团和鸡蛋。将面团铺平，然后将香肠肉卷成一块约一英寸厚的圆柱体，裹上面团，并切成一寸宽的小香肠卷。将其放在铺有油纸的烤盘上，刷上鸡蛋液，放入预热至180摄氏度的烤箱中烤20-25分钟，直至金黄色即可。 <div>
<p><img alt="Sausage Rolls" src="https://rknightuk.s3.amazonaws.com/site/sausage-rolls.jpg" /></p>
<p>Here is the recipe for very easy to make sausage rolls. You'll need:</p>
<ul>
<li>~450g of sausage meat. I prefer to buy sausages and remove the skin as there's a bigger variety of flavours available without having to add stuff to sausage meat myself</li>
<li>A sheet of puff pastry. In the UK at least these come in a standard size of 320g (<a href="https://groceries.asda.com/product/pastry-dough/jus-rol-puff-pastry-ready-rolled-sheet/910000468752">example</a>)</li>
<li>An egg</li>
<li>A baking tray and some greaseproof/baking paper</li>
</ul>
<p>Preheat the oven to 180°c. Whisk up an egg in a bowl.</p>
<p>Lay the puff pastry flat and lay a cylinder of sausage meat about an inch thick across the pastry. Roll the pastry around that and cut it so there's just enough to cover the meat with a little bit of overlap. Do this until you run out of pastry.</p>
<p>Grab your baking tray, lay down some greaseproof paper on it, then brush the tray with the eggwash.</p>
<p>Cut up your long sausage roll into inch-wide smaller sausage rolls and pop them on the baking tray, seam down. Brush them with egg and pop them in the oven for 20-25 minutes until they're golden brown all over.</p>
<p>Boom. Sausage rolls for days.</p>
]]></content:encoded>
<pubDate>2023-12-21T14:18:43.776+00:00</pubDate>
</item>
<item>
<title>Eleventy Post Graph Plugin</title>
<link>https://rknight.me/eleventy-post-graph-plugin/</link>
<guid>https://rknight.me/eleventy-post-graph-plugin/</guid>
<content:encoded><![CDATA[
<div> moment.js, Eleventy, plugin, postMap, options
总结:<br /><br />这篇文章介绍了作者如何使用moment.js和Eleventy创建了一个插件，用于在网站上显示帖子的日历图。作者提到了postMap对象的结构和使用方法，以及为处理不同用例而添加的选项。作者也提到了未考虑到的特殊情况，并给出了解决方案。文章最后提到了在网站上使用插件的邀请和一些遗漏的东西。<br /> <div>
<p>Last week I <a href="https://social.lol/@robb/111586346073402453">tooted about my Github-style post graph</a> on <a href="https://rknight.me/blog/stats">my stats page</a> and people seemed to like it. <a href="https://jamesdoc.com/blog/">James</a> added one to his blog pages. <a href="https://social.lol/@pimoore/111586392676224177">Pete swore at me</a>. I knew I had to make it into an Eleventy plugin so other people could us it easily.</p>
<p><img alt="Screenshot of eleventy-plugin-post-graph" src="https://rknightuk.s3.amazonaws.com/site/eleventy-plugin-post-graph-screenshot.png" /></p>
<p>If you just want to jump straight into using it, <a href="https://postgraph.rknight.me">check out the docs here</a>.</p>
<p>To create the data, which days have posts, and the grid itself I'm using <code>moment.js</code> to manipulate post dates<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> and generate an object that looks something like this:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> postMap <span class="token operator">=</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">years</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token number">2023</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />            <span class="token literal-property property">days</span><span class="token operator">:</span> <span class="token number">365</span><span class="token punctuation">,</span><br />            <span class="token literal-property property">offset</span><span class="token operator">:</span> <span class="token number">6</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">counts</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'2023-1'</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'2023-5'</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span><br />        <span class="token comment">// and so on</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p><code>days</code> is the number of days in the year and <code>offset</code> is used to start the grid on the correct day; if the 1st of January is a Sunday, the offset is 6. The keys in <code>counts</code> are the year plus the <em>day of the year</em>. This makes it easy to check if a day should be highlighted or not:</p>
<pre class="language-js"><code class="language-js"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"${prefix}__squares"</span><span class="token operator">></span><br />$<span class="token punctuation">{</span><br />    <span class="token comment">// generate the offset of the start of year</span><br />    Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> postMap<span class="token punctuation">.</span>years<span class="token punctuation">[</span>year<span class="token punctuation">]</span><span class="token punctuation">.</span>offset <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="epg__box epg__box--empty">&lt;/div></span><span class="token template-punctuation string">`</span></span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br />$<span class="token punctuation">{</span><br />    <span class="token comment">// make a box for every day of the year</span><br />    <span class="token comment">// if at least one post exists, highlight that box</span><br />    Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">length</span><span class="token operator">:</span> postMap<span class="token punctuation">.</span>years<span class="token punctuation">[</span>year<span class="token punctuation">]</span><span class="token punctuation">.</span>days <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">_<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> dateIndexKey <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>index <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />        <span class="token keyword">const</span> postCount <span class="token operator">=</span> postMap<span class="token punctuation">.</span>counts<span class="token punctuation">[</span>dateIndexKey<span class="token punctuation">]</span> <span class="token operator">||</span> <span class="token number">0</span><br />        <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&lt;div class="epg__box </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span> postCount <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">epg__hasPost</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">''</span> <span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">">&lt;/div></span><span class="token template-punctuation string">`</span></span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br /><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span></code></pre>
<p>One edge case I hadn't considered until I was writing the docs was what if someone wanted two instances of the graph in different colors - the css injected into the page would apply to both. The solution I came up with was to add a <code>prefix</code> option wherein the classes, instead of being <code>epg__{something}</code>, will become <code>mycoolprefix-epg__{something}</code>.</p>
<p>I added a bunch of other options to handle all the different use cases I could think of but I'm sure they'll be more. Get started with <a href="https://postgraph.rknight.me/">the docs</a> and if you use this on your site let me know, I'd love to see it.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>I am aware that <a href="https://day.js.org">Day.js</a> is better but I just...forgot about it until right now <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-19T15:10:02.341+00:00</pubDate>
</item>
<item>
<title>Meta Doesn't Need ActivityPub to Slurp Up Your Data</title>
<link>https://rknight.me/meta-doesnt-need-activitypub-to-slurp-up-your-data/</link>
<guid>https://rknight.me/meta-doesnt-need-activitypub-to-slurp-up-your-data/</guid>
<content:encoded><![CDATA[
<div> Meta, ActivityPub, EU, blocking, data<br />
这篇文章讨论了Meta在欧盟推出Threads功能，引发Fediverse上的争议。作者认为阻止用户关注Threads的决定是不必要的，会使Fediverse变得更糟。他建议等待Meta真正开始联合用户之后再做决定。他还指出，用户有权利选择是否移动到其他实例。文章最后批评了对欧盟的负面态度，认为他们试图让生活变得更好是愚蠢的。总的来说，作者认为阻止Meta并没有什么好处，反而会让Fediverse和开放网络变得更糟。 <br /><br />总结: Meta在欧盟推出Threads功能，然后是作者建议等待Meta真正开始联合用户之后再做决定，最后是作者认为阻止Meta并没有什么好处，反而会让Fediverse和开放网络变得更糟。 <div>
<p><a href="https://www.theverge.com/2023/12/13/24000120/threads-meta-activitypub-test-mastodon">Threads started to test ActivityPub integration</a> this week and the fediverse is losing it's collective mind going into overdrive to block them in any way possible so they can't grab all your data. Here's the fun part: they can already do that and they definitely don't need ActivityPub to do that.</p>
<p>Take my profile for example: <a href="https://social.lol/@robb">https://social.lol/@robb</a>. It's all right there for downloading, scraping, or scribbling down in a &quot;<em>robb is very clever and handsome</em>&quot; notebook. The <a href="https://social.lol/public/local">local timeline for social.lol</a> is the same. Ready to be gobbled up into whatever data center Meta want to put it in. This doesn't even take into account that <em>Mastodon has an API that anyone can use</em>. Hell, they could follow the local timeline on Mastodon.social and probably get 90% of the data they want anyway, assuming they want any of it to begin with. Or create an account on a few hundred instances and get the data that way. But they won't because that's not why they're doing this.</p>
<p>They are doing this because they have to. The EU is breathing down all the big tech companies neck's to be more open and interoperable.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> They only launched in the EU yesterday and I'd bet my left bollock it took so long because they were doing sneaky shit with tracking that the EU would have fined them for immediately. The EU didn't make Threads illegal like certain tech pundits claimed, Meta were just doing illegal things. Just a little crime, as a treat.</p>
<p><a href="https://fedipact.veganism.social/">Some instances</a> have already blocked Threads completely meaning their users have no way of intereacting with accounts on Threads. Purely on the basis that it's Meta with no evidence that they're doing anything nefarious or dangerous. Congratulations, you've made your instance worse for your users. By all means, wait and see if federating with Threads <em>becomes</em> a problem, but doing it just becuase &quot;meta bad&quot; is ridiculous.</p>
<p><a href="https://mastodon.blaede.family/@cassidy/111576987371347535">Cassidy James</a>:</p>
<blockquote>
<p>...defederating from Threads is like an upstart email service blocking their users from being able to email Gmail users because they don’t like Google. That might seem fine on principle, but in reality it just siloes people from their friends — and makes joining the other service more attractive.</p>
</blockquote>
<p>What's to be gained from stopping your instance's users following their friends and family who have chosen to use Threads, other than making them switch to another instance? As Cassidy <a href="https://mastodon.blaede.family/@cassidy/111580679497344885">also points out</a> an individual user can block an instance themselves which is the great thing about Mastodon: users have a choice to block or not block whatever they want.</p>
<p>I'm also aware that users also have a choice to move instances and to some extent I agree that if you don't like how your instance is run, you should move to another one.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn2" id="fnref2">[2]</a></sup> But how about instead everyone chills out for a minute, maybe give Meta a chance to <em>actual federate real accounts people want to follow</em>, and <em>then</em> decide if they should be blocked or not. How about we don't force hundreds of people to new instances (or worse, Threads) just so they can see the latest minion meme their mum posted.</p>
<p>Yes, it's Meta and they suck and I hate them. But they don't need ActivityPub to grab your data and blocking them for no good reason is just making the Fediverse, and the open web, worse for everyone.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Stupid unelected elite in Brussels trying to make life better for it's citizens, how dare they. Brexit means Brexit. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>&quot;Tough shit, move instances&quot; is something I have said on a few occasions when discussing disagreeing with instance admin decisions. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-15T10:30:49.461+00:00</pubDate>
</item>
<item>
<title>Subscriptions</title>
<link>https://rknight.me/subscriptions/</link>
<guid>https://rknight.me/subscriptions/</guid>
<content:encoded><![CDATA[
<div> Apple TV+, Disney+, Amazon Prime, Netflix, subscriptions

苹果电视+, 迪士尼+, 亚马逊Prime, Netflix, 订阅

要点1: 作者的订阅状态包括流媒体、会员和应用与服务。
要点2: 作者每月支付63.92英镑用于流媒体，其中包括Netflix、Disney+、Amazon Prime和苹果电视+、苹果音乐。
要点3: 作者每月支付12英镑用于会员费用，其中包括对不同内容的访问权利和优惠。
要点4: 作者每月支付25.33英镑用于各种应用和服务，包括网络主机、分析工具和文件托管。
要点5: 总体而言，作者每月支付101.25英镑用于各种订阅，但认为这样的费用是合理的，因为他对这些服务都有需求。 <div>
<p>Inspired by <a href="https://mb.esamecar.net/2023/12/13/state-of-app.html">Marco</a> and <a href="https://kevquirk.com/on-subscriptions">Kev</a>, here is the current state of my subscriptions. Any prices that were in dollars I've converted to GBP. Anything I pay for yearly I've divided by 12 and marked them as such.</p>
<h3>Miscellanea</h3>
<p>I pay for <a href="https://www.apple.com/uk/apple-one/">Apple One Premier</a> at £36.95 per month which includes Apple TV+, iCloud Storage, and Apple Music for me and my wife but I'll include it in the streaming section for the sake of clarity.</p>
<p>I have a 1Password Family account but I get this for free through my job.</p>
<h3>Streaming</h3>
<ul>
<li>Netflix (£7.99 / month). We cheap out on this because it's mostly for my wife to watch old crime documenataries and the quality doesn't really matter</li>
<li>Disney+ (£10.99 / month). We don't actually pay for this, instead we use out Tesco Clubcard vouchers every three months instead.</li>
<li>Amazon Prime (£7.99 / month (paid yearly)). We don't so much pay for this as we just get it included because we want quick delivery.</li>
<li>Apple TV+, Apple Music (£36.95 / month).</li>
<li><strong>Total:</strong> £63.92 / month</li>
</ul>
<h3>Memberships</h3>
<ul>
<li><a href="https://rknight.me/getconnectedpro.co">Connected Pro/Relay FM</a> (£4 / month). Ad-free episodes with extra content for connected, bonus episodes and access to the Relay Discord.</li>
<li><a href="https://oneprimeplus.com/">Hemispheric Views One Prime Plus</a> (£4 / month). Bonus episodes, a newsletter, access to a members-only Discord channel, plus some dandy stickers. I <em>just</em> bumped this from $2 to $5 because I'm not convinced much of my $2 is actually reaching them once you account for fees and whatnot.</li>
<li><a href="https://www.11ty.dev">Eleventy</a> (£4 / month). I build so many of my sites with Eleventy, it's a no-brainer.</li>
<li><strong>Total:</strong> £12 / month</li>
</ul>
<h3>Apps and Services</h3>
<ul>
<li><a href="https://home.omg.lol/referred-by/robb">omg.lol</a> (£1.33 / month (paid annually)). My main use is the <a href="https://social.lol">Mastodon instance</a> but it has loads of stuff. Read <a href="https://blakewatson.com/journal/omg-lol-an-oasis-on-the-internet/">Blake's post</a> for a better overview than I could ever write.</li>
<li><a href="https://www.digitalocean.com/?refcode=8e1d8283bd20">Digital Ocean</a> (£12 / month). Hosting for this website and all my <a href="https://rknight.me/projects">side projects</a>.</li>
<li><a href="https://usefathom.com/ref/IXCLSF">Fathom Analytics</a> (£11 / month). Analytics I use for my sites. Worth noting here I get ~$7/$5 back each month thanks to referrals so the actual price paid here is ~£6.</li>
<li><a href="https://bunny.net/?ref=b2i4y24apu">BunnyCDN</a> (£1 / month). Currently only using this to host the files for <a href="https://wegot.family/">We Got Family</a>.</li>
<li><a href="https://tapbots.com/ivory/">Ivory</a> (£2 / month (paid yearly)). The best Mastodon client on the Mac and iOS.</li>
<li><strong>Total:</strong> £25.33 / month</li>
</ul>
<h3>Grand Total</h3>
<p>£101.25 isn't too bad considering everything I'm getting for that. Not sure what conclusion to draw from this, nothing here I really need to cut. Maybe if it goes much higher I'll think about it some more.</p>
]]></content:encoded>
<pubDate>2023-12-13T17:35:24.401+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Nine</title>
<link>https://rknight.me/advent-of-code-2023-day-nine/</link>
<guid>https://rknight.me/advent-of-code-2023-day-nine/</guid>
<content:encoded><![CDATA[
<div> 算法, 数列, 循环, 计算, 负数
总结: 该文章主要讨论了一种输入数列，根据规则计算下一个或上一个数列的值的算法。文章首先介绍了如何根据给定的规则计算下一个数列的值，并给出了相应的代码实现。然后，作者指出了在处理负数时的一个假设错误，并提出了修改。在第二部分中，作者介绍了如何修改代码来计算上一个数列的值，并给出了相应的代码实现。整篇文章内容清晰，逻辑清晰，易于理解。 <div>
<h3>Part One</h3>
<p>Given this an input like this, find the next number in the sequence. See the <a href="https://adventofcode.com/2023/day/9">advent of code instructions</a> for more details, but we need to go from this:</p>
<pre class="language-text"><code class="language-text">0 3 6 9 12 15</code></pre>
<p>To the following, to get the final value for that row of <code>18</code>. To do this we take the first two numbers and get the difference between them. That becomes our first number on the second row. Continue this until the final row is all zeros. Then take the last digit all of the rows and sum them to get <code>18</code> (0 + 3 + 15).</p>
<pre class="language-text"><code class="language-text">0   3   6   9  12  15 -> 18<br />  3   3   3   3   3 -> 3<br />    0   0   0   0 -> 0</code></pre>
<p>I interated over each line, used a while loop to check if the sum of the new row is more than zero, and continue adding rows until the new row's sum is zero (this assumption becomes important in a minute). Then grab all the final numbers and sum them for our row value, then sum all the lines to get the answer.</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$lines</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$allNumbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$currentIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$finalNumbers</span> <span class="token operator">=</span> <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token variable">$allNumbers</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token variable">$finalNumbers</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$currentRow</span> <span class="token operator">=</span> <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token variable">$currentIndex</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$new</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$currentRow</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$currentRow</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$new</span><span class="token punctuation">;</span><br />                <span class="token variable">$finalNumbers</span> <span class="token operator">=</span> <span class="token variable">$allNumbers</span><span class="token punctuation">[</span><span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token variable">$allNumbers</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />                <span class="token keyword">continue</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />            <span class="token variable">$new</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$currentRow</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token variable">$number</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />        <span class="token variable">$currentIndex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$finalValue</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$allNumbers</span> <span class="token keyword">as</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$finalValue</span> <span class="token operator">+=</span> <span class="token variable">$numbers</span><span class="token punctuation">[</span><span class="token function">array_key_last</span><span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$finalValue</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string double-quoted-string">"Total: <span class="token interpolation"><span class="token variable">$total</span></span>"</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>This worked perfectly on the sample input but like other days the real input had a gotcha. As I noted above, I made the assumption that if the sum of a row was more than zero we should carry on but this doesn't account for negative numbers. What I <em>should</em> have done was check if the sum was not <em>exactly zero</em>:</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> while (array_sum($finalNumbers) !== 0) {<br /></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> while (array_sum($finalNumbers) > 0) {</span></span></code></pre>
<p>That was part one done.</p>
<h3>Part Two</h3>
<p>Instead of calculating the <em>next</em> number we need to do the <em>previous</em> number from each sequence. All of my previous code for getting all the rows is the same, I just need to update my total calculator to generate the previous number for each row and get the previous number for the original sequence:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $finalValue = 0;<br /></span></span><br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> foreach ($allNumbers as $numbers) {<br /></span><span class="token prefix deleted">-</span><span class="token line">    $finalValue += $numbers[array_key_last($numbers)];<br /></span><span class="token prefix deleted">-</span><span class="token line"> }<br /></span></span><br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $total += $finalValue;</span></span></code></pre>
<pre class="language-php"><code class="language-php"><span class="token variable">$next</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">array_reverse</span><span class="token punctuation">(</span><span class="token variable">$allNumbers</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$numbers</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$index</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token comment">// skip the first row it's always zeros</span><br />        <span class="token keyword">continue</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$first</span> <span class="token operator">=</span> <span class="token variable">$numbers</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$next</span> <span class="token operator">=</span> <span class="token variable">$first</span> <span class="token operator">-</span> <span class="token variable">$next</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$next</span><span class="token punctuation">;</span></code></pre>
<p>This was a nice one. Nothing too hard to understand from the instructions and totally doable without knowing a magic maths solution.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-09T13:10:04.340+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Eight</title>
<link>https://rknight.me/advent-of-code-2023-day-eight/</link>
<guid>https://rknight.me/advent-of-code-2023-day-eight/</guid>
<content:encoded><![CDATA[
<div> 数组操作, PHP, 网络, 算法, 解决方案
解决了一个包含节点和指令的网络问题，通过字符串操作和逻辑处理，完成了两部分的挑战。第一部分是找到指定节点的步数，经过多次调试解决了遇到无限循环的问题。第二部分是要找出所有以A结尾的节点到Z的最小步数的最小公倍数，通过了解并使用最小公倍数这个数学概念解决了问题。最终得到了符合要求的解决方案。 <div>
<p>We've navigating a network today for...reasons.</p>
<h3>Part One</h3>
<p>The sample input looks like so:</p>
<pre class="language-text"><code class="language-text">RL<br /><br />AAA = (BBB, CCC)<br />BBB = (DDD, EEE)<br />CCC = (ZZZ, GGG)<br />DDD = (DDD, DDD)<br />EEE = (EEE, EEE)<br />GGG = (GGG, GGG)<br />ZZZ = (ZZZ, ZZZ)</code></pre>
<p>The first line is a list of instructions (left or right) and the rest is the nodes with their left and right defined. So if we go right from <code>AAA</code>, we move to <code>CCC</code>, then left from there takes us to <code>ZZZ</code>. The puzzle is to count how many steps it takes to get to <code>ZZZ</code>.</p>
<p>I did a bunch of string replacement and exploding to get the output in a format I wanted:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$instructions</span> <span class="token operator">=</span> <span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$elements</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$input</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$data</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' = '</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$elementKey</span> <span class="token operator">=</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token punctuation">[</span><span class="token variable">$L</span><span class="token punctuation">,</span> <span class="token variable">$R</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">', '</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">')'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'('</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$elements</span><span class="token punctuation">[</span><span class="token variable">$elementKey</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'L'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'R'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// [</span><br /><span class="token comment">//    'AAA' => [ 'L' => 'BBB', 'R' => 'CCC' ],</span><br /><span class="token comment">//    'BBB' => [ 'L' => 'DDD', 'R' => 'EEE' ],</span><br /><span class="token comment">//    ...</span><br /><span class="token comment">// ]</span></code></pre>
<p>One other part of this is that you may not get to <code>ZZZ</code> with the set of instructions. So if you hit the end, go back to the start of the instructions. I set the starting values and counters then while <code>found</code> is false, I incremenent the instruction index until we hit <code>ZZZ</code>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$element</span> <span class="token operator">=</span> <span class="token function">array_key_first</span><span class="token punctuation">(</span><span class="token variable">$elements</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$found</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><br /><span class="token variable">$instructionIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><span class="token variable">$steps</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$found</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token comment">// if we're at the end of the instructions, go back to the start</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$instructionIndex</span> <span class="token operator">===</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$instructions</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$instructionIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$instruction</span> <span class="token operator">=</span> <span class="token variable">$instructions</span><span class="token punctuation">[</span><span class="token variable">$instructionIndex</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$element</span> <span class="token operator">=</span> <span class="token variable">$elements</span><span class="token punctuation">[</span><span class="token variable">$element</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$instruction</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$element</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'ZZZ'</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token variable">$found</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$instructionIndex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token variable">$steps</span><span class="token operator">++</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'It takes '</span> <span class="token operator">.</span> <span class="token variable">$steps</span> <span class="token operator">.</span> <span class="token string single-quoted-string">' steps to reach ZZZ'</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>I ran it on the real input and I got stuck in an infinite loop. Initially I didn't read the instructions properly so I was starting at whatever the first node was; in the samples, this is always <code>AAA</code> but in the real input, it <em>isn't</em>. I stepped back and re-read what I was supposed to be doing and fixed this:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $element = array_key_first($elements);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $element = 'AAA';</span></span></code></pre>
<p>Re-ran it and it worked perfectly.</p>
<h3>Part Two</h3>
<p>For part two there some story about a ghost or whatever, but the crux of it is we need to follow multiple paths starting at all node that end with an <code>A</code>. We're only done when all the nodes for all paths end in a <code>Z</code>. I updated my formatting code to account for this:</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $startingElements = [];<br /></span></span>$elements = [];<br />foreach ($input as $value) {<br /><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   $data = explode(' = ', $value);<br /></span><span class="token prefix unchanged"> </span><span class="token line">   $elementKey = $data[0];<br /></span><span class="token prefix unchanged"> </span><span class="token line">   [$L, $R] = explode(', ', str_replace(')', '', str_replace('(', '', $data[1])));<br /></span><span class="token prefix unchanged"> </span><span class="token line">   $elements[$elementKey] = compact('L', 'R');<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    if (str_ends_with($elementKey, 'A')){<br /></span><span class="token prefix inserted">+</span><span class="token line">        $startingElements[] = $elementKey;<br /></span><span class="token prefix inserted">+</span><span class="token line">    }<br /></span></span>}</code></pre>
<p>For the new sample input gave me two starting points (the real input has five):</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$test</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'LR<br /><br />11A = (11B, XXX)<br />11B = (XXX, 11Z)<br />11Z = (11B, XXX)<br />22A = (22B, XXX)<br />22B = (22C, 22C)<br />22C = (22Z, 22Z)<br />22Z = (22B, 22B)<br />XXX = (XXX, XXX)'</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// ...</span><br /><br /><span class="token punctuation">[</span><br />    <span class="token number">0</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'11A'</span><span class="token punctuation">,</span><br />    <span class="token number">1</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'22A'</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span></code></pre>
<p>Next I updated my instruction loop to go through each starting point, get the next element for all of them, then check if they all the found elements end with a <code>Z</code>:</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$found</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$instructionIndex</span> <span class="token operator">===</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$instructions</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$instructionIndex</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$foundElements</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$instruction</span> <span class="token operator">=</span> <span class="token variable">$instructions</span><span class="token punctuation">[</span><span class="token variable">$instructionIndex</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$check</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$elementRange</span> <span class="token keyword">as</span> <span class="token variable">$er</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$el</span> <span class="token operator">=</span> <span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$nextElements</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token variable">$startingElements</span><span class="token punctuation">[</span><span class="token variable">$er</span><span class="token punctuation">]</span> <span class="token punctuation">:</span> <span class="token variable">$nextElements</span><span class="token punctuation">[</span><span class="token variable">$er</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$foundElements</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$elements</span><span class="token punctuation">[</span><span class="token variable">$el</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$instruction</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$allEndWithZ</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token variable">$foundElements</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$fe</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> <span class="token function">str_ends_with</span><span class="token punctuation">(</span><span class="token variable">$fe</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'Z'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token variable">$elementCount</span><span class="token punctuation">;</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$allEndWithZ</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$found</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$nextElements</span> <span class="token operator">=</span> <span class="token variable">$foundElements</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$instructionIndex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token variable">$steps</span><span class="token operator">++</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>I ran it on the sample, no problem. Ran it on the real input and it just kept going. For a long time. I ran it for 45 minutes and it was still going. I spoke to <a href="https://zoeaubert.me">Zoe</a>, who had already finished part two, and the correct answer is 14 digits. Based on her maths, this method would take somewhere in the region of 500 hours. I knew there had to be some kind of number...things I could do to work out the answer but it was beyond me at this point.</p>
<h3>Part Two Redux</h3>
<p>After <a href="https://social.lol/@robb/111545115167242100">making a joke</a> about wanting a supercomputer on Mastodon, <a href="https://fosstodon.org/@chrishannah/111545160939769663">Chris asked</a> if I wanted a clue he'd seen on the subreddit. I had no idea how to solve this so yes, yes I did. The clue:</p>
<blockquote>
<p>Lowest Common Multiple</p>
</blockquote>
<p><em>Of course</em> the solution was a maths concept I'd heard of but never had a need to use (or I did and I just wasn't listening at school). &quot;<em>The smallest positive integer that is divisible by both a and b</em>&quot;. As always, PHP has a function for this: <a href="https://www.php.net/manual/en/function.gmp-lcm.php"><code>git_lcm</code></a> but this only works for two numbers. I made a new file (<code>2v2.php</code>), extracted my path-to-Z logic into a function, collected the steps for each path, and calculated the lowest common multiple.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$allSteps</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$startingElements</span> <span class="token keyword">as</span> <span class="token variable">$element</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token variable">$steps</span> <span class="token operator">=</span> <span class="token function">stepsToZ</span><span class="token punctuation">(</span><span class="token variable">$instructions</span><span class="token punctuation">,</span> <span class="token variable">$elements</span><span class="token punctuation">,</span> <span class="token variable">$element</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$allSteps</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">gmp_init</span><span class="token punctuation">(</span><span class="token variable">$steps</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// numbers passed to `gmp_lcm` need to be converted to GMP</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token variable">$allSteps</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$allSteps</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$step</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$index</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span><br />    <span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">gmp_init</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token function">gmp_lcm</span><span class="token punctuation">(</span><span class="token variable">$result</span><span class="token punctuation">,</span> <span class="token variable">$step</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token keyword type-casting">string</span><span class="token punctuation">)</span> <span class="token variable">$result</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>I'm still not clear on <em>why</em> this gets the answer beyond <em>maths</em> but whatever, it's done. Onwards to day nine.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/08">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-08T15:05:58.956+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Seven</title>
<link>https://rknight.me/advent-of-code-2023-day-seven/</link>
<guid>https://rknight.me/advent-of-code-2023-day-seven/</guid>
<content:encoded><![CDATA[
<div> 关键词: 扑克牌, 计算手牌等级, Joker, 完成解决方案, PHP

扑克牌, 计算手牌等级, J是Joker，根据Joker的位置提高手牌等级，使用PHP完成解决方案。

总结:<br /><br />本文介绍了如何使用PHP编写一个解决方案来处理扑克牌游戏中的手牌等级计算问题。文章首先介绍了如何根据手中的牌计算手牌的等级，然后讨论了在有Joker的情况下如何调整手牌等级。最后，作者分享了完成解决方案的过程，并解决了其中的一个小问题。整体来说，本文内容简单易懂，但又具有一定的挑战性。 <div>
<p>Time to play some matches of legally-distinct-from-poker-and-easy-to-play-on-a-camel<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> card game.</p>
<h3>Part One</h3>
<p>Each hand has five cards and a score:</p>
<pre class="language-bash"><code class="language-bash">32T3K <span class="token number">765</span><br />T55J5 <span class="token number">684</span><br />KK677 <span class="token number">28</span><br />KTJJT <span class="token number">220</span><br />QQQJA <span class="token number">483</span></code></pre>
<p>Each hand outranks others based on how many cards of each type it has, starting at five of a kind and ending with high card. Here's the array I was using to test out my hand rank calculator:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$scores</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'AAAAA'</span><span class="token punctuation">,</span> <span class="token comment">// five of a kind / rank 7</span><br />    <span class="token string single-quoted-string">'AA8AA'</span><span class="token punctuation">,</span> <span class="token comment">// four of a kind / rank 6</span><br />    <span class="token string single-quoted-string">'23332'</span><span class="token punctuation">,</span> <span class="token comment">// full house / rank 5</span><br />    <span class="token string single-quoted-string">'TTT98'</span><span class="token punctuation">,</span> <span class="token comment">// three of a kind / rank 4</span><br />    <span class="token string single-quoted-string">'23432'</span><span class="token punctuation">,</span> <span class="token comment">// two pair / rank 3</span><br />    <span class="token string single-quoted-string">'A23A4'</span><span class="token punctuation">,</span> <span class="token comment">// one pair / rank 2</span><br />    <span class="token string single-quoted-string">'23456'</span> <span class="token comment">// high card / rank 1</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>All the hands need to be ordered by their rank and in the result of a tie, compare the hands's first value and if those are the same the second value, and so on. Some values are letters rather than numbers, and ace is high:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$highValues</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'A'</span> <span class="token operator">=></span> <span class="token number">14</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'K'</span> <span class="token operator">=></span> <span class="token number">13</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Q'</span> <span class="token operator">=></span> <span class="token number">12</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'J'</span> <span class="token operator">=></span> <span class="token number">11</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'T'</span> <span class="token operator">=></span> <span class="token number">10</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Once they've all been ranked, multiply that rank by the score and add them together to get the answer. The lowest rank is 1 and upwards to however many hands we have.</p>
<p>Like <a href="https://rknight.me/blog/tags/adventofcode/">previous days</a> PHP has some handy functions to make this easier. <a href="https://www.php.net/manual/en/function.count-chars.php"><code>count_chars</code></a> &quot;counts the number of occurrences of every byte-value in a string&quot;. <a href="https://www.php.net/manual/en/function.chr.php"><code>chr</code></a> then converts that back to the number or letter:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$count</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'12344'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// output</span><br /><span class="token punctuation">[</span><br />	<span class="token number">49</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />	<span class="token number">50</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />	<span class="token number">51</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />	<span class="token number">52</span> <span class="token operator">=></span> <span class="token number">2</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><br /><br /><span class="token function">chr</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// 4</span></code></pre>
<p>Once I had my counts for each hands, I make this <code>calculateHandRank</code> function to return a rank between one and seven depending on the hand. Based on how many elements the array has (and the product in some cases) I can work out the rank easily. <a href="https://lewisdale.dev/post/advent-of-code-2023-day-seven/">Lewis has a more elegant solution</a> thay works when the counts are ordered but the result is the ultimately the same:</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">function</span> <span class="token function-definition function">calculateHandRank</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$count</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">switch</span><span class="token punctuation">(</span><span class="token variable">$count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">4</span> <span class="token operator">?</span> <span class="token number">6</span> <span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">;</span><br />        <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token function">array_values</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token number">3</span> <span class="token operator">?</span> <span class="token number">4</span> <span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">;</span><br />        <span class="token keyword">case</span> <span class="token number">4</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><br />        <span class="token keyword">case</span> <span class="token number">5</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><br />        <span class="token keyword">default</span><span class="token punctuation">:</span><br />            <span class="token keyword">return</span> <span class="token number">7</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>
<p>Part of ranking the hands is the tie-breaker I mentioned above, based on each card compared to the other hand. So if we had two hands that were both five of a kind, the first one would win because A (ace) is higher than Q (queen):</p>
<pre class="language-bash"><code class="language-bash"><span class="token string">'AAAAA'</span><br /><span class="token string">'QQQQQ'</span></code></pre>
<p>Here it us all together to get the answer for part one:</p>
<pre class="language-php"><code class="language-php"><span class="token comment">// extract the hands and scores, caclulate the hand types</span><br /><span class="token variable">$formatted</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token variable">$score</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$score</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$score</span><span class="token punctuation">;</span><br />    <span class="token variable">$counts</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$cards</span> <span class="token operator">=</span> <span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$handType</span> <span class="token operator">=</span> <span class="token function">calculateHandRank</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'score'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'handType'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// sort the hands by type, compare the card values in the event of a tie break</span><br /><span class="token function">usort</span><span class="token punctuation">(</span><span class="token variable">$formatted</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">,</span> <span class="token variable">$b</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$highValues</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$aCard</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token variable">$aCard</span> <span class="token operator">=</span> <span class="token variable">$highValues</span><span class="token punctuation">[</span><span class="token variable">$aCard</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$aCard</span><span class="token punctuation">;</span><br />            <span class="token variable">$bCard</span> <span class="token operator">=</span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />            <span class="token variable">$bCard</span> <span class="token operator">=</span> <span class="token variable">$highValues</span><span class="token punctuation">[</span><span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$aCard</span> <span class="token operator">===</span> <span class="token variable">$bCard</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token keyword">continue</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br /><br />            <span class="token keyword">return</span> <span class="token variable">$aCard</span> <span class="token operator">></span> <span class="token variable">$bCard</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br />    <span class="token keyword">return</span> <span class="token variable">$a</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span> <span class="token operator">></span> <span class="token variable">$b</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'handType'</span><span class="token punctuation">]</span> <span class="token operator">?</span> <span class="token number">1</span> <span class="token punctuation">:</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// calculate the overall score </span><br /><span class="token variable">$score</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$formatted</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$score</span> <span class="token operator">+=</span> <span class="token variable">$line</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'score'</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$index</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token variable">$score</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<h3>Part Two</h3>
<p>Part two introduced a fun twist. <code>J</code> is now a joker instead of the jack/11. In the event of a tie break, the joker is worth 1 but if it exists in a hand the it goes towards whichever grouping would increase the hands type. For example, this three of a kind hand becomes four of a kind:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$before</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'AAA5J'</span><span class="token punctuation">;</span> <span class="token comment">// three of a kind</span><br /><span class="token variable">$after</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'AAA5A'</span><span class="token punctuation">;</span> <span class="token comment">// four of a kind</span></code></pre>
<p>I updated my formatting code to account for, using <code>count_chars</code> to find which value the joker should become:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$formatted</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token keyword">use</span> <span class="token punctuation">(</span><span class="token variable">$highValues</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token variable">$score</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$score</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$score</span><span class="token punctuation">;</span><br />    <span class="token variable">$counts</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'J'</span><span class="token punctuation">)</span> <span class="token operator">!==</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token comment">// get the highest grouping character</span><br />        <span class="token variable">$highest</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />        <span class="token variable">$character</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><br />        <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$counts</span> <span class="token keyword">as</span> <span class="token variable">$char</span> <span class="token operator">=></span> <span class="token variable">$count</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$char</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token string single-quoted-string">'J'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token keyword">continue</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />            <span class="token variable">$fChar</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token punctuation">(</span><span class="token variable">$highValues</span><span class="token punctuation">[</span><span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$char</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$char</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">===</span> <span class="token variable">$highest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token comment">// compare the numbers/cards instead of the count</span><br />                <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$fChar</span> <span class="token operator">&lt;</span> <span class="token variable">$character</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                    <span class="token keyword">continue</span><span class="token punctuation">;</span><br />                <span class="token punctuation">}</span><br />                <span class="token variable">$highest</span> <span class="token operator">=</span> <span class="token variable">$count</span><span class="token punctuation">;</span><br />                <span class="token variable">$character</span> <span class="token operator">=</span> <span class="token variable">$fChar</span><span class="token punctuation">;</span><br />                <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$char</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$count</span> <span class="token operator">></span> <span class="token variable">$highest</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token variable">$highest</span> <span class="token operator">=</span> <span class="token variable">$count</span><span class="token punctuation">;</span><br />                <span class="token variable">$character</span> <span class="token operator">=</span> <span class="token variable">$fChar</span><span class="token punctuation">;</span><br />                <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$char</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span><br />        <span class="token variable">$newCards</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'J'</span><span class="token punctuation">,</span> <span class="token function">chr</span><span class="token punctuation">(</span><span class="token variable">$index</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$cards</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$counts</span> <span class="token operator">=</span> <span class="token function">count_chars</span><span class="token punctuation">(</span><span class="token variable">$newCards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$cards</span> <span class="token operator">=</span> <span class="token function">str_split</span><span class="token punctuation">(</span><span class="token variable">$cards</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$handType</span> <span class="token operator">=</span> <span class="token function">calculateHandRank</span><span class="token punctuation">(</span><span class="token variable">$counts</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token function">compact</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'cards'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'score'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'handType'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>Finally, I swapped the <code>J</code> value for 1:</p>
<pre class="language-diff"><code class="language-diff">$highValues = [<br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line">    'J' => 11,<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">    'J' => 1,<br /></span></span>];</code></pre>
<p>I ran the code and got a warning:</p>
<pre class="language-txt"><code class="language-txt">chr(): Passing null to parameter #1 ($codepoint) of type int is deprecated</code></pre>
<p>One of the edge cases (maybe the only one?) was a hand that was five of a kind of all <code>J</code> cards. I hadn't accounted for this in my new code for locating the joker replacement; I was skipping every card that was a <code>J</code> so it never the replacement index would be `null``. One more quick change and I had part two finished.</p>
<pre class="language-diff"><code class="language-diff"><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $replace = $index ? chr($index) : 'A';<br /></span></span><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $newCards = str_replace('J', $chr($index), $cards);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $newCards = str_replace('J', $replace, $cards);</span></span></code></pre>
<p>This was a nice one today. Easy to understand but complicated enough to be a challenge.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/07">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Told you the story was bonkers <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-07T15:45:19.743+00:00</pubDate>
</item>
<item>
<title>Smart Speed Broke My Brain</title>
<link>https://rknight.me/smart-speed-broke-my-brain/</link>
<guid>https://rknight.me/smart-speed-broke-my-brain/</guid>
<content:encoded><![CDATA[
<div> smart speed, trim silence, podcasts, relaxation, Overcast
总结:<br />文章讨论了使用smart speed（或trim silence）功能来加速播客的影响。作者承认自己长期使用这种功能后，关掉它后感到放松和情绪稳定。作者认为此举使自己变得精神紧张，以及对节目制作者的不尊重。最后，作者建议尝试不使用这些功能来体验播客，从而更好地欣赏节目。 <div>
<p>According to <a href="https://overcast.fm/">Overcast</a>'s stats I've saved 424 hours with smart speed. Smart speed, or &quot;trim silence&quot; as other apps call it, is a feature that will remove silences from podcasts and at launch was Overcast’s primary selling point. After the best part of a decade I was convinced <a href="https://gkeenan.co/avgb/hot-take-its-okay-if-we-dont-consume-all-of-the-worlds-information-before-we-die">by Keenan</a> (if you can, listen to the audio version of the post, it's wonderful) to turn it off and I’m so glad I did.</p>
<p>It’s a common joke in the <a href="https://www.relay.fm/membership">Relay FM Discord</a> about how those of us who use smart speed (or just the speed controls) think the hosts sound drunk or like they’re slurring when we hear the “normal” version of podcasts; we’re so used to listening to them sped up with no gaps between each side of the conversation like some kind of Aaron Sorkin movie.</p>
<blockquote>
<p>How do you distinguish yourself in a population of people who all got 1600 on their SAT’s?</p>
</blockquote>
<blockquote>
<p>I didn’t know they take SAT’s in China.</p>
</blockquote>
<blockquote>
<p>They don’t. I wasn’t talking about China anymore, I was talking about me.</p>
</blockquote>
<p>I haven’t listened to a show at standard speed for years. Ater I turned off smart speed and listened to a show I realised how calm I felt compared to usual. It was relaxing. I had time to process what was being said without also trying to hear the next part of the conversation. I realised for the past decade I’ve been on high alert just to listen to a podcast, concentrating really hard to consume all the information. I was <em>stressed</em> from something that’s supposed to be enjoyable. I was accustomed to <em>readying myself</em> to listen to a show. Smart speed had broken my brain.</p>
<p>424 hours &quot;saved&quot; according to Overcast. Saved what though? 424 more hours to <em>consume content</em>. Lovely.</p>
<p>Back to Keenan:</p>
<blockquote>
<p>I truly believe that Trim Silence is an abomination that should be fully eradicated from existence, as it not only spits in the face of the people who take the time and effort to produce their shows, but also, more broadly, encourages a way of interfacing with art that can only be described as gluttonous</p>
</blockquote>
<p>I don't feel <em>that</em> strongly about it but I do feel stupid for doing this to myself for so long. I don’t think there’s some big conclusion to draw here but maybe, if you speed up your podcasts all the time<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup>, maybe try it without for a show or two to see if you like it.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Hi Cory 👋 <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-06T22:30:39.098+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Six</title>
<link>https://rknight.me/advent-of-code-2023-day-six/</link>
<guid>https://rknight.me/advent-of-code-2023-day-six/</guid>
<content:encoded><![CDATA[
<div> 提取关键词：比赛、时间、距离、计算、效率
总结：<br /><br />本文讲述了一场船赛比赛的故事，通过编写代码来计算赛程和距离之间的关系，以及优化计算效率的过程。<br />对输入进行提取和处理，并进行逐一比较，得出比赛结果。<br />针对单一大比赛情况，通过调整计算方法和避免内存占用过多来提高运行效率。<br />总结：通过编写代码与优化算法，有效解决了船赛比赛计算问题，提高了计算效率。 <div>
<p>It's boat racing time. For each millisecond you hold the boat down, it's speed will increase by one millimeter per second. Just like the bus in Speed, the boat never slows down.</p>
<h3>Part One</h3>
<p>The input format:</p>
<pre class="language-bash"><code class="language-bash">Time:      <span class="token number">7</span>  <span class="token number">15</span>   <span class="token number">30</span><br />Distance:  <span class="token number">9</span>  <span class="token number">40</span>  <span class="token number">200</span></code></pre>
<p>Each column is a race which contains the race time and a distance the boat needs to travel to win. So in race one, the boat can travel the required distance (9) by holding down the boat for two, three, four, and five milliseconds. Here is some mathematics:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$time</span> <span class="token operator">=</span> <span class="token number">7</span><span class="token punctuation">;</span><br /><span class="token variable">$distance</span> <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span><br /><span class="token variable">$testSeconds</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span><br /><span class="token variable">$newDistance</span> <span class="token operator">=</span> <span class="token variable">$testSeconds</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$time</span> <span class="token operator">-</span> <span class="token variable">$current</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$canWin</span> <span class="token operator">=</span> <span class="token variable">$newDistance</span> <span class="token operator">></span> <span class="token variable">$distance</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// $canWin = true</span></code></pre>
<p>For each of the races I generated a range of numbers to test based on the time, then checked if those could win based on the distance for that race.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$extract</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token function">array_values</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">;</span><br /><br /><span class="token punctuation">[</span><span class="token variable">$times</span><span class="token punctuation">,</span> <span class="token variable">$distances</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$times</span> <span class="token operator">=</span> <span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$times</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$distances</span> <span class="token operator">=</span> <span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$distances</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$wins</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$times</span> <span class="token keyword">as</span> <span class="token variable">$race</span> <span class="token operator">=></span> <span class="token variable">$time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$distance</span> <span class="token operator">=</span> <span class="token variable">$distances</span><span class="token punctuation">[</span><span class="token variable">$race</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$range</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token variable">$time</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$winCount</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$range</span> <span class="token keyword">as</span> <span class="token variable">$r</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token variable">$newDistance</span> <span class="token operator">=</span> <span class="token variable">$r</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$time</span> <span class="token operator">-</span> <span class="token variable">$r</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$canWin</span> <span class="token operator">=</span> <span class="token variable">$newDistance</span> <span class="token operator">></span> <span class="token variable">$distance</span><span class="token punctuation">;</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$canWin</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token variable">$winCount</span><span class="token operator">++</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$wins</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$winCount</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Total is '</span> <span class="token operator">.</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token variable">$wins</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>Got the correct total, part one done. Easy peasy.</p>
<h3>Part Two</h3>
<p>Apprently the kerning on the peice of paper the input was written on was not good and it's actually just one race and not multiple.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup> So now we have one large race:</p>
<pre><code>$time = 71530;
$distance = 940200;
</code></pre>
<p>I switched out my extractor to remove all the spaces and give me just two numbers (I put them in an array so I could avoid changing any of the other code):</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$extract</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">;</span><br /><br /><span class="token punctuation">[</span><span class="token variable">$times</span><span class="token punctuation">,</span> <span class="token variable">$distances</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$times</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$times</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$distances</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token variable">$extract</span><span class="token punctuation">(</span><span class="token variable">$distances</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Like <a href="https://rknight.me/advent-of-code-2023-day-five/">yesterday</a> when I also used <code>range</code> on some large numbers, I ran out of memory. I did throw memory at it and it worked but I knew an easy fix for this one so I changed the <code>range</code> logic to a <code>while</code> loop.</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$times</span> <span class="token keyword">as</span> <span class="token variable">$race</span> <span class="token operator">=></span> <span class="token variable">$time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$distance</span> <span class="token operator">=</span> <span class="token variable">$distances</span><span class="token punctuation">[</span><span class="token variable">$race</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$winCount</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><br />    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$current</span> <span class="token operator">&lt;</span> <span class="token variable">$time</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$newDistance</span> <span class="token operator">=</span> <span class="token variable">$current</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token variable">$time</span> <span class="token operator">-</span> <span class="token variable">$current</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$canWin</span> <span class="token operator">=</span> <span class="token variable">$newDistance</span> <span class="token operator">></span> <span class="token variable">$distance</span><span class="token punctuation">;</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$canWin</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token variable">$winCount</span><span class="token operator">++</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />        <span class="token variable">$current</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$wins</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$winCount</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Total is '</span> <span class="token operator">.</span> <span class="token function">array_product</span><span class="token punctuation">(</span><span class="token variable">$wins</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>And that was part two. I don't know how efficient <code>array_product</code> is and I could have just calculated the total as I went along instead of adding to an array instead.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/06">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>The &quot;story&quot; part of advent of code is really something. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-06T11:07:22.654+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Five</title>
<link>https://rknight.me/advent-of-code-2023-day-five/</link>
<guid>https://rknight.me/advent-of-code-2023-day-five/</guid>
<content:encoded><![CDATA[
<div> 关键词: 混乱, 解决方案, 代码, 内存问题, 总结

这篇文章描述了作者在解决一个令人困惑的谜题时经历的混乱过程。作者首先尝试了一个解决方案，但遇到了内存问题，之后意识到问题的本质，进行了代码重构，最终成功解决了谜题。总结: 作者经历了解决问题的混乱过程，通过不断尝试不同的解决方案和重构代码，最终成功解决了内存问题，完成了谜题的解答。 <div>
<p>The description for this puzzle was confusing. Like, <em>really</em> confusing. I had to read it at least five times before I even understood the question.</p>
<h3>Part One</h3>
<p>For this puzzle the sample input was as follows:</p>
<pre class="language-txt"><code class="language-txt">seeds: 79 14 55 13<br /><br />seed-to-soil map:<br />50 98 2<br />52 50 48<br /><br />soil-to-fertilizer map:<br />0 15 37<br />37 52 2<br />39 0 15<br /><br />fertilizer-to-water map:<br />49 53 8<br />0 11 42<br />42 0 7<br />57 7 4<br /><br />water-to-light map:<br />88 18 7<br />18 25 70<br /><br />light-to-temperature map:<br />45 77 23<br />81 45 19<br />68 64 13<br /><br />temperature-to-humidity map:<br />0 69 1<br />1 0 69<br /><br />humidity-to-location map:<br />60 56 37<br />56 93 4</code></pre>
<p>Each line of a map is the destination start, the source start, and the range length. For example if we take the first line of the <code>seed-to-soil map</code>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'50 98 2'</span><span class="token punctuation">;</span><br /><br /><span class="token punctuation">[</span><span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <span class="token variable">$rangeLength</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$sourceRange</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><br />    <span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <br />    <span class="token variable">$sourceStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$destinationRange</span> <span class="token operator">=</span> <span class="token function">range</span><span class="token punctuation">(</span><br />    <span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <br />    <span class="token variable">$destinationStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$mapped</span> <span class="token operator">=</span> <span class="token function">array_combine</span><span class="token punctuation">(</span><span class="token variable">$sourceRange</span><span class="token punctuation">,</span> <span class="token variable">$destinationRange</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$mapped</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token number">98</span> <span class="token operator">=></span> <span class="token number">50</span><span class="token punctuation">,</span><br />    <span class="token number">99</span> <span class="token operator">=></span> <span class="token number">51</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>This needs to be done for every map in the input. Then take the seed number for the first map, get the value (or the previous value if it's not in the range), and so on to the last location value. So in the above example if the seed number is <code>98</code> the value is <code>50</code>. Then take <code>50</code> and see if that exists in the <code>soil-to-fertilizer map</code>. If this makes no sense, have a look at the <a href="https://adventofcode.com/2023/day/5">advent of code page for today's puzzle</a>.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup></p>
<p>Below is my full &quot;solution&quot;. I'm looping through each line of each map, generating the ranges based on the numbers, and adding it to a <code>mapData</code> array. Notice I'm using <code>array_combine</code> to use the source values as the keys and the destination values as the new values. <code>array_replace</code> preserves keys unlike <code>array_merge</code> which resets keys, which in this case are important.</p>
<pre class="language-php"><code class="language-php"><br /><span class="token variable">$rawData</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$seeds</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'seeds: '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$rawData</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$rawData</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$mapData</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$rawData</span> <span class="token keyword">as</span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$value</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$mapName</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' map:'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">unset</span><span class="token punctuation">(</span><span class="token variable">$lines</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$mapData</span><span class="token punctuation">[</span><span class="token variable">$mapName</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token variable">$lines</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token punctuation">[</span><span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <span class="token variable">$rangeLength</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />        <span class="token comment">// generate the ranges for the source and destination</span><br />        <span class="token variable">$mapData</span><span class="token punctuation">[</span><span class="token variable">$mapName</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">array_replace</span><span class="token punctuation">(</span><span class="token variable">$mapData</span><span class="token punctuation">[</span><span class="token variable">$mapName</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token function">array_combine</span><span class="token punctuation">(</span><br />            <span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$sourceStart</span><span class="token punctuation">,</span> <span class="token variable">$sourceStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />            <span class="token function">range</span><span class="token punctuation">(</span><span class="token variable">$destinationStart</span><span class="token punctuation">,</span> <span class="token variable">$destinationStart</span> <span class="token operator">+</span> <span class="token variable">$rangeLength</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$locations</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$seeds</span> <span class="token keyword">as</span> <span class="token variable">$seed</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token comment">// keep track of the current value, starting with the seed</span><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$seed</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$mapData</span> <span class="token keyword">as</span> <span class="token variable">$mapName</span> <span class="token operator">=></span> <span class="token variable">$map</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token comment">// if there isn't a value set, fallback to the current</span><br />        <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token variable">$current</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$current</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$locations</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$current</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Lowest location number is '</span> <span class="token operator">.</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$locations</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>This worked for the sample input which was nice given how long I spent trying to understand the puzzle to start with. Then I ran it on the real input and got this out of memory error:</p>
<pre class="language-bash"><code class="language-bash">Fatal error: Allowed memory size of <span class="token number">536870912</span> bytes exhausted</code></pre>
<p>I hadn't actually looked at the real input at this point. The real input has <em>huge</em> numbers compared to the sample input so the range generation was causing PHP to run out of memory. Which means I had to rethink my solution <em>or</em> throw a bunch of memory at it and hope for the best.</p>
<p><img alt="Button meme showing &quot;Make my code better&quot; on one side and &quot;give it ALL the memory I can&quot;" src="https://rknightuk.s3.amazonaws.com/site/advent-button-meme.png" /></p>
<p>So I ran it with 64GB of memory: <code>php -d memory_limit=64000M 1.php</code> and it worked! Or at least, it ran. It gave me an answer that was wrong. I had a better look at the numbers in the real input and called it a day.</p>
<p>Two hours later I had a moment of clarity and realised how to solve this without needing the <a href="https://en.wikipedia.org/wiki/Frontier_(supercomputer)">1.102 exaFLOPS of the Frontier supercomputer</a>. I also noticed a bit of testing code which sliced one of the arrays so even if I hadn't had the memory problems, I was never going to get the right answer. Whoops.</p>
<h3>Part One Redux</h3>
<p>Instead of generating the ranges for every number, I could work out the index of the seed by generating the start and end of each of the ranges:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $mapData[$mapName] = array_replace($mapData[$mapName], array_combine(<br /></span><span class="token prefix deleted">-</span><span class="token line">    range($sourceStart, $sourceStart + $rangeLength - 1),<br /></span><span class="token prefix deleted">-</span><span class="token line">    range($destinationStart, $destinationStart + $rangeLength - 1),<br /></span><span class="token prefix deleted">-</span><span class="token line"> ));<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $mapData[$mapName][] = [<br /></span><span class="token prefix inserted">+</span><span class="token line">    'sourceStart' => $sourceStart,<br /></span><span class="token prefix inserted">+</span><span class="token line">    'sourceEnd' => $sourceStart + $rangeLength - 1,<br /></span><span class="token prefix inserted">+</span><span class="token line">    'destinationStart' => $destinationStart,<br /></span><span class="token prefix inserted">+</span><span class="token line">    'destinationEnd' => $destinationStart + $rangeLength - 1,<br /></span><span class="token prefix inserted">+</span><span class="token line"> ];</span></span></code></pre>
<p>Then calculate the difference to make my index, then use that index on the next &quot;map&quot; to get the correct value:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$locations</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$seeds</span> <span class="token keyword">as</span> <span class="token variable">$seed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$seed</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$mapData</span> <span class="token keyword">as</span> <span class="token variable">$mapName</span> <span class="token operator">=></span> <span class="token variable">$mapArray</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$mapArray</span> <span class="token keyword">as</span> <span class="token variable">$map</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$current</span> <span class="token operator">>=</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sourceStart'</span><span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token variable">$current</span> <span class="token operator">&lt;=</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sourceEnd'</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />                <span class="token variable">$index</span> <span class="token operator">=</span> <span class="token variable">$current</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'sourceStart'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />                <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword type-casting">int</span><span class="token punctuation">)</span> <span class="token variable">$map</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'destinationStart'</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token variable">$index</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />            <span class="token punctuation">}</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br />    <span class="token variable">$locations</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$current</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Lowest location number is '</span> <span class="token operator">.</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$locations</span><span class="token punctuation">)</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>Part one done. And I didn't even need to give it extra memory to run.</p>
<h3>Part Two</h3>
<p>To paraphrase Marie Kondo:</p>
<blockquote>
<p>your feelings are the standard for decision making – specifically, knowing what sparks joy.  To determine this when writing code, the key is to pick up each bit of code one at a time, and ask yourself quietly, “Does this spark joy?”</p>
</blockquote>
<p>Just like 2015's Fantastic Four, there is no part two. Not today, satan.</p>
<p>My code is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/05">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>And probably be as confused as I was <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-05T11:40:26.302+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Four</title>
<link>https://rknight.me/advent-of-code-2023-day-four/</link>
<guid>https://rknight.me/advent-of-code-2023-day-four/</guid>
<content:encoded><![CDATA[
<div> 关键词：刮刮卡，PHP代码，寻找获胜卡片，复制卡片，解决方案
总结：<br /><br />本文讨论了使用PHP编写代码来处理刮刮卡游戏的情况。作者首先发现了刮刮卡上的获胜数字和持有数字之间的关系，并通过编写代码来计算总得分。作者的解决方案在处理样本输入时遇到了问题，但最终通过对数组进行过滤后获得了正确答案。<br />在第二部分中，作者进一步处理数据，根据获胜数字的数量，生成了多个复制卡片的倍数。通过循环并根据获胜数字的数量增加复制卡片的倍数，最终得出了解决方案。整个过程耗时约30分钟和15分钟。 <div>
<p>As soon as I saw this one this morning I knew it was going to at least be a bit easier than <a href="https://rknight.me/advent-of-code-2023-day-three">yesterday</a>.</p>
<h3>Part One</h3>
<p>The premise for today was scratchcards with two sets of numbers: winning numbers and numbers you have. The first half is winning numbers, the second is numbers you have.</p>
<pre class="language-php"><code class="language-php">Card <span class="token number">1</span><span class="token punctuation">:</span> <span class="token number">41</span> <span class="token number">48</span> <span class="token number">83</span> <span class="token number">86</span> <span class="token number">17</span> <span class="token operator">|</span> <span class="token number">83</span> <span class="token number">86</span>  <span class="token number">6</span> <span class="token number">31</span> <span class="token number">17</span>  <span class="token number">9</span> <span class="token number">48</span> <span class="token number">53</span></code></pre>
<p>From the Advent of Code page:</p>
<blockquote>
<p>Card 1 has five winning numbers (41, 48, 83, 86, and 17) and eight numbers you have (83, 86, 6, 31, 17, 9, 48, and 53). Of the numbers you have, four of them (48, 83, 17, and 86) are winning numbers!</p>
</blockquote>
<p>Seemed easy enough especially when using PHP's <a href="https://www.php.net/manual/en/function.array-intersect.php"><code>array_intersect</code></a> which returns &quot;<em>an array containing all the values of array that are present in all the arguments</em>&quot;. In this case, our winning numbers. For each winning number, the score doubles (starting with one for the first winning number). The goal was the find the total score of all the winning cards.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$total</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$lines</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token comment">// explode the string to get only the numbers</span><br />    <span class="token punctuation">[</span><span class="token variable">$card</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">': '</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token comment">// get the two strings of numbers</span><br />    <span class="token punctuation">[</span><span class="token variable">$winners</span><span class="token punctuation">,</span> <span class="token variable">$have</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token comment">// make them an array</span><br />    <span class="token variable">$winners</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$winners</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$have</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$have</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$winningNumbers</span> <span class="token operator">=</span> <span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token variable">$have</span><span class="token punctuation">,</span> <span class="token variable">$winners</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$currentTotal</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$winningNumbers</span> <span class="token keyword">as</span> <span class="token variable">$win</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$currentTotal</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token comment">// first number, so start at 1 for the score</span><br />            <span class="token variable">$currentTotal</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><br />            <span class="token keyword">continue</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br /><br />        <span class="token comment">// each additional winning number doubles the score</span><br />        <span class="token variable">$currentTotal</span> <span class="token operator">=</span> <span class="token variable">$currentTotal</span> <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">;</span><br /><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$currentTotal</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Current total '</span> <span class="token operator">.</span> <span class="token variable">$total</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>I was pretty confident in this solution but I did not get the correct answer using the sample input. I then noticed the inconsistent spaces in the string so my <code>array_intersect</code> was returning additional empty values. A quick <code>array_filter</code> later and I had the correct answer so I was onto part two.</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $winningNumbers = array_intersect($have, $winners);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> $winningNumbers = array_filter(array_intersect($have, $winners));</span></span></code></pre>
<h3>Part Two</h3>
<p>Part two is, as always, more complicated:</p>
<blockquote>
<p>Instead, scratchcards only cause you to win more scratchcards equal to the number of winning numbers you have</p>
<p>Card 1 has four matching numbers, so you win one copy each of the next four cards: cards 2, 3, 4, and 5</p>
</blockquote>
<p>Starting with part one's code, I did some processing of the data prior to looping over each scratchcard.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$lines</span> <span class="token operator">=</span> <span class="token function">array_map</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token variable">$l</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$_</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">': '</span><span class="token punctuation">,</span> <span class="token variable">$l</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token punctuation">[</span><span class="token variable">$winners</span><span class="token punctuation">,</span> <span class="token variable">$have</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'|'</span><span class="token punctuation">,</span> <span class="token variable">$data</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$winners</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$winners</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$have</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$have</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token punctuation">[</span><br />        <span class="token string single-quoted-string">'winners'</span> <span class="token operator">=></span> <span class="token variable">$winners</span><span class="token punctuation">,</span><br />        <span class="token string single-quoted-string">'have'</span> <span class="token operator">=></span> <span class="token variable">$have</span><span class="token punctuation">,</span><br />    <span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [['winners' => [4,5,6], 'have' => [1,2,3]], ...]</span><br /><br /><span class="token variable">$multipliers</span> <span class="token operator">=</span> <span class="token function">array_fill</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$lines</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [1 => 1, 2 => 2, 3 => 3, ...]</span></code></pre>
<p>I then looped over the scratchcards, identified the winning numbers, then for each number add to the <code>multipliers</code> for that card. For example, card one has four wininng numbers so it &quot;copies&quot; cards two, three, four, and five by setting it to <code>2</code>. When I hit card two in the loop, the added number would be <code>2</code> rather than one, because I have two copies of that card.</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$lines</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token variable">$cardId</span> <span class="token operator">=</span> <span class="token variable">$index</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><br />    <br />    <span class="token comment">// count the winning numbers</span><br />    <span class="token variable">$winCount</span> <span class="token operator">=</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token function">array_filter</span><span class="token punctuation">(</span><span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'have'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'winners'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <br />    <span class="token comment">// if there are none, we don't need to make any card copies</span><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$winCount</span> <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token keyword">continue</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token comment">// the card ID of the next card we need to copy</span><br />    <span class="token variable">$windex</span> <span class="token operator">=</span> <span class="token variable">$cardId</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><br /><br />    <span class="token comment">// for each winning number, add the the multipliers to "copy" that card</span><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token variable">$winCount</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$win</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$multipliers</span><span class="token punctuation">[</span><span class="token variable">$windex</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token variable">$multipliers</span><span class="token punctuation">[</span><span class="token variable">$cardId</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$windex</span><span class="token operator">++</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>All in all this took me about 30 minutes for part one, and about 15 minutes for part two - although I did think about part two for a few hours while I was working.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/04">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-04T13:07:52.766+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Three</title>
<link>https://rknight.me/advent-of-code-2023-day-three/</link>
<guid>https://rknight.me/advent-of-code-2023-day-three/</guid>
<content:encoded><![CDATA[
<div> 正则表达式，字符串解析，部件号码，解析引擎，修复。<br />
总结：<br />
文章讨论了使用正则表达式和字符串解析来识别引擎图谱中的部件号码的问题。作者首先解释了他们的方案，并解释了他们在解决方案中遇到的问题。最后，作者提到了他们对第一部分的解决方案，并表示对第二部分的不满。 <div>
<p>More regex and string parsing today. Sounds like a party.<sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup></p>
<h3>Part One</h3>
<p>Given an &quot;engine schematic&quot; like below, identify which numbers are part numbers. That is, they have a symbol (not a <code>.</code> though) either next to, above, or below them including diagonally.</p>
<pre class="language-txt"><code class="language-txt">467..114..<br />...*......<br />..35..633.</code></pre>
<p>In this example, <code>467</code> and <code>35</code> <em>are</em> part numbers, <code>114</code> and <code>633</code> are not.</p>
<p>My plan was a such: go through each line, identifying the part numbers and symbols, and then use <code>strpos</code> to work out if they are or are not part numbers. I also generated a range that I could use with <code>substr</code> to get the location of the number (plus an additional character each side) on the previous, current, and next lines. For example if my string was as below, the range starts at  <code>2</code> and ends at <code>5</code>.</p>
<pre class="language-php"><code class="language-php"><span class="token comment">//       0123456789</span><br /><span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'...56.....'</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// then use substr to get `.56.`</span><br /><span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>After some tinkering around I had a solution that worked. At least for the sample input.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$explodedInput</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$strippedInput</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$input</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$total</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$strippedInput</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token variable">$index</span> <span class="token operator">=></span> <span class="token variable">$line</span><span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d+/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\D/'</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$symbols</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$current</span> <span class="token operator">=</span> <span class="token variable">$explodedInput</span><span class="token punctuation">[</span><span class="token variable">$index</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><br />    <span class="token variable">$previous</span> <span class="token operator">=</span> <span class="token variable">$explodedInput</span><span class="token punctuation">[</span><span class="token variable">$index</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><br />    <span class="token variable">$next</span> <span class="token operator">=</span> <span class="token variable">$explodedInput</span><span class="token punctuation">[</span><span class="token variable">$index</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span><br /><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$numbers</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$position</span> <span class="token operator">=</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$number</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$range</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />            <span class="token variable">$position</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token variable">$position</span> <span class="token punctuation">:</span> <span class="token variable">$position</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">,</span><br />            <span class="token variable">$position</span> <span class="token operator">+</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$number</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token variable">$position</span> <span class="token operator">===</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token variable">$position</span> <span class="token punctuation">:</span> <span class="token variable">$position</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br />        <span class="token variable">$findInCurrent</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$current</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$findInPrevious</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$previous</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$findInNext</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$next</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token variable">$range</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9\.]/'</span><span class="token punctuation">,</span> <span class="token variable">$findInCurrent</span><span class="token punctuation">,</span> <span class="token variable">$sc</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9\.]/'</span><span class="token punctuation">,</span> <span class="token variable">$findInPrevious</span><span class="token punctuation">,</span> <span class="token variable">$sp</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/[^0-9\.]/'</span><span class="token punctuation">,</span> <span class="token variable">$findInNext</span><span class="token punctuation">,</span> <span class="token variable">$sn</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><br />            <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$sc</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">count</span><span class="token punctuation">(</span><span class="token variable">$sp</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span> <span class="token operator">||</span> <span class="token class-name">count</span><span class="token punctuation">(</span><span class="token variable">$sn</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">0</span><br />        <span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$number</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'Current total '</span> <span class="token operator">.</span> <span class="token variable">$total</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>When I ran this on the real data, my total was too high. Despite how it looks, the code is relatively straight forward so I knew there must be something tiny I was missing.</p>
<p>What I haven’t accounted for was numbers appearing more than once in a single line. I was using <code>strpos</code> which finds the first instance of a string so if the string was <code>654...6...</code> then when I tried to find that second <code>6</code> it would find the first one. It sounds obvious but on the first pass it just didn't occur to me.</p>
<p>Off the top of my head I didn't know how to fix this problem. Turns out <code>preg_match_replace</code> <a href="https://www.php.net/manual/en/function.preg-match-all.php">can take a fourth parameter</a> of <code>PREG_OFFSET_CAPTURE</code> to return the string offset of the found string:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$line</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'654...6...'</span><span class="token punctuation">;</span><br /><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d+/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$numbers</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [["654","6"]]</span><br /><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d+/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$numbersWithOffset</span><span class="token punctuation">,</span> <span class="token constant">PREG_OFFSET_CAPTURE</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// [[["654",0], ["6",6]]]</span></code></pre>
<p>Then instead of getting the position separately, I could grab it from the matches:</p>
<pre class="language-diff"><code class="language-diff"><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> foreach ($numbers[0] as $number)<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> foreach ($numbers[0] as $numberData)<br /></span></span>{<br /><span class="token deleted-sign deleted"><span class="token prefix deleted">-</span><span class="token line"> $position = strpos($line, $number);<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line"> [$number, $position] = $numberData;</span></span></code></pre>
<p>And just like that I had the correct answer to part one.</p>
<h3>Part Two</h3>
<p>Today's puzzle did not spark joy so I just didn't do part two. <a href="https://zoeaubert.me/blog/advent-of-code-2023-day-03/">Zoe</a> and <a href="https://lewisdale.dev/post/advent-of-code-2023-day-three/">Lewis</a> did if you want to see a completed solution. Here's hoping tomorrow is a bit less straining on my sleep-deprived brain.</p>
<p>My solution for part one is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/03">on GitHub</a>.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>It wasn't a party at all. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-03T11:50:39.013+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day Two</title>
<link>https://rknight.me/advent-of-code-2023-day-two/</link>
<guid>https://rknight.me/advent-of-code-2023-day-two/</guid>
<content:encoded><![CDATA[
<div> 关键词: PHP, 字符串解析, 游戏, 循环, 最大值计算

总结:<br /><br />文章描述了使用PHP解析字符串和处理游戏数据的过程，包括游戏ID和颜色及数量的提取，以及计算每种颜色的最大值并相乘。作者采用了字符串替换和分割的方法来解析输入数据，使用循环来检查每种颜色的数量是否符合规定，然后计算符合条件的游戏总数。在第二部分，作者使用了PHP的max函数来计算每种颜色的最大值，并通过循环将它们相乘得到最终结果。整篇文章通俗易懂，清晰地展示了作者的解题思路。 <div>
<p>After finally finding time to do today's challenge, I was able to knock it out in about 30 minutes for parts one and two. At the core of both of parts was parsing strings like this:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'Game 1: 3 blue, 4 red; 1 red, 2 green, 6 blue; 2 green'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Game 2: 1 blue, 2 green; 3 green, 4 blue, 1 red; 1 green, 1 blue'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Game 3: 8 green, 6 blue, 20 red; 5 blue, 4 red, 13 green; 5 green, 1 red'</span><span class="token punctuation">,</span><br />    <span class="token comment">// and so on</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<h3>Part One</h3>
<p>For part one I needed to get the game ID plus the amount and related colors from each pick of the games. There are a lot of ways of doing this but the solution I went with was some good-old fashioned string-replacement and exploding:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$colors</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'red'</span> <span class="token operator">=></span> <span class="token number">12</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'green'</span> <span class="token operator">=></span> <span class="token number">13</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'blue'</span> <span class="token operator">=></span> <span class="token number">14</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$validGameTotal</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$input</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$game</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$gameId</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$game</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$picks</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$gameValid</span> <span class="token operator">=</span> <span class="token constant boolean">true</span><span class="token punctuation">;</span><br /><br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$picks</span> <span class="token keyword">as</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><br />    <span class="token punctuation">{</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token variable">$gameValid</span><span class="token punctuation">)</span> <span class="token keyword">continue</span><span class="token punctuation">;</span><br />        <span class="token variable">$pick</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$color</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$amount</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$amount</span> <span class="token operator">></span> <span class="token variable">$colors</span><span class="token punctuation">[</span><span class="token variable">$color</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token variable">$gameValid</span> <span class="token operator">=</span> <span class="token constant boolean">false</span><span class="token punctuation">;</span><br />            <span class="token keyword">continue</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$gameValid</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$validGameTotal</span> <span class="token operator">+=</span> <span class="token variable">$gameId</span><span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token keyword">echo</span> <span class="token variable">$validGameTotal</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span></code></pre>
<p>A <code>break</code> statement would make more sense instead of using <code>continue</code> but I'm not changing it now.</p>
<h3>Part Two</h3>
<p>Part two was similar but I needed to find the highest value of each given color and multiply them. PHP's <code>max</code> function made this easy:</p>
<pre class="language-php"><code class="language-php"><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$input</span> <span class="token keyword">as</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token punctuation">[</span><span class="token variable">$game</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">':'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />    <span class="token variable">$gameId</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$game</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$picks</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">';'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$games</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$blue</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$red</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <span class="token variable">$green</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><br />    <br />    <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$picks</span> <span class="token keyword">as</span> <span class="token variable">$pick</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />        <span class="token variable">$pick</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />        <span class="token variable">$color</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token variable">$amount</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$pick</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />        <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token variable">$color</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />            <span class="token keyword">case</span> <span class="token string single-quoted-string">'blue'</span><span class="token punctuation">:</span><br />                <span class="token variable">$blue</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$blue</span><span class="token punctuation">,</span> <span class="token variable">$amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />            <span class="token keyword">case</span> <span class="token string single-quoted-string">'red'</span><span class="token punctuation">:</span><br />                <span class="token variable">$red</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$red</span><span class="token punctuation">,</span> <span class="token variable">$amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />            <span class="token keyword">case</span> <span class="token string single-quoted-string">'green'</span><span class="token punctuation">:</span><br />                <span class="token variable">$green</span> <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$green</span><span class="token punctuation">,</span> <span class="token variable">$amount</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />                <span class="token keyword">break</span><span class="token punctuation">;</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token variable">$blue</span> <span class="token operator">*</span> <span class="token variable">$red</span> <span class="token operator">*</span> <span class="token variable">$green</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>Onwards to day three.</p>
<p>My solution is <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/02">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-12-02T22:06:56.581+00:00</pubDate>
</item>
<item>
<title>Advent of Code 2023: Day One</title>
<link>https://rknight.me/advent-of-code-2023-day-one/</link>
<guid>https://rknight.me/advent-of-code-2023-day-one/</guid>
<content:encoded><![CDATA[
<div> 编程、Advent of Code、PHP、regex、数字提取
总结:<br /><br />编程爱好者发现了名为Advent of Code的编程挑战活动，并选择用PHP编程语言参与。他在第一个挑战中使用了正则表达式来提取字符串中的数字，并成功解决了这个问题。第二个挑战中，他遇到了一些字符串中数字和单词的交叉情况，经过一番调试和搜索，最终使用了正向预查来解决这个问题。通过这两个挑战，他成功完成了Advent of Code的第一天任务。 <div>
<p>Until <a href="https://zoeaubert.me">Zoe</a> mentioned it this morning, I didn't know what <a href="https://adventofcode.com">Advent of Code</a> was <sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn1" id="fnref1">[1]</a></sup>. Advent of Code is an &quot;<em>advent calendar of small programming puzzles</em>&quot;. So once I knew what it was, I figured I'd give it a go. I'm not sure if I'll make it all month but I'll certainly try. I'm doing it in PHP because it's what I know and it will annoy Zoe a little bit; you can see <a href="https://zoeaubert.me/blog/advent-of-code-2023-day-01/">her rust-based solution here</a>.</p>
<h3>Part 1</h3>
<p>The first challenge was to extract the first and last digit from an array of strings, concatenate them, then get the total. For example the result of this on <code>1fghy2</code> would give <code>12</code>.</p>
<p>Anyone who knows me professionally knows regex is my kryptonite. It just doesn't click with my brain and I seem to forget anything I learn about it instantly. I fired up <a href="https://regex101.com/">regex101</a> to give this a go anyway. Regex101 has a handy quick reference which told me I needed <code>\d</code> to find any digit. I used <code>preg_match_all</code> to get all digits:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$input</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'1abc2'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'pqr3stu8vwx'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'a1b2c3d4e5f'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'treb7uchet'</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$result</span> <span class="token operator">=</span> <span class="token function">array_reduce</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token variable">$total</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token comment">// get all digits</span><br />    <span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$first</span> <span class="token operator">=</span> <span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />    <span class="token variable">$last</span> <span class="token operator">=</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br />    <span class="token variable">$total</span> <span class="token operator">+=</span> <span class="token variable">$first</span> <span class="token operator">.</span> <span class="token variable">$last</span><span class="token punctuation">;</span><br />    <span class="token keyword">return</span> <span class="token variable">$total</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">echo</span> <span class="token string single-quoted-string">'The total is '</span> <span class="token operator">.</span> <span class="token variable">$result</span> <span class="token operator">.</span> <span class="token constant">PHP_EOL</span><span class="token punctuation">;</span><br /><span class="token comment">// The total is 142</span></code></pre>
<h3>Part 2</h3>
<p>Part two added a complexity that some of the numbers could be written out as words instead of digits. Some of the strings might have no digits and some might have no numbers-as-words. So <code>onedsjfbi2</code> would give <code>12</code> and <code>23sdshseven</code> would give <code>27</code>. This part I <em>did</em> know; find all digits, or the words of 1-9. A quick swap of my regex from before and mapping words to numbers with PHPs <a href="https://www.php.net/manual/en/migration70.new-features.php">null coalescing operator</a>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$lettersToNumbers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'one'</span> <span class="token operator">=></span> <span class="token number">1</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'two'</span> <span class="token operator">=></span> <span class="token number">2</span><span class="token punctuation">,</span><br />    <span class="token comment">// and so on</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/\d|one|two|three|four|five|six|seven|eight|nine)/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$first</span> <span class="token operator">=</span> <span class="token variable">$lettersToNumbers</span><span class="token punctuation">[</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$last</span> <span class="token operator">=</span> <span class="token variable">$lettersToNumbers</span><span class="token punctuation">[</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">??</span> <span class="token function">end</span><span class="token punctuation">(</span><span class="token variable">$matches</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>I thought I'd cracked it but the advent of code site told me my number was too high. I logged out all the strings and the numbers I had found with my regex and eyeballed <em>a lot</em> of them and everything seemed fine. After a good 20 minutes or so I had to call it quits and check out what <a href="https://lewisdale.dev/post/advent-of-code-2023-day-one/">Lewis had for his solution</a>. It turns out some of the strings have words that crossover, for example <code>35oneight</code>. The result <em>should</em> be <code>38</code> but I was getting <code>31</code> because regex will match the first instance (in this case <code>one</code>) and then move on. I didn't look at Lewis' solution because I still want to attempt it myself.</p>
<p>After a bit of googling what I needed was a <a href="https://stackoverflow.com/questions/35458195/pcre-regular-expression-overlapping-matches">capturing technique inside an unanchored positive lookahead</a><sup class="footnote-ref"><a href="https://rknight.me/feed.xml#fn2" id="fnref2">[2]</a></sup> which would then return <code>eight</code> in the example above:</p>
<pre class="language-php"><code class="language-php"><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(?=(\d|one|two|three|four|five|six|seven|eight|nine))/'</span><span class="token punctuation">,</span> <span class="token variable">$line</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>And there we go, day one done. My solutions are <a href="https://github.com/rknightuk/adventofcode/tree/main/2023/01">on GitHub</a> if you want to have a look.</p>
<hr class="footnotes-sep" />
<section class="footnotes">
<ol class="footnotes-list">
<li class="footnote-item" id="fn1"><p>Or more likely, I did know and just forgot about it. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref1">&#10558;</a></p>
</li>
<li class="footnote-item" id="fn2"><p>Very normal sentence, yes. Nothing to see here. <a class="footnote-backref" href="https://rknight.me/feed.xml#fnref2">&#10558;</a></p>
</li>
</ol>
</section>
]]></content:encoded>
<pubDate>2023-12-01T11:30:30.578+00:00</pubDate>
</item>
<item>
<title>Crossover</title>
<link>https://rknight.me/crossover/</link>
<guid>https://rknight.me/crossover/</guid>
<content:encoded><![CDATA[
<div> 关键词：DoubleShift, Crossover, TV shows, leaderboards, 混搭比较<br />
总结:<br />
文章介绍了一个名为DoubleShift的网站，它有一些有趣的功能，如排行榜，与Crossover不同，它不仅限于少数电视节目，而是可以比较任何一部电视节目。网站上预先加载了一些节目，用户也可以搜索添加新的节目进行混搭比较。网站的标志是Breaking Bad和Game of Thrones的混合图标，但实际测试中发现Game of Thrones与其他节目的交叉演员很少。文章作者也提到了自己在建设网站时的一些想法。 <div>
<p><img alt="Crossover logo" src="https://rknightuk.s3.amazonaws.com/site/crossover-logo.png" /></p>
<p>Sometimes one idea begets another. In the case of <a href="https://crossover.rknight.me">Crossover</a> I had the idea while building <a href="https://rknight.me/doubleshift">DoubleShift</a> but I was too far in to change it. DoubleShift also now has some fun additional features like leaderboards which only make sense for that site.</p>
<p>Crossover, unlike DoubleShift, isn't limited to a handful of TV shows: if a show is in <a href="https://www.themoviedb.org/">The Movie Database</a> you can compare it with Crossover.</p>
<p><img alt="Crossover screenshot" src="https://rknightuk.s3.amazonaws.com/site/crossover-screenshot.png" /></p>
<p>There are a few pre-loaded shows on the site but you can search for any show - once you've found one, it gets added to the options so you can mix and match in any way you want.</p>
<p>The logo is a mix of Breaking Bad and Game of Thrones so you might think Game of Thrones would be a good default on the site but there are very few actors that crossover with other shows I was testing with. The font looked good though so here we are.</p>
<p><a href="https://crossover.rknight.me">Check out Crossover here</a> and <a href="https://doubleshift.rknight.me">DoubleShift here</a>.</p>
]]></content:encoded>
<pubDate>2023-11-30T21:17:34.256+00:00</pubDate>
</item>
<item>
<title>DoubleShift</title>
<link>https://rknight.me/doubleshift/</link>
<guid>https://rknight.me/doubleshift/</guid>
<content:encoded><![CDATA[
<div> 关键词: 演员, 电视剧, 数据处理, 网站, 交叉出现
总结:
演员在多部电视剧中交叉出现，包括《Grey's Anatomy》、《Scrubs》和《House》。作者通过数据处理找到了共同出现的演员，共有28位出现在《Grey's Anatomy》和《Scrubs》，78位出现在《Grey's Anatomy》和《House》，48位出现在《Scrubs》和《House》。使用了TMDB API来获取演员数据，并利用CSS和radio按钮在网站上展示了这些组合。作者避免使用JavaScript，以提高网站性能。 <div>
<p>I have watched <a href="https://www.themoviedb.org/tv/4556-scrubs">Scrubs</a> more times than I can count and I am currently re-watching <a href="https://www.themoviedb.org/tv/1416-grey-s-anatomy">Grey's Anatomy</a> for the third (maybe fourth?) time. I noticed there are a lot of actors who have appeared in both and it <em>seemed</em> like it was every other episode. After some data-wrangling I have an actual answer: 28 actors have appeared in both series.</p>
<h3>The Idea</h3>
<p>I thought it would be fun to show this on a site along with highlighting what I'm calling &quot;double doctors&quot;: that is, actors who have played a doctor in both shows. The site is called <a href="https://doubleshift.rknight.me">DoubleShift</a> and it has this nifty logo I whipped up:</p>
<p><a href="https://doubleshift.rknight.me"><img alt="DoubleShift logo" src="https://rknightuk.s3.amazonaws.com/site/double-shift-logo.png" /></a></p>
<p>I mentioned this idea to <a href="https://mas.to/@_dreaves">David</a> and he asked what the numbers were like against <a href="https://www.themoviedb.org/tv/1408-house">House</a>. So I added House to my dataset: 78 actors have appeared in Grey's and House, and 48 have appeared in Scrubs and House. I also added <a href="https://www.themoviedb.org/tv/4588-er?language=en-GB">ER</a> because that had a lot of crossover too.</p>
<p>I briefly added General Hospital because of how long it has been running but there was <a href="https://www.themoviedb.org/person/36216-cynthia-watros">just one actress</a> who has been in any of the other shows so I removed it again. Also, adding even one more show generates so many more permutations.</p>
<h3>Handling the Data</h3>
<p>To fetch the actor data for each show I used <a href="https://developer.themoviedb.org/reference/intro/getting-started">The Movie Database API</a> which has a handy &quot;Aggregate Credits&quot; endpoint for fetching all actors who have been in a show across all seasons. I then mapped that data to a keyed object by their TMDB ID:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.themoviedb.org/3/tv/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>show<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/aggregate_credits?&amp;series_id=1416&amp;language=en-US</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />	<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token string-property property">'Authorization'</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">API_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br />		<span class="token string-property property">'accept'</span><span class="token operator">:</span> <span class="token string">'application/json'</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br /><br />json<span class="token punctuation">.</span>cast<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">actor</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	data<span class="token punctuation">[</span>actor<span class="token punctuation">.</span>id<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">{</span><br />		<span class="token operator">...</span>actor<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p>To find the actors who have been in both shows a <code>filter</code> did the trick:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> intersection <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>showData<span class="token punctuation">[</span>showOne<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">element</span> <span class="token operator">=></span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>showData<span class="token punctuation">[</span>showTwo<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// console.log(intersection)</span><br /><span class="token comment">// [123, 3456, 3456]</span></code></pre>
<p>I used <a href="https://11ty.dev">Eleventy</a> like I always do because it's data files are perfect at handling this kind of thing and using nunjucks is easy-peasy to output what I want. I decided to avoid using javascript on the site itself here so I used CSS and radio buttons to show and hide each combination of show.</p>
<pre class="language-css"><code class="language-css"><span class="token selector">#show-greys-scrubs</span> <span class="token punctuation">{</span><br />	<span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token selector">#greys-scrubs:checked ~ #show-greys-scrubs</span> <span class="token punctuation">{</span><br />	<span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span><br /><span class="token punctuation">}</span></code></pre>
<p>It's worth noting that when using the <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/Subsequent-sibling_combinator">subsequent-sibling combinator</a> (<code>~</code>) the two elements must be children of the same parent so I couldn't have the radio buttons inside their own container which made styling them slightly harder, but a small price to pay to not rely on JS here.</p>
<p><a href="https://doubleshift.rknight.me">View the DoubleShift site here</a> and you can view <a href="https://github.com/rknightuk/doubleshift">the source on GitHub</a></p>
]]></content:encoded>
<pubDate>2023-11-27T22:30:06.509+00:00</pubDate>
</item>
<item>
<title>Popular Pages with Eleventy and Fathom Analytics</title>
<link>https://rknight.me/popular-pages-with-eleventy-and-fathom-analytics/</link>
<guid>https://rknight.me/popular-pages-with-eleventy-and-fathom-analytics/</guid>
<content:encoded><![CDATA[
<div> 关键词: 网站设计, 数据分析, API, 博客文章, 流行页面<br />
总结: <br /><br />这篇文章介绍了作者如何在网站设计中添加了基于页面浏览量的流行页面功能。作者使用了 Plausible 进行网站分析，并提供了使用该工具的具体 API 实现。文章中还包括了如何使用 Fathom 来获取数据，并通过筛选和映射，将数据格式化为包含流行页面信息的结构。此外，作者还介绍了如何在不同位置引入流行页面，以及如何使用 Eleventy 过滤器来过滤出排除当前页面的流行页面列表。整篇文章围绕网站设计和数据分析展开，详细介绍了各种实现细节。 <div>
<p>Now my new site design is done, I've been able to take some time to add features I've wanted for a while. In this case, I want to show popular pages based on pageviews at the end of blog posts, on the <a href="https://rknight.me/search">search page</a>, and on the <a href="https://rknight.me/404notfound">404 page</a>.</p>
<h3>Fetching Pageviews</h3>
<p>I use <a href="https://usefathom.com/ref/IXCLSF">Fathom</a> for analytics on my sites and they <a href="https://usefathom.com/api">have an API</a> which is handy. If you use Plausible for your analytics you should <a href="https://coryd.dev/posts/2023/popular-posts-widget-using-eleventy-plausible/">check out Cory's post</a> on the same topic for the specific API implementation. He also uses liquid rather than nunjucks which I use so if that's your jam you probably want his post instead.</p>
<p>To fetch the data I use <a href="https://www.11ty.dev/docs/data-global/">Eleventy data files</a>. You can get an API key from <a href="https://app.usefathom.com/api">your Fathom dashboard</a>. Also, you don't <em>need</em> to use the <a href="https://www.npmjs.com/package/qs"><code>qs</code></a> library but it does make life a bit easier.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// _data/fathom.js</span><br /><span class="token keyword">const</span> qs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'qs'</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br /><br />	<span class="token keyword">const</span> date_from <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">subtract</span><span class="token punctuation">(</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token string">'days'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY-MM-DD HH:mm'</span><span class="token punctuation">)</span><br />	<span class="token keyword">const</span> date_to <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY-MM-DD HH:mm'</span><span class="token punctuation">)</span><br />	<br />	<span class="token keyword">const</span> query <span class="token operator">=</span> qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />		<span class="token literal-property property">entity</span><span class="token operator">:</span> <span class="token string">'pageview'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">entity_id</span><span class="token operator">:</span> env<span class="token punctuation">.</span>process<span class="token punctuation">.</span><span class="token constant">FATHOM_SITE_CODE</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">aggregates</span><span class="token operator">:</span> <span class="token string">'pageviews'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">field_grouping</span><span class="token operator">:</span> <span class="token string">'pathname'</span><span class="token punctuation">,</span><br />		date_from<span class="token punctuation">,</span><br />		date_to<span class="token punctuation">,</span><br />		<span class="token literal-property property">sort_by</span><span class="token operator">:</span> <span class="token string">'pageviews:desc'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">limit</span><span class="token operator">:</span> <span class="token number">100</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><br />	<br />	<span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://api.usefathom.com/v1/aggregations?</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>query<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />		<span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />			<span class="token string-property property">'Authorization'</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Bearer </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>env<span class="token punctuation">.</span>process<span class="token punctuation">.</span><span class="token constant">FATHOM_API_KEY</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br />		<span class="token punctuation">}</span><br />	<span class="token punctuation">}</span><span class="token punctuation">)</span><br />	<br />	<span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>Which gives uses a response like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">[</span><br />	<span class="token punctuation">{</span><br />		pageviews<span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span><br />		pathname<span class="token operator">:</span> '/'<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token punctuation">{</span><br />		pageviews<span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span><br />		pathname<span class="token operator">:</span> '/please-expose-your-rss/'<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token punctuation">{</span><br />		pageviews<span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span><br />		pathname<span class="token operator">:</span> '/app-defaults/'<span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token comment">// and so on</span><br /><span class="token punctuation">]</span></code></pre>
<p>The first problem here is this includes pages that aren't blog posts. If you're normal and setup your site well, this is easy: filter the list to only get posts that contain <code>/blog</code> in the <code>pathname</code>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> json <span class="token operator">=</span> <span class="token keyword">await</span> res<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> pv<span class="token punctuation">.</span>pathname<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'/blog'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre>
<p>If you're like me and made a silly mistake many years ago and your posts live at the root of your site, you have to get a bit creative to get all the blog post paths. I'm also using <code>titleMap</code> to get the titles of the posts so I can add those to the Fathom data.</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// ...fetching fathom goes here</span><br /><br /><span class="token keyword">const</span> files <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">glob</span><span class="token punctuation">(</span><span class="token string">'./src/posts/**/*.md'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> titleMap <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><br /><br />files<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">page</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">const</span> content <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>page<span class="token punctuation">,</span> <span class="token string">'utf8'</span><span class="token punctuation">)</span><br />	<span class="token keyword">const</span> permalink <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^permalink: ?(.*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'permalink: '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'index.html'</span><span class="token punctuation">,</span> <span class="token string">''</span><span class="token punctuation">)</span><br />	<span class="token keyword">let</span> title <span class="token operator">=</span> content<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^title: ?(.*$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gm</span></span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">'title: '</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><br />	<br />	<span class="token keyword">if</span> <span class="token punctuation">(</span>title<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br />	<span class="token punctuation">{</span><br />		title <span class="token operator">=</span> title<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><br />	<span class="token punctuation">}</span><br />	<br />	titleMap<span class="token punctuation">[</span>permalink<span class="token punctuation">]</span> <span class="token operator">=</span> title<br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// titleMap = {</span><br /><span class="token comment">//	'/please-expose-your-rss/': 'Please, Expose your RSS',</span><br /><span class="token comment">//	'/app-defaults/': 'App Defaults',</span><br /><span class="token comment">// }</span><br /><br /><span class="token comment">// filter out only blog posts</span><br /><span class="token keyword">let</span> data <span class="token operator">=</span> json<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">return</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>titleMap<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>pv<span class="token punctuation">.</span>pathname<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// add the titles to the fathom data</span><br />data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">return</span> <span class="token punctuation">{</span><br />		<span class="token literal-property property">title</span><span class="token operator">:</span> titleMap<span class="token punctuation">[</span>pv<span class="token punctuation">.</span>pathname<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">url</span><span class="token operator">:</span> pv<span class="token punctuation">.</span>pathname<span class="token punctuation">,</span><br />		<span class="token literal-property property">pageviews</span><span class="token operator">:</span> pv<span class="token punctuation">.</span>pageviews<br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">return</span> data</code></pre>
<p>This sets the <code>fathom</code> data to something like this:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">[</span><br />	<span class="token punctuation">{</span><br />		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'Please, Expose your RSS'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/please-expose-your-rss/'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">pageviews</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token punctuation">{</span><br />		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">'App Defaults'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">'/app-defaults/'</span><span class="token punctuation">,</span><br />		<span class="token literal-property property">pageviews</span><span class="token operator">:</span> <span class="token number">98</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token comment">// and so on</span><br /><span class="token punctuation">]</span></code></pre>
<p>It's worth noting you don't have to map the titles to the data inside the data file, you can do it when rendering popular posts inside a custom filter as <a href="https://coryd.dev/posts/2023/popular-posts-widget-using-eleventy-plausible/">Cory did</a> which would give you access to other post attributes you have. I didn't need any of the additional attributes as I'm just outputting the title and link so I didn't bother but it's worth keeping in mind.</p>
<h3>Including Popular Posts</h3>
<p>I want to include the popular pages in multiple places so an include file makes the most sense. Annoyingly, nunjucks doesn't support passing in variables to an include like liquid does so I need to define the variables before each include:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// all popular posts</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> popular <span class="token operator">=</span> fathom <span class="token operator">|</span> <span class="token function">popularPosts</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> include <span class="token string">'popular_posts.njk'</span> <span class="token operator">%</span><span class="token punctuation">}</span><br /><br /><span class="token comment">// on a post page, exclude that post by passing in the current url</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> pageUrl <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> page<span class="token punctuation">.</span>url <span class="token operator">|</span> stripIndex <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> endset <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> popular <span class="token operator">=</span> fathom <span class="token operator">|</span> <span class="token function">popularPosts</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> pageUrl<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> include <span class="token string">'popular_posts.njk'</span> <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
<p><code>popularPosts</code> is an Eleventy filter I have defined in my config:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br /><br />eleventyConfig<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span><span class="token string">'popularPosts'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">pageviews<span class="token punctuation">,</span> limit<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />	<span class="token keyword">return</span> pageviews<br />		<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">pv</span> <span class="token operator">=></span> pv<span class="token punctuation">.</span>url <span class="token operator">!==</span> url<span class="token punctuation">)</span> <span class="token comment">// filter out the passed in url</span><br />		<span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> limit<span class="token punctuation">)</span> <span class="token comment">// limit to the passed-in limit</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /></code></pre>
<p>Then the <code>popular_posts.njk</code> include looks like this:</p>
<pre class="language-html"><code class="language-html">// _includes/popular_posts.njk<br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span><br />	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h4</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#popular<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span> Popular Posts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h4</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span><br />	{%- for p in popular %}<br />		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ p.url }}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>{{ p.title }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><br />	{% endfor %}<br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>small</span><span class="token punctuation">></span></span>Analytics powered by <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://usefathom.com/ref/IXCLSF<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Fathom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>small</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br /></code></pre>
<p>And the final result (or you can look just below this post and they <em>should</em> be there unless I broke something, or got bored and removed them 🙃). If you don't have analytics yet and want to use Fathom <a href="https://usefathom.com/ref/IXCLSF">my referral link</a> will give you $10 credit - I've been using them for a quite a while and use them on all of my sites.</p>
<p><img alt="Popular Posts screenshot" src="https://rknightuk.s3.amazonaws.com/site/fathom-popular-posts.jpg" /></p>
]]></content:encoded>
<pubDate>2023-11-24T22:42:04.013+00:00</pubDate>
</item>
<item>
<title>Using SVG Sprites</title>
<link>https://rknight.me/using-svg-sprites/</link>
<guid>https://rknight.me/using-svg-sprites/</guid>
<content:encoded><![CDATA[
<div> SVG, sprite, icon, CSS, website
总结: 这篇文章介绍了如何在网站上使用SVG图标，包括直接插入SVG、使用img标签和使用SVG精灵。作者着重介绍了SVG精灵的用法，以及如何用CSS对SVG进行样式设置。文章还提到了作者自己使用的方法，以及一些静态网站生成器的插件推荐。 <div>
<p>Recently someone emailed me to ask how I was doing SVGs on my website because they'd looked in the source but it wasn't obvious how it actually rendered the SVG so I figured I would do a proper post about it. Here is their email:</p>
<hr />
<blockquote>
<p>I'm looking to steal more ideas from you and found this while looking through your web site source:</p>
</blockquote>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#rklogo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<blockquote>
<p>But when I inspect the DOM I see it fully expanded:</p>
</blockquote>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#rklogo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 400 400<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>rklogo<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-bar<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 300 400 L 200 200 L 300 0 L 400 0 L 300 200 L 400 400 L 300 400 Z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-dot<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 0 399 L 75 399 L 75 324 L 0 324 Z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>logo-bar<span class="token punctuation">"</span></span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 150 400 L 50 200 L 106 89 L 0 89 L 0 0 L 250 0 L 150 200 L 250 400 L 150 400 Z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<hr />
<h3>Other Methods</h3>
<p>Before I get into how to use sprites, there are two arguably easier options to use an SVG on a website: <code>img</code> and directly:</p>
<pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- use the SVG just like any other image --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>icon.svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br /><br /><span class="token comment">&lt;!-- put the SVG in directly --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 400 400<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#000000<span class="token punctuation">"</span></span> <span class="token attr-name">fill-rule</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>evenodd<span class="token punctuation">"</span></span> <span class="token attr-name">stroke</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>none<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M 300 400<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<p>Using an <code>img</code> tag is quick but you lose any ability to change the SVG colors, or animate it, with CSS. If you have an SVG that doesn't need any of that, this works fine.</p>
<p>Putting the SVG in the HTML directly is also a perfectly fine way to do it, but it can get messy if you have lots of icons, or you need to reuse the same icon multiple times.</p>
<h3>SVG Sprites</h3>
<p>An SVG sprite is basically a collection of SVGs inside an <code>svg</code> tag that can be used with the syntax I already mentioned at the top of the article. A sprite looks something like this where we have an <code>svg</code> tag and then some SVGs inside that. Note the <code>id</code> attribute - this is used to identify the SVG when we use it elsewhere on the site. For my sites, I usually put the sprite right before the closing <code>body</code> tag.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none</span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>buymeacoffee<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 24 24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M20.216 6.415l-.132-.666c-.119-.598-.388-1.163-1.001-1.379-.197-.069-.42-.098-.57-.241-.152-.143-.196-.366-.231-.572-.065-.378-.125-.756-.192-1.133-.057-.325-.102-.69-.25-.987-.195-.4-.597-.634-.996-.788a5.723 5.723 0 00-.626-.194c-1-.263-2.05-.36-3.077-.416a25.834 25.834 0 00-3.7.062c-.915.083-1.88.184-2.75.5-.318.116-.646.256-.888.501-.297.302-.393.77-.177 1.146.154.267.415.456.692.58.36.162.737.284 1.123.366 1.075.238 2.189.331 3.287.37 1.218.05 2.437.01 3.65-.118.299-.033.598-.073.896-.119.352-.054.578-.513.474-.834-.124-.383-.457-.531-.834-.473-.466.074-.96.108-1.382.146-1.177.08-2.358.082-3.536.006a22.228 22.228 0 01-1.157-.107c-.086-.01-.18-.025-.258-.036-.243-.036-.484-.08-.724-.13-.111-.027-.111-.185 0-.212h.005c.277-.06.557-.108.838-.147h.002c.131-.009.263-.032.394-.048a25.076 25.076 0 013.426-.12c.674.019 1.347.067 2.017.144l.228.031c.267.04.533.088.798.145.392.085.895.113 1.07.542.055.137.08.288.111.431l.319 1.484a.237.237 0 01-.199.284h-.003c-.037.006-.075.01-.112.015a36.704 36.704 0 01-4.743.295 37.059 37.059 0 01-4.699-.304c-.14-.017-.293-.042-.417-.06-.326-.048-.649-.108-.973-.161-.393-.065-.768-.032-1.123.161-.29.16-.527.404-.675.701-.154.316-.199.66-.267 1-.069.34-.176.707-.135 1.056.087.753.613 1.365 1.37 1.502a39.69 39.69 0 0011.343.376.483.483 0 01.535.53l-.071.697-1.018 9.907c-.041.41-.047.832-.125 1.237-.122.637-.553 1.028-1.182 1.171-.577.131-1.165.2-1.756.205-.656.004-1.31-.025-1.966-.022-.699.004-1.556-.06-2.095-.58-.475-.458-.54-1.174-.605-1.793l-.731-7.013-.322-3.094c-.037-.351-.286-.695-.678-.678-.336.015-.718.3-.678.679l.228 2.185.949 9.112c.147 1.344 1.174 2.068 2.446 2.272.742.12 1.503.144 2.257.156.966.016 1.942.053 2.892-.122 1.408-.258 2.465-1.198 2.616-2.657.34-3.332.683-6.663 1.024-9.995l.215-2.087a.484.484 0 01.39-.426c.402-.078.787-.212 1.074-.518.455-.488.546-1.124.385-1.766zm-1.478.772c-.145.137-.363.201-.578.233-2.416.359-4.866.54-7.308.46-1.748-.06-3.477-.254-5.207-.498-.17-.024-.353-.055-.47-.18-.22-.236-.111-.71-.054-.995.052-.26.152-.609.463-.646.484-.057 1.046.148 1.526.22.577.088 1.156.159 1.737.212 2.48.226 5.002.19 7.472-.14.45-.06.899-.13 1.345-.21.399-.072.84-.206 1.08.206.166.281.188.657.162.974a.544.544 0 01-.169.364zm-6.159 3.9c-.862.37-1.84.788-3.109.788a5.884 5.884 0 01-1.569-.217l.877 9.004c.065.78.717 1.38 1.5 1.38 0 0 1.243.065 1.658.065.447 0 1.786-.065 1.786-.065.783 0 1.434-.6 1.499-1.38l.94-9.95a3.996 3.996 0 00-1.322-.238c-.826 0-1.491.284-2.26.613z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>github<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 24 24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span>  <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>mastodon<span class="token punctuation">"</span></span> <span class="token attr-name">role</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>img<span class="token punctuation">"</span></span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://www.w3.org/2000/svg<span class="token punctuation">"</span></span> <span class="token attr-name">viewBox</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>0 0 24 24<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>path</span> <span class="token attr-name">fill</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>currentColor<span class="token punctuation">"</span></span> <span class="token attr-name">d</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>M23.268 5.313c-.35-2.578-2.617-4.61-5.304-5.004C17.51.242 15.792 0 11.813 0h-.03c-3.98 0-4.835.242-5.288.309C3.882.692 1.496 2.518.917 5.127.64 6.412.61 7.837.661 9.143c.074 1.874.088 3.745.26 5.611.118 1.24.325 2.47.62 3.68.55 2.237 2.777 4.098 4.96 4.857 2.336.792 4.849.923 7.256.38.265-.061.527-.132.786-.213.585-.184 1.27-.39 1.774-.753a.057.057 0 0 0 .023-.043v-1.809a.052.052 0 0 0-.02-.041.053.053 0 0 0-.046-.01 20.282 20.282 0 0 1-4.709.545c-2.73 0-3.463-1.284-3.674-1.818a5.593 5.593 0 0 1-.319-1.433.053.053 0 0 1 .066-.054c1.517.363 3.072.546 4.632.546.376 0 .75 0 1.125-.01 1.57-.044 3.224-.124 4.768-.422.038-.008.077-.015.11-.024 2.435-.464 4.753-1.92 4.989-5.604.008-.145.03-1.52.03-1.67.002-.512.167-3.63-.024-5.545zm-3.748 9.195h-2.561V8.29c0-1.309-.55-1.976-1.67-1.976-1.23 0-1.846.79-1.846 2.35v3.403h-2.546V8.663c0-1.56-.617-2.35-1.848-2.35-1.112 0-1.668.668-1.67 1.977v6.218H4.822V8.102c0-1.31.337-2.35 1.011-3.12.696-.77 1.608-1.164 2.74-1.164 1.311 0 2.302.5 2.962 1.498l.638 1.06.638-1.06c.66-.999 1.65-1.498 2.96-1.498 1.13 0 2.043.395 2.74 1.164.675.77 1.012 1.81 1.012 3.12z<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>path</span><span class="token punctuation">></span></span><br />   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<p>Because the SVGs have <code>fill=&quot;currentColor</code> set instead of a specific color, we can style them just using <code>color: #e33d94</code> in CSS. Handy. To use one of the SVGs, for example <code>buymeacoffee</code>, we can do the following in the HTML wherever we need it:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>svg</span><span class="token punctuation">></span></span><br />    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>use</span> <span class="token attr-name"><span class="token namespace">xlink:</span>href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>#buymeacoffee<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>use</span><span class="token punctuation">></span></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>svg</span><span class="token punctuation">></span></span></code></pre>
<p>Which will output the icon:</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/svg-icon-coffee.png" /></p>
<p>You <em>can</em> just paste in your SVGs to make a sprite or you can do what I do and use <a href="https://svgsprit.es/">https://svgsprit.es</a>. You can drop in a bunch of SVGs and it will give you back your sprite for putting on your site. A lot of static site generators also have plugins to do this, for example <a href="https://github.com/patrickxchong/eleventy-plugin-svg-sprite">this one for Eleventy</a>.</p>
<p>You can view the SVG sprite for <a href="https://github.com/rknightuk/rknight.me/blob/master/src/_includes/svgs.njk">this site on GitHub here</a>.</p>
]]></content:encoded>
<pubDate>2023-11-21T21:41:14.019+00:00</pubDate>
</item>
<item>
<title>Pokédon: Read Mastodon on a Pokédex</title>
<link>https://rknight.me/pokedon-read-mastodon-on-a-pokedex/</link>
<guid>https://rknight.me/pokedon-read-mastodon-on-a-pokedex/</guid>
<content:encoded><![CDATA[
<div> 关键词：hackathon, Mastodon client, Pokédex, 项目，功能

hackathon, Mastodon client, Pokédex, 项目，功能
<br /><br />在一场没有正式名称的非正式hackathon中，作者创建了一个名为“Pokédex”的Mastodon客户端项目。这个项目允许用户在Pokédex界面上浏览他们的Mastodon实例，并且只限于查看时间线和使用键盘导航。尽管在当天并未完成所有功能，但作者对这个项目的进展感到满意，计划在未来添加更多功能。 <div>
<p>Today, I attended a casual no-official-name hackathon. Just a bunch of people working on silly projects. It <em>did</em> have a theme though: silly interfaces. I spent the first hour before I arrived thinking of a few ideas until I thought of the perfect thing: a Mastodon client but it's in a Pokédex.</p>
<p><a href="https://pokedon.rknight.me">Try it out here</a>.</p>
<p><img alt="Pokédon interface" src="https://rknightuk.s3.amazonaws.com/site/pokedon.png" /></p>
<p>It's fairly limited but you can:</p>
<ul>
<li>Sign into your instance</li>
<li>View your timeline</li>
<li>Navigate with the keyboard (up/down for newer/older toots)</li>
<li>Listen to a toot with the <a href="https://developer.mozilla.org/en-US/docs/Web/API/SpeechSynthesis">SpeechSynthesis API</a></li>
</ul>
<p>Things it doesn't do right now:</p>
<ul>
<li>Be responsive. I just didn't have time today.</li>
<li>Allow boosting and favouriting.</li>
<li>Allow you to pause audio.</li>
<li>View followers</li>
<li>View your activity</li>
</ul>
<p>I will probably come back to this at some point and add some of these features but as it is I'm pretty happy with this as a day's project.</p>
]]></content:encoded>
<pubDate>2023-11-18T19:32:15.071+00:00</pubDate>
</item>
<item>
<title>So Many Default Apps</title>
<link>https://rknight.me/so-many-default-apps/</link>
<guid>https://rknight.me/so-many-default-apps/</guid>
<content:encoded><![CDATA[
<div> HTML, blog posts, data collection, network graph, statistics<br />
<br />
这篇文章介绍了作者在HV Discord上发布消息后，创建了一个网站来收集相关博文的经历。最初使用手工撰写的HTML框架，后来因为博文数量增加迅速，转而使用json数据文件并添加了RSS订阅功能。作者还通过构建网络图可视化博文间的链接关系，展示了信息的传播路径。最后给出了一些有关网站添加和RSS订阅的统计数据。整体而言，文章介绍了作者对于大量博文数据的收集、处理和展示的经验。 <div>
<p>Two weeks ago when <a href="https://listen.hemisphericviews.com/097">Hemispheric Views 097</a> released and <a href="https://gabz.blog/2023/11/03/my-defaults.html">people</a> <a href="https://rknight.me/app-defaults/">started</a> <a href="https://maique.eu/2023/11/03/defaults.html">putting</a> <a href="https://lmika.org/2023/11/04/defaults.html">up</a> <a href="https://alpine.weblog.lol/2023/11/the-defaults">their</a> <a href="https://canion.blog/2023/11/04/duel-of-the.html">default</a> <a href="https://www.andycarolan.com/appdefaults">app</a> <a href="https://mb.esamecar.net/2023/11/04/app-defaults.html">posts</a> <a href="https://grepjason.sh/">Jason</a> said this in the HV Discord:</p>
<blockquote>
<p>take a hike <code>/now</code>. It's all about <code>/default</code> now</p>
</blockquote>
<p>I decided to quickly throw a site together to collect all these (at the time eight) blog posts in one place: <a href="https://defaults.rknight.me/">App Defaults</a>. I used this old web framework you might have heard of called &quot;artisanal hand-crafted HTML&quot;. It was only seven links, maybe a couple more, manually adding a new link didn't seem like a problem. Until <em>way</em> more than that arrived. At it's peak, there were 35 new posts added to the list. As of this post, there are 151 posts listed.</p>
<table>
<thead>
<tr>
<th><strong>Date</strong></th>
<th><strong>Posts Added</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>4/11</strong></td>
<td>15</td>
</tr>
<tr>
<td><strong>5/11</strong></td>
<td>10</td>
</tr>
<tr>
<td><strong>6/11</strong></td>
<td>5</td>
</tr>
<tr>
<td><strong>7/11</strong></td>
<td>35</td>
</tr>
<tr>
<td><strong>8/11</strong></td>
<td>24</td>
</tr>
<tr>
<td><strong>9/11</strong></td>
<td>14</td>
</tr>
<tr>
<td><strong>10/11</strong></td>
<td>7</td>
</tr>
<tr>
<td><strong>11/11</strong></td>
<td>10</td>
</tr>
<tr>
<td><strong>12/11</strong></td>
<td>11</td>
</tr>
<tr>
<td><strong>13/11</strong></td>
<td>6</td>
</tr>
<tr>
<td><strong>14/11</strong></td>
<td>7</td>
</tr>
<tr>
<td><strong>15/11</strong></td>
<td>5</td>
</tr>
<tr>
<td><strong>16/11</strong></td>
<td>2</td>
</tr>
<tr>
<td>Total</td>
<td>151</td>
</tr>
</tbody>
</table>
<p>Three days in I realised this was likely to take off so I switched the site to <a href="https://11ty.dev">Eleventy</a> and a <code>json</code> data file to keep track of the blog posts. I also added RSS feeds for everyone's sites.</p>
<p>Day four was the busiest for submissions and I had a fun idea to allow anyone to subscribe to <em>all</em> of the websites mentioned. I generated <a href="https://github.com/rknightuk/app-defaults/blob/main/opml.njk">an OPML file</a> from the site data and added a link to that to the site.</p>
<h3>Network Graph</h3>
<p>The latest feature was added today when I was inspired by something said on <a href="https://listen.hemisphericviews.com/098">episode 098</a> but as of this moment I cannot remember what it was that was said. Regardless, I wanted to visualise the links between all the blog posts to get a sense of how the &quot;trend&quot; spread between people so I created <a href="https://defaults.rknight.me/network/">the Network Graph page</a>.</p>
<p>To achieve this I used <a href="https://github.com/extractus/article-extractor">@extractus/article-extractor</a> to extract the article contents from every post, then I used <a href="https://github.com/WebReflection/linkedom">linkedom</a> to get all the links contained in each article, and then I mapped each of those links to the post they were linking to. Finally I ran a script to map that data to the format required for <a href="https://visjs.github.io/vis-network/docs/network/index.html"><code>network</code></a> to render the graph. This is the same graph used on <a href="https://home.omg.lol/referred-by/robb">omg.lol</a> to show the referral data and thankfully I could look at Adam's implementation to speed things up.</p>
<p>A few stats to finish:</p>
<ul>
<li>67 of the sites were added via a pull request on GitHub</li>
<li>The most popular TLD is, unsurprisingly, <code>.com</code> (48 posts). <code>.blog</code>, <code>.me</code>, and <code>.net</code> were tied for second with 13 posts each.</li>
<li>144 of the 151 sites have RSS feeds 🙌</li>
</ul>
]]></content:encoded>
<pubDate>2023-11-16T22:16:38.787+00:00</pubDate>
</item>
<item>
<title>Using the Johnny Decimal System</title>
<link>https://rknight.me/using-the-johnny-decimal-system/</link>
<guid>https://rknight.me/using-the-johnny-decimal-system/</guid>
<content:encoded><![CDATA[
<div> Johnny.Decimal, organising files, categories, areas, IDs

JD系统是用于组织文件的一种方法，包括categories（类别）, areas（区域）, IDs（文件）。这种系统需要通过Workbook和Index来具体实施，作者在实践过程中发现系统对于找到所需文件非常有效。在使用该系统的过程中，作者也发现可以将该系统的一些思想应用在其他方面。整体来说，JD系统对作者来说非常有效，帮助他更快地找到文件。<br /><br />总结: JD系统是一种用于组织文件的方法，通过细分categories，areas和IDs来管理文件，通过Workbook和Index来实施，对于找到所需文件非常有效。同样的思想也可以应用在其他方面。 <div>
<p>In <a href="https://listen.hemisphericviews.com/025">episode 028 of Hemispheric Views</a> <a href="https://canion.blog">Andrew</a> mentioned the <a href="https://johnnydecimal.com">Johnny Decimal (JD) system</a> for organising files. I made a note of it as a thing to look into. Then, like a lot of things, I never went back to investigate. Then in <a href="https://listen.hemisphericviews.com/096">episode 096</a> they had Mr Johnny Decimal himself on to talk about the system. This was the kick I needed to properly check it out. I also spoke with <a href="https://mastodon.macstories.net/@johnvoorhees">John</a> about the JD system on the two most recent episodes of Ruminate if audio is more your thing.</p>
<ul>
<li><a href="https://ruminatepodcast.com/172/">172 - Big Knowledge Boys</a></li>
<li><a href="https://ruminatepodcast.com/173/">173 - Should This Be a Blog Post?</a></li>
</ul>
<p>Before we get into it, the JD system has concepts that are worth knowing about for any of this to make sense:</p>
<ul>
<li>Categories - these are the top level of the folder system, e.g. <code>10-19 Family</code></li>
<li>Areas - These are the folders <em>inside</em> categories, e.g. <code>10 Finance</code></li>
<li>IDs or Items - These are the actual files that exist inside of areas, e.g. <code>10.01 Insurance</code></li>
</ul>
<h3>Attempt One</h3>
<p>I skimmed through the <a href="https://johnnydecimal.com">beautiful website</a> to get a sense of what the &quot;rules&quot; are for the system and starting coming up with my categories. Note I use the word &quot;skimmed&quot; there because I got this <em>very</em> wrong; my categories were too narrow and my areas were too broad to make any sense. Johnny was kind enough <a href="https://johnnydecimal.com/20-29-communication/23-forums-and-chat/23.02-discord/">in the JD Discord</a> to give me some feedback after I clearly rushed though and didn't pay enough attention to the website. I'll just go over two of them here:</p>
<details>
	00-09 System
	<pre>00-09 System
│ 00 Inbox
│ 01 Exported Data
│ ├── 01.01 Twitter
│ ├── 01.02 Tumblr
│ ├── 01.03 Instagram
│ ├── 01.04 Mastodon
│ ├── 01.05 Reddit
│ ├── 01.06 Project Databases
│ ├── 01.07 Other
│ 02 Education Archive
│ ├── 02.01 College
│ ├── 02.02 Uni
│ ├── 02.03 School
│ 03 Sites Archive
│ ├── 03.01 Just Delete Me (JDM)
│ ├── 03.02 Wordpress Themes
│ ├── 03.03 Personal
│ ├── 03.04 Freelance
│ ├── 03.05 DevsDoDesign
│ 09 Archive
│ ├── 09.01 Archive
│ ├── 09.02 Camera Uploads
	</pre>
</details>
<blockquote>
<p>I think all archives can just become 09 archive. it doesn’t feel like you have anywhere near 99 things you’ll ever put in there? fill ‘er up baby</p>
</blockquote>
<p>In this case, I was trying to organise too hard. As Johnny pointed out, for an archive it really doesn't matter how much stuff is in there. Fill 'er up baby indeed.</p>
<details>
	40-49 Games
	<pre>40-49 Games
│ 40 Screenshots
│ 41 Manuals
│ 42 ROMs
</pre>
</details>
<blockquote>
<p>that’s a nice clear area, perhaps it doesn’t need its own area and could just be a category elsewhere though? do you see it filling up with time, or is this it? if this is it it’s a ‘waste’ of an area as it is</p>
</blockquote>
<blockquote>
<p>I mean you have 10 to use, it’s not like it’s a crime…I’ve just learned over the years that compression tends to better results</p>
</blockquote>
<p>This category was far too specific. This is 10 years worth of stuff, it's unlikely I'm going to suddenly have a huge influx in new areas of things for this.</p>
<p>Johnny also offered some other advice about my other categories but the general gist was I hadn't quite <em>got it</em>. So I dug into the book (which Johnny kindly sent me).</p>
<h3>The Workbook</h3>
<p>The JD Workbook is a 110-page ebook designed to &quot;<em>guide you through the entire process of setting up your own Johnny.Decimal system</em>&quot;. There are also videos at the end of each section which go over everything in that chapter. I found these useful particularly seeing how Johnny does his index in <a href="https://bear.app">Bear</a>.</p>
<p>Johnny gave me this advice before starting the workbook, in reference to his previous comments:</p>
<blockquote>
<p>I’d really like to see the results after a workbook-doin’. When you do that, try to forget all of this.</p>
</blockquote>
<p>I read the book twice, once just reading and the second time while taking notes about what I thought my areas and categories should look like. I started by creating a new directory in my iCloud Drive, created folders, then used <a href="http://mama.indstate.edu/users/ice/tree/">tree</a> to see the folder structure in plain text:</p>
<pre class="language-bash"><code class="language-bash">tree <span class="token parameter variable">-L</span> <span class="token number">3</span> <span class="token parameter variable">-d</span><br /><span class="token comment"># -L 3 for how many levels deep</span><br /><span class="token comment"># -d for directories only</span><br /><br />├── 00-09 System<br />│   ├── 00 Index<br />│   │   └── 00.01 Index Files<br />│   ├── 01 Exported Data<br /><span class="token comment"># ...and so on</span></code></pre>
<p>I even printed out the worksheets from the back of the book as suggested by Johnny. I found the process really helpful to actually write down with pen and paper rather than into Obsidian or some other note taking app.</p>
<h3>The Index</h3>
<p>Before reading the book I didn't really understand the need for <a href="https://johnnydecimal.com/10-19-concepts/11-core/11.05-the-index/">the index</a>. I get it now. The index is the source of truth for the location of items <strong>and</strong> any additional notes or tasks related to the item. The index is a list of all of your JD IDs stored in some kind of note app, in my case Obsidian. After watching the video on the index, I realised that the part that would be useful to me was adding notes <em>about</em> the files in my IDs. So each ID has a corresponding note. For example, I have a folder called <code>30-39 Resources/30 Fonts/30.02 Media Fonts</code> and in my index Obsidian vault I have a note called <code>30.02 Media Fonts.md</code>. This note contains the following link to <a href="https://www.fontspace.com/london-tube-font-f2717">the source</a> of the <code>London Tube.otf</code> font:</p>
<pre class="language-txt"><code class="language-txt">London Tube Font: https://www.fontspace.com/london-tube-font-f2717</code></pre>
<p>I have found being to add additional notes about a certain items really helpful. In the past I would have the files for something like applying for a mortgage in Finder and then a separate note in Obsidian with things like dates and expected timelines but those two things didn't know anything about each other. Using the index links those things together: if I need to find out information about applying for the mortgage, I open up <code>11.04 Mortgage.md</code> and can see any notes and tasks that need to be done. And based on the ID I know that it it's stored in <code>10-19 Family/11 Finance/11.04 Mortgage</code>. The index is also the place t start when a new project or file doesn't have a home.</p>
<p>As a slight aside and a little outside the spirit of the deliberate nature of the JD system, I didn't actually create the notes in Obsidian until I was mostly done with the folders and files themselves. I built this little script to make the files for me instead:</p>
<pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><br /><br /><span class="token assign-left variable">output</span><span class="token operator">=</span><span class="token string">"/path/to/obsidian/vault"</span><br /><br /><span class="token comment"># put a list of folders names here</span><br /><span class="token assign-left variable">files</span><span class="token operator">=</span><span class="token punctuation">(</span><br /><span class="token string">"50.01 Audio Books"</span><br /><span class="token string">"50.02 Comics"</span><br /><span class="token string">"50.03 Ebooks"</span><br /><span class="token punctuation">)</span><br /><br /><span class="token keyword">for</span> <span class="token for-or-select variable">f</span> <span class="token keyword">in</span> <span class="token string">"<span class="token variable">${files<span class="token punctuation">[</span>@<span class="token punctuation">]</span>}</span>"</span><span class="token punctuation">;</span> <span class="token keyword">do</span><br />    <span class="token function">touch</span> <span class="token string">"<span class="token variable">$output</span>/<span class="token variable">$f</span>.md"</span><br /><span class="token keyword">done</span></code></pre>
<p>After reading the workbook for the second time and thinking some more about my structure, this is where it's at as of today:</p>
<details>
	JD System Structure
	<pre>00-09 System
| 00 Index
│ ├── 00.01 Index Files
| 01 Exported Data
│ ├── 01.01 Twitter
│ ├── 01.02 Tumblr
│ ├── 01.03 Instagram
│ ├── 01.04 Mastodon
│ ├── 01.05 Reddit
│ ├── 01.06 Project Databases
│ ├── 01.07 Other
│ ├── 01.08 TwitPic
| 09 Archive
│ ├── 09.01 Archive
│ ├── 09.02 Camera Uploads
│ ├── 09.03 DevsDoDesign
│ ├── 09.04 Freelance
│ ├── 09.05 Just Delete Me (JDM)
│ ├── 09.06 Personal Sites
│ ├── 09.07 Wordpress Themes
│ ├── 09.08 College
│ ├── 09.09 Uni
│ ├── 09.10 School
│ ├── 09.11 Talks
│ ├── 09.12 Artwork
10-19 Home and Family
| 10 Products
│ ├── 10.01 Washing Machine
│ ├── 10.02 Dishwasher
│ ├── 10.03 Freezer
│ ├── 10.04 Oven
│ ├── 10.05 Microwave
│ ├── 10.06 TV
│ ├── 10.07 Electronics
| 11 Finance
│ ├── 11.01 Mortgage
│ ├── 11.02 Insurance
│ ├── 11.03 Credit Cards
│ ├── 11.04 Loans
│ ├── 11.05 Monzo Pots
| 12 Building Work
│ ├── 12.01 Floorplans and Layouts
│ ├── 12.02 Photos
│ ├── 12.03 Kitchen
│ ├── 12.04 Utility Room
│ ├── 12.05 Bathroom
| 13 Purchases
│ ├── 13.01 123 House Street
│ ├── 13.02 456 House Road
| 14 Legal
│ ├── 14.01 Work
│ ├── 14.02 Deaths
│ ├── 14.03 Deed Poll
│ ├── 14.04 Payslips
│ ├── 14.09 [redacted]
20-29 Podcasts
| 20 Ruminate
│ ├── 20.00 Recordings
│ ├── 20.01 Episodes
│ ├── 20.02 Artwork
│ ├── 20.03 Sounds
│ ├── 20.04 Shownotes
│ ├── 20.05 Episode Art
| 21 We Got Family
│ ├── 21.00 Recordings
│ ├── 21.01 Episodes
│ ├── 21.02 Artwork
│ ├── 21.03 Sounds
│ ├── 21.04 Shownotes
│ ├── 21.05 Episode Art
| 22 Follow Out
│ ├── 22.01 Appearances
│ ├── 22.02 Mentions
│ ├── 22.03 Fan Art
| 23 Show Archives
│ ├── 23.01 The Ricky Gervais Show
│ ├── 23.02 Bionic and Bonanza
│ ├── 23.03 Cooking With Brett and Myke
│ ├── 23.03 Futurama
│ ├── 23.04 Hello Internet
30-39 Resources
| 30 Fonts
│ ├── 30.01 Coding
│ ├── 30.02 Media
│ ├── 30.03 Symbols
│ ├── 30.04 Others
| 31 Icons
│ ├── 31.01 General Use
│ ├── 31.02 Niche
| 32 Music and Sounds
│ ├── 32.01 Clips
│ ├── 32.02 Royalty Free Music
│ ├── 32.03 Blahaj
| 33 Books
│ ├── 33.01 Audio Books
│ ├── 33.02 Comics
│ ├── 33.03 Dev
│ ├── 33.04 eBooks
│ ├── 33.05 Lego
40-49 Hobbies
| 40 Games
│ ├── 40.01 Screenshots
│ ├── 40.02 Manuals
│ ├── 40.03 ROMs
| 41 Lego
│ ├── 41.01 Manuals
│ ├── 41.02 Photos
│ ├── 41.03 MOC
│ ├── 41.04 Comic Con Exclusives
| 42 Raspberry Pi
│ ├── 42.01 PiSight
│ ├── 42.02 Now Playing Pi
| 43 Fundraising
│ ├── 43.01 St Jude 2023
| 44 Streaming
│ ├── 44.01 Backgrounds
50-59 Media
| 50 Tattoo Ideas
│ ├── 50.01 Inbox
│ ├── 50.02 Arm Tattoo
│ ├── 50.03 SleeveStar
│ ├── 50.04 CSS HTML Tattoo
| 51 Memes
│ ├── 51.01 Mine
│ ├── 51.02 Gifs
| 52 Profile
│ ├── 52.01 Avatars
│ ├── 52.02 Headers
│ ├── 52.03 Memoji
│ ├── 52.04 RK Logo
| 53 Wallpapers
│ ├── 53.01 Desktop
│ ├── 53.02 Phone
│ ├── 53.03 iPad
| 54 Media Screenshots
│ ├── 54.01 Comics
│ ├── 54.02 TV
│ ├── 54.03 Back to the Future Posters
│ ├── 54.04 Cornetto Trilogy Posters
| 55 Music
│ ├── 55.01 Album Covers
│ ├── 55.02 Linkin Park Demos
│ ├── 55.03 Bowling for Soup Demos
│ ├── 55.04 Albums
| 56 Photos and Videos
│ ├── 56.00 Camera Uploads
│ ├── 56.01 By Year
│ ├── 56.02 [redacted]
│ ├── 56.03 Paper Drawings
│ ├── 56.04 Various
│ ├── 56.06 Personal Videos
│ ├── 56.07 YouTube Videos
│ ├── 56.08 Wedding Photo Booth
	</pre>
</details>
<h3>Using JD Elsewhere</h3>
<p>One of the things I found really useful was the idea that by using numbers for sorting folders instead of names, <em>things don't move</em>. If I renamed <code>30.02 Garden Patio</code> to <code>30.02 Garden Decking</code> the folder <em>stays in the same place</em>. This seems obvious in hindsight but I found this so useful I incorporated it into my main Obsidian vault. Previously I had three folders called <code>Ideas</code>, <code>Posts</code>, and <code>Projects</code> as well as some more time-specific ones. Now, these are <code>00.01 Ideas</code>, <code>00.02 Posts</code>, and <code>00.03 Projects</code>. Another very obvious-in-hindsight idea came from Johnny's index video: sorting files by last modified instead of by name. I've found this to be way easier to be able to jump in and update a note quickly when I have an idea.</p>
<h3>Conclusion</h3>
<p>I think systems like this tend to either work for a person or don't work at all, there's no middle ground. That's not the case for the JD system. I believe even if it doesn't work as a whole for someone (like John) there are loads of good ideas in here that can be applied in a lot of different cases. It <em>has</em> worked very well for me and I've been able to find files I'm looking for so much quicker than I could before.</p>
<p>Check out the <a href="https://johnnydecimal.com">Johnny Decimal website</a> to read more and if you like it, <a href="https://johnnydecimal.com/10-19-concepts/14-build-your-system/14.02-the-decimal-workbook/">check out the workbook</a>.</p>
]]></content:encoded>
<pubDate>2023-11-15T18:09:17.596+00:00</pubDate>
</item>
<item>
<title>Please, Expose your RSS</title>
<link>https://rknight.me/please-expose-your-rss/</link>
<guid>https://rknight.me/please-expose-your-rss/</guid>
<content:encoded><![CDATA[
<div> RSS feed, link, website, auto-discovery, open web <br />
<br />
总结: 这篇文章介绍了在查找人们的RSS feed链接时的困难和解决方法。作者发现许多人的网站上没有提供RSS订阅链接，这影响了RSS在开放网络中的存在。文章提供了通过使用JS代码片段和RSS自动发现的方法来找到这些链接。作者呼吁网站主应该在网站的头部添加包含RSS feed链接的标签，以便让用户更容易找到和订阅RSS源。同时，作者还提到了如何处理多个不同类型的RSS链接的情况。总之，该文强调了暴露RSS的重要性。 <div>
<p>Earlier this week I had a need to manually find a bunch of people's RSS feed links. It seemed simple enough: go to their website and look for an RSS/Subscribe link but I was surprised to find that a lot of people don't have a link anywhere to their feed.</p>
<p>Even if people only ever add your website into their feed reader and let the app find the RSS feed (see below for more info on this), showing an RSS link reminds people that RSS exists, a win for the open web.</p>
<p>My second step when finding a link failed was to use this handy JS snippet from my <a href="https://podduration.rknight.me">Podcast Duration project</a>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">return</span> Array<span class="token punctuation">.</span><span class="token function">from</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'link'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token parameter">l</span> <span class="token operator">=></span> l<span class="token punctuation">.</span>type<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span><span class="token string">'application/rss+xml'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?.</span>href</code></pre>
<p>This looks for a <code>&lt;link&gt;</code> tag on the website that has a type of <code>application/rss+xml</code>. This is called RSS auto-discovery and is a standard way to expose RSS feeds to help <a href="https://www.rssboard.org/rss-autodiscovery">browsers and other software to automatically find a site's RSS feed</a>.</p>
<p>Like the standard link, a lot of sites were also missing this. This is (at least as a first step) what feed reeders like <a href="https://netnewswire.com">NetNewsWire</a> will use to automatically find a feed when you paste in a URL. If you have an RSS feed, you should have the following in the <code>head</code> of your website:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/rss+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Website<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/feed.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre>
<p>If you have multiple feeds, you can have more than one <code>link</code> tag that links to those feeds as well. For example, say you have a <a href="https://www.jsonfeed.org">JSON feed</a> and a podcast feed you want to link to:</p>
<pre class="language-html"><code class="language-html"><span class="token comment">&lt;!-- Website RSS feed --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/rss+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Website<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/feed.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br /><br /><span class="token comment">&lt;!-- Website JSON feed --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/json<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Website but JSON<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/feed.json<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br /><br /><span class="token comment">&lt;!-- Podcast RSS feed --></span><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>alternate<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>application/rss+xml<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>My Cool Podcast<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com/podcast.xml<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span></code></pre>
<p>Please, expose your RSS.</p>
]]></content:encoded>
<pubDate>2023-11-06T13:11:20.440+00:00</pubDate>
</item>
<item>
<title>App Defaults</title>
<link>https://rknight.me/app-defaults/</link>
<guid>https://rknight.me/app-defaults/</guid>
<content:encoded><![CDATA[
<div> 关键词：邮件客户端、邮件服务器、笔记、待办事项、照片管理

总结：
邮件客户端和邮件服务器分别使用Mail.app和iCloud自定义域名。笔记使用Notes.app和Obsidian。待办事项使用Reminders。照片的拍摄和管理使用iOS Camera和Photos.app。其他应用包括日历使用Fantastical、云存储使用iCloud Drive、RSS使用NetNewsWire、联系人使用Contacts.app、浏览器使用Safari和Chrome、聊天应用使用iMessage、WhatsApp和Discord、稍后阅读使用Omnivore、办公软件使用Sublime Text、Numbers和Keynote、购物清单使用Reminders、音乐使用Apple Music、播客使用Overcast、密码管理使用1Password。 <div>
<p>Inspired by <a href="https://listen.hemisphericviews.com/097">Hemispheric Views 097 - Duel of the Defaults!</a> and this <a href="https://gabz.blog/2023/11/03/my-defaults.html">post by Gabz</a> herein lies all the apps I use in the various categories as written by Andrew:</p>
<ul>
<li><strong>Mail Client</strong>: Mail.app</li>
<li><strong>Mail Server</strong>: iCloud with custom domain</li>
<li><strong>Notes</strong>: Notes.app, Obsidian</li>
<li><strong>To-Do</strong>: Reminders</li>
<li><strong>iPhone Photo Shooting</strong>: iOS Camera</li>
<li><strong>Photo Management</strong>: Photos.app</li>
<li><strong>Calendar</strong>: Fantastical</li>
<li><strong>Cloud file storage</strong>: iCloud Drive</li>
<li><strong>RSS</strong>: NetNewsWire</li>
<li><strong>Contacts</strong>: Contacts.app</li>
<li><strong>Browser</strong>: Safari, Chrome for development/work</li>
<li><strong>Chat</strong>: iMessage, WhatsApp, Discord</li>
<li><strong>Bookmarks</strong>: <a href="https://intersect.rknight.me">The Intersect</a></li>
<li><strong>Read It Later</strong>: Omnivore</li>
<li><strong>Word Processing</strong>: Sublime Text</li>
<li><strong>Spreadsheets</strong>: Numbers</li>
<li><strong>Presentations</strong>: Keynote</li>
<li><strong>Shopping Lists</strong>: Reminders</li>
<li><strong>Meal Planning</strong>: n/a</li>
<li><strong>Budgeting &amp; Personal Finance</strong>: A spreadsheet</li>
<li><strong>News</strong>: Mastodon, BBC News</li>
<li><strong>Music</strong>: Apple Music</li>
<li><strong>Podcasts</strong>: Overcast</li>
<li><strong>Password Management</strong>: 1Password</li>
</ul>
]]></content:encoded>
<pubDate>2023-11-03T17:31:10.949+00:00</pubDate>
</item>
<item>
<title>St Jude 2023</title>
<link>https://rknight.me/st-jude-2023-final-numbers/</link>
<guid>https://rknight.me/st-jude-2023-final-numbers/</guid>
<content:encoded><![CDATA[
<div> 挺多人点赞的筹款活动，达到了运动的第一个目标，筹集了超过774,262.53美元，总筹款额达到了2.98百万美元。有个St Jude子活动筹集了12,590.57美元，并且向15个不同的国家寄出了106个贴纸包。感谢所有的捐款人和特别指出的捐款人们的支持。通过这次活动，作者创建了四个不同的网站，帮助筹集捐款，最后将它们整合到了一个代码库中。来年再做其他的网站会更轻松。总结: 筹款活动取得成功，大量捐款和支持，同时作者还开发了四个网站帮助筹款，为明年的活动提供便利。 <div>
<p>It's September 37th and the <a href="https://512pixels.net/2023/10/775375-54/">Relay for St Jude campaign</a> has closed. They raised $774,262.53, putting Relay at $2.98m lifetime raissed! Our St Jude sub-campaign raised $12,590.57 and sent out 106 sticker packs to 15 different countries. This is a far cry from <a href="https://rknight.me/st-jude-2023/">my initial goal of $250</a>.</p>
<p>I want to thank everyone who donated but I want to call out some people specifically as well:</p>
<ul>
<li><a href="https://neatnik.net">Adam</a> for donating half of <a href="https://omglol.news/2023/10/01/st-jude-fundraiser-report">omg.lol's profits</a> for the entire month - <a href="https://prami.paste.lol/2023-st-jude-fundraiser">$3309</a>! If you want to thank him, you should <a href="https://home.omg.lol/referred-by/robb">sign up for omg.lol</a> - it's a fun community</li>
<li><a href="https://512pixels.net">Stephen</a> for buying the <a href="https://coinme.dad">Coin Daddy domain</a></li>
<li><a href="https://www.klmatthews.com">Kate</a> for always finding bugs the second I pushed a new change. Also for the idea for <a href="https://coinme.dad">Coin Me, Daddy</a></li>
<li><a href="https://tildy.dev">Ben</a> for helping with the API so I could build all the stupid websites for the campaign (see below)</li>
<li><a href="https://www.youtube.com/c/IanOfEarth">Ian</a>, <a href="http://gdovin.net">Mike</a> and all the other dollar daddies</li>
<li><a href="https://zmknox.com">Zach</a> for creating the Donation Daddy logo</li>
</ul>
<p><img alt="Donation Daddy logo" src="https://rknightuk.s3.amazonaws.com/site/donation-daddy-logo.png" /></p>
<p>I also got myself a couple of nice rewards. <a href="http://jdburch.com">JD</a> mowed my name into a lawn and I will be getting a Jony Cube sticker from <a href="https://www.peerreviewed.io">Matt</a>. We hit our first milestone which meant I had to watch <a href="https://www.imdb.com/title/tt2933474/">Superfast!</a> - you can listen to the <a href="https://wegot.family/5/">episode of We Got Family about it here</a>.</p>
<p>The campaign this year led me to make four different websites to help with donations:</p>
<ul>
<li><a href="https://septembed.rknight.me">Septembed</a> - A script for embedding a campaign on your website. This was the start of the japes. Very proud of the name as well.</li>
<li><a href="https://deskmat.help">Desk Mat Help</a> - The precursor to Coin Me, Daddy this site lists all the campaigns that were close to $250 to get a desk mat</li>
<li><a href="https://coinme.dad">Coin Me, Daddy</a> - The most popular of the sites, this one was an idea from Kate. It shows all campaigns that have yet to raise one dollar to get a coin. There are <em>so many</em> donations with the title &quot;Dollar Daddy&quot;</li>
<li><a href="https://donationtreats.rknight.me">Donation Treats</a> - Lists all the rewards you can get for all the available campaigns</li>
</ul>
<p>Initially, these were all separate websites with <em>very</em> similar code. Towards the end of the month I merged these into one single codebase. This should make it a lot easier next year when I'm sure I'll think of some other site to do.</p>
]]></content:encoded>
<pubDate>2023-10-07T06:19:47.956+00:00</pubDate>
</item>
<item>
<title>Add Full Screen Artwork to Your Podcast</title>
<link>https://rknight.me/add-full-screen-artwork-to-your-podcast/</link>
<guid>https://rknight.me/add-full-screen-artwork-to-your-podcast/</guid>
<content:encoded><![CDATA[
<div> iOS17, Apple Podcasts app, full screen artwork, featured, popular podcast app<br /><br />总结: 在iOS17中，Apple Podcasts app推出了全屏艺术封面，但只有被苹果特别推荐的节目才能设置全屏艺术封面。这使得其他节目无法享受到更好的艺术封面体验，而Apple Podcasts app又是最受欢迎的播客应用程序，这让人感到不公平。 <div>
<p>tl;dr: You can't set full screen artwork without being featured by Apple.</p>
<p>In iOS17, the Apple Podcasts app has (for some shows) fancy new full screen artwork but I noticed that <a href="https://ruminatepodcast.com">my</a> <a href="https://wegot.family">shows</a> don't.</p>
<p><img alt="We Got Family artwork vs Connected in Apple Podcasts app" src="https://rknightuk.s3.amazonaws.com/site/full-screen-artwork.png" /></p>
<p>After some hunting around, some <a href="https://social.lol/@robb/111105291859489382">tooting</a>, and messaging <a href="https://mastodon.macstories.net/@johnvoorhees">John</a>, I came across <a href="https://podcasters.apple.com/support/866-promotional-artwork">this page</a> that outlines the full screen artwork. It explains the sizes for hero images, channel covers, and full page show art. It even has photoshop templates. My podcasts are unlikely to be featured but I figured it was worth a shot.</p>
<p>Once I made the art and hit the submit button, it turns out you can <em>only</em> submit hero images and if Apple then deems my show worthy enough for a feature will they then request the full page art.</p>
<p>This feels really shitty that you have to get featured just to get nicer artwork in the Apple Podcasts app which is far and away the most popular podcast app.</p>
]]></content:encoded>
<pubDate>2023-09-22T12:18:12.741+00:00</pubDate>
</item>
<item>
<title>I'm (Not) Building a Podcast Host</title>
<link>https://rknight.me/im-not-building-a-podcast-host/</link>
<guid>https://rknight.me/im-not-building-a-podcast-host/</guid>
<content:encoded><![CDATA[
<p>Late last year I moved <a href="https://ruminatepodcast.com">Ruminate</a> from Simplecast to it's <a href="https://rknight.me/bulding-podcast-site-eleventy/">own site built with Eleventy</a> for a two reasons:</p>
<ol>
<li>I wanted full control over how the site looked</li>
<li>Simplecast is $15 a month and that's a lot for a show that makes no money</li>
</ol>
<p>Since then, I've successfully used that same Eleventy site to build the site for <a href="https://wegot.family">We Got Family</a>, my Fast and Furious podcast. Having both my podcasts hosted myself has been great. I can automate uploads, extract the title and description from the file instead of having to copy and paste it into a CMS, and it costs me <em>basically</em> nothing.</p>
<p>One thing I am missing since I moved away from Simplecast is listener/download numbers. This is, in my opinion, the core selling feature of a dedicated podcast host. Each host does the calculations differently (and they all keep their methods secret) but they do all seem to at least attempt to follow this <em>thrilling</em> document titled <a href="https://iabtechlab.com/wp-content/uploads/2021/03/PodcastMeasurement_v2.1.pdf">&quot;Podcast Measurement Technical Guidelines Version 2.1&quot;</a>. There's some boring stuff in there about the poor advertisers who can't get the data they want and some talk about a new, yet-to-happen reporting feature from some apps but the part I care about is counting listens. The hard part of calculating downloads is parsing server logs: if someone listens in a browser, logs will show multiple partial downloads for that file so that should be counted as one listen.</p>
<p>Thankfully, <a href="https://docs.bunny.net/docs/cdn-log-format">Bunny has a very nice log format</a> that is easy enough to parse. A quick-and-dirty solution me and <a href="https://neatnik.net">Adam</a> came up with for counting a single listen is if the IP address, user agent, and file are the same within the same 24 hour period, count that as one listen. This isn't perfect by any means, but will be good enough for what I want.</p>
<p>This attempt at generating listen stats was partially research into an idea I've had running around in my head for at least a year:</p>
<blockquote>
<p>Can you build a podcast host for smaller podcasts like mine for, say, $20 a year?</p>
</blockquote>
<p>The accounts, uploading files, hosting websites, is all easy enough but when you consider download costs the answer, after going over some calculations with <a href="https://zoeaubert.me">Zoe</a>, is no. The file egress costs (the cost of downloading the files from a CDN) is too high even for a small show.</p>
<p>Update: I got the calculations wrong here for Bunny's pricing so it <em>might</em> still be viable as a product although the margins are still tight.</p>
<p>As an example, if a show has a 30mb episode and that show gets 500 downloads, that's ~15gb of egress. On <a href="https://bunny.net">BunnyCDN</a> that would cost somewhere in the region of $1.50. AWS S3 is about the same. Assuming one episode a month (unlikely), that's pretty close to $20 a year.</p>
<p>These calculations don't even take into account older episodes getting more downloads over time (they definitely will) or the show growing over time (it likely will). What about if someone decides to <a href="https://rknight.me/three-years-of-hemispheric-views-feedback/">listen to all 74 episodes of a show at once</a> leading to 2-3gb of downloads in one go?</p>
<p>There is an argument to be made that variable pricing might work: pay $X per year then monthly pay whatever the CDN cost for your show is but this feels counter-intuitive to building a simple podcast host. I could charge a similar amount as some of the existing services but then I'm not bringing anything new to the table.</p>
<p>Ultimately every solution to the cost problem goes against my initial idea. Instead, I'm going to focus some time on making my Eleventy podcast site more usable for other people to deploy their own podcasts.</p>
]]></content:encoded>
<pubDate>2023-09-20T11:32:33.057+00:00</pubDate>
</item>
<item>
<title>Fundraising for St Jude</title>
<link>https://rknight.me/st-jude-2023/</link>
<guid>https://rknight.me/st-jude-2023/</guid>
<content:encoded><![CDATA[
<p>This year is <a href="https://relay.experience.stjude.org">Relay FM's 5th annual fundraiser</a> for <a href="https://www.stjude.org">St Jude Children's Research Hospital</a>. If you don't know St Jude:</p>
<blockquote>
<p>The mission of St. Jude Children’s Research Hospital is to advance cures, and means of prevention, for pediatric catastrophic diseases through research and treatment. Consistent with the vision of our founder Danny Thomas, no child is denied treatment based on race, religion or a family’s ability to pay.</p>
</blockquote>
<p>Their goal this year is to hit $2.5 <em>million</em> lifetime donations. As part of that individuals, like me, can set up their own campaign which is <a href="https://rknight.me/stjude">exactly what I've done</a>.</p>
<p>I set a milestone of $150 at which point I will watch all 99 minutes of <a href="https://www.imdb.com/title/tt2933474/">Superfast!</a>, a Fast and Furious parody movie which I definitely do not want to watch in any way. That milestone has been hit already so keep an eye out on the <a href="https://wegot.family">We Got Family podcast</a> feed for an episode about it.</p>
<p>My original goal was $250 but <a href="https://adam.omg.lol">Adam of omg.lol</a> kindly donated the entire amount in one go. Then he went one step further and commited to donating 50% of profits from omg.lol for the <em>entire month</em>. So if you're an omg.lol member (or you <a href="https://home.omg.lol/referred-by/robb">sign up</a> for a new account) and you renew your address you're donating to the campaign.</p>
<p>We also have two omg.lol codes up for grabs: anyone who donates $10 or more will be entered to win a five year code and whoever donates the most will win an ultra-rare lifetime code.</p>
<p>I have moved the goal to <s>$3000</s> <s>$5000</s> $10000 and as generous as Adam is being, I don't want it to all come from him so if you can donate anything, even a dollar, it all helps towards an amazing cause.</p>
<p><a href="https://rknight.me/stjude">Donate to the campaign here</a></p>
]]></content:encoded>
<pubDate>2023-08-28T15:28:07.162+00:00</pubDate>
</item>
<item>
<title>It’s Better in the App and Other Lies</title>
<link>https://rknight.me/its-better-in-the-app-and-other-lies/</link>
<guid>https://rknight.me/its-better-in-the-app-and-other-lies/</guid>
<content:encoded><![CDATA[
<p>I've seen a few conversations on Mastodon the last week or so about why we have so many apps rather than decent mobile websites and why we're shown &quot;things are better in the app!&quot; banners (and who's fault is that website?!). I've been thinking about this on and off for a <a href="https://social.lol/@robb/110588163612894889">long time</a>. I don't like that Apple hold all the keys to distrubting an app and I'm a big fan of the open web. I do beleive there are good reasons for native apps in some cases (specifically native features not available in browsers) but not <em>everything</em> needs an app. I think there are three different reasons this is happening so much.</p>
<h3>Gobbling data</h3>
<p>This is the obvious one. It's a lot easier to collect data from a native app than it is from a website. On an app I have very little control over what requests are made, blocking ads, that kind of thing. So of course companies want to use apps to collect this data.</p>
<h3>Making money</h3>
<p>This one applies more to indie developers than it does to big companies but I'm certain people are more willing to pay for an app than access to a website. As an example, <a href="https://www.caseyliss.com/2023/8/7/callsheet">Callsheet</a> <em>could</em> be a website but would people pay $9 a year for a website? I don't think they would.</p>
<h3>People want apps</h3>
<p>This last one is at least a little bit <a href="https://www.youtube.com/watch?v=szrsfeyLzyg">on Apple with their &quot;there's an app for that&quot; ad</a>. A few years ago I ordered a washing machine from <a href="https://ao.com">AO</a> and if I was on mobile the only way to track my order was to download their brand new tracking app. I contacted them about this and I was told they made the app because lots of customers were asking for it.</p>
<p>Just think about that for a second: people want to download an app just to track deliveries of their white goods, something which most people order at most once a year. This is bonkers to me. They did eventually fix the deep link so you could track from the website on mobile.</p>
<p>In some instances it's become impossible to do certain things on mobile because the app doesn't support the feature (for example, buying ebooks on Amazon) but I never get redirected back out</p>
]]></content:encoded>
<pubDate>2023-08-22T10:00:00.608+00:00</pubDate>
</item>
<item>
<title>Just Delete Me: Ten Years Later</title>
<link>https://rknight.me/just-delete-me-ten-years-later/</link>
<guid>https://rknight.me/just-delete-me-ten-years-later/</guid>
<content:encoded><![CDATA[
<p>Ten years ago <a href="https://www.edpoole.me/">Ed Poole</a> and I <a href="https://hellsite.rknight.me/369368988762906626/">launched Just Delete Me</a>. Just Delete Me, as I <a href="https://rknight.me/just-delete-me/">described it at the time</a>, was:</p>
<blockquote>
<p>a directory of urls to delete your account from web services</p>
</blockquote>
<p>I wrote three blog posts in first ten days which you can read here:</p>
<ul>
<li><a href="https://rknight.me/just-delete-me/">Just Delete Me</a></li>
<li><a href="https://rknight.me/24-hours-of-just-delete-me/">24 Hours of Just Delete Me</a></li>
<li><a href="https://rknight.me/just-delete-me-one-million-page-views/">JustDelete.me: One Million Page Views</a></li>
</ul>
<p>As I recall we made it over the course of one Sunday afternoon and launched it the day after. The first day it had a decent amount of visitors (~3000) and then seemingly overnight it got picked up everywhere, including some huge sites:</p>
<ul>
<li><a href="https://mashable.com/archive/justdelete-me">Mashable</a></li>
<li><a href="https://www.wired.com/2013/08/just-delete-me/">Wired</a></li>
<li><a href="https://slate.com/technology/2013/08/just-delete-me-how-to-delete-your-account-on-amazon-netflix-skype-et-al.html">Slate</a></li>
<li><a href="https://www.cnet.com/culture/how-to-delete-your-web-accounts-with-justdelete-me/">CNET</a></li>
<li><a href="https://neil-gaiman.tumblr.com/post/59537088319/futurejournalismproject-delete-yourself-from">Neil Gaiman</a> reblogged it on his Tumblr</li>
</ul>
<p>We spent the next week or two frantically merging pull requests for new sites, going from the 16 we started with to over 100 in a very short space of time. We hit one million page views within nine days of launching and I was interviewed by the Wall Street Journal and a BBC radio station (I don't remember which one nor do I have the recording).</p>
<p>A few days after this I added a service to the site and marked it as difficult to delete, then tweeted about it. Within hours I got an email from their CEO (I won't name him but I will say maybe he had a day phone and a night phone) who was annoyed we had marked them as such and wanted to know what he could do to change that. To the best of my knowledge, they never actually did anything about it.</p>
<p>The only way to contribute to the site was to open a pull request on Github which wasn't great for non-developers so I set up a Google form to collect suggestions and links. We got so many pull requests I completely forgot about the form for a couple of months. When I did remember about it and logged in to have a look I was genuinely surprised to see there was thousands of submissions but most of them weren't suggestions for sites. There was hundreds of submissions that included peoples usernames and passwords for various sites (<em>loads</em> of Facebook ones) because they thought the form was a way to get <em>me</em> to delete their accounts. I promptly deleted that form and the associated sheet, I did not want to be responsible for that data.</p>
<p>Thanks to contributors the site eventually had translations into 20 or so languages and grew to have 476 sites listed at the time I sold it. At some stage in the first few months we put Google ads on the site (gross) and it paid my, admittedly small, rent for the next 2 years (not gross).</p>
<p>Unfortunately the person I sold it to let it go stagnant (turns out they just wanted the domain) but someone forked the project, put it up on a new domain (<a href="https://justdeleteme.xyz/">https://justdeleteme.xyz/</a>) and continued adding sites. It now has over 1500 sites and services listed. This forked project also spun off two other projects based on the same premise: <a href="https://justgetmydata.com">Just Get My Data</a> and <a href="https://justwhatsthedata.github.io/">Just What's The Data</a>.</p>
<p>The original version of the site was built with <s>hopes, dreams, and duct tape</s> a makefile and a whole lot of json files. If I was going to make this exact site today it would be significantly easier with <a href="https://www.11ty.dev/">Eleventy</a> data files and I could probably avoid a lot of the merge conflicts we had in the early days with a better data structure. I also definitely wouldn't put Google ads on the site.</p>
<p>Just Delete Me is still my most popular project at least in terms of page views, although the <a href="https://potimages.rknight.me/">Monzo Pot Image Generator</a> has definitely been more consistent in terms of visits (and ~55k images generated).</p>
<p>Here's every link I collected about the site back then. Given it's been 10 years I'm guessing a lot of these are dead now.</p>
<ul>
<li><a href="http://time.com/3054279/50-best-websites-2014/">50 Best Websites 2014</a></li>
<li><a href="http://live.wsj.com/video/tired-of-being-on-facebook-just-delete-me/39305F59-6E77-4BC8-B3F3-5DDE9D69347A.html#!39305F59-6E77-4BC8-B3F3-5DDE9D69347A">Video - Just Delete Me -- New Website Helps Users Delete Personal Info From Sites - WSJ.com</a></li>
<li><a href="http://www.theage.com.au/digital-life/consumer-security/welcome-to-the-counterrevolution-20140308-34e1v.html">Welcome to the counter-revolution</a></li>
<li><a href="http://readwrite.com/2014/02/05/how-to-remove-yourself-from-the-internet#awesm=~ov27CdupU0RRa3">How To Remove Yourself From The Internet</a></li>
<li><a href="https://zapier.com/blog/productivity-apps-2013/">10 Can't Miss Productivity Apps Released in 2013</a></li>
<li><a href="http://bgr.com/2013/12/17/remove-internet-accounts-just-delete-me/">You can remove yourself from the Internet one website at a time with this</a></li>
<li><a href="http://www.intego.com/mac-security-blog/justdelete-me-is-an-eye-opener/">JustDelete.Me is an Eye-Opener</a></li>
<li><a href="http://www.ebuyer.com/blog/2013/12/how-to-disappear-completely-online/">How to disappear completely…Online</a></li>
<li><a href="http://www.portsmouth.co.uk/news/education/university-of-portsmouth-students-deleting-website-proves-popular-1-5491597">University of Portsmouth students deleting website proves popular</a></li>
<li><a href="http://www.smashingmagazine.com/smashing-newsletter-issue-97/">Smashing Newsletter: Issue #97</a></li>
<li><a href="http://www.onemorethingstudio.com/blog/2013/11/18/bonnes-pioches-14-ux-float-label-pattern-justdeleteme/">Good Picks # 14: UX Design - Float Label Pattern - JustDeleteMe</a></li>
<li><a href="http://www.jamrelian.com/justdelete-me-delete-accounts/">justdelete.me: Delete accounts &amp; quit web services with ease</a></li>
<li><a href="http://www.davescomputertips.com/delete-those-unwanted-online-accounts/">Delete those Unwanted Online Accounts</a></li>
<li><a href="http://www.prdaily.com/Main/Articles/15573.aspx">10 steps to building and managing your personal brand</a></li>
<li><a href="http://www.clickorlando.com/news/deleting-online-trail-proves-difficult/-/1637132/22979182/-/cvnolwz/-/index.html">Deleting online trail proves difficult</a></li>
<li><a href="http://www.makeuseof.com/pages/best-websites">Best Websites</a></li>
<li><a href="http://www.hover.com/blog/domain-of-the-month-november-justdelete-me/">Domain of the Month, November: JustDelete.Me</a></li>
<li><a href="http://www.bbc.co.uk/news/technology-24463390">Webscape: Making exercise a game</a></li>
<li><a href="http://www.forbes.com/sites/adamtanner/2013/10/02/one-easy-way-to-stop-target-and-other-companies-from-selling-your-data/">One Easy Way To Stop Target And Other Companies From Selling Your Data</a></li>
<li><a href="http://www.startribune.com/lifestyle/225069852.html">Vanish from the Web with justdelete.me | Star Tribune</a></li>
<li><a href="http://www.heart.co.uk/southcoast/news/local/students-create-site-deleting-old-accounts/">Students Create Site For Deleting Old Accounts - Heart South Coast News</a></li>
<li><a href="http://forums.theregister.co.uk/forum/1/2013/09/13/students_embark_on_mission_to_delete_you_from_the_internet/">Zuck off, Zuck: Brit duo's JustDelete.Me nukes clingy web accounts • The Register Forums</a></li>
<li><a href="http://www.port.ac.uk/uopnews/2013/09/11/new-one-stop-shop-for-deleting-internet-accounts/">New one-stop shop for deleting internet accounts | UoP News</a></li>
<li><a href="http://www.redmondpie.com/want-to-delete-yourself-from-the-internet-new-web-app-helps-you-do-just-that/">Want To Delete Yourself From The Internet? New Web App Helps You Do Just That! | Redmond Pie</a></li>
<li><a href="http://www.bizjournals.com/albany/blog/socialmadness/2013/08/how-to-disappear-from-the-internet.html">You can vanish from the internet, but it'll take work - Vote for the best company in Albany's business competition</a></li>
<li><a href="http://techbeat.com/2013/09/vanish-from-the-internet-with-justdelete-me/">Vanish from the Internet with JustDelete.me | TechBeat</a></li>
<li><a href="http://apartments.naproperties.com/texas/grapevine/grapevine-station-apartments/news?__rmid=erase_yourself_from_the_intern-239860063.html&amp;xrs=RebelMouse_tw">Grapevine Texas Apartments | Grapevine Station Apartments</a></li>
<li><a href="http://iyaan.info/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">Justdelete.me Wants To Help You Pull The Plug On All Those Pesky Online Accounts | iyaan.info</a></li>
<li><a href="http://www.repubblica.it/tecnologia/2013/08/29/news/pulire_tracce_web-65493280/?ref=fbpr">JustDeleteMe, come pulire le nostre tracce sul Web - Repubblica.it</a></li>
<li><a href="http://thefluffyheads.com/techie-tony/just-delete-me">Just Delete Me | The Fluffy Heads</a></li>
<li><a href="http://www.lowecounsel.com/blog/2013/08/just-delete-me-app-lets-you-disappear-quicker">Just Delete Me: An App That Lets You Disappear, Quicker | COUNSEL</a></li>
<li><a href="http://www.techsupportalert.com/content/how-cancel-online-accounts-easy-way.htm">How to Cancel Online Accounts the Easy Way</a></li>
<li><a href="http://www.watchlistnews.com/2013/08/26/dt-daily-iphone-trade-in-justdelete-me-white-xbox-one/">DT Daily: iPhone trade-in, justdelete.me, White Xbox One - Watch List News</a></li>
<li><a href="http://www.bitrebels.com/technology/just-delete-me-service-directory/">Just Delete Me: Helps You Erase Your Online Presence</a></li>
<li><a href="http://technorati.com/technology/article/got-a-bunch-of-ignored-online/">Got a Bunch of Ignored Online Accounts? Say Hello to JustDelete.me - Technorati Technology</a></li>
<li><a href="http://neil-gaiman.tumblr.com/post/59537088319/futurejournalismproject-delete-yourself-from">Neil Gaiman</a></li>
<li><a href="http://www.komando.com/coolsites/index.aspx?id=15113">Easily delete unwanted online accounts - Cool Sites from The Kim Komando Radio Show® &amp; Web site</a></li>
<li><a href="http://www.pcworld.com/article/2047632/learn-how-to-cancel-your-online-accounts.html">Learn how to cancel your online accounts | PCWorld</a></li>
<li><a href="http://domain.me/justdelete-me/">JustDelete.Me: Are You Tired of Your Social Media Profile? - Domain.ME</a></li>
<li><a href="http://www.crazyengineers.com/threads/justdelete-me-removes-your-web-traces-attracts-5-00-000-views-in-its-first-week.70308/">JustDelete.Me Removes Your Web Traces; Attracts 5,00,000 Views In Its First Week | CrazyEngineers</a></li>
<li><a href="http://fox2now.com/2013/08/28/justdelete-me-makes-cleaning-up-your-online-identity-easy/">JustDelete.Me makes cleaning up your online identity easy | FOX2now.com</a></li>
<li><a href="http://tumblr.thefjp.org/post/59394819304/delete-yourself-from-web-services-with-justdelete-me">The FJP — Delete Yourself From Web Services With...</a></li>
<li><a href="http://www.wonderoftech.com/justdelete-me-close-your-online-accounts-easily/">Justdelete.me – Close Your Online Accounts Easily</a></li>
<li><a href="http://www.foxnews.com/tech/2013/08/27/justdeleteme-helps-wash-away-your-digital-life/">JustDelete.me helps you wash away your digital life | Fox News</a></li>
<li><a href="http://5by5.tv/news/134">5by5 | The News #134: Monday, August 26, 2013</a></li>
<li><a href="http://www.redbull.com.br/cs/Satellite/pt_BR/Article/Site-facilita-retirada-dos-seus-dados-da-Internet-021243357182040">Site facilitates removal of your data from the Internet</a></li>
<li><a href="http://blog.synaix.de/2013/08/justdelete-me-das-loeschregister-im-internet-hilft-uns-beim-aufraeumen-unserer-accounts/">synaix BLOG</a></li>
<li><a href="http://www.digitaltrends.com/web/justdelete-me-helps-delete-unused-online-accounts/">JustDelete.me Helps You Delete Unused and Unwanted Online Accounts | Digital Trends</a></li>
<li><a href="http://www.slate.com/blogs/future_tense/2013/08/26/just_delete_me_how_to_delete_your_account_on_amazon_netflix_skype_et_al.html">Just Delete Me: How to delete your account on Amazon, Netflix, Skype, et al.</a></li>
<li><a href="http://dashburst.com/just-delete-me/">Justdelete.me Wants to Help You Unplug From the Internet for Good</a></li>
<li><a href="http://howto.cnet.com/8301-11310_39-57600044-285/how-to-delete-your-web-accounts-with-justdelete.me/">How to delete your Web accounts with JustDelete.me | How To - CNET</a></li>
<li><a href="http://www.cbc.ca/strombo/technology-1/want-to-delete-yourself-from-the-internet-this-site-can-help.html">Strombo | Want To Delete Yourself From The Internet? This Site Can Help</a></li>
<li><a href="http://www.psfk.com/2013/08/erase-web-presence.html">Erase Your Web Presence With The Click Of One Button - PSFK</a></li>
<li><a href="http://www.idesigntimes.com/articles/7347/20130826/just-delete-me-new-free-website-search-close-account.htm">JustDelete.Me: New Free Website To Delete Search Listings, Close Online Accounts And Remove Personal Information From The Web - International Design Times</a></li>
<li><a href="http://www.anonymousbrasil.com/tecnologia/site-ajuda-usuario-cancelar-servicos-online-desaparecer-internet/">Site helps user to cancel online services and 'disappear' from the internet - Anonymous Brazil</a></li>
<li><a href="http://blogs.phoenixnewtimes.com/jackalope/2013/08/justdeleteme_social_media_delete_facebook_off_the_grid.php">How to Escape Social Media with JustDelete.Me</a></li>
<li><a href="http://www.opposingviews.com/i/technology/justdeleteme-offers-advice-about-how-delete-digital-footprint-internet#">JustDelete.me Offers Advice About How To Delete Digital Footprint From Internet</a></li>
<li><a href="http://everything-pr.com/justdelete-me/245353/#.UhtuCGSDQ18">JustDelete.me Helps You Delete Your Account from 100+ Web Services</a></li>
<li><a href="http://www.tportal.hr/scitech/tehno/282123/Nestanite-s-interneta.html">Disappears from the internet! | Tportal.hr</a></li>
<li><a href="http://www.gizmodo.fr/2013/08/26/supprimez-comptes-ligne-justdelete-me.html">Supprimez facilement vos comptes en ligne avec JustDelete.me</a></li>
<li><a href="http://www.dailydot.com/lifestyle/just-delete-me-web-accounts/">The Daily Dot - Just Delete Me helps you painlessly wipe out all your Web accounts</a></li>
<li><a href="http://dailygadgetry.com/justdelete-me-wants-to-help-you-commit-social-suicide/1629">Justdelete.me wants to help you commit social suicide – Daily Gadgetry</a></li>
<li><a href="http://stadt-bremerhaven.de/just-delete-me-hilft-bei-der-abmeldung-von-internet-diensten/">Just Delete Me helps cancellation of Internet services</a></li>
<li><a href="http://computerhoy.com/noticias/internet/borrate-facebook-twitter-google-justdeleteme-5893">Enrol yourself Delete Facebook, Twitter or Google with Justdelete.me - ComputerHoy.com</a></li>
<li><a href="http://techcrunch.com/2013/08/23/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">Justdelete.me Wants To Help You Pull The Plug On All Those Pesky Online Accounts | TechCrunch</a></li>
<li><a href="http://securityspread.com/2013/08/24/deleting-online-services-longer-need-easy/">Deleting online services you no longer want or need, the easy way | Security Spread</a></li>
<li><a href="http://www.mondoinformazione.com/notizie-estero/cancellarsi-dal-web-just-delete-me/113651/">Just-delete-me a help to unsubscribe from the web</a></li>
<li><a href="http://news.softpedia.com/news/Just-Delete-Me-Removes-You-from-the-Internet-377984.shtml">Just Delete Me Removes You from the Internet</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-08-18T12:44:06.279+00:00</pubDate>
</item>
<item>
<title>Compiling CSS with Eleventy</title>
<link>https://rknight.me/compiling-css-with-eleventy/</link>
<guid>https://rknight.me/compiling-css-with-eleventy/</guid>
<content:encoded><![CDATA[
<p>Yesterday I <a href="https://social.lol/@robb/110894030545897361">asked on Mastodon</a> what methods people are using for compiling CSS with Eleventy. It's been a while since I've need anything more than a single stylesheet but since I keep adding various things to my site, the stylesheet has got a bit unweildy. I'll admit, I know very little about the various css libraries and tools (the last time I did this I used Gulp which tells you how long ago that was) so I was coming to this with basically no knowledge. My basic requirements were:</p>
<ul>
<li>Compile multiple CSS files into one</li>
<li>Minify the CSS</li>
<li>Keep everything in Eleventy. I don't want to have to manage additional libraries and scripts outside the Eleventy build step.</li>
</ul>
<h3>PostCSS</h3>
<p>The first response was <a href="https://social.lol/@jgarber@mastodon.cc/110894115168581629">Jason</a> with his method of <a href="https://github.com/jgarber623/refresh-dc.org/blob/main/lib/plugins/postcss.js">using PostCSS</a> with the <code>easy-import</code> and <code>nesting</code> plugin. This is a nice solution and I have used <a href="https://postcss.org">PostCSS</a> a little bit in the past. <a href="https://martinschneider.me/articles/generating-css-with-postcss-and-eleventy-before/">Martin Schneider has a nice blog post</a> about using PostCSS before the site is built so they can inline and purge the CSS.</p>
<h3>Read the fucking manual</h3>
<p>David Darnes came at me with a classic <a href="https://en.wikipedia.org/wiki/RTFM">RTFM</a>. Turns out Eleventy has a <a href="https://www.11ty.dev/docs/languages/custom/#example-add-sass-support-to-eleventy">page on the docs for doing exactly this</a>. This method uses <a href="https://www.npmjs.com/package/sass">Sass</a> and requires a little bit of config. One thing to note is by default this will output <em>all</em> <code>.scss</code> file to the built site, so I added a check to see if the file is named <code>app</code> and if it's not, then skip it. Alternatively you can put your files in an <code>_includes</code> directory and these won't be output (thanks Dave). <code>style: 'compressed'</code> will minimise the CSS.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br /><span class="token keyword">const</span> sass <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'sass'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'node:path'</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eleventyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">addTemplateFormats</span><span class="token punctuation">(</span><span class="token string">'scss'</span><span class="token punctuation">)</span><br /><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">addExtension</span><span class="token punctuation">(</span><span class="token string">'scss'</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">outputFileExtension</span><span class="token operator">:</span> <span class="token string">'css'</span><span class="token punctuation">,</span><br /><br />    <span class="token function-variable function">compile</span><span class="token operator">:</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">inputContent<span class="token punctuation">,</span> inputPath</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />      <span class="token keyword">let</span> parsed <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>inputPath<span class="token punctuation">)</span><br />      <span class="token keyword">if</span> <span class="token punctuation">(</span>parsed<span class="token punctuation">.</span>name <span class="token operator">!==</span> <span class="token string">'app'</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token comment">// we only want the output of app.scss</span><br />      <span class="token keyword">let</span> result <span class="token operator">=</span> sass<span class="token punctuation">.</span><span class="token function">compileString</span><span class="token punctuation">(</span>inputContent<span class="token punctuation">,</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">loadPaths</span><span class="token operator">:</span> <span class="token punctuation">[</span>parsed<span class="token punctuation">.</span>dir <span class="token operator">||</span> <span class="token string">'.'</span><span class="token punctuation">,</span> <span class="token keyword">this</span><span class="token punctuation">.</span>config<span class="token punctuation">.</span>dir<span class="token punctuation">.</span>includes<span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">style</span><span class="token operator">:</span> <span class="token string">'compressed'</span><span class="token punctuation">,</span><br />      <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />      <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">return</span> result<span class="token punctuation">.</span>css<br />      <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<h3>LightningCSS</h3>
<p>I hadn't heard of <a href="https://lightningcss.dev">LightningCSS</a> until yesterday but it's a &quot;CSS parser, transformer, bundler, and minifier&quot; built with Rust. <a href="https://thinkdobecreate.com/">Stephanie Eckles</a> has an <a href="https://github.com/5t3ph/eleventy-plugin-lightningcss">Eleventy plugin</a> for using LightningCSS which handles all the configuration and as a bonus ignores any files that start with <code>_</code> so they won't get copied to the build folder.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br /><span class="token keyword">const</span> lightningCSS <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"@11tyrocks/eleventy-plugin-lightningcss"</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">eleventyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">addPlugin</span><span class="token punctuation">(</span>lightningCSS<span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p>Ultimately I like how simple this is to add to my existing site without any additonal configuration so I think this is the way I'm going to go.</p>
]]></content:encoded>
<pubDate>2023-08-16T12:30:35.115+00:00</pubDate>
</item>
<item>
<title>Block ChatGPT and other AI Bots with robots.txt</title>
<link>https://rknight.me/block-chatgpt-with-robotstxt/</link>
<guid>https://rknight.me/block-chatgpt-with-robotstxt/</guid>
<content:encoded><![CDATA[
<p>A <code>robots.txt</code> file &quot;tells search engine crawlers which URLs the crawler can access on your site&quot;. Generally one would use this to tell a search engine which directories should be crawled, which ones shouldn't, or to completely block from crawling your site. The file lives at the root of your site. You can <a href="https://rknight.me/robots.txt">see mine here</a>.</p>
<p><a href="https://chat.openai.com">ChatGPT</a> has two user agents that might attempt to crawl your site: <a href="https://platform.openai.com/docs/gptbot"><code>GPTBot</code></a> and <a href="https://platform.openai.com/docs/plugins/bot/chatgpt-user"><code>ChatGPT-User</code></a>. To disallow crawling from both of these, we can set our <code>robots.txt</code> file like so:</p>
<pre class="language-txt"><code class="language-txt">User-agent: GPTBot<br />Disallow: /<br /><br />User-agent: ChatGPT-User<br />Disallow: /</code></pre>
<p>Update 2023-09-29: <a href="https://neil-clarke.com/block-the-bots-that-feed-ai-models-by-scraping-your-website/">Neil Clarke has a great post</a> with some additional bots that should be blocked:</p>
<pre class="language-txt"><code class="language-txt">User-agent: CCBot<br />Disallow: /<br /><br />User-agent: Google-Extended<br />Disallow: /<br /><br />User-agent: Omgilibot<br />Disallow: /</code></pre>
<h3>Adding a robots.txt file to Eleventy</h3>
<p>Using Eleventy's <a href="https://www.11ty.dev/docs/copy/">passthrough file copy</a> we can create a <code>robots.txt</code> file and then add the following to our Eleventy config to make sure the file is copied to your built site:</p>
<pre class="language-js"><code class="language-js">eleventyConfig<span class="token punctuation">.</span><span class="token function">addPassthroughCopy</span><span class="token punctuation">(</span><span class="token string">'robots.txt'</span><span class="token punctuation">)</span></code></pre>
<p>Alternatively you can do this with just a file and a permalink:</p>
<pre class="language-txt"><code class="language-txt">---<br />permalink: robots.txt<br />eleventyExcludeFromCollections: true<br />---<br /><br />// user agents here</code></pre>
<p>And there we go. ChatGPT, in theory, should be blocked from crawling our site.</p>
]]></content:encoded>
<pubDate>2023-08-12T09:12:43.328+00:00</pubDate>
</item>
<item>
<title>Three Years of Hemispheric Views Feedback</title>
<link>https://rknight.me/three-years-of-hemispheric-views-feedback/</link>
<guid>https://rknight.me/three-years-of-hemispheric-views-feedback/</guid>
<content:encoded><![CDATA[
<p>I recently started listening to the <a href="https://hemisphericviews.com/">Hemispheric Views</a> podcast and decided I would go back to the start and listen to the 74 previous episodes that I hadn't listened to. I wrote down <em>all</em> my feedback. I started this endevour on the 17th of May and finished the last episode this morning. <a href="https://grepjason.sh/">Jason</a> agreed to this:</p>
<blockquote>
<p>We will take any feedback, 3 years old or otherwise haha</p>
</blockquote>
<p>In total I listened to just over 58 hours of main show and over ten hours of the one prime plus dot com member show. About ten episodes in I started singing the theme song to Baby Knight.</p>
<h3>Main Show</h3>
<ul>
<li><a href="https://rknightuk.s3.amazonaws.com/site/desk-2023.jpg">Roast my desk please</a></li>
<li>001 Jason tried Vegemite, has he tried marmite?</li>
<li>002 Martins “Game Boy micro USB” joke wasn’t acknowledged as it should have been</li>
<li>003 Did Jason ever develop the 1926 camera film?</li>
<li>004 Halloween is the worst &quot;holiday&quot;</li>
<li>009 Of course the week starts on Monday, anything else is mayhem</li>
<li>009 I watched an episode of <a href="https://youtu.be/Fahf77qzEnE">Bargearse</a> and it was glorious</li>
<li>010 I love picking a random movie that's on TV when I’m away in a hotel or something but never do it at home</li>
<li>010 One of favourite bands <a href="https://www.youtube.com/watch?v=C7bnFPaGnkc">covered the Round the Twist theme song</a></li>
<li>011 Andrew is a <a href="https://www.youtube.com/watch?v=Qsj2-dWf1ko">briefcase wanker</a></li>
<li>012 Gabriel’s <a href="https://www.lego.com/en-gb/product/poe-s-x-wing-fighter-75102">Orange Lego X-Wing</a> is canon</li>
<li>014 What the hell is with Australian nature</li>
<li>014 I would die for <a href="https://www.youtube.com/watch?v=3vIaCXCkkrs">the Gobbledok</a></li>
<li>014 “Nissan <a href="https://en.wikipedia.org/wiki/Iambic_pentameter">Iambic pentameter</a>” 👏</li>
<li>016 Andrew hasn’t seen Batman and Robin?! He should rectify that</li>
<li>016 <a href="https://rknight.me/building-a-pisight/">I put a Raspberry Pi camera in an iSight</a></li>
<li>017 &quot;Double digit coffee action&quot; would be a good band name</li>
<li>019 My partner spent years using ~$10 headphones. When I gave her my good ones, she was blown away at how good music can sound</li>
<li>020 Screw it, I’m making my own asset deprecation spreadsheet</li>
<li>020 Sealed triangle toastie is the best toastie type</li>
<li>022 Alex makes the media corner theme tune, a few years later he’s in Eurovision. Suspicious.</li>
<li>022 The premise of <a href="https://en.wikipedia.org/wiki/Crackerjack_(2002_film)">Crackerjack</a> sounds identical to <a href="https://www.imdb.com/title/tt0337879/">Blackball</a></li>
<li>022 “Perthsuaded” I hate this</li>
<li>023 “<em>There still isn’t a good email app on iOS</em>” - Andrew. This is because email is bad, stop looking for your own sanity</li>
<li>023 “Everything surrounding email is wrong”</li>
<li>023 <a href="https://rknight.me/micro/110361312690891868/">Here’s my homescreen</a></li>
<li>023 I wish Apple would allow apps to be anywhere on the Home Screen too. Please Tim Apple.</li>
<li>023 I have 203 apps installed</li>
<li>025 Is Andrew still using the johnny decimal system?</li>
<li>027 Game preservation is why I’ve tried as best I can to only buy physical games - currently I have around <a href="https://rknight.me/collections/games">300 across a bunch of consoles</a></li>
<li>028 A few years ago we built a <a href="http://knockoffia.devsdodesign.com">Nokia 3310 simulator</a> in the browser</li>
<li>029 I wear shoes in the house, life is too short</li>
<li>031 I wear the same black socks all year round, regardless of jeans or shorts. All my socks are identical so I don’t have to pair them up. I say no to funny socks</li>
<li>031 Perhaps there’s a market for discounted once-used socks, then Jason could have new socks every day</li>
<li>031 This is more than I ever needed to know about air conditioning</li>
<li>033 I also love going to grocery stores in other countries</li>
<li>033 I laughed at Andrew’s joke about going to Cloud 9</li>
<li>034 My neighbour works at the Office of National Statistics and it sounds fascinating</li>
<li>034 I’ve never seen rocky road with Turkish delight. That sounds incredible.</li>
<li>036 I spat my drink out at “FinderJimbo”</li>
<li>038 “Clean show”? Jason has definitely sworn on at least 4 episodes</li>
<li>038 Movies our spouses don’t like? My partner refuses to watch any Fast and Furious movie despite the fact that <a href="https://wegot.family">I love them</a></li>
<li>038 TODAY!</li>
<li>039 I know my neighbours now but didn’t at my last house that I lived at for 10 years. I did what Jason did when we moved and drew a map with names of everyone. It helped that we moved in around Christmas so everyone sent cards with their names</li>
<li>040 I am furious Andrew doesn’t use “Grand Canion” as a username everywhere because that is so fucking good</li>
<li>040 Pen licence! I never actually got mine because my writing was (and still is) terrible, I outlasted them until year 4 when everyone had to use a pen anyway</li>
<li>042 Right at the start Jason swears and isn’t bleeped and then immediately after in the same sentence he is bleeped. No notes, just amused</li>
<li>042 That stupid EA Sports intro in burned into my brain from play FIFA World Cup ‘98 on the N64. Immediately after Song 2 by Blur would play so it wasn’t all bad</li>
<li>044 Never say “state daddy” again</li>
<li>044 Fruit Loops is a garbage cereal. Lucky Charms all the way</li>
<li>044 Andrew said the milk on the box looked too white and creamy. That’s because they usually use paint or PVA glue for milk in food photography</li>
<li>045 I couldn’t use just spotlight. I have so many <a href="https://rknight.me/alfred-workflows/">workflows</a> I use in Alfred</li>
<li>046 The shuffling albums on Spotify drama with Adele was so stupid</li>
<li>046 One arcade machine for my house? Time Crisis 2</li>
<li>046 It’s 7am here and a breakfast lasagne sounds amazing</li>
<li>046 What happened to <a href="https://decimeal.com/">Decimeal</a></li>
<li>049 “<em>I don’t know if anyone does this but go back to the beginning of the RSS archive, apparently people have other things to do</em>” - Martin</li>
<li>049 The formal intro thing is unsettling</li>
<li>050 What on earth was all this Dolly Parton talk?!</li>
<li>051 I hadn’t considered the comparison to Dharma for Severance but that is an excellent observation</li>
<li>051 🛎️ More Dolly Parton</li>
<li>051 I watched Severance in one night until 6am while sleep-deprived when Baby Knight was born. It definitely gave it a different vibe</li>
<li>052 Another recommendation for Punk Rock Factory: <a href="https://www.youtube.com/watch?v=CUbul4f8AX8">We Don't Talk About Bruno cover</a></li>
<li>053 The people saying sorry too much thing is a problem in the UK as well, I hate it</li>
<li>054 I refuse to listen to podcasts that have dynamically inserted ads</li>
<li>054 I have a disappearing dock and like it. Sorry Natasha</li>
<li>055 My MX Master works fine on Bluetooth</li>
<li>057 Martin on Elon buying Twitter “<em>I’m cautiously optimistic that something really useful will happen and it will change for the better</em>”</li>
<li>058 My entrance music would be <a href="https://song.link/s/0q6Qyd2QaHMHp7APKyQsyi">Not the Same by Bodyjar</a> because it’s a banger</li>
<li>059 I’m scared to do bad show notes lest I feel the wrath of Jason</li>
<li>061 I have my school yearbook but I never look at it</li>
<li>061 Perfect foods: pizza, spaghetti bolognese, donor kebab with lettuce and garlic sauce</li>
<li>061 “Feld tip” 👀</li>
<li>063 This was an excellent discussion about podcasts</li>
<li>064 I refuse to believe it's pronounced ex-mouth</li>
<li>064 This business corner was incredible</li>
<li>065 I guessed the bus story was fake</li>
<li>068 wtf was that Cappuccino talk</li>
<li>069 We have Nobby’s nuts here too</li>
<li>069 You’re making me want a Play Date</li>
<li>069 My top five movies:
<ul>
<li>Back to the Future (I even have a Back to the Future tattoo)</li>
<li>Hot Fuzz</li>
<li>Baby Driver</li>
<li>Captain America: Winter Soldier</li>
<li>Straight Outta Compton</li>
</ul>
</li>
<li>070 Benji said he doesn’t like the yellow bit of eggs. Notable.</li>
<li>070 “<em>Be more negative</em>” - Benji</li>
<li>072 Martin will hate this sign from a UK chain where <a href="https://www.alamy.com/stock-photo-a-poundland-store-sign-71740740.html?imageid=1F597E32-BEC1-46FC-9C74-1CCCBC895D64&amp;p=179593&amp;pn=1&amp;searchId=8798bbaa288a340a187eb179f2e6aaea&amp;searchtype=0">“everyday” should be two words</a></li>
<li>074 My favourite photos from 2022:</li>
</ul>
<p><img alt="A phonebox with the words criminal damage graffitied on it" src="https://rknightuk.s3.amazonaws.com/site/2022-criminal-damage.jpg" /></p>
<p>A phone box in Edinburgh</p>
<p><img alt="The Edinburgh skyline at night" src="https://rknightuk.s3.amazonaws.com/site/2022-edinburgh.jpg" /></p>
<p>The Edinburgh skyline at night</p>
<p><img alt="Two wine glasses with the Pantheon in the background" src="https://rknightuk.s3.amazonaws.com/site/2022-pantheon.jpg" /></p>
<p>Having a drink in front of the Pantheon</p>
<h3>one prime plus dot com member show</h3>
<ul>
<li>01 Now I need to make a home wiki</li>
<li>02 The eighties <em>were</em> sexy</li>
<li>06 This number plate story is wonderful</li>
<li>06 In the UK we didn’t line dance at school, but we did <a href="https://en.m.wikipedia.org/wiki/Morris_dance">Morris Dance</a></li>
<li>07 I started podcasting because I said, kind of as a joke, “Lets do a podcast?” to John Voorhees ~8 years ago</li>
<li>07 “<em>Am I being too intense?</em>” - Martin. No Martin, you crack on.</li>
<li>08 I guessed before I listened: I think Jason is tallest, then Andrew, then Martin.</li>
<li>08 UK folks uses imperial for height and a lot of the time weight as well. Oh and speed limits and distances are usually imperial too.</li>
<li>08 You are all very tall</li>
<li>09 The health insurance I have through work has a scheme to get a discounted Apple Watch if you do a certain amount of steps/exercise minutes every week</li>
<li>013 My mum was a social worker her entire career. I remember her saying “are you sure about these computers as a job?” when I was 16. Maybe she was right.</li>
<li>013 I have it on good authority that a lot of universities use group work so the students who are doing worse still pass because they get paired up with one or two people who will do the work</li>
<li>016 My pre-teen photo, 5 years old on my last day of a holiday in Cyprus:</li>
</ul>
<p><img alt="Me at 4 in Cyprus" src="https://rknightuk.s3.amazonaws.com/site/me-young.jpg" /></p>
<ul>
<li>016 wtf is ham sauce for beans</li>
<li>019 The kebab story 👏</li>
<li>020 A half onesie is mayhem</li>
<li>021 I view someone not voting essentially as a vote for the “winner”. Ultimately if you didn’t vote, you don’t have the same legitimacy to complain as someone who did.</li>
<li>023 Wogman. Just…wow. Incredible.</li>
<li>024 I will not download Day One again. I will not download Day One again.</li>
<li>026 I’ve been really enjoying Omnivore for my read later stuff</li>
<li>027 Arc is definitely a “have you heard the good word” product for sure</li>
<li>027 I like my gum the standard format</li>
<li>029 Andrews ability to improvised over-the-top intros is amazing</li>
<li>029 Food pleasures: crisps, literally any crisps</li>
<li>030 bullying</li>
<li>031 Some birds have been known to <a href="https://www.independent.co.uk/news/science/from-modems-to-alarms-the-world-of-bird-mimics-6105998.html">mimic car alarm sounds</a></li>
<li>031 We need a Mastodon instance called Screacher</li>
<li>032 Sorry Jason the opening the crisps with scissors thing is weird</li>
</ul>
]]></content:encoded>
<pubDate>2023-08-01T12:00:01.145+00:00</pubDate>
</item>
<item>
<title>Fix for Low Volume Exported Audio in GarageBand</title>
<link>https://rknight.me/fix-for-low-volume-exported-audio-in-garageband/</link>
<guid>https://rknight.me/fix-for-low-volume-exported-audio-in-garageband/</guid>
<content:encoded><![CDATA[
<p>Yesterday <a href="https://hachyderm.io/@mikestreety/110685303152811714">Mike pointed out</a> that the pilot episode of <a href="https://wegot.family/0">my new podcast</a> was quiet compared to other shows. I opened up the project files in GarageBand and couldn't see anything that would be causing this so I started hunting around in the settings. It turns out the &quot;Export projects at full volume&quot; was causing this. I don't know what this setting is supposed to do but I turned it off, exported the episode again, and it was fixed.</p>
<p><img alt="GarageBand setting for full volume export" src="https://rknightuk.s3.amazonaws.com/site/garageband-setting.png" /></p>
]]></content:encoded>
<pubDate>2023-07-10T08:28:42.770+00:00</pubDate>
</item>
<item>
<title>A Threads Thread Blog Post</title>
<link>https://rknight.me/a-threads-thread-blog-post/</link>
<guid>https://rknight.me/a-threads-thread-blog-post/</guid>
<content:encoded><![CDATA[
<p>I wanted to expand a bit on my <a href="https://social.lol/@robb/110665866974743896">Threads thread</a> so instead of adding to the thread, I've written a blog post about Threads. Clear? Good.</p>
<p>The Mastodon blog has <a href="https://blog.joinmastodon.org/2023/07/what-to-know-about-threads/">a good post about Threads</a> and what it means for the fediverse in general:</p>
<blockquote>
<p>The fact that large platforms are adopting ActivityPub is not only validation of the movement towards decentralized social media, but a path forward for people locked into these platforms to switch to better providers</p>
</blockquote>
<p>I have no intention of using Threads, signing up was purely an academic exercise. I'm not even going to link to my profile but if you happen to find me, I'll be posting random emojis when I remember the app exists.</p>
<blockquote>
<p>Threads shows me a load of crap from people I don’t follow.</p>
</blockquote>
<p>I said &quot;as expected&quot; in my Mastodon post but I'm not sure I'd actually thought about this. <em>Of course</em> they were going to dump random stuff into the timeline. And <em>of course</em> this will include ads/promoted posts in the future. I wonder if they intend to inject ads into a persons timeline when they support ActivityPub so even if you follow from Mastodon you see ads (until I immediately unfollow them). We shall see.</p>
<p>The app does that awful refresh like Instagram does when you open the app, start reading something, then it’s gone, never to be seen again. <a href="https://mastodon.social/@CTD/110665895008825097">CTD said</a> they have muscle memory to favourite posts on Instagram when it opens just in case this happens? That is <em>wild</em> that people feel the need to do that just because the app sucks. Now we have two apps that suck like that.</p>
<p>Speaking of ActivityPub, they say it's coming, it's mentioned in help docs but I agree with <a href="https://social.lol/@andyn/110665801776694098">Andy</a>:</p>
<blockquote>
<p>it either won’t happen at all, or won’t happen for a long time</p>
</blockquote>
<p>I made a <a href="https://rknight.me/building-an-activitypub-server/">basic ActivityPub server a few weeks ago</a> and while it doesn't implement everything that ActivityPub has to offer, it's close enough. I'm surprised a company the size of Meta, who has a huge team of engineers couldn't get this working for launch. To be clear I'm not saying &quot;herp derp I did it why can't they&quot; but still, I find it surprising. If we don't see it within a month, I think we might never see it.</p>
<p>Assuming they <em>do</em> release AP support, I <em>am</em> excited for that. Being able to follow people who will never join Mastodon sounds great. I don't want to use Threads (much like Bluesky) just to follow a handful of people. Here's hoping they <em>do</em> release it and that they don't inject ads into a user's posts.</p>
]]></content:encoded>
<pubDate>2023-07-06T08:05:16.652+00:00</pubDate>
</item>
<item>
<title>Custom Sidebar Icons in Finder</title>
<link>https://rknight.me/custom-sidebar-icons-in-finder/</link>
<guid>https://rknight.me/custom-sidebar-icons-in-finder/</guid>
<content:encoded><![CDATA[
<p><img alt="Custom icons in the Finder" src="https://rknightuk.s3.amazonaws.com/site/custom-icons.png" /></p>
<p>MacOS customisation is basically dead. Plenty of apps that used to work, no longer do. You can still have custom folder icons which is nice but I wanted custom sidebar icons for those folders, like <a href="https://rknight.me/micro/110615734381939778/">the developer one</a>.</p>
<p>I started googling around trying to find something for recent versions of MacOS and the only thing I found was <a href="https://www.reddit.com/r/mac/comments/seig87/how_to_make_custom_finder_sidebar_icons_big_sur/">this Reddit post</a> outlining a method to do it with PNGs. Between me and <a href="https://www.keiransell.com">Keir</a> we were able to make it work not only with any standard <a href="https://developer.apple.com/sf-symbols/">SF Symbol</a> but custom made ones as well.</p>
<p>You'll need Xcode installed to do this but the instructions relatively simple. I will say it's <em>really</em> flaky when building, sometimes it works, sometimes it doesn't, sometimes it just shows a random icon instead. All of the instructions are on <a href="https://github.com/rknightuk/custom-finder-sidebar-icons">the GitHub repository</a> including some dandy screencasts from Keir.</p>
]]></content:encoded>
<pubDate>2023-06-29T16:28:34.602+00:00</pubDate>
</item>
<item>
<title>Building an ActivityPub Server</title>
<link>https://rknight.me/building-an-activitypub-server/</link>
<guid>https://rknight.me/building-an-activitypub-server/</guid>
<content:encoded><![CDATA[
<p>To start with, I'm not convinced everything I've done here is exactly to the ActivityPub specification or if there will be problems interacting with Bugle on various ActivityPub servers outside the main ones (Mastodon, Calckey, etc). I'm also unclear on which parts of this are Mastodon-specific and which parts are pure ActivityPub. I will use Mastodon as the example external server throughout.</p>
<p>I won't go over setting up my database or server for this but at minimum you'll need a way to handle requests, render JSON, and a database to store posts and activities.</p>
<h3>WebFinger and Profile JSON</h3>
<p>This is the easiest part of the whole thing, two JSON files: <code>.well-known/webfinger</code> and <code>@bugle.json</code>.</p>
<p><code>.well-known/webfinger</code> is how ActivityPub finds links to your profile. Searching for <code>@bugle@bugle.lol</code> on Mastodon, for example, will send a <code>GET</code> request to <code>https://bugle.lol/.well-known/webfinger?resource=acct:bugle@bugle.lol</code> which will return the following:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br /><br />  <span class="token property">"subject"</span><span class="token operator">:</span> <span class="token string">"acct:bugle@bugle.lol"</span><span class="token punctuation">,</span><br />  <span class="token property">"links"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />    <span class="token punctuation">{</span><br />      <span class="token property">"rel"</span><span class="token operator">:</span> <span class="token string">"self"</span><span class="token punctuation">,</span><br />      <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"application/activity+json"</span><span class="token punctuation">,</span><br />      <span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p>The server handles checking if the requested <code>resource</code> exists and returning the correct data. The <code>links</code> part is how it knows the account lives at <code>bugle.lol/@bugle</code>. This might seems obvious but it isn't always the case that the username match the domain where the profile lives. For example, the profile for <a href="https://mastodon.macstories.net/@viticci">viticci@macstories.net</a> is actually at <code>mastodon.macstories.net/@viticci</code>, which is indicated by the webfinger.</p>
<p>Once Mastodon has the link, it will make a request to that link (in this case <code>https://bugle.lol/@bugle</code>) for the profile json file which includes general profile information like name, avatar, and bio, as well as which endpoints it should send requests to. These are usually called an inbox although the actually name and path isn't important.</p>
<p>You can see a full example on <a href="https://social.lol/@robb.json">my Mastodon profile</a> but I'll go through the main important parts here. The first part is the <code>@context</code>, which as best I can tell it an indicator of the type of object(?) we're defining, in this case an activity stream.</p>
<pre class="language-json"><code class="language-json"><br /><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	    <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	    <span class="token string">"https://w3id.org/security/v1"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p>The next part is an ID to identify your user, a type to define that this is a <code>Person</code>, and endpoints for various features, some of which are Mastodon-specific (like <code>featured</code> and <code>featuredTags</code>).</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Person"</span><span class="token punctuation">,</span><br />	<span class="token property">"following"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/following"</span><span class="token punctuation">,</span><br />	<span class="token property">"followers"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/followers"</span><span class="token punctuation">,</span><br />	<span class="token property">"inbox"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/inbox"</span><span class="token punctuation">,</span><br />	<span class="token property">"outbox"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/outbox"</span><span class="token punctuation">,</span><br />	<span class="token property">"featured"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/collections/featured"</span><span class="token punctuation">,</span><br />	<span class="token property">"featuredTags"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/collections/tags"</span><span class="token punctuation">,</span><br />	<span class="token property">"endpoints"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />	    <span class="token property">"sharedInbox"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/inbox"</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>I'm not entirely sure when most of these are used aside from when first searching for a profile (because I see the requests in the logs) but the important ones here are <code>inbox</code> and <code>endpoints.sharedInbox</code>. This is where replies and mentions will get posted to (<code>sharedInbox</code>) and activities such as likes, follows, and boosts (<code>inbox</code>). I'll go into how that works further down.</p>
<p>We also need information about the profile itself like name, bio, profile picture, and so on. The <code>icon</code> attributes refer to your main profile image and <code>image</code> refers to a header image.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"bugle dot lol"</span><span class="token punctuation">,</span><br />	<span class="token property">"summary"</span><span class="token operator">:</span> <span class="token string">"&lt;p>A bio goes here&lt;/p>\n"</span><span class="token punctuation">,</span><br />	<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />	<span class="token property">"manuallyApprovesFollowers"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span><br />	<span class="token property">"discoverable"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br />	<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2022-12-16T00:00:00Z"</span><span class="token punctuation">,</span><br />	<span class="token property">"icon"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Image"</span><span class="token punctuation">,</span><br />		<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">,</span><br />		<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/200/300"</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span><br />	<span class="token property">"image"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Image"</span><span class="token punctuation">,</span><br />		<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">,</span><br />		<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/600/300"</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>Finally we need a <code>publicKey</code> attribute. This is used to validate requests to and from the server:</p>
<pre class="language-json"><code class="language-json"><span class="token property">"publicKey"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle#main-key"</span><span class="token punctuation">,</span><br />		<span class="token property">"owner"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />		<span class="token property">"publicKeyPem"</span><span class="token operator">:</span> <span class="token string">"-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyB9YyNt5OB23VW3sFm5o\nPnV4phqSXgqwyqmjXIE6ZtwLE0I6JEeeqv+SD2pd9QDXiUfugEWuUyNImZCglNg2\nV3Vh/NNr/YX6tWW6VSkudJ/b8lNQF8Rr/Z9wK9jD0WUmFs+YjS0R/KePDtLt1HOX\nVfjPLyOCODO+ykXQkydLI1RZf3V+iJdiTP9e5nhBxQGHkbyVja/86uqJIC96zyX4\nQPteEtHjXngVgO6QozCQu6Null4WFOHUdPGHaN7wsJtkZV10BPp3yCOiirJQlXSp\no+7YfJuROFv8QU+jWitTPTYWQYEuRwUfDUsdThqSh/u6eZt2hHjTzcI0/qgpxWqI\n1wIDAQAB\n-----END PUBLIC KEY-----\n"</span><br />	<span class="token punctuation">}</span><span class="token punctuation">,</span></code></pre>
<p>You can generate these in most languages. Here's how I did it in PHP on profile creation to store in the database:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$config</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />	<span class="token string double-quoted-string">"private_key_bits"</span> <span class="token operator">=></span> <span class="token number">2048</span><span class="token punctuation">,</span><br />	<span class="token string double-quoted-string">"private_key_type"</span> <span class="token operator">=></span> <span class="token constant">OPENSSL_KEYTYPE_RSA</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$keypair</span> <span class="token operator">=</span> <span class="token function">openssl_pkey_new</span><span class="token punctuation">(</span><span class="token variable">$config</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token function">openssl_pkey_export</span><span class="token punctuation">(</span><span class="token variable">$keypair</span><span class="token punctuation">,</span> <span class="token variable">$private_key</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token function">openssl_pkey_get_details</span><span class="token punctuation">(</span><span class="token variable">$keypair</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$public_key</span> <span class="token operator">=</span> <span class="token variable">$public_key</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"key"</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<h3>Receiving Activities</h3>
<p>As mentioned above there are two endpoints for receiving activities: The global inbox (<code>/inbox</code>) and the user inbox (<code>/@bugle/inbox</code>).</p>
<h3>Validating Requests</h3>
<p>All signature validation is handled in my <a href="https://github.com/rknightuk/bugle/blob/main/app/Services/HttpSignature.php"><code>HttpSignature</code> class</a> if you'd prefer to look at the code directly.</p>
<p>Every request that comes in should be validated against the signature to make sure it's a valid request. The first step is to extract the values into an array keyed by the name (other languages and frameworks might have an easier way to do this).</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$values</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// split the signature at ',' and assign each one</span><br /><span class="token comment">// to $values, keyed by its name</span><br /><span class="token variable">$parts</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'signature'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$parts</span> <span class="token keyword">as</span> <span class="token variable">$current</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token variable">$pair</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'='</span><span class="token punctuation">,</span> <span class="token variable">$current</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$key</span> <span class="token operator">=</span> <span class="token variable">$pair</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />	<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$pair</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$values</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token comment">// $values is now:</span><br /><span class="token comment">// [</span><br /><span class="token comment">//    'keyId' => 'https://mas.to/users/rknightuk#main-key',</span><br /><span class="token comment">//    'algorithm' => 'rsa-sha256',</span><br /><span class="token comment">//    'headers' => ''(request-target) host date digest content-type',</span><br /><span class="token comment">//    'signature' => 'BIGLONGSIGNATURE',</span><br /><span class="token comment">// ];</span></code></pre>
<p>Next we need to get the <code>headers</code> value from the signature, and map over those, get the values from the request headers, and generate a string. This string is what we use to validate the request:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$inboxPath</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/@bugle/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headerList</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">' '</span><span class="token punctuation">,</span> <span class="token variable">$values</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'headers'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token comment">// $headersList = [</span><br /><span class="token comment">//	'(request-target)',</span><br /><span class="token comment">//	'host',</span><br /><span class="token comment">//	'date',</span><br /><span class="token comment">//	'digest',</span><br /><span class="token comment">//	'content-type',</span><br /><span class="token comment">// ]</span><br /><br /><span class="token variable">$expectedHeaders</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br />  <br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$headerList</span> <span class="token keyword">as</span> <span class="token variable">$h</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$h</span> <span class="token operator">===</span> <span class="token string double-quoted-string">"(request-target)"</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />		<span class="token variable">$expectedHeaders</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"(request-target): post "</span> <span class="token operator">.</span> <span class="token variable">$inboxPath</span><span class="token punctuation">;</span><br />	<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span><br />		<span class="token variable">$expectedHeaders</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$h</span> <span class="token operator">.</span> <span class="token string double-quoted-string">": "</span> <span class="token operator">.</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token property">headers</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$h</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$signatureHeader</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">header</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'signature'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signaturePairs</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">','</span><span class="token punctuation">,</span> <span class="token variable">$signatureHeader</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signatureHeaderMap</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$signaturePairs</span> <span class="token keyword">as</span> <span class="token variable">$pair</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token variable">$pairParts</span> <span class="token operator">=</span> <span class="token function">explode</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'='</span><span class="token punctuation">,</span> <span class="token variable">$pair</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$key</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pairParts</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$value</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$pairParts</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br />	<span class="token variable">$signatureHeaderMap</span><span class="token punctuation">[</span><span class="token variable">$key</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$value</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$str</span> <span class="token operator">=</span> <span class="token function">implode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token variable">$expectedHeaders</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// $str:</span><br /><span class="token comment">// "(request-target): post /@bugle/inbox</span><br /><span class="token comment">// host: 9928-82-19-65-174.ngrok-free.app</span><br /><span class="token comment">// date: Tue, 27 Jun 2023 15:27:11 GMT</span><br /><span class="token comment">// digest: SHA-256=LdxwDtVsenhzJE0E3H2oj2C7cKPvZYEG5LrY0phH9Zc=</span><br /><span class="token comment">// content-type: application/activity+json"</span></code></pre>
<p>One thing to note here is if you set different inbox URLs for user and for local, then you need to specific which path you're validating for (either <code>/inbox</code> or <code>/@bugle/inbox</code>) otherwise the signatures won't match.</p>
<p>Lastly, we need to fetch the public key for the actor, and use that to validate the request:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$keyId</span> <span class="token operator">=</span> <span class="token variable">$signatureHeaderMap</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'keyId'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$actor</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'application/activity+json'</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$keyId</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$publicKeyPem</span> <span class="token operator">=</span> <span class="token variable">$actor</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'publicKey'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'publicKeyPem'</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><span class="token variable">$verifier</span> <span class="token operator">=</span> <span class="token function">openssl_get_publickey</span><span class="token punctuation">(</span><span class="token variable">$publicKeyPem</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$validate</span> <span class="token operator">=</span> <span class="token function">openssl_verify</span><span class="token punctuation">(</span><span class="token variable">$str</span><span class="token punctuation">,</span> <span class="token function">base64_decode</span><span class="token punctuation">(</span><span class="token variable">$signatureHeaderMap</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'signature'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token variable">$verifier</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_ALGO_SHA256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$isValid</span> <span class="token operator">=</span> <span class="token variable">$validate</span> <span class="token operator">===</span> <span class="token number">1</span><span class="token punctuation">;</span></code></pre>
<p>If <code>isValid</code> is true, we can carry on and accept requests. You should do this for all requests that come into the inboxes.</p>
<h3>Likes, Boosts, and Follows</h3>
<p>The user inbox will <code>POST</code> requests for follows, likes, and boosts. Likes and boosts are easy enough to handle as you don't need to respond to the request or even store them if you don't want to. A like is the simplest of the two. It contains an ID of the like, the type of activity, the actor, and the object - this is the post that has been liked.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb#likes/10253875"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Like"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb"</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/f6dfebf6-1a73-4b3e-8afa-28a768698579"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>Boosts are similar, but they also include <code>to</code> and <code>cc</code> arrays of users the post is being boosted to, as well as a <code>published_at</code> date.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb/statuses/110592144954280515/activity"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Announce"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb"</span><span class="token punctuation">,</span><br />	<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-23T06:36:51Z"</span><span class="token punctuation">,</span><br />	<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://8d19-82-19-65-174.ngrok-free.app/@bugle"</span><span class="token punctuation">,</span><br />		<span class="token string">"https://aninstance.social/users/robb/followers"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"https://8d19-82-19-65-174.ngrok-free.app/@bugle/f6dfebf6-1a73-4b3e-8afa-28a768698579"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>Follow events are more complicated because they require a response. A follow activity will look something like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/9bb08aae-c666-432f-a3e6-35617e32830d"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Follow"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://aninstance.social/users/robb"</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>To respond to a follow, we need to send an <code>Accept</code> activity with a valid signature. To start with we need to build our activity message; it has an ID, type, actor (the user being followed) and an <code>object</code> which in this case, is the <code>Follow</code> activity we received.</p>
<pre class="language-php"><code class="language-php"><span class="token comment">// this isn't important unless you intend to store all</span><br /><span class="token comment">// follow requests that come into the system but a unique(ish)</span><br /><span class="token comment">// ID is required here</span><br /><span class="token variable">$guid</span> <span class="token operator">=</span> <span class="token function">bin2hex</span><span class="token punctuation">(</span><span class="token function">random_bytes</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$message</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />	<span class="token string single-quoted-string">'@context'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://www.w3.org/ns/activitystreams'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://bugle.lol'</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/'</span> <span class="token operator">.</span> <span class="token variable">$guid</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Accept'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'actor'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://bugle.lol/@bugle'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'object'</span> <span class="token operator">=></span> <span class="token punctuation">[</span><br />		<span class="token string single-quoted-string">'@context'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://www.w3.org/ns/activitystreams'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'id'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://aninstance.social/9bb08aae-c666-432f-a3e6-35617e32830d'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Follow'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'actor'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://aninstance.social/users/robb'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'object'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://bugle.lol/@bugle'</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>To generate the signature we need the message we just created, the private key of the profile from the database, the host of the actor (in this case <code>aninstance.social</code>), the inbox path (<code>/@bugle/inbox</code>), and the url to the profile.</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$host</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'aninstance.social'</span><span class="token punctuation">;</span><br /><span class="token variable">$path</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/@bugle/inbox'</span><span class="token punctuation">;</span><br /><span class="token variable">$privateKey</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'a_private_key'</span><span class="token punctuation">;</span><br /><span class="token variable">$keyId</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://bugle.lol/@bugle'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$hash</span> <span class="token operator">=</span> <span class="token function">hash</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'sha256'</span><span class="token punctuation">,</span> <span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$digest</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$hash</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$date</span> <span class="token operator">=</span> <span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'D, d M Y H:i:s \G\M\T'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signer</span> <span class="token operator">=</span> <span class="token function">openssl_get_privatekey</span><span class="token punctuation">(</span><span class="token variable">$privateKey</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$stringToSign</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"(request-target): post <span class="token interpolation"><span class="token variable">$path</span></span>\nhost: <span class="token interpolation"><span class="token variable">$host</span></span>\ndate: <span class="token interpolation"><span class="token variable">$date</span></span>\ndigest: SHA-256=<span class="token interpolation"><span class="token variable">$digest</span></span>"</span><span class="token punctuation">;</span><br /><span class="token function">openssl_sign</span><span class="token punctuation">(</span><span class="token variable">$stringToSign</span><span class="token punctuation">,</span> <span class="token variable">$signature</span><span class="token punctuation">,</span> <span class="token variable">$signer</span><span class="token punctuation">,</span> <span class="token constant">OPENSSL_ALGO_SHA256</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$signature_b64</span> <span class="token operator">=</span> <span class="token function">base64_encode</span><span class="token punctuation">(</span><span class="token variable">$signature</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$header</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'keyId="'</span> <span class="token operator">.</span> <span class="token variable">$keyId</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'",algorithm="rsa-sha256",headers="(request-target) host date digest",signature="'</span> <span class="token operator">.</span> <span class="token variable">$signature_b64</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'"'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />    <span class="token string single-quoted-string">'Host'</span> <span class="token operator">=></span> <span class="token variable">$host</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Date'</span> <span class="token operator">=></span> <span class="token variable">$date</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Signature'</span> <span class="token operator">=></span> <span class="token variable">$header</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Digest'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'SHA-256='</span> <span class="token operator">.</span> <span class="token variable">$digest</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Content-Type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'application/activity+json'</span><span class="token punctuation">,</span><br />    <span class="token string single-quoted-string">'Accept'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'application/activity+json'</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Finally, we send the <code>Accept</code> activity:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$inbox</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://aninstance.social/users/robb/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">return</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">withBody</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'application/json'</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>We'll need this same header signature generation later for notifying followers of new posts.</p>
<p>If someone unfollows you, you'll receive an <code>Undo</code> request. Check the <code>actor</code> on that request and you can then remove them from your followers table.</p>
<h3>Replies</h3>
<p>The global inbox will receive a <code>POST</code> request with data about replies and @mentions with data that looks something like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk/statuses/110617068531392295/activity"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Create"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk"</span><span class="token punctuation">,</span><br />	<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T16:15:15Z"</span><span class="token punctuation">,</span><br />	<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	   <span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	    <span class="token string">"https://mas.to/users/rknightuk/followers"</span><span class="token punctuation">,</span><br />	    <span class="token string">"https://bugle.lol/@robb"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />	    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk/statuses/110617068531392295"</span><span class="token punctuation">,</span><br />	    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Note"</span><span class="token punctuation">,</span><br />	    <span class="token property">"inReplyTo"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />	    <span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T16:15:15Z"</span><span class="token punctuation">,</span><br />	    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/@rknightuk/110617068531392295"</span><span class="token punctuation">,</span><br />	    <span class="token property">"attributedTo"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/users/rknightuk"</span><span class="token punctuation">,</span><br />	    <span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	        <span class="token property">"0"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><span class="token punctuation">,</span><br />	    <span class="token punctuation">]</span><span class="token punctuation">,</span><br />	    <span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />	        <span class="token string">"https://mas.to/users/rknightuk/followers"</span><span class="token punctuation">,</span><br />	        <span class="token string">"https://bugle.lol/@robb"</span><span class="token punctuation">,</span><br />	    <span class="token punctuation">]</span><span class="token punctuation">,</span><br />	    <span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"&lt;p>&lt;span class=\"h-card\">&lt;a href=\"https://bugle.lol/@robb\" class=\"u-url mention\">@&lt;span>robb&lt;/span>&lt;/a>&lt;/span> hello!&lt;/p>"</span><span class="token punctuation">,</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>If you only have one profile setup then you're golden: just save the <code>object.content</code> and the <code>object.id</code> somewhere and you have your reply. If you have a server with multiple profiles, you can map over the <code>object.cc</code> array to find matching profiles for your domain.</p>
<p>As a bonus here, unrelated to ActivityPub, I setup <a href="https://ntfy.sh/">https://ntfy.sh/</a> to send me notifications whenever I get a reply:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$ntfyKey</span> <span class="token operator">=</span> <span class="token function">config</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'bugle.ntfy_key'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token punctuation">[</span><br />	<span class="token string single-quoted-string">'Content-Type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'text/plain'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'Title'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'New mention from @'</span> <span class="token operator">.</span> <span class="token variable">$activity</span><span class="token operator">-></span><span class="token function">getActorUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'click'</span> <span class="token operator">=></span> <span class="token class-name static-context">Arr</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'object.url'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">)</span><br /><span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'https://ntfy.sh/'</span> <span class="token operator">.</span> <span class="token variable">$ntfyKey</span><span class="token punctuation">,</span> <span class="token function">strip_tags</span><span class="token punctuation">(</span><span class="token variable">$activity</span><span class="token operator">-></span><span class="token property">content</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h3>Formatting Posts</h3>
<p>The post's content needs to be rendered to HTML. Bugle supports writing in Markdown so I use <a href="https://github.com/thephpleague/commonmark"><code>league/commonmark</code></a> to format the content for sending to followers. I also extract @mentions to generate links in the posts and add them to <code>tags</code> on the post JSON. See <a href="https://github.com/rknightuk/bugle/blob/main/app/Services/TootFormatter.php"><code>TootFormatter</code></a> for the full implementation.</p>
<p>A post that looks like this:</p>
<pre class="language-md"><code class="language-md">This toot has <span class="token url">[<span class="token content">a link</span>](<span class="token url">https://example.com</span>)</span> and a mention: @robb@social.lol ahoy!</code></pre>
<p>Is run through the formatter:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'This toot has [a link](https://example.com) and a mention: @robb@social.lol ahoy!'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$converter</span> <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CommonMarkConverter</span><span class="token punctuation">(</span><span class="token punctuation">[</span><br />	<span class="token string single-quoted-string">'html_input'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'strip'</span><span class="token punctuation">,</span><br />	<span class="token string single-quoted-string">'allow_unsafe_links'</span> <span class="token operator">=></span> <span class="token constant boolean">false</span><span class="token punctuation">,</span><br /><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token variable">$converter</span><span class="token operator">-></span><span class="token function">convert</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">getContent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">nl2br</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$tags</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$pattern</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'/@?\b([A-Z0-9._%+-]+)@([A-Z0-9.-]+\.[A-Z]{2,})\b/mi'</span><span class="token punctuation">;</span><br /><span class="token function">preg_match_all</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$matches</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">[</span><span class="token variable">$fullUsernames</span><span class="token punctuation">,</span> <span class="token variable">$usernames</span><span class="token punctuation">,</span> <span class="token variable">$domains</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token variable">$matches</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$fullUsernames</span> <span class="token keyword">as</span> <span class="token variable">$i</span> <span class="token operator">=></span> <span class="token variable">$fu</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />	<span class="token variable">$tags</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><br />		<span class="token string single-quoted-string">'type'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'Mention'</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'href'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'https://'</span> <span class="token operator">.</span> <span class="token variable">$domains</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span> <span class="token operator">.</span> <span class="token string single-quoted-string">'/@'</span> <span class="token operator">.</span> <span class="token variable">$usernames</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token string single-quoted-string">'name'</span> <span class="token operator">=></span> <span class="token variable">$fu</span><span class="token punctuation">,</span><br />	<span class="token punctuation">]</span><span class="token punctuation">;</span><br /><br />	<span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><br />		<span class="token variable">$fu</span><span class="token punctuation">,</span><br />		<span class="token function">sprintf</span><span class="token punctuation">(</span><br />			<span class="token string single-quoted-string">'&lt;span class="h-card">&lt;a href="https://%s/@%s" class="u-url mention">@&lt;span>%s&lt;/span>&lt;/a>&lt;/span>'</span><span class="token punctuation">,</span><br />			<span class="token variable">$domains</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />			<span class="token variable">$usernames</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />			<span class="token variable">$usernames</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">]</span><br />		<span class="token punctuation">)</span><span class="token punctuation">,</span><br />		<span class="token variable">$content</span><span class="token punctuation">,</span><br />	<span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token punctuation">}</span><br /><br /><span class="token variable">$content</span> <span class="token operator">=</span> <span class="token function">preg_replace</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/(&lt;br \/>)+$/'</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">,</span> <span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">return</span> <span class="token punctuation">[</span><br />	<span class="token variable">$content</span><span class="token punctuation">,</span> <span class="token variable">$tags</span><br /><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre>
<p>Becomes:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This toot has <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://example.com<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>a link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> and a mention: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>h-card<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://social.lol/@robb<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>u-url mention<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>@<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>robb<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> ahoy!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>",</code></pre>
<p>And the <code>tags</code>, which we'll use later to determine who to notify of a mention, look like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">[</span><br />	<span class="token punctuation">{</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Mention"</span><span class="token punctuation">,</span><br />		<span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"https://social.lol/@robb"</span><span class="token punctuation">,</span><br />		<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"@robb@social.lol"</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">]</span></code></pre>
<h3>Notifying Followers about New Posts</h3>
<p>Unlike RSS where new posts can be fetched into a feed ActivityPub requires all followers are notified of new posts by the originating server. Here's an example payload to notify followers of a new post.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />	<span class="token property">"@context"</span><span class="token operator">:</span> <span class="token string">"https://www.w3.org/ns/activitystreams"</span><span class="token punctuation">,</span><br />	<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/7c01aab9-bc96-4773-b235-703a6d2a1f76"</span><span class="token punctuation">,</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Create"</span><span class="token punctuation">,</span><br />	<span class="token property">"actor"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />	<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		<span class="token string">"https://bugle.lol/@bugle/followers"</span><span class="token punctuation">,</span><br />		<span class="token string">"https://example.com/users/robb"</span><br />	<span class="token punctuation">]</span><span class="token punctuation">,</span><br />	<span class="token property">"object"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />		<span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle/7c01aab9-bc96-4773-b235-703a6d2a1f76"</span><span class="token punctuation">,</span><br />		<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Note"</span><span class="token punctuation">,</span><br />		<span class="token property">"inReplyTo"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />		<span class="token property">"published"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T20:42:43Z"</span><span class="token punctuation">,</span><br />		<span class="token property">"updated"</span><span class="token operator">:</span> <span class="token string">"2023-06-27T21:30:10Z"</span><span class="token punctuation">,</span><br />		<span class="token property">"attributedTo"</span><span class="token operator">:</span> <span class="token string">"https://bugle.lol/@bugle"</span><span class="token punctuation">,</span><br />		<span class="token property">"content"</span><span class="token operator">:</span> <span class="token string">"&lt;p>Toot toot!&lt;/p>"</span><span class="token punctuation">,</span><br />		<span class="token property">"to"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		  <span class="token string">"https://www.w3.org/ns/activitystreams#Public"</span><br />		<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token property">"cc"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />		  <span class="token string">"https://bugle.lol/@bugle/followers"</span><span class="token punctuation">,</span><br />		  <span class="token string">"https://example.com/users/robb"</span><br />		<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token property">"senstive"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br />		<span class="token property">"summary"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />		<span class="token property">"attachment"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />			<span class="token punctuation">{</span><br />				<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Document"</span><span class="token punctuation">,</span><br />				<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"image/jpeg"</span><span class="token punctuation">,</span><br />				<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/200/300"</span><span class="token punctuation">,</span><br />				<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"A kitten"</span><span class="token punctuation">,</span><br />				<span class="token property">"blurhash"</span><span class="token operator">:</span> <span class="token string">"L46[2Hofofof00j[offQ~qofofof"</span><span class="token punctuation">,</span><br />				<span class="token property">"width"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />				<span class="token property">"height"</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span><br />			<span class="token punctuation">}</span><br />		<span class="token punctuation">]</span><span class="token punctuation">,</span><br />		<span class="token property">"tag"</span><span class="token operator">:</span> <span class="token punctuation">[</span><br />			<span class="token punctuation">{</span><br />				<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Mention"</span><span class="token punctuation">,</span><br />				<span class="token property">"href"</span><span class="token operator">:</span> <span class="token string">"https://mas.to/@rknightuk"</span><span class="token punctuation">,</span><br />				<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"@rknightuk@mas.to"</span><br />			<span class="token punctuation">}</span><br />		<span class="token punctuation">]</span><br />	<span class="token punctuation">}</span><br /><span class="token punctuation">}</span></code></pre>
<p>The <code>type</code> attribute has three possible values that I'm using:</p>
<ul>
<li><code>Create</code> - to notify of a new post</li>
<li><code>Delete</code> - to delete an existing post</li>
<li><code>Update</code> - to update an existing post after an edit. Mastodon (and I assume others) require the <code>updated</code> timestamp for a <code>Update</code> activity</li>
</ul>
<p>The <code>cc</code> field is how visibility is controlled on Mastodon (I think) but I haven't looked into it enough so Bugle only has the ability to send public posts.</p>
<p>To notify followers of a new post, send a <code>POST</code> request to the <em>global</em> of the followers instance. For the sake of simplicity I'm taking the users domain and appending <code>/inbox</code> to it. This won't work in a few edge-cases (like the MacStories example above) so I need to update Bugle to fetch the users endpoints using webfinger either when they follow an account, or each time I need to send to them.</p>
<p>If we assume I have one follower (@robb@example.com) and I make a post that mentioned another account (@dave@example.com) I need to make two requests to notify them both. A follower notification goes to the user inbox:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$follower</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/@robb'</span><span class="token punctuation">;</span><br /><span class="token variable">$inbox</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/@robb/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span> <span class="token comment">// generate header signture as we did above for `Accept`  </span><br /><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">withBody</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'application/json'</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /></code></pre>
<p>And an @mention goes to the global inbox. For mentions, you need to include the <code>tag</code> array in the post data (see above).</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$mention</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/@dave'</span><span class="token punctuation">;</span><br /><span class="token variable">$inbox</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'https://example.com/inbox'</span><span class="token punctuation">;</span><br /><br /><span class="token variable">$headers</span> <span class="token operator">=</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span> <span class="token comment">// generate header signture as we did above for `Accept`  </span><br /><span class="token variable">$response</span> <span class="token operator">=</span> <span class="token class-name static-context">Http</span><span class="token operator">::</span><span class="token function">withHeaders</span><span class="token punctuation">(</span><span class="token variable">$headers</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">withBody</span><span class="token punctuation">(</span><span class="token function">json_encode</span><span class="token punctuation">(</span><span class="token variable">$message</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string single-quoted-string">'application/json'</span><span class="token punctuation">)</span><br />	<span class="token operator">-></span><span class="token function">post</span><span class="token punctuation">(</span><span class="token variable">$inbox</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<h3>Replying to a post</h3>
<p>If you look at the post data above you may have noticed a null value of <code>inReplyTo</code>. This is the part that needs to be filled in to reply to a specific post. Say I was replying to <a href="https://social.lol/@robb/109863669770547458">this <em>excellent</em> post</a> by a handsome internet person I need to include the URL as the value for <code>inReplyTo</code> like so:</p>
<pre class="language-php"><code class="language-php"><span class="token string double-quoted-string">"inReplyTo"</span><span class="token punctuation">:</span> <span class="token string single-quoted-string">'https://social.lol/@robb/109863669770547458'</span><span class="token punctuation">,</span></code></pre>
<p>Any posts with that set will show up as replies to the original post.</p>
<h3>A note on attachments</h3>
<p>nb: I've only tested images because it's unlikely I'll need video any time soon.</p>
<p>Attachments are included as an array in the post JSON with their mime type, url, alt text, width/height, and something I hadn't heard of before: a <a href="https://blurha.sh/">blurhash</a>.</p>
<pre class="language-json"><code class="language-json"><br /><span class="token punctuation">{</span><br />	<span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"Document"</span><span class="token punctuation">,</span><br />	<span class="token property">"mediaType"</span><span class="token operator">:</span> <span class="token string">"imag/jpeg"</span><span class="token punctuation">,</span><br />	<span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://placekitten.com/200/300"</span><span class="token punctuation">,</span><br />	<span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"A kitten"</span><span class="token punctuation">,</span><br />	<span class="token property">"blurhash"</span><span class="token operator">:</span> <span class="token string">"L46[2Hofofof00j[offQ~qofofof"</span><span class="token punctuation">,</span><br />	<span class="token property">"width"</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />	<span class="token property">"height"</span><span class="token operator">:</span> <span class="token number">300</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<p>A blurhash is &quot;<em>a compact representation of a placeholder for an image.</em>&quot;. So when you see blurry images loading on Mastodon, these are blurhashes. To make one you need a library for your chosen language which in my case was PHP and I used <a href="https://github.com/bepsvpt/blurhash"><code>bepsvpt/blurhash</code></a>:</p>
<pre class="language-php"><code class="language-php"><span class="token variable">$hash</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">blurhash</span><span class="token operator">-></span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token variable">$attachment</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token comment">// L46[2Hofofof00j[offQ~qofofof</span></code></pre>
<p>And there you go. Everything I (think) I understand about ActivityPub. All of the code for Bugle is <a href="https://github.com/rknightuk/bugle">on GitHub</a> for your perusal.</p>
<h3>Links and Resources</h3>
<p>Thanks to <a href="https://lewisdale.dev">Lewis</a> for his help with verify requests. Articles and implementations I found helpful to work out how all this works:</p>
<h4>Articles</h4>
<ul>
<li><a href="https://justingarrison.com/blog/2022-12-06-mastodon-files-instance/">Mastodon instance with 6 files - Justin Garrison</a></li>
<li><a href="https://macwright.com/2022/12/09/activitypub.html">Playing with ActivityPub - macwright.com</a></li>
<li><a href="https://blog.joinmastodon.org/2018/07/how-to-make-friends-and-verify-requests/">How to make friends and verify requests - Mastodon Blog</a></li>
<li><a href="https://hacks.mozilla.org/2018/11/decentralizing-social-interactions-with-activitypub/">Decentralizing Social Interactions with ActivityPub - Mozilla Hacks - the Web developer blog</a></li>
<li><a href="https://lewisdale.dev/post/you-can-be-friends-with-my-blog/">You can be friends with my blog | LewisDale.dev</a></li>
<li><a href="https://magazine.joomla.org/all-issues/february-2023/turning-the-joomla-website-into-an-activitypub-server">Turning the Joomla website into an ActivityPub server and being an independent participant in the Fediverse - A start - The Joomla Community Magazine</a></li>
<li><a href="https://seb.jambor.dev/posts/activitypub-academy/">ActivityPub.Academy - Sebastian Jambor's blog</a></li>
<li><a href="https://seb.jambor.dev/posts/understanding-activitypub/">Understanding ActivityPub - Sebastian Jambor's blog</a></li>
<li><a href="https://tinysubversions.com/notes/reading-activitypub/">reading-activitypub</a></li>
</ul>
<h4>Implementations</h4>
<ul>
<li><a href="https://github.com/dariusk/express-activitypub">dariusk/express-activitypub: A very simple reference implementation of an ActivityPub server using Express.js</a></li>
<li><a href="https://wordpress.org/plugins/activitypub/">ActivityPub – WordPress plugin | WordPress.org</a></li>
<li><a href="https://github.com/LewisDaleUK/slap">LewisDaleUK/slap: Super Lightweight Activity Pub</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-06-28T05:48:41.588+00:00</pubDate>
</item>
<item>
<title>The Biology of the Hey Bear Fruits Makes No Sense</title>
<link>https://rknight.me/biology-of-hey-bear-fruits/</link>
<guid>https://rknight.me/biology-of-hey-bear-fruits/</guid>
<content:encoded><![CDATA[
<p>Hey Bear is <a href="https://www.youtube.com/channel/UCtf9cFBJkHVAf2qMqF01xYg">a YouTube channel</a> with videos of dancing fruits, vegetables, and other nonsense designed to <s>make kids stfu</s> entertain young children. It works. <a href="https://rknight.me/micro/tags/babyknight/">Baby Knight</a> loves it.</p>
<p>Last night my partner asked if I was okay because I looked distant and downtrodden. I wasn't sad or tired, I was pondering the biology of the fruits that dance in these videos.</p>
<p><img alt="Hey Bear Fruits" src="https://rknightuk.s3.amazonaws.com/site/hey-bear-fruit-banner.jpg" /></p>
<p>The pineapple, Baby Knight's favourite, is a classic fruit-with-a-face; eyes and a mouth on the outside rind of the pineapple. Same with the strawberry, blueberry, and a bunch of others. Pretty standard fare for a children's cartoon, they seem to love it. Beyond those it gets a bit weird.</p>
<p>A single orange, in the Hey Bear cinematic universe, is actually two creatures. The face is on the fleshy inside of each half but how did they get like that? Does a bigger fruit, or a human perhaps, have to cut them in half so they can see and talk and do whatever a living orange half does? What happens if said cutter slices off-centre, does one of them die while the other stays alive but has a part of their sibling's face on theirs, forever haunted by the memory.</p>
<p>The banana's face is <em>inside</em> the peel, able to see only when it's pulled back. Is there a ceremony for this with family and friends gathered round as the local face-revealer performs the act? Perhaps cards are sent to the parents, adorned with &quot;congrats on your baby's face&quot; and &quot;Let's face it, today is a good day&quot; on the front. They don't seem to have the ability to hear or make sound so the face is probably pretty important. Maybe the movie Face-Off is unsettling in their world, or that sewed-up-mouth scene from the Matrix.</p>
<p>And finally the millennial favourite, the avocado. The one we see on screen has the stone in tact but we never other half, the sibling. Is the stoneless sibling an outcast in Hey Bear world or are they lauded for surviving without a fairly important part of an avocado? We might never know.</p>
]]></content:encoded>
<pubDate>2023-06-22T17:44:51.466+00:00</pubDate>
</item>
<item>
<title>Asset Lifespan Spreadsheet</title>
<link>https://rknight.me/asset-lifespan-spreadsheet/</link>
<guid>https://rknight.me/asset-lifespan-spreadsheet/</guid>
<content:encoded><![CDATA[
<p>In <a href="https://listen.hemisphericviews.com/020">episode 20 of Hemispheric Views</a> Andrew talks about his asset lifespan spreadsheet which shows the cost of an item, the date purchased, and the cost per week for said item.</p>
<p>I figured I'd have a crack at making my own and after some wrangling with formula in Numbers I was able to get something up and running. The key part was using the <code>DATEDIF</code> function to get how many days it has been since purchase:</p>
<pre><code>=(cost_of_item / DATEDIF(date_purchased, todays_date, diff_type))

=(B3 / DATEDIF(B2, TODAY, &quot;D&quot;) / 7) // for cost per week
=(B3 / DATEDIF(B2, TODAY, &quot;M&quot;)) // for cost per month
</code></pre>
<p>Which gives me an output like this:</p>
<table>
<thead>
<tr>
<th>A</th>
<th>B</th>
<th>C</th>
<th>D</th>
<th>E</th>
</tr>
</thead>
<tbody>
<tr>
<td><strong>Product</strong></td>
<td><strong>Purchase Date</strong></td>
<td><strong>Cost</strong></td>
<td><strong>Cost Per Week</strong></td>
<td><strong>Cost Per Month</strong></td>
</tr>
<tr>
<td>ATH-M50X</td>
<td>2015-12-13</td>
<td>£85.60</td>
<td>£0.22</td>
<td>£0.96</td>
</tr>
</tbody>
</table>
<p>I don't know what I'm going to do with this information beyond obsess over it but I do know I'm getting my money's worth with those Audio-Technica headphones.</p>
]]></content:encoded>
<pubDate>2023-06-02T16:22:40.119+00:00</pubDate>
</item>
<item>
<title>Brian Butterfield Diet Soundboard</title>
<link>https://rknight.me/brian-butterfield-diet-soundboard/</link>
<guid>https://rknight.me/brian-butterfield-diet-soundboard/</guid>
<content:encoded><![CDATA[
<p>Over the weekend I spent some time splitting the audio from <a href="https://www.youtube.com/watch?v=1NjTWvl8x-U">the Brian Butterfield Diet sketch</a> and then subsequently the <a href="https://www.youtube.com/watch?v=Nyk6sXHY9Vg">Christmas version</a>. Both of these sketches are from <a href="https://en.wikipedia.org/wiki/The_Peter_Serafinowicz_Show">The Peter Serafinowicz Show</a> from 2007.</p>
<p>I split the audio using <a href="https://www.felttip.com/ss/">Sound Studio</a> which has a handy &quot;split by markers&quot; feature then used <a href="https://www.11ty.dev">Eleventy data files</a> to output those files including some titles from a JSON files of all the audio. As much as I'd like to sit and sketch some terrible icons for each food item I went with <a href="https://fontawesome.com">Font Awesome</a> to save some time.</p>
<p>See the <a href="https://treatday.rknight.me/">Brian Butterfield Diet Soundboard</a>.</p>
]]></content:encoded>
<pubDate>2023-05-22T14:27:43.112+00:00</pubDate>
</item>
<item>
<title>One Year of Pizza Making</title>
<link>https://rknight.me/one-year-of-pizza-making/</link>
<guid>https://rknight.me/one-year-of-pizza-making/</guid>
<content:encoded><![CDATA[
<p>In November 2021 I bought an <a href="https://uk.ooni.com/products/ooni-fyra">Ooni Frya 12</a> (thanks Black Friday discounts!) and since then I've used it somewhere between 10 and 15 times. Each time I've managed to make <em>something</em> about the pizza better; the sauce, the dough, the topping ratio. Herein lies my notes about making better pizzas.</p>
<p>For all my pizzas, I've used the <a href="https://ooni.com/blogs/recipes/classic-pizza-dough">Ooni classic dough recipe</a> and I'm always aiming for a (sort of) Neapolitan style pizza.</p>
<h3>Equipment</h3>
<p>When I bought the oven I also picked up two peels: a <a href="https://uk.ooni.com/collections/accessories/products/ooni-wooden-pizza-peel">wooden one</a> and a <a href="https://uk.ooni.com/collections/accessories/products/ooni-pizza-peel">metal one</a>. I tend to only use the metal one so the wooden one has just become a standard chopping board. Ooni's accessories are far more expensive than other brands so I picked up a much cheaper <a href="https://www.amazon.co.uk/dp/B08BFJ3QX5">dough scraper</a> on Amazon and I plan to get a <a href="https://uk.ooni.com/collections/accessories/products/ooni-pizza-turning-peel">turning peel</a> at some point but I won't be paying Ooni's price.</p>
<h3>Dough</h3>
<p><img alt="My first attempt" src="https://rknightuk.s3.amazonaws.com/site/pizza-first.jpg" /></p>
<p>My first batch was reasonably tasty but completely misshapen and definitely not thin enough. I figured using a rolling pin would be fine for rolling out the dough but that doesn't really get it thin enough and also removes a lot of the gas that makes a nice fluffy but crunchy crust. Rolling also made the dough stick to the peel and was really difficult to slide it off into the oven, even with a lot of flour underneath.</p>
<p><a href="https://www.youtube.com/watch?v=Entzcl8q7H4">This video from Ooni</a> helped a lot with working out the stretching technique. I'd also recommend any of <a href="https://www.youtube.com/playlist?list=PL_f8scwrXT8tfSJpDPfGozK2QKj-mEmCA">Brian Lagerstrom's pizza videos</a> to see how he strengthens the dough before proofing.</p>
<p>I used bread flour I had lying around for the first attempt which I've since found out is not ideal. 00 flour, which is a much finer flour, is far better. I switched to <a href="https://www.sainsburys.co.uk/gol-ui/product/all-flour/sainsburys-grade-pasta-flour--taste-the-difference-1kg">Sainsbury's 00 flour</a> and then recently to <a href="https://www.rattonpantry.co.uk/products/caputo%C2%AE-blue-pizzeria-00-italian-pizza-flour">Caputo Pizzeria 00</a>. Each time the dough has gotten tastier and much easier to stretch and shape. One other change I've made is better yeast. I previously used Tesco dried yeast but I found this wasn't raising the dough as much as I liked, so I switched to <a href="https://www.rattonpantry.co.uk/products/caputo-yeast-100g">Caputo yeast</a> which has much better results.</p>
<p>I mix everything by hand (if someone wants to buy me a stand mixer I won't say no) in a metal mixing bowl, and use that for the first 2 hour proofing, then transfer the individual balls of dough into <a href="https://www.amazon.co.uk/dp/B07D7MNHVP">these pots</a>, with a bit of oil to stop them from sticking, and leave them to proof for another 2 hours. If I'm making more than I need I freeze after the first proof and get them out 12-24 hours before I need them and defrost in the fridge.</p>
<p><img alt="Dough in a pot" src="https://rknightuk.s3.amazonaws.com/site/pizza-pot.jpg" /></p>
<h3>Sauce</h3>
<p>I want my sauce to be as easy as possible to make and after some messing around with different recipes, this is what I've come up with for a tasty but easy-to-make sauce:</p>
<ul>
<li>400g chopped tomatoes or passata</li>
<li>100g tomato puree</li>
<li>5g garlic powder</li>
<li>5g salt</li>
<li>5g pepper</li>
<li>5g chilli flakes (optional)</li>
</ul>
<p>This is usually enough for 6-10 pizzas.</p>
<h3>Toppings</h3>
<p>My partner is a bit fussier than I am so we've mostly stuck to chicken and ham for toppings but if I have friends round I'll grab some pepperoni or similar from the supermarket. We've used cheap ham if we have it in the fridge and even that tastes great when combined with the sauce and cheese.</p>
<p>Speaking of cheese, because of availability we've mostly used cheddar which has been fine. Recently I picked up some aged mozzarella and used a 50/50 mix of that and cheddar and it tastes fantastic. <a href="https://www.sainsburys.co.uk/gol-ui/product/galbani-cucina-mozzarella%C2%A0cheese%C2%A0400g">Galbani Cucina Mozzarella</a> is the only aged mozzarella I've been able to find that is available in UK supermarkets.</p>
<p>Finally some other ingredients I've been enjoying:</p>
<ul>
<li><a href="https://jdshothoney.com">JDs Hot Honey</a> which I pop on right as the pizza comes out the over adds a nice bit of sweet flavour.</li>
<li>Candied Jalapenos. I've been using <a href="https://www.amazon.co.uk/Haynes-Gourmet-Candied-Jalapenos-%C2%AE/dp/B07JDSP47S/">these ones from Haynes</a> but I have some fresh jalapenos on the way to attempt to make my own.</li>
<li>A liberal sprinkle of parmesan (or whatever hard italian cheese I can get my hands on).</li>
</ul>
<p><img alt="My latest pizza" src="https://rknightuk.s3.amazonaws.com/site/pizza-latest.jpg" /></p>
]]></content:encoded>
<pubDate>2023-05-03T12:24:32.372+00:00</pubDate>
</item>
<item>
<title>The Knightpool</title>
<link>https://rknight.me/the-knightpool/</link>
<guid>https://rknight.me/the-knightpool/</guid>
<content:encoded><![CDATA[
<p><a href="https://social.lol/@robb/109988701670297916">From me, yesterday</a>:</p>
<blockquote>
<p>We setup a baby name pool at work, £1 a guess. We have 50 names, £51 in the pot. Someone has guessed the name so no money for me.</p>
</blockquote>
<p>Some additional rules we discussed:</p>
<ul>
<li>If the correct answer is guessed by more than one person, the pot is split</li>
<li>Spelling is not important. So &quot;Emelia&quot; and &quot;Amelia&quot; are the same name for the purposes of the Knightpool</li>
</ul>
<p>I'm calling this the Knightpool because I can and definitely not <a href="https://www.marvel.com/characters/deadpool-wade-wilson/in-comics">stealing the idea from Marvel</a>. Here are the 50 names that have been guessed:</p>
<ul>
<li>Abby</li>
<li>Alice</li>
<li>Amy</li>
<li>Ava</li>
<li>Ayla</li>
<li>Beth</li>
<li>Blair</li>
<li>Chantell</li>
<li>Chloe</li>
<li>Claire</li>
<li>Cleo</li>
<li>Daisy</li>
<li>Ella</li>
<li>Ellie</li>
<li>Elsie</li>
<li>Emilia</li>
<li>Emma</li>
<li>Eve</li>
<li>Evie</li>
<li>Faye</li>
<li>Flick</li>
<li>Freya</li>
<li>Gemma</li>
<li>Grace</li>
<li>Hannah</li>
<li>Jane</li>
<li>Jess</li>
<li>Jill</li>
<li>Jo (note: Two people guessed this name)</li>
<li>Joy</li>
<li>Kate</li>
<li>Kayleigh</li>
<li>Laura</li>
<li>Leah</li>
<li>Lilly</li>
<li>Liz</li>
<li>Lucy</li>
<li>Maisie</li>
<li>Mia</li>
<li>Millie</li>
<li>Nora</li>
<li>Olivia</li>
<li>Paige</li>
<li>Phoebe</li>
<li>Quinn</li>
<li>Rose</li>
<li>Sarah</li>
<li>Sophie</li>
<li>Tess</li>
<li>Zoe</li>
</ul>
]]></content:encoded>
<pubDate>2023-03-09T10:02:00.753+00:00</pubDate>
</item>
<item>
<title>Food Graveyard</title>
<link>https://rknight.me/food-graveyard/</link>
<guid>https://rknight.me/food-graveyard/</guid>
<content:encoded><![CDATA[
<p>Discontinued food items I miss.</p>
<ul>
<li><a href="https://www.youtube.com/watch?v=gFurmW0iajM">Fruit Allsorts</a></li>
<li><a href="https://inews.co.uk/inews-lifestyle/food-and-drink/brannigans-crisps-discontinued-pub-classic-britons-mourning-657852">Brannigans beef and mustard</a></li>
<li><a href="http://www.collectingcandy.com/wordpress/?attachment_id=4204">Wonkalate</a></li>
<li><a href="https://candymail.co.uk/products/campino-strawberry-and-yogurt-120g">Campino Strawberry and Yoghurt</a></li>
<li><a href="https://www.ukfoodexport.com/nestle_toffee_crisp_honeycomb_38g/">Toffee Crisp honeycomb</a></li>
<li><a href="https://www.mirror.co.uk/news/uk-news/nestl-discontinued-tooty-frooties-after-14175754">Tooty Frooties</a></li>
<li><a href="https://en.wikipedia.org/wiki/Mingles">Mingles</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-02-24T22:54:57.098+00:00</pubDate>
</item>
<item>
<title>No More Ratings</title>
<link>https://rknight.me/no-more-ratings/</link>
<guid>https://rknight.me/no-more-ratings/</guid>
<content:encoded><![CDATA[
<p>When I used to use <a href="http://plotapp.io/">Plot</a> (RIP) to track movies that had a thumbs up or down system. When I switched to my own CMS for this I did the same thing. Then when I switched to Letterboxd I translated what was essentially a 1-3 rating system to the five-star system (even though it's actually out of ten not five) Letterboxd uses. From <a href="https://letterboxd.com/rknightuk/">my Letterboxd profile</a>:</p>
<blockquote>
<p>★☆☆☆☆ : Never again</p>
<p>★★★☆☆ : Fine</p>
<p>★★★★★ : Good movie, would watch again</p>
</blockquote>
<p>The problem with this system is I mostly don't watch bad movies. Or a better way to put it is I kinda like <a href="https://en.wikipedia.org/wiki/Fast_&amp;_Furious">bad movies</a>. Despite knowing intellectually that <a href="https://en.wikipedia.org/wiki/The_Shawshank_Redemption">Shawshank Redemption</a> is a &quot;better&quot; movie than <a href="https://en.wikipedia.org/wiki/Olympus_Has_Fallen">Olympus Has Fallen</a> they're both rated 5 stars in my system. I could change my system to use the full spectrum of the five stars but I just don't have the energy or the inclination to do it. How do I decide what gets 4.5 stars and what gets a 5? Is there really a discernible difference between those two ratings? Also, who gives a shit what number I've ordained upon a movie?</p>
<p>So fuck it. No more ratings.</p>
]]></content:encoded>
<pubDate>2023-02-14T09:52:15.619+00:00</pubDate>
</item>
<item>
<title>Add to MusicThread Shortcut</title>
<link>https://rknight.me/add-to-musicthread-shortcut/</link>
<guid>https://rknight.me/add-to-musicthread-shortcut/</guid>
<content:encoded><![CDATA[
<p><a href="https://musicthread.app/">MusicThread</a> is &quot;<em>a website to create and share lists of music</em>&quot; by <a href="https://mastodon.social/@edwellbrook">Ed Wellbrook</a>. I recently started using it to save <a href="https://musicthread.app/thread/2L6IuBPKCCo7fsA8SFyXZLirH5W">new tracks I've found</a> and <a href="https://musicthread.app/thread/2L6LZz60026Onq3waGuwt7WdJ5x">new albums</a>, which are then cross-posted to <a href="https://social.lol/@robb">my Mastodon account</a> with <a href="https://echo.rknight.me">Echo</a>.</p>
<p>The iOS app, currently in beta, has a share sheet extension for adding to a thread, but for MacOS I needed to make something in Shortcuts. The shortcut I've made (after a lot of ranting about how bad shortcuts is) can either ask for a music link to add, or be used directly from Apple Music under the share menu. It then asks which thread to add the link to.</p>
<p><a href="https://www.icloud.com/shortcuts/d127fd30d412423b86c06bcff7f9cea6">Download Add to MusicThread Shortcut</a></p>
]]></content:encoded>
<pubDate>2023-02-06T18:04:43.513+00:00</pubDate>
</item>
<item>
<title>Notes on Migrating a Wordpress Site to Eleventy</title>
<link>https://rknight.me/note-on-migrating-wordpress-site-eleventy/</link>
<guid>https://rknight.me/note-on-migrating-wordpress-site-eleventy/</guid>
<content:encoded><![CDATA[
<p>I recently helped my friend Tim move <a href="https://nahumck.me/">his site</a> from a Wordpress install to a much simpler Eleventy setup. The biggest hurdle was transforming the Wordpress exported data into Markdown files. Thankfully <a href="https://github.com/lonekorean/wordpress-export-to-markdown"><code>wordpress-export-to-markdown</code></a> exists. This is a command line tool that takes a wordpress export, puts all the posts in markdown files, and downloads all the images contained in the posts.</p>
<p>I did make an adjustment to this script so I could add a <code>permalink</code> attribute to each post by editing the <code>parser.js</code> file:</p>
<pre class="language-diff"><code class="language-diff">frontmatter: {<br /><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   title: getPostTitle(post),<br /></span></span><span class="token inserted-sign inserted"><span class="token prefix inserted">+</span><span class="token line">   permalink: `${getPostSlug(post)}/index.html`,<br /></span></span><span class="token unchanged"><span class="token prefix unchanged"> </span><span class="token line">   date: getPostDate(post),<br /></span><span class="token prefix unchanged"> </span><span class="token line">   categories: getCategories(post),<br /></span><span class="token prefix unchanged"> </span><span class="token line">   tags: getTags(post)<br /></span></span>}</code></pre>
<p>The image download will take a while but once it was done I had all the posts and all the images ready to pop into an Eleventy site.</p>
<p>To match Tim's existing site it needed support for markdown footnotes and image captions. As a side note here, footnotes <em>do not</em> export well from Wordpress via the CLI tool so I had to manually fix all of them which was not fun. <a href="https://www.alpower.com/">Al Power</a> had an article for both of these features which was handy. To add footnote support I followed the steps in <a href="https://www.alpower.com/tutorials/configuring-footnotes-with-eleventy/">this article</a> which outlines how to include <code>markdown-it-footnote</code> for the markdown parsing and <a href="https://www.alpower.com/tutorials/adding-figures-with-captions-to-images-in-markdown-with-eleventy/">this article</a> to add image captions.</p>
<p>All in all it went fairly smoothly - without <code>wordpress-export-to-markdown</code> I would have had to write my own parsing script which I'm very glad I didn't have to do.</p>
]]></content:encoded>
<pubDate>2023-01-31T22:13:16.196+00:00</pubDate>
</item>
<item>
<title>Additional Webmention Resources</title>
<link>https://rknight.me/additional-webmention-resources/</link>
<guid>https://rknight.me/additional-webmention-resources/</guid>
<content:encoded><![CDATA[
<p>Some more links and tools I've found or had saved about webmentions. Read my post on <a href="https://rknight.me/adding-webmentions-to-your-site/">adding webmentions here</a>.</p>
<h3><a href="https://github.com/remy/wm">@remy/webmention</a></h3>
<p>Sadly the webapp side of this is <a href="https://remysharp.com/2023/01/30/on-vercel-if-some-of-my-sites-are-down">down at the moment</a> but the command line tool for <em>sending</em> webmentions is completely standalone.</p>
<p>You can pass the script a url or an RSS feed and it will scan it to find links, confirm those sites accept web mentions, and send those mentions. I ran it once on my whole feed to send any mentions and then added it to my build steps to run it on the latest post:</p>
<pre class="language-bash"><code class="language-bash">npx webmention /path/to/feed.xml <span class="token parameter variable">--limit</span> <span class="token number">1</span> <span class="token parameter variable">--send</span></code></pre>
<h3><a href="https://github.com/CodeFoodPixels/eleventy-plugin-webmentions">eleventy-plugin-webmentions</a></h3>
<blockquote>
<p>An eleventy plugin to fetch webmentions and helper methods to display them</p>
</blockquote>
<p>Why didn't I look for a plugin when I was doing webmentions? No idea. This is going on my list to review and see if I can streamline my code a bit.</p>
<h3>Links</h3>
<p>Some other articles I had saved related to this:</p>
<ul>
<li><a href="https://ashleykolodziej.com/add-webmentions-to-static-site/">How I added Webmentions support to my static website | Ashley Kolodziej - Boston Freelance Web Designer</a></li>
<li><a href="https://sia.codes/posts/webmentions-eleventy-in-depth/">An In-Depth Tutorial of Webmentions + Eleventy</a></li>
<li><a href="https://rowanmanning.com/posts/webmentions-for-your-static-site/">Webmentions for your Static Site | Rowan Manning</a></li>
<li><a href="https://css-irl.info/scheduling-netlify-deployments-with-github-actions/">Scheduling Netlify Deployments with Github Actions</a></li>
<li><a href="https://cactus.chat/">Cactus Comments - Federated Web Comments</a></li>
<li><a href="https://cassidyjames.com/blog/fediverse-blog-comments-mastodon/">Toot toot! Mastodon-powered Blog Comments ⋅ Cassidy James Blaede</a></li>
<li><a href="https://git.lewisdale.dev/lewis/webmentions">lewis/webmentions - webmentions - Gitea: Git with a cup of tea</a></li>
</ul>
]]></content:encoded>
<pubDate>2023-01-31T00:00:00+00:00</pubDate>
</item>
<item>
<title>Adding Webmentions to Your Site</title>
<link>https://rknight.me/adding-webmentions-to-your-site/</link>
<guid>https://rknight.me/adding-webmentions-to-your-site/</guid>
<content:encoded><![CDATA[
<p>Right off the bat, I read the following two articles to get a sense of how to do this so I won't go over too much of the same content but rather add some thoughts of my own about the process. I would highly recommend reading both of these.</p>
<ul>
<li><a href="https://janmonschke.com/adding-webmentions-to-your-static-blog/">Adding webmentions to your static blog by Jan Monschke</a></li>
<li><a href="https://mxb.dev/blog/using-webmentions-on-static-sites/">Using Webmentions in Eleventy by Max Böck</a></li>
</ul>
<p>Also, I feel like I muddled through this to get it to work. JSON and API requests I can understand. The <em>how</em> of webmentions I'm still a bit confused on but we will proceed nonetheless.</p>
<h3>What are webmentions?</h3>
<p><a href="https://webmention.net/">Webmentions are</a>:</p>
<blockquote>
<p>a simple way to notify any URL when you link to it from your site</p>
</blockquote>
<p>Sounds simple enough. It's a link (or a comment, or reply, or like) to an article on my site. What I do know of webmentions from sites like <a href="https://localghost.dev/">Sophie's</a> and <a href="https://www.zachleat.com/">Zach's</a> is that <em>somehow</em> I can have likes, boosts, and replies from Mastodon show up on my blog posts.</p>
<h3>How though?</h3>
<p>This bit has confused me for months (I had a note about this dated November last year). Admittedly I didn't look too far into it but pretty much every article about webmentions will link to two sites: <a href="https://webmention.io/">webmention.io</a> and <a href="https://brid.gy/">Bridgy</a>.</p>
<h4>Webmention.io and IndieLogin</h4>
<p>Webmention.io is:</p>
<blockquote>
<p>a hosted service created to easily receive webmentions on any web page</p>
</blockquote>
<p>Webmention.io <em>collects</em> your webmentions and exposes an API to be able to fetch these mentions but to start off you need to login which was my first hurdle: <code>We couldn't find any way to authenticate you using your website.</code>. Webmention.io uses <a href="https://indielogin.com/setup">IndieLogin</a> to log you in and apparently I hadn't added <code>rel=&quot;me&quot;</code> to any of my social links. So I added a Github link, deployed it, and was then able to login. Success.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value css language-css"><span class="token property">display</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://github.com/rknightuk<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>me<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>github.com/rknightuk<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre>
<p>Once I logged in I was presented with tags to add to my site to accept webmentions so I promptly added those:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>webmention<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://webmention.io/rknight.me/webmention<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><br />&lt;link rel="pingback" href="https://webmention.io/rknight.me/xmlrpc" /</code></pre>
<p>At this point, this system will work for &quot;proper&quot; webmentions (although not added to my site yet) but what about conversations on Mastodon? That's where Bridgy comes in.</p>
<h4>Bridgy</h4>
<p>Bridgy &quot;connects your web site to social media&quot; according to the home page but moreso it converts conversations on social media to webmentions to send back to webmention.io.</p>
<p>I went ahead and signed in with my Mastodon account. After a few minutes Bridgy started showing responses to some recent Mastodon posts that had links to my blog posts. I then went back to webmention.io and there they all were. I'm not sure of the limitations of the initial scan but it only showed the last few posts I had done so I manually went and grabbed some Mastodon posts linking to my blog and put them in the &quot;Resend for post&quot; input box to grab some earlier responses.</p>
<h3>Showing Webmentions on my Site</h3>
<p>I'm using <a href="https://www.11ty.dev/docs/data-global/">Eleventy data files</a> extensively to power my <a href="https://rknight.me/automating-my-now-page/">now page</a> so I knew this would be trivial to pull into my site. Because I already have my <a href="https://github.com/rknightuk/api">&quot;api&quot;</a> I decided to fetch it there instead and <em>then</em> pull it into my site. For the sake of simplicity assume you don't like making your life difficult and all this would exist in Eleventy (or your site of choice).</p>
<h4>Fetching Mentions</h4>
<p>Webmention.io has <a href="https://github.com/aaronpk/webmention.io#api">an API</a> to fetch mentions. There are a few different endpoints but I wasn't able to work out what all the differences were so I went with the <code>mention.jf2</code> with no other options. <a href="https://github.com/rknightuk/api/blob/main/services/webmentions.js">Source on GitHub</a>.</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// this API also accepts `since_id` to only get new mentions</span><br /><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://webmention.io/api/mentions.jf2?token=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>webmentionskey<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;per-page=1000</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><span class="token keyword">const</span> newMentions <span class="token operator">=</span> body<span class="token punctuation">.</span>children</code></pre>
<p>I've set this up to run every hour on a cron, merge new data with the existing data, and then write the data to <a href="https://api.rknight.me/api/webmentions.json">a JSON file</a>. Webmention.io <em>does</em> have an option for sending a webhook when a new mention comes in (under &quot;settings&quot;) but that might be a lot of rebuilding if a post gets popular so I'm sticking with this method for now. Then in Eleventy, I fetch this data in <a href="https://github.com/rknightuk/rknight.me/blob/master/src/_data/webmentions.js"><code>src/_data/webmentions.js</code></a>.</p>
<p>To get this to render on my post pages, I lifted most of <a href="https://mxb.dev/blog/using-webmentions-on-static-sites/">Max's solution</a> with a few changes like grouping the different types of responses together. As an aside, I still don't know what a <code>mention-of</code> webmention looks like or how one happens.</p>
<p><strong>Update 07/07/2023</strong></p>
<p>I finally got some data to see what <code>mention-of</code> gives. I decided against showing these though because at least half of them didn't exist after only ~6 months.</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"entry"</span><span class="token punctuation">,</span><br />    <span class="token property">"author"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br />    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"card"</span><span class="token punctuation">,</span><br />    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><br />    <span class="token property">"photo"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span><br />    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">""</span><br />    <span class="token punctuation">}</span><span class="token punctuation">,</span><br />    <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"https://blog.luiscarlospando.com/coding/2023/02/hay-nuevo-sistema-de-comentarios-en-mi-blog-2/"</span><span class="token punctuation">,</span><br />    <span class="token property">"published"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-received"</span><span class="token operator">:</span> <span class="token string">"2023-07-07T00:18:46Z"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-id"</span><span class="token operator">:</span> <span class="token number">1693400</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-source"</span><span class="token operator">:</span> <span class="token string">"https://blog.luiscarlospando.com/coding/2023/02/hay-nuevo-sistema-de-comentarios-en-mi-blog-2/"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-target"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/adding-webmentions-to-your-site/"</span><span class="token punctuation">,</span><br />    <span class="token property">"mention-of"</span><span class="token operator">:</span> <span class="token string">"https://rknight.me/adding-webmentions-to-your-site/"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-property"</span><span class="token operator">:</span> <span class="token string">"mention-of"</span><span class="token punctuation">,</span><br />    <span class="token property">"wm-private"</span><span class="token operator">:</span> <span class="token boolean">false</span><br /><span class="token punctuation">}</span></code></pre>
<pre class="language-js"><code class="language-js"><span class="token comment">// .eleventy.js</span><br />eleventyConfig<span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span><span class="token string">'webmentionsByUrl'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">webmentions<span class="token punctuation">,</span> url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> allowedTypes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'in-reply-to'</span><span class="token punctuation">,</span> <span class="token string">'like-of'</span><span class="token punctuation">,</span> <span class="token string">'repost-of'</span><span class="token punctuation">]</span><br /><br />    <span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token string-property property">'like-of'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'repost-of'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token string-property property">'in-reply-to'</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">const</span> <span class="token function-variable function">hasRequiredFields</span> <span class="token operator">=</span> <span class="token parameter">entry</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">const</span> <span class="token punctuation">{</span> author<span class="token punctuation">,</span> published<span class="token punctuation">,</span> content <span class="token punctuation">}</span> <span class="token operator">=</span> entry<br />        <span class="token keyword">return</span> author<span class="token punctuation">.</span>name <span class="token operator">&amp;&amp;</span> published <span class="token operator">&amp;&amp;</span> content<br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">const</span> filtered <span class="token operator">=</span> webmentions<br />        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">entry</span> <span class="token operator">=></span> entry<span class="token punctuation">[</span><span class="token string">'wm-target'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://rknight.me</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>url<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><br />        <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">entry</span> <span class="token operator">=></span> allowedTypes<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>entry<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><br /><br />    filtered<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">m</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />        <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">[</span>m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><br />        <span class="token punctuation">{</span><br />            <span class="token keyword">const</span> isReply <span class="token operator">=</span> m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">'in-reply-to'</span><br />            <span class="token keyword">const</span> isValidReply <span class="token operator">=</span> isReply <span class="token operator">&amp;&amp;</span> <span class="token function">hasRequiredFields</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><br />            <span class="token keyword">if</span> <span class="token punctuation">(</span>isReply<span class="token punctuation">)</span><br />            <span class="token punctuation">{</span><br />                <span class="token keyword">if</span> <span class="token punctuation">(</span>isValidReply<span class="token punctuation">)</span><br />                <span class="token punctuation">{</span><br />                    m<span class="token punctuation">.</span>sanitized <span class="token operator">=</span> <span class="token function">sanitizeHTML</span><span class="token punctuation">(</span>m<span class="token punctuation">.</span>content<span class="token punctuation">.</span>html<span class="token punctuation">)</span><br />                    data<span class="token punctuation">[</span>m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><br />                <span class="token punctuation">}</span><br /><br />                <span class="token keyword">return</span><br />            <span class="token punctuation">}</span><br /><br />            data<span class="token punctuation">[</span>m<span class="token punctuation">[</span><span class="token string">'wm-property'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><br />        <span class="token punctuation">}</span><br />    <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">return</span> data<br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<pre class="language-js"><code class="language-js"><span class="token comment">// _templates/post.njk</span><br /><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">set</span> webmentionUrl <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> page<span class="token punctuation">.</span>url <span class="token operator">|</span> stripIndex <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> endset <span class="token operator">-</span><span class="token operator">%</span><span class="token punctuation">}</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> include <span class="token string">'webmentions.njk'</span> <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
<pre class="language-js"><code class="language-js"><span class="token comment">// webmentions.njk</span><br /><span class="token comment">// Then the same again as this for `repost-of` and `in-reply-to`</span><br /><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> mentions<span class="token punctuation">[</span><span class="token string">'like-of'</span><span class="token punctuation">]</span><span class="token operator">|</span>length <span class="token operator">%</span><span class="token punctuation">}</span><br />    <span class="token operator">&lt;</span>h4<span class="token operator">></span>Likes<span class="token operator">&lt;</span><span class="token operator">/</span>h4<span class="token operator">></span><br />    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"webmentions--likeboost"</span><span class="token operator">></span><br />        <span class="token punctuation">{</span><span class="token operator">%</span><span class="token operator">-</span> <span class="token keyword">for</span> like <span class="token keyword">in</span> mentions<span class="token punctuation">[</span><span class="token string">'like-of'</span><span class="token punctuation">]</span> <span class="token operator">%</span><span class="token punctuation">}</span><br />            <span class="token operator">&lt;</span>a target<span class="token operator">=</span><span class="token string">"_blank"</span> rel<span class="token operator">=</span><span class="token string">"noopener"</span> href<span class="token operator">=</span><span class="token string">"{{like.author.url}}"</span><span class="token operator">></span><span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"{{like.author.photo}}"</span> title<span class="token operator">=</span><span class="token string">"{{like.author.name}}"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span><br />        <span class="token punctuation">{</span><span class="token operator">%</span> endfor<span class="token operator">%</span><span class="token punctuation">}</span><br />    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><br /><span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span></code></pre>
<p>A little bit of CSS later and we have lift off:</p>
<p><img alt="Webmentions example" src="https://rknightuk.s3.amazonaws.com/site/webmentions.png" /></p>
<p>You might even see some webmentions below this post if I'm lucky.</p>
]]></content:encoded>
<pubDate>2023-01-30T00:00:00+00:00</pubDate>
</item>
<item>
<title>Twitter Backup and Archiving Options</title>
<link>https://rknight.me/twitter-backup-and-archiving-options/</link>
<guid>https://rknight.me/twitter-backup-and-archiving-options/</guid>
<content:encoded><![CDATA[
<p>If you want to make your Twitter archive a bit more useful than the standard backup Twitter give you, there are 3 options of varying complexity I'm aware of.</p>
<h3>Option 0: Don't do anything</h3>
<p>This is by far the easiest option. Don't care about your tweets. Let them wither away into the ether. Be free from the shackles of hoarding your data.</p>
<h3>Option 1: Tiny Subversions</h3>
<p><a href="https://tinysubversions.com/twitter-archive/make-your-own/">Darius Kazemi of Tiny Subversions</a> made this tool to make a self hosted, searchable archive. It's as simple as uploading the <code>.zip</code> file of your archive, give it a minute, and the new archive will be downloaded.</p>
<p><img alt="Tiny Subversions twitter archive" src="https://rknightuk.s3.amazonaws.com/site/twitter-tiny-subversions.png" /></p>
<h3>Option 2: TwitVault</h3>
<p><a href="https://terhechte.github.io/twitvault/">TwitVault/</a> is a desktop App for Mac, Windows, and Linux that has the biggest feature set. Download it, login with your Twitter credentials, and let it do it's thing. This initial setup will pull everything is can from the Twitter API but that has limits: 3200 tweets and 800 mentions. Once that part of the setup is done (this can take a while), you can then pull in your full archive in the terminal.</p>
<p><img alt="TwitVault screenshot" src="https://rknightuk.s3.amazonaws.com/site/twitter-twitvault.png" /></p>
<h3>Option 3: Tweetback</h3>
<p><a href="https://github.com/tweetback/tweetback">Tweetback</a> is a tool built with <a href="https://www.11ty.dev/">Eleventy</a> and is my current choice for making my archive available. You can see mine at <a href="https://hellsite.rknight.me/">hellsite.rknight.me</a>. The steps to get this working are more involved than the previous options but I'm a big fan of the output. I won't go through the steps here but the <a href="https://github.com/tweetback/tweetback/blob/main/README.md">readme</a> has detailed instructions.</p>
<p><img alt="Tweetback screenshot" src="https://rknightuk.s3.amazonaws.com/site/twitter-tweetback.png" /></p>
<p>One other related part of Tweetback is <a href="https://github.com/tweetback/tweetback-canonical">tweetback-canonical</a>. If you add your archive and username to the repository, anyone who uses Tweetback and has tweets that mention you, those tweets will link back to your archive rather than Twitter's website itself. For example, <a href="https://hellsite.rknight.me/1489618994000805889/">this tweet</a> where I mention Zach links to <a href="https://www.zachleat.com/twitter/1489616692678434816">his archive</a>.</p>
]]></content:encoded>
<pubDate>2023-01-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>Letters: January 2023</title>
<link>https://rknight.me/letters/</link>
<guid>https://rknight.me/letters/</guid>
<content:encoded><![CDATA[
<p>Letters is a ongoing project by <a href="https://json.blog/2022/11/28/a-new-project.html">Jason Becker</a> that I was involved in for this month. The what:</p>
<blockquote>
<p>Letters will involve me corresponding with someone else on the internet over the course of a month. Each week, we will each write a letter to each other. There are no set topics.</p>
</blockquote>
<p>The why:</p>
<blockquote>
<p>I was thinking about how much of our history (in the West at least) comes from important figures having extensive private correspondences that were saved, catalogued, and released after their deaths. And while I’d love some private pen pals, it just got me thinking that public letters are a rich way to discuss complex issues.</p>
</blockquote>
<p>Jason posted that in November and I thought it sounded like an interesting thing to be involved in. While I don't think we hit the heights of &quot;historical figures discussing complex issues&quot;, we did have conversations about taking stock, finding time for personal projects and hobbies, and of course my Topic of the Year™ 2022: DIY. Below are the four emails from me with Jason's responses (and links to the posts on Jason's site).</p>
<p>Jason is doing this for the rest of the year which I'm looking forward to.</p>
<hr />
<h3><a href="https://json.blog/2023/01/01/letters-january-w.html">Week 1: 2023-01-01</a></h3>
<blockquote>
<p>Hi Jason,</p>
</blockquote>
<blockquote>
<p>We have only interacted briefly on Micro.blog so I figured I should start by introducing myself. I’m a 30-something developer working on software for the property industry. I live with my partner, Jess, and two cats in Portsmouth on the south coast of the UK.</p>
</blockquote>
<blockquote>
<p>We have spent the past 12 months decorating and redoing every room in our house - the previous owners lived here since it was built in 1971 and hadn’t done any work to it since then. This involved me learning a whole set of new skills like floor laying, wallpapering, and fitting new skirting boards (baseboards for Americans).</p>
</blockquote>
<blockquote>
<p>In July we found out my partner was pregnant with a girl and she is due in March 2023. This accelerated the timeline of getting the house finished but we are now ready for her arrival at least in terms of furniture and the nursery. Mentally ready? I’m not so sure.</p>
</blockquote>
<blockquote>
<p>Look forward to hearing from you, Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
</blockquote>
<blockquote>
<p>First of all, congratulations on pending fatherhood! I’m glad we were able to slip in our month of correspondance before the pending sleep depravation.</p>
</blockquote>
<blockquote>
<p>What an exciting and busy year. Even though we moved into our home 5 years ago (and it was new construction), I still feel like we need to keep decorating and redoing. Our work has been less skills-based and more “accumulating more stuff than I am comfortable owning”-based, since our new(ish) home is much larger than the 700 square feet we lived in previously. I have always found that I have ambitious of being handy in theory, but mostly fail when it comes to applying that ambition. At this stage, my partner Elsa just pays people to do things before telling me they’ve gone wrong or haven’t happened.</p>
</blockquote>
<blockquote>
<p>I am curious, what room or project are you most proud of? I’m not quite “done”, but pretty close to having my office set up how I’d like. It was a big pandemic project since we got rid of the company office right away. Having my own space has changed my whole relationship with my home.</p>
</blockquote>
<blockquote>
<p>I took a peek at the work you do and it’s fascinating. I have actually discussed this area (home management, focused on home inspections in the US followed by “asset management” and warranty support nad the like) with my work partner multiple times as an idea to pursue{^tech]. The intersection of home-renovation and your work must have been an interesting exercise. I’d be curious what you’ve learned managing your house that suprised you or changed your perspective on the work you do day to day.</p>
</blockquote>
<blockquote>
<p>Thanks for your participation in Letters. I’m already enjoying this project, and I hope others will as well.</p>
</blockquote>
<blockquote>
<p>Jason</p>
</blockquote>
<h3><a href="https://json.blog/2023/01/10/letters-january-w.html">Week 2: 2023-01-10</a></h3>
<blockquote>
<p>Good Morning Jason,</p>
</blockquote>
<blockquote>
<p><em><strong>what room or project are you most proud of?</strong></em></p>
</blockquote>
<blockquote>
<p>The office was my top priority (my partner had different ideas) as I spend 3-4 days a week working in there and I’m very proud of how that turned out. I built the desktop and matching shelves myself from scaffold boards because finding something in the exact size I wanted turned out to be fairly difficult. This was a project that took a few weekends of lots of sanding, glueing, and staining but the final results is something I’m very proud of. Here’s an in-progress shot and the final result in situ. I also did the faux wood-panelling in our bedroom which we’re both very pleased with.</p>
</blockquote>
<blockquote>
<p>The work I do is primarily focused on property reports for tenants (inventories, fire risk assessments, etc) so there isn’t much crossover with renovating the house but I what I did learn is that planning is key. We wish we had spent a few weeks planning what we wanted to achieve before jumping into the renovation. There were definitely things that made our life a bit more difficult because we did some work when we should have waited for another job to be finished first.</p>
</blockquote>
<blockquote>
<p>That sounds like an interesting job but it must be difficult to work with organisations like schools that can be slow and unwieldy to get new tech implemented. How long have you been doing that?</p>
</blockquote>
<blockquote>
<p>I saw you posted yesterday about being ill, hope you’re feeling a bit better today?</p>
</blockquote>
<blockquote>
<p>Speak soon,
Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
</blockquote>
<blockquote>
<p>Luckily, I am feeling better. Note to self, when you order a steak medium and it comes out <em>just barely rare</em> just send the damn thing back. The day of suffering that followed was not worth it.</p>
</blockquote>
<blockquote>
<p>I've done some more work in my office since this last photo, but this is a <a href="https://json.blog/2021/07/18/current-state-of.html">not-terribly-inaccurate representation of where things are</a>. I also use the IKEA pegboard. I did not quite get as fancy on the desk itself-- which is an IKEA Karlby 98&quot; top that I had a friend cut to 80&quot; and then added some really cool metal legs from an Etsy shop. When the pandemic hit we went 100% remote, which meant tha this room got transformed into an office. I probably have 6-10 scattered blog posts about the process that landed on the setup linked above-- most of the changes by now are additional plants and things hung on the wall (plus some equipment changes).</p>
</blockquote>
<blockquote>
<p>I think it's pretty natural for the office to be the place you're most proud of-- it's one you get to call your own and the spot you're probably stuck spending the most time in.</p>
</blockquote>
<blockquote>
<p>We've been thinking about doing a similar paneling look either behind our bed or possibly behind our TV. Maybe that'll be a project for when we return home. It's hard to have a big wall behind a TV-- it looks bare without anything, but most things we could put there would be distracting.</p>
</blockquote>
<blockquote>
<p><a href="https://json.blog/uploads/2023/938df46b2f.jpg">https://json.blog/uploads/2023/938df46b2f.jpg</a></p>
</blockquote>
<blockquote>
<p>I've been working at my current company nearly 9 years. Before that, I worked at a university research center working with school districts on early warning systems, and before that, I worked for the state department of education. I think what's most challenging is that everyone is well-established. There aren't new school districts popping up building their systems and processes from scratch. The people, organizations, culture, and work processes are all fairly fixed. So we have to do things much more completely and better than most companies to even get in the door. Then we have to get a large set of folks on board so that we can deliver on our promise. We're a small team and we're supporting billions of dollars of budgeting and monitoring. There's a lot of technical/systems and cultural debt that we have to work with to succeed.</p>
</blockquote>
<blockquote>
<p>That said, the opportunity for improvement is huge, and it's very satisfying when someone gets it and we can make their work so much easier and more effective.</p>
</blockquote>
<blockquote>
<p>Looking forward to next week
Jason</p>
</blockquote>
<h3><a href="https://json.blog/2023/01/19/letters-january-w.html">Week 3: 2023-01-19</a></h3>
<blockquote>
<p>Hi Jason,</p>
</blockquote>
<blockquote>
<p>A late reply this week - I completely forgot about this until very late last night.</p>
</blockquote>
<blockquote>
<p>Your TV setup looks very similar to ours but we're lucky enough to have two wall lights behind it so the wall looks much less bare but you're right it's hard to put anything to garish there otherwise it's distracting.</p>
</blockquote>
<blockquote>
<p>With 10 weeks to go, I've been thinking a lot about technology and how that will affect my duaghter. <a href="https://sallylait.com/blog/2022/08/25/digital-shadow-inheritance/">This post</a> in particular made me think about how much I'm going to share about her online once she's here. I don't think there's any right answer but it has occupied my mind the past few days.  Come to think of it, the impending birth is basically the only thing I can think about at the moment. I'm sure that we'll be fine but I can't help but worry that we won't have enough clothes or nappies, or something I haven't even thought of will go wrong.</p>
</blockquote>
<blockquote>
<p>As for non-baby things, I've been having fun messing around with the omg.lol API <a href="https://github.com/rknightuk/omglolcli">building a CLI to interact with the service</a> and I'm working on add a /now page to my website (as well as the new omg.lol now pages). How has your week been this week?</p>
</blockquote>
<blockquote>
<p>Speak soon,
Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
</blockquote>
<blockquote>
<p>Easily excusing the &quot;late&quot; reply (rules are once per week, doesn't have to be right at the start), with a later reply of my own. This week has been incredibly busy at work as the post-holiday break, post-three day weekend, we're really back at it and in it, started to kick in. It's been long but rewarding-- one of those weeks where you're exhausted, but I'm doing the kind of work I do well bringing the energy and attention I need to.</p>
</blockquote>
<blockquote>
<p>In particular, I've recently reorganized our team so that I have slightly smaller set of direct reports that are more &quot;coherent&quot; structurally-- I am managing directly one person who leads each function below me. It's too early to say if this is working better for the whole team, but this week made me feel confident that it works better for <em>me</em>, which is really important for avoiding burn out.</p>
</blockquote>
<blockquote>
<p>On the TV side, wall lights were another thing we considered-- a sconce on each side just to give it <em>something</em>. It just feels strange to have so much blank space <em>above</em> the TV as well. I need someone to, I don't know, share a Pinterest board or something with me so I can figure out what people actually do. The entire dilemma of what to do behind the TV reinforces a personal frustration of mine. It feels wrong that our &quot;living room&quot; is oriented toward a television. I would like for things to be different, but I don't think my partner or her mother would be sufficiently on board to make that change. It's more aspirational, really, to make sure that all television time is <em>appointment</em> time and not casual watching.</p>
</blockquote>
<blockquote>
<p>I cannot imagine the stack of worry that comes with being just weeks away from being a dad. It's good to work with fun new tools right now while you can-- a good distraction before side projects get put aside for a while. My gut is that it's not worth worrying too much about online presence. I'm not a parent, and I'm not facing that decision, but my gut is that it's easy to overthink the consequences (or lack thereof). Short of straight up exploitation, which is rare, these things seem to work out ok for parents and kids regardless of the choices they make. That's not to say the choices don't matter, but it seems like there aren't wrong choices.</p>
</blockquote>
<blockquote>
<p>I'm a big fan of /now pages (I really need to update mine). I really value the narrative of a Now page. For me, it's a time I get to think about what matters that gets lost in the series of smaller posts or dripped out updates. I have resisted adding any &quot;automated&quot; elements-- it'd be easy to add the book I'm currently reading, for example, or maybe something like starred articles from my RSS reader. Something to think about.</p>
</blockquote>
<blockquote>
<p>We're coming to the end of our time in Mexico. I'm thinking a lot about what makes home, well, home, and what I've learned about where I want to live and what I want my life to be like from 2+ months away. It's a different kind of taking stock than becoming a parent, but I find myself taking stock nonetheless.</p>
</blockquote>
<blockquote>
<p>Looking forward to next week,
Jason</p>
</blockquote>
<h3><a href="https://json.blog/2023/01/28/hi-jason.html">Week 4: 2023-01-28</a></h3>
<blockquote>
<p>Hi Jason,</p>
</blockquote>
<blockquote>
<p>Another later-in-the-week reply for our last week of this project. To what you said about taking stock, I think a break or a big life change is an excellent time to think about these things. We found ourselves doing that when we moved into this house and once again when we knew we were having a child.</p>
</blockquote>
<blockquote>
<p>Onto which, the final preparations are now taking place: washing the clothes, organising the nursery, and prepping the hospital bag (a long with many pregnancy and post-pregnancy products I'd never realised even existed). I've gone past the worrying stage now for the most part and I'm focusing on things I <em>can</em> control.</p>
</blockquote>
<blockquote>
<p>Mexico sounds wonderful and I hope you've been able to relax and enjoy it - spending an extended time away from home in somewhere so different sounds lovely.</p>
</blockquote>
<blockquote>
<p>Now to get a little bit meta about this project of yours. Having done this for four weeks now I'm struck by how difficult I've found being committed to writing <em>something</em> every week - it's certainly a good job I suggested early in the year pre-baby else I'm not sure it would have gone quite as well. Despite having ideas here and there for little projects or blog posts something about the somewhat stricter schedule I've struggled to do it &quot;on time&quot; (despite the loose rules).</p>
</blockquote>
<blockquote>
<p>I have, however, really enjoyed being part of this project and I'm looking forward to reading in the coming months.</p>
</blockquote>
<blockquote>
<p>Speak soon,
Robb</p>
</blockquote>
<hr />
<blockquote>
<p>Hi Robb,</p>
</blockquote>
<blockquote>
<p>It’s funny, because here at the beginning of this project, while taking stock, I’ve had two contrary reactions. First, it does take a surprising amount of discipline to sit down and write to someone. It’s certainly harder than just shooting off whatever is at the top of my mind. Second, it feels so feeble to just write a letter once a week while I see all the progression you’ve been making on several side projects, while preparing for the baby, during this same month.</p>
</blockquote>
<blockquote>
<p>You’ve been <a href="https://rknight.me/automating-my-now-page/">automating your now page</a>, <a href="https://rknightuk.github.io/mac-30-font-svg/">released a widely celebrated set of icons</a>, built a <a href="https://github.com/rknightuk/omglolcli">CLI for omg.lol</a>, and a host of other small projects. Based on <a href="https://chaosweb.space">chaosweb.space</a>, I think you’d like <a href="https://mynameiser.in">mavica’s work</a>.</p>
</blockquote>
<blockquote>
<p>It’s generating that itch in me again to figure out how to leave some energy at the end of the day to do the things I love on the computer after doing those things at work all day on the computer. Part of my taking stock is realizing that I have to find a way to push over that activation energy hump so that I can just work on small tools for myself all the time.</p>
</blockquote>
<blockquote>
<p>I’m glad this first month felt like just writing letters to a friend about what’s happening— it feels like an easy introduction. Maybe they’ll all go this way, but maybe some folks will want to really dig into a specific topic. I’m glad that I am not responsible for writing the first letter, because I think that makes it more likely that each month will be a bit different based on who is participating.</p>
</blockquote>
<blockquote>
<p>Thanks for helping me kick off this project.
Jason</p>
</blockquote>
]]></content:encoded>
<pubDate>2023-01-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>Get Mastodon Account ID from Username</title>
<link>https://rknight.me/get-mastodon-account-id-from-username/</link>
<guid>https://rknight.me/get-mastodon-account-id-from-username/</guid>
<content:encoded><![CDATA[
<p>Note: Every Mastodon has an RSS feed you can use to get statuses if you don't need the data in JSON format <code>https://example.social/@foobar.rss</code>.</p>
<p>If you want to get a user's statuses from Mastodon you can't just look these up with the username. You need, to quote the documentation, &quot;the ID of the Account in the database&quot;. To get this, we can use the <a href="https://docs.joinmastodon.org/methods/accounts/#lookup">lookup endpoint</a> that will return what we need:</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># for an account on example.social</span><br /><span class="token function">curl</span> https://example.social/api/v1/accounts/lookup?acct<span class="token operator">=</span>foobar<br /><br /><span class="token comment"># also works for remote accounts</span><br /><span class="token function">curl</span> https://example.social/api/v1/accounts/lookup?acct<span class="token operator">=</span>foobar@another.social</code></pre>
<p>Assuming the username is valid, you will receive a response like this:</p>
<pre class="language-json"><code class="language-json"><span class="token punctuation">{</span><br />    <span class="token property">"id"</span><span class="token operator">:</span> <span class="token string">"1234567891011121314"</span><span class="token punctuation">,</span><br />    <span class="token property">"acct"</span><span class="token operator">:</span> <span class="token string">"foobar"</span><span class="token punctuation">,</span><br />    <span class="token property">"username"</span><span class="token operator">:</span> <span class="token string">"foobar"</span><br />    <span class="token comment">// ...</span><br /><span class="token punctuation">}</span></code></pre>
<p>Then you can use that ID to make a request for a users statuses:</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">curl</span> https://example.instance/api/v1/accounts/1234567891011121314/statuses</code></pre>
]]></content:encoded>
<pubDate>2023-01-27T00:00:00+00:00</pubDate>
</item>
<item>
<title>Everything Should Have an API: I'm Done with Closed Services</title>
<link>https://rknight.me/im-done-with-closed-services/</link>
<guid>https://rknight.me/im-done-with-closed-services/</guid>
<content:encoded><![CDATA[
<p>I'm not signing up to any service that doesn't offer at minimum RSS feeds for my data. Ideally an API, even a simple one. No more apps that aren't <a href="https://www.jwz.org/blog/2022/11/psa-do-not-use-services-that-hate-the-internet/">part of the web</a>. I'm done.</p>
<p>To quote <a href="https://localghost.dev/blog/everything-should-have-an-api-adventures-in-trying-to-automate-stuff/">Sophie</a>:</p>
<blockquote>
<p>Why bother tracking what you're playing/reading/watching if you can't then do fun stuff with that data?</p>
</blockquote>
<p>Is it too much to ask for an RSS feed of listen history from my podcast apps? Every single one of them collects and stores that data but (as far as I know) don't make that data available easily via RSS or an API. One of the apps must have this, please let me know.</p>
<p>There are a loads of mobile apps for tracking game collections, movies watched, habits logged, but most of of them have no way to access the data on the web, let alone programatically; god forbid I want to access stuff from a browser on my Mac instead of using my phone all the time.</p>
<p>I shouldn't need to set a reminder every week/month/year to go and request an export of <em>my</em> data just to have it backed up, posted to my blog, or whatever else I want to do with it.</p>
<p>I'm done with closed services.</p>
]]></content:encoded>
<pubDate>2023-01-24T00:00:00+00:00</pubDate>
</item>
<item>
<title>Web Scraping with Node and Cheerio</title>
<link>https://rknight.me/web-scraping-with-node-and-cheerio/</link>
<guid>https://rknight.me/web-scraping-with-node-and-cheerio/</guid>
<content:encoded><![CDATA[
<p><em>This post is a spin-off from <a href="https://rknight.me/automating-my-now-page/">Automating My Now Page</a>.</em></p>
<p>If you want to programatically get data from a site that doesn't have an API, scraping is the solution. Keep in mind scraping could be against the terms of service of some websites or illegal in some places. To scrape a website there are (at least in this tutorial) two steps:</p>
<ol>
<li>Get the web page content</li>
<li>Find the data inside the HTML you've collected</li>
</ol>
<p>For this tutorial, we'll scrape two things from <a href="https://psnprofiles.com/rknightuk">my PSN profile</a>:</p>
<ul>
<li>The latest game I'm playing</li>
<li>The link to the game</li>
</ul>
<p>We should end up with an object that looks something like this:</p>
<pre class="language-js"><code class="language-js">scrapedData <span class="token operator">=</span> <span class="token punctuation">{</span><br /> <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">"Marvel's Guardians of the Galaxy"</span><span class="token punctuation">,</span><br /> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token string">"https://psnprofiles.com/trophies/14419-marvels-guardians-of-the-galaxy/rknightuk"</span><span class="token punctuation">,</span><br /><span class="token punctuation">}</span></code></pre>
<h3>Setup</h3>
<p>For this tutorial you'll need <a href="https://nodejs.org/en/">Node</a> installed - version 17 or higher to make use of the native version of <code>fetch</code>.</p>
<p>Create a directory and navigate to it:</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">mkdir</span> psn-scraper<br /><br /><span class="token builtin class-name">cd</span> psn-scraper<br /></code></pre>
<p>Next we will initialise the project. You can either fill in all the details or append <code>-y</code> to the command to skip all the questions:</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># with questions</span><br /><span class="token function">npm</span> init<br /><br /><span class="token comment"># skip all questions</span><br /><span class="token function">npm</span> init <span class="token parameter variable">-y</span></code></pre>
<p>Next we need to install <a href="https://www.npmjs.com/package/cheerio">Cheerio</a>. Cheerio is a subset of jQuery designed to run on the server for DOM parsing and manipulation.</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> cheerio</code></pre>
<p>If then install works correctly you should have a <code>package.json</code> and <code>package.lock</code> file in your directory.  In the <code>package.json</code></p>
<p>Finally, we'll create our scraper file:</p>
<pre><code>touch index.js
</code></pre>
<h3>Fetching the HTML</h3>
<p>The first step is to fetch the HTML of the page we want to scrape which we'll do with <code>fetch</code>. In your <code>index.js</code> require <code>cheerio</code> and add a <code>run</code> function that using <code>async</code> (we'll be using <code>await</code> so this needs to be in a function).</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cheerio'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br /> <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://psnprofiles.com/rknightuk'</span><span class="token punctuation">)</span><br /><br /> <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br /><br /><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
<p>If we call <code>node index.js</code> a large amount of HTML will be output to the terminal. At this point we could use regex to find the data we want but using regex on HTML is notoriously difficult and unreliable. Instead Cheerio will do all the heavy lifting for us.</p>
<h3>Parsing the Data</h3>
<p>The first thing we need to do is find a class name or ID on the list of games so we can correctly target it. If we inspect the first game in the list of games on my profile, we can see that the link itself which contains the title and url has a class of <code>title</code>:</p>
<p><img alt="Web inspector showing the link with class names" src="https://rknightuk.s3.amazonaws.com/site/psn-profile-inspector.png" /></p>
<p>On some websites this might be enough to get what we need, but a quick check in the console with <code>document.getElementsByClassName('title').length</code> shows there are 91 elements on the profile page with that class but the games list only has 75 games in it so we need to be more specific. The list of games is inside a <code>table</code> element with an ID of <code>gamesTable</code> so we can use that in combination with the <code>title</code> class name. If you've used jQuery before the syntax will be familiar to you:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// ...</span><br /><span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// load the HTML into Cheerio</span><br /><span class="token keyword">const</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><br /><br /><span class="token comment">// this will return elements we don't want</span><br /><span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.title'</span><span class="token punctuation">)</span><br /><br /><span class="token comment">// this is more specific and only returns elements inside the games table</span><br /><span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gamesTable .title'</span><span class="token punctuation">)</span><br /><br />console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>games<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 75</span><br /></code></pre>
<p>We now have an array of games which we can get the title and link from. Because Cheerio's API is the same as jQuery we can used <code>first</code>,  <code>attr</code>, and <code>text</code> to get the values we need:</p>
<pre class="language-js"><code class="language-js"><span class="token comment">// ...</span><br /><span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gamesTable .title'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">const</span> path <span class="token operator">=</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span><br /><span class="token keyword">const</span> parsedData <span class="token operator">=</span> <span class="token punctuation">{</span><br /> <span class="token literal-property property">title</span><span class="token operator">:</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br /> <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://psnprofiles.com</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token comment">// the href doesn't include the domain so we add it here</span><br /><span class="token punctuation">}</span><br /><br />console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedData<span class="token punctuation">)</span><br /><span class="token comment">// {</span><br /><span class="token comment">//  title: "Marvel's Guardians of the Galaxy",</span><br /><span class="token comment">//  link: '/trophies/14419-marvels-guardians-of-the-galaxy/rknightuk'</span><br /><span class="token comment">// }</span></code></pre>
<p>If we wanted to get <em>all</em> the games in the list, we can use <code>each</code>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> parsedData <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><br /><br />games<span class="token punctuation">.</span><span class="token function">each</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">i<span class="token punctuation">,</span> el</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br /> <span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span><br /> games<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span><br />  <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token function">$</span><span class="token punctuation">(</span>el<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />  <span class="token literal-property property">link</span><span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://psnprofiles.com</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span><br /> <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span><br /><br />console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedData<span class="token punctuation">)</span><br /><span class="token comment">// [</span><br /><span class="token comment">//  {</span><br /><span class="token comment">//    title: "Marvel's Guardians of the Galaxy",</span><br /><span class="token comment">//    link: 'https://psnprofiles.com/trophies/14419-marvels-guardians-of-the-galaxy/rknightuk'</span><br /><span class="token comment">//  },</span><br /><span class="token comment">//  {</span><br /><span class="token comment">//    title: 'Peggle 2',</span><br /><span class="token comment">//    link: 'https://psnprofiles.com/trophies/2935-peggle-2/rknightuk'</span><br /><span class="token comment">//  }</span><br />  <span class="token comment">// ...</span><br /><span class="token comment">// ]</span></code></pre>
<p>All together:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> cheerio <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'cheerio'</span><span class="token punctuation">)</span><br /><br /><span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">'https://psnprofiles.com/rknightuk'</span><span class="token punctuation">)</span><br />    <span class="token keyword">const</span> body <span class="token operator">=</span> <span class="token keyword">await</span> response<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> $ <span class="token operator">=</span> cheerio<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span>body<span class="token punctuation">)</span><br />    <span class="token keyword">const</span> games <span class="token operator">=</span> <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#gamesTable .title'</span><span class="token punctuation">)</span><br /><br />    <span class="token keyword">const</span> parsedData <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">title</span><span class="token operator">:</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">link</span><span class="token operator">:</span> games<span class="token punctuation">.</span><span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attr</span><span class="token punctuation">(</span><span class="token string">'href'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parsedData<span class="token punctuation">)</span><br /><span class="token punctuation">}</span><br /><br /><span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre>
<p>Now we have that data, we could do anything we want with it like post it to a blog or add it to an RSS feed. The source code for this tutorial is <a href="https://github.com/rknightuk/psn-scraper-demo">on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-01-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Automating My Now Page</title>
<link>https://rknight.me/automating-my-now-page/</link>
<guid>https://rknight.me/automating-my-now-page/</guid>
<content:encoded><![CDATA[
<p>This post outlines how I automated my now page(s) but I should start with what a now page <em>is</em>. From <a href="https://nownownow.com/about">nownownow.com</a>:</p>
<blockquote>
<p>a website with a link that says “now” goes to a page that tells you what this person is focused on at this point in their life. For short, we call it a &quot;now page&quot;</p>
</blockquote>
<p>I had heard of now pages a long time ago and always meant to add one to my site but just never got round to it. A few weeks ago <a href="https://home.omg.lol/referred-by/robb">omg.lol</a> launched their now page feature which made me think about this again (and I want to keep both my personal site and the omg.lol now page up to date and in sync). One problem with a page that should, in theory, be updated regularly is I will <em>definitely</em> forget to do it. Automation to the rescue! Or more specifically a veritable grab-bag of python and node scripts, web scraping, and APIs.</p>
<p>If you just want to see the pages here are the links:</p>
<ul>
<li><a href="https://rknight.me/now">/now</a></li>
<li><a href="https://robb.omg.lol/now">robb.omg.lol/now</a></li>
</ul>
<p>The <a href="https://github.com/rknightuk/api">source code is on GitHub</a>.</p>
<h3>Overview</h3>
<p>For each service I'm pulling data from I'm doing mostly the same thing:</p>
<ol>
<li>Fetch some data from <em>somewhere</em></li>
<li>Format that data to make is easier to work with</li>
<li>Add it to <a href="https://api.rknight.me/api/data.json"><code>data.json</code></a></li>
</ol>
<p>I then call <a href="https://github.com/rknightuk/api/blob/main/now/generate.js"><code>now/generate.js</code></a> which goes through each key in <code>data.json</code> and outputs it to two markdown files: <a href="https://api.rknight.me/api/now-omg.txt"><code>now-omg.txt</code></a> (for omg.lol) and <a href="https://api.rknight.me/api/now-web.txt"><code>now-web.txt</code></a> (for my website). The web version skips the omg.lol-specific syntax and intro section.</p>
<p>For omg.lol, I wanted to append icons to each line so they display as the bullet on my omg.lol now page. I grabbed icons for each section from <a href="https://fontawesome.com/">Font Awesome</a> and apply them as I loop through item in a section:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">Some text from an item </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token function">getIcon</span><span class="token punctuation">(</span><span class="token string">'making'</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><br /><span class="token keyword">const</span> <span class="token function-variable function">getIcon</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token keyword">const</span> icons <span class="token operator">=</span> <span class="token punctuation">{</span><br />        <span class="token literal-property property">making</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'microphone-lines'</span><span class="token punctuation">,</span> <span class="token string">'laptop-code'</span><span class="token punctuation">,</span> <span class="token string">'terminal'</span><span class="token punctuation">,</span> <span class="token string">'code-pull-request'</span><span class="token punctuation">,</span> <span class="token string">'bug'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">reading</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'book'</span><span class="token punctuation">,</span> <span class="token string">'book-bookmark'</span><span class="token punctuation">,</span> <span class="token string">'book-open'</span><span class="token punctuation">,</span> <span class="token string">'book-open-reader'</span><span class="token punctuation">,</span> <span class="token string">'bookmark'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">music</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'headphones'</span><span class="token punctuation">,</span> <span class="token string">'radio'</span><span class="token punctuation">,</span> <span class="token string">'guitar'</span><span class="token punctuation">,</span> <span class="token string">'compact-disc'</span><span class="token punctuation">,</span> <span class="token string">'drum'</span><span class="token punctuation">,</span> <span class="token string">'sliders'</span><span class="token punctuation">,</span> <span class="token string">'volume-high'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />        <span class="token literal-property property">podcast</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">'headphones'</span><span class="token punctuation">,</span> <span class="token string">'microphone-lines'</span><span class="token punctuation">,</span> <span class="token string">'comments'</span><span class="token punctuation">,</span> <span class="token string">'tower-broadcast'</span><span class="token punctuation">,</span> <span class="token string">'podcast'</span><span class="token punctuation">]</span><span class="token punctuation">,</span><br />    <span class="token punctuation">}</span><br /><br />    <span class="token keyword">return</span> icons<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">[</span>index<span class="token punctuation">]</span><br /><span class="token punctuation">}</span></code></pre>
<p><img alt="Example of icons on omg.lol" src="https://rknightuk.s3.amazonaws.com/site/now-podcasts.png" /></p>
<h3>Getting the data</h3>
<h4>Music</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/lastfm.js"><code>services/lastfm.js</code></a></li>
</ul>
<p>This was a nice easy one: show the albums, tracks, and artists I've been listening to the past seven days. <a href="https://www.last.fm/api">Last.fm</a> have a decent, if slightly oddly designed, API to get this data.</p>
<p>Not so easy is that Last.fm no longer return artist or track images. To get around this I do a lookup with the <a href="https://musicbrainz.org/doc/MusicBrainz_API">MusicBrainz</a> which gives me a link to <a href="https://www.allmusic.com/artist/mn0000289599">AllMusic</a> which I then scrape and grab the main image with <a href="https://cheerio.js.org/">Cheerio</a>.</p>
<p>I also use <a href="https://www.npmjs.com/package/text-to-image"><code>text-to-image</code></a> to generate images for artists and albums where I'm unable to get one either from Last.fm or AllMusic:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">await</span> textToImage<span class="token punctuation">.</span><span class="token function">generate</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>album<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> by </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>album<span class="token punctuation">.</span>artist<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span><br />    <span class="token literal-property property">maxWidth</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">customHeight</span><span class="token operator">:</span> <span class="token number">200</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">textColor</span><span class="token operator">:</span> <span class="token string">'white'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">textAlign</span><span class="token operator">:</span> <span class="token string">'center'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">margin</span><span class="token operator">:</span> <span class="token number">20</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">bgColor</span><span class="token operator">:</span> <span class="token string">'black'</span><span class="token punctuation">,</span><br />    <span class="token literal-property property">verticalAlign</span><span class="token operator">:</span> <span class="token string">'center'</span><br /><span class="token punctuation">}</span><span class="token punctuation">)</span></code></pre>
<p><img alt="Example of top album output" src="https://rknightuk.s3.amazonaws.com/site/now-albums.png" /></p>
<h4>Github, Books, and Statuses</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/github.js"><code>services/github.js</code></a></li>
<li><a href="https://github.com/rknightuk/api/blob/main/services/books.js"><code>services/books.js</code></a></li>
<li><a href="https://github.com/rknightuk/api/blob/main/services/statuses.js"><code>services/statuses.js</code></a></li>
</ul>
<p>These are all straight-forward API calls with a slightly manually process of tagging projects on GitHub with <code>now</code> - I don't want every recent project showing up and GitHub doesn't have an API for star lists yet.</p>
<h4>Games</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/psn.js"><code>services/psn.js</code></a></li>
</ul>
<p>Like the missing artist images, this involved scraping a page because PSN doesn't have an API. I scrape my <a href="https://psnprofiles.com/rknightuk">PSN Profiles</a> and use Cheerio to grab the latest games I've got trophies for. It's not a perfect system, but it's likely the current game I'm playing will be the top of that list.</p>
<h4>Overcast</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/overcast"><code>services/overcast.js</code></a></li>
</ul>
<p><strong>This export isn't a secret, nor are the scripts to download it but don't hammer this endpoint. I'm downloading once a week. I have emailed Marco to ask if he'd implement an RSS feed of listen history so this isn't required.</strong></p>
<p>This one was trickier but doable. Overcast offers an <a href="https://overcast.fm/account">&quot;All Data&quot; export</a> but you need to be logged in to access it. And it's in OPML format. So this is a two step process:</p>
<ol>
<li>Use <a href="https://github.com/rknightuk/api/tree/main/services/overcast/fetcher">this python script</a> to login and download the export</li>
<li>Run <a href="https://github.com/rknightuk/api/tree/main/services/overcast/parser">this node script</a> to convert the OPML to JSON and then to <a href="https://api.rknight.me/api/podcasts.json">a valid JSON feed</a></li>
</ol>
<p>One thing I noticed is that <a href="https://www.relay.fm/membership">Relay's member show</a> feeds show the episode and show URL as <code>relay.fm/membership</code> so I had to handle this myself. Example here with <a href="https://www.relay.fm/connected">Connected Pro</a>:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> isConnectedPro <span class="token operator">=</span> podcast<span class="token punctuation">.</span>title <span class="token operator">===</span> <span class="token string">'Connected Pro'</span><br /><br /><span class="token keyword">let</span> episodeUrl <span class="token operator">=</span> episode<span class="token punctuation">.</span>url<br /><span class="token keyword">if</span> <span class="token punctuation">(</span>isConnectedPro<span class="token punctuation">)</span><br /><span class="token punctuation">{</span><br />    <span class="token keyword">const</span> episodeNumber <span class="token operator">=</span> episode<span class="token punctuation">.</span>title<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">':'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><br />    episodeUrl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">https://relay.fm/connected/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>episodeNumber<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><br /><span class="token punctuation">}</span></code></pre>
<p>From this data, I take the last 30 episodes, group them by show, and rank them by episode count which then becomes the podcasts section of the now page.</p>
<h4>Other</h4>
<ul>
<li><a href="https://github.com/rknightuk/api/blob/main/services/other"><code>services/other.js</code></a></li>
</ul>
<p>For the &quot;about&quot; and &quot;tv&quot; sections, I wanted to be able to update these from anywhere so I opted to dump some yaml in an <a href="https://robb.paste.lol/now.yaml">omg.lol pastebin</a> and fetch it from there.</p>
<h3>Syncing the changes</h3>
<p>Each data source doesn't need to be updated every hour or day, so I split them out into a <a href="https://github.com/rknightuk/api/blob/main/makefile"><code>makefile</code></a> for jobs to run on a Monday (music, books, games), a Friday (Overcast), and daily (about, tv, github projects). (I could have done these all as separate cron jobs but it was easier to split them in a make file and just have three scheduled jobs instead).</p>
<p>Each time a job runs, it updates the <code>data.json</code> file so I can run <code>generate.js</code> and <a href="https://github.com/rknightuk/api/blob/main/now/update.js"><code>update.js</code></a> at any time throughout the week to update my now pages. The <code>update</code> script posts the contents of <code>web-omg.txt</code> to the <a href="https://api.omg.lol/">omg.lol API</a> and sends a webhook to <a href="https://forge.laravel.com">Forge</a> to deploy my main site.</p>
<p>All of the code for this is <a href="https://github.com/rknightuk/api/">on GitHub</a> if you want to do something similar.</p>
]]></content:encoded>
<pubDate>2023-01-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>Navigate Project Folders with Pick</title>
<link>https://rknight.me/navigate-project-folders-with-pick/</link>
<guid>https://rknight.me/navigate-project-folders-with-pick/</guid>
<content:encoded><![CDATA[
<p>When I started my industrial placement at Radweb nearly 10 years ago (👴), <a href="https://github.com/danharper">Dan Harper</a> sent me his <a href="https://github.com/danharper/dotfiles">bash aliases</a> which included a lot of handy Git ones including this one that uses <a href="https://github.com/mptre/pick"><code>pick</code></a> to list git branches. I can either do <code>gco</code>, search, and enter to checkout to that branch, or do <code>gco branchName</code> to checkout immediately to a branch:</p>
<pre class="language-bash"><code class="language-bash"><span class="token keyword">function</span> <span class="token function-name function">gco</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />        <span class="token function">git</span> checkout <span class="token variable"><span class="token variable">$(</span><span class="token function">git</span> branch <span class="token operator">|</span> pick<span class="token variable">)</span></span><br />    <span class="token keyword">else</span><br />        <span class="token function">git</span> checkout <span class="token string">"<span class="token variable">$@</span>"</span><br />    <span class="token keyword">fi</span><br /><span class="token punctuation">}</span></code></pre>
<p>I do use <a href="https://github.com/martvdmoosdijk/zsh-marks"><code>zsh-marks</code></a> already to jump to folders I've expicitly marked (as well as jumping to the root of projects with <code>jump sites</code>) but last night while doing the <code>cd ..; cd project-name</code> dance between different projects I <em>hadn't</em> marked I realised I could apply this same thing to my personal sites folder which as the time of this writing has 97 folders. To do this, I needed to list out the directories with <code>ls</code> and the <code>-1</code> option which tells <code>ls</code> to show one per line and just the folder name:</p>
<pre class="language-bash"><code class="language-bash"><span class="token keyword">function</span> <span class="token function-name function">site</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$#</span> <span class="token parameter variable">-eq</span> <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span><br />        <span class="token builtin class-name">cd</span> ~/path/to/sites/<span class="token variable"><span class="token variable">$(</span><span class="token function">ls</span> <span class="token parameter variable">-1</span> <span class="token string">"~/path/to/sites"</span> <span class="token operator">|</span> pick<span class="token variable">)</span></span><br />    <span class="token keyword">else</span><br />        <span class="token builtin class-name">cd</span> ~/path/to/sites/<span class="token string">"<span class="token variable">$@</span>"</span><br />    <span class="token keyword">fi</span><br /><span class="token punctuation">}</span></code></pre>
<p>So now to jump directly to the folder for this website instead of doing <code>j sites</code> then <code>cd personal/rknight.me</code> I can simply do <code>site rknight.me</code>. You can see all my aliases in <a href="https://github.com/rknightuk/dotfiles">my dotfiles on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2023-01-19T00:00:00+00:00</pubDate>
</item>
<item>
<title>Link Dump</title>
<link>https://rknight.me/link-dump/</link>
<guid>https://rknight.me/link-dump/</guid>
<content:encoded><![CDATA[
<ul>
<li><a href="https://austinkleon.com/2014/04/29/a-brief-history-of-my-newspaper-blackout-poems/">A brief history of my newspaper blackout poems</a>. Not sure how I've not seen this before, but I'll be buying <a href="https://austinkleon.com/newspaperblackout/">the book ASAP</a>.</li>
<li><a href="https://www.razzem.com/these-ai-generated-marvel-cat-characters-could-make-for-a-cute-animated-series/">AI generated Marvel cat-characters</a>. Cute AF.</li>
<li><a href="https://www.pocket-lint.com/phones/reviews/sony-mobile/71544-sony-ericsson-xperia-pureness-review/">Sony Ericsson Xperia Pureness</a>. Not sure why this was in my read later list but very cool (article is from 2009)</li>
<li><a href="https://www.wearerewind.com/">Audio Cassette Player | We Are Rewind</a>. A cassette player with Bluetooth. It's like this product was made for me.</li>
<li><a href="https://github.com/ngagesdk/wordle">A portable clone of Wordle designed for the Nokia N-Gage</a>. Cool.</li>
<li><a href="https://writteninstone.photo/">Written in Stone • A gallery of sidewalks, and the stamps and seals left by the people who laid them.</a> I already posted this but figured I'd pop it here too.</li>
</ul>
]]></content:encoded>
<pubDate>2023-01-15T00:00:00+00:00</pubDate>
</item>
<item>
<title>Bye Almanac, Hello Lantern</title>
<link>https://rknight.me/bye-almanac-hello-lantern/</link>
<guid>https://rknight.me/bye-almanac-hello-lantern/</guid>
<content:encoded><![CDATA[
<p>I am a hoarder of data. I have exports from dead Tumblr sites, Twitter accounts,  Pinboard, Instapaper, and probably more I'm not thinking of. I also like to be able to check when I did something, watched something, or just tweeted something funny (it happened <a href="https://hellsite.rknight.me/656762307494682624/">at least once</a>).</p>
<h3>Bye Almanac</h3>
<p>In February 2015 <a href="https://hellsite.rknight.me/569782414899355648/">I started using</a> <a href="http://plotapp.io/">Plot</a> (RIP) for tracking movies I've watched. This was before I'd heard of <a href="https://letterboxd.com/">Letterboxd</a> and before the proliferation of the many TV and movie tracking apps on iOS. Within a few months I decided I wanted the same for TV shows I'd watched and games I played so I started work on the first version of Almanac. I built this with <a href="https://www.11ty.dev/">Eleventy</a> which worked well but was missing any kind of search and I couldn't post from my phone (I suppose I could but I <em>hate</em> doing things on my phone). Sadly I don't have a copy of this version of site but I do have this rather natty screenshot of it:</p>
<p><img alt="A screenshot of version one of Almanac" src="https://rknightuk.s3.amazonaws.com/site/almanac-screenshot.png" /></p>
<p>Fast forward to 2018 and I did the <a href="https://github.com/rknightuk/almanac/commit/2595bc622f75ef5ddc9a85cd745dd216b69fbddc">first commit</a> on version two. This version was built on Laravel for the backend and a React front end. It used the <a href="https://www.themoviedb.org/">TMDB API</a> for movies and TV, and the <a href="https://www.giantbomb.com/api/">GiantBomb API</a> for games. I built a <a href="https://github.com/rknightuk/almanac/blob/master/app/LetterboxdFetcher.php">Letterboxd importer</a> to poll my profile RSS feed to grab new reviews and store them in Almanac, kept track of how many times I'd watched a movie, and more recently used it to cross-post Letterboxd reviews to Micro.blog. This has now been replaced with <a href="https://echo.rknight.me">Echo</a>.</p>
<p>When I started using Micro.blog early last year I realised it made no sense to have all these different places I was posting things so I spent some time exporting the ~1200 posts from Almanac and importing them into Micro.blog. Since then I've been posting directly to Micro.blog, with the exception of movies which are still fed in from Letterboxd. For the sake of posterity, here's a couple of screenshots of Almanac as it exists now:</p>
<p><img alt="A screenshot of the front end of Almanac" src="https://rknightuk.s3.amazonaws.com/site/almanac-screenshot-1.png" /></p>
<p><img alt="A screenshot of the backend of Almanac" src="https://rknightuk.s3.amazonaws.com/site/almanac-screenshot-4.png" /></p>
<h3>Hello Lantern</h3>
<p>Like version one of Almanac, I've missed being able to quickly search for a movie or TV show to grab the year or link when posting to Micro.blog. Which is why I built <a href="https://lantern.rknight.me">Lantern</a>. Lantern uses the same APIs as Almanac (and even shares some of the same design for search). It grabs the year (release or first aired) as well as the poster and converts it to Markdown for posting to Micro.blog. Of course it also pops the <a href="https://help.micro.blog/t/emoji-in-discover/34">discover emoji</a> in there too.</p>
<p><img alt="Lantern screenshot" src="https://rknightuk.s3.amazonaws.com/site/lantern-screenshot.png" /></p>
<p>I started with a version that logged you in and would post automatically but realised that made it more complicated that it needs to be. I switched it over to use <a href="https://www.netlify.com/products/functions/">Netlify functions</a> for the API and a mess of vanilla JS for the front end. Micro.blog has the posting UI so I just needed to generated the main content. Micro.blog already has book support so I don't think I'll be adding too many features to Lantern but please let me know if you find any bugs or you have any litte requests.</p>
]]></content:encoded>
<pubDate>2023-01-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Import RSS to Micro.blog and Mastodon with Echo</title>
<link>https://rknight.me/echo-rss-to-microblog/</link>
<guid>https://rknight.me/echo-rss-to-microblog/</guid>
<content:encoded><![CDATA[
<p><img alt="Screenshot of Echo running in a terminal" src="https://rknightuk.s3.amazonaws.com/site/echo-screenshot.png" /></p>
<p><strong>Update 13/01/23</strong>: Echo now supports Mastodon and webhooks as well as Micro.blog. <a href="https://echo.rknight.me">Check out the website for more details</a>.</p>
<p>After a conversation with <a href="https://zoeaubert.me">Zoe</a> about <a href="https://status.lol">status.lol</a>, as well as <a href="https://micro.blog/muhh/15830286">this reply from Markus</a>, I decided to write <a href="https://github.com/rknightuk/echo">Echo</a> last night (do I know how to party on my birthday or what?). From the readme:</p>
<blockquote>
<p>Echo is a node script to post new items from an RSS feed to Micro.blog</p>
</blockquote>
<p>Micro.blog already supports importing RSS feeds and handles it very well but <s>I'm a control freak</s> I wanted a bit more control over the formatting as well as assigning categories on import.</p>
<p>Echo takes a config of RSS feeds as well as some formatting functions for items and posts them to Micro.blog. I run mine every 15 minutes but you could set it up to run whenever you want. The only requirements are <code>node</code> and <code>npm</code> and a server to run it on (or you could run it on your computer and manually run it as and when).</p>
<p><a href="https://github.com/rknightuk/echo">Download Echo on GitHub</a></p>
]]></content:encoded>
<pubDate>2023-01-10T00:00:00+00:00</pubDate>
</item>
<item>
<title>Blogs and Wikis and Links</title>
<link>https://rknight.me/blogs-and-wikis-and-links/</link>
<guid>https://rknight.me/blogs-and-wikis-and-links/</guid>
<content:encoded><![CDATA[
<p>I've been thinking about how better to handle all the different places I'm posting too including this site,  <a href="https://micro.blog/rknightuk">Micro.blog</a>, and <a href="https://intersect.rknight.me/">my wiki</a>.  To quote <a href="https://toot.rknight.me/2023/01/07/starting-to-think.html">myself</a>:</p>
<blockquote>
<p>Starting to think some things I’ve put into my wiki might be better served as a blog post that I just update as and when I find things. The discoverability of pages is kinda crappy for anyone who isn’t me (because I know to go there to look for things)</p>
</blockquote>
<p>For example, <a href="https://intersect.rknight.me/buying-a-house/">this page about buying a house</a>. Why isn't this a blog post? It <em>looks</em> just like one, it's unlikely I'm going to buy another house so this is likely to be all I ever write about it. <a href="https://intersect.rknight.me/cli/git/">This git page</a>. There's no reason I couldn't have this as a blog post and just update it as I find other things. People are more likely to find it as a blog post than a page on my wiki.</p>
<p>Then there's the opposite: <a href="https://intersect.rknight.me/hardware/raspberry-pi/pisight/">this PiSight page</a> is 100% links. I wonder if a link system with tags would be better than posting to a specific page each time I find a new link. Or I could add the links to <a href="https://rknight.me/building-a-pisight/">the PiSight blog post I wrote</a>.</p>
<p>The Intersect was fun to build but it's <em>complicated</em>. The build process takes a while, making any structural changes is a pain. Something simpler might be better. I should reduce it to the bare minimum of things that I need from it.</p>
<p>Should I incorporate the wiki into my personal site instead of having it on a different domain perhaps? Should I just do more blog posts when I find interesting things and not worry if it's &quot;worth it&quot; to post? Who knows.</p>
]]></content:encoded>
<pubDate>2023-01-07T00:00:00+00:00</pubDate>
</item>
<item>
<title>Using PageFind with Eleventy for Search</title>
<link>https://rknight.me/using-pagefind-with-eleventy-for-search/</link>
<guid>https://rknight.me/using-pagefind-with-eleventy-for-search/</guid>
<content:encoded><![CDATA[
<p>In the past, I have implemented my own search for static sites and while it's good <em>enough</em>, it's not great. Recently <a href="https://github.com/tweetback/tweetback">Tweetback</a>, a self-hosted Twitter archive, added search using <a href="https://pagefind.app">PageFind</a> so I dug into the code to see how it's done. PageFind is:</p>
<blockquote>
<p>a fully static search library that aims to perform well on large sites, while using as little of your users’ bandwidth as possible, and without hosting any infrastructure</p>
</blockquote>
<p>I hadn't even heard of PageFind until a few weeks ago so most of what I've learnt here came from the PageFind docs and the <a href="https://github.com/tweetback/tweetback/pull/27">pull request</a> that added search to Tweetback so a big thanks to <a href="https://alistairshepherd.uk">Alistair</a> for writing the PR.</p>
<h3>Installation</h3>
<p>Note: I had to change some directories for <a href="https://github.com/rknightuk/eleventy-pagefind-demo/">the demo</a> to get this to work on GitHub pages but everything works exactly the same as below.</p>
<p>To get started, install <a href="https://www.npmjs.com/package/pagefind">the package</a> to your Eleventy project. PageFind has <a href="https://pagefind.app/docs/installation/">more detailed installation instructions on their website here</a>.</p>
<pre class="language-bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> --save-dev pagefind</code></pre>
<h3>Build the index</h3>
<p>PageFind works by scanning a bunch of HTML files and looking for <a href="https://pagefind.app/docs/indexing/">one of the <code>data-pagefind</code> attributes</a>.  We'll add the <code>data-pagefind-body</code> attribute to the article element that wraps the posts to tell it to index the post content:</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span> <span class="token attr-name">data-pagefind-body</span><span class="token punctuation">></span></span><br />    {{ content | safe }}<br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span></code></pre>
<p>We want to run the PageFind CLI <em>after</em> the site has been built so we use the <a href="https://www.11ty.dev/docs/events/#eleventy.after"><code>after</code> Eleventy event</a> and run the command with <a href="https://nodejs.org/api/child_process.html#child_processexecsynccommand-options"><code>execSync</code></a> on all HTML files in the built site:</p>
<pre class="language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token punctuation">{</span> execSync <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'child_process'</span><span class="token punctuation">)</span><br /><br />module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">eleventyConfig</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><br />  eleventyConfig<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'eleventy.after'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span><br />    <span class="token function">execSync</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">npx pagefind --source _site --glob \"**/*.html\"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">encoding</span><span class="token operator">:</span> <span class="token string">'utf-8'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><br />  <span class="token punctuation">}</span><span class="token punctuation">)</span><br /><span class="token punctuation">}</span></code></pre>
<p><strong>Note</strong>: if you haven’t already, you must install <code>child_process</code>: <code>npm i child_process</code>. Once you have done that, add the line <code>const execSync = require('child_process').execSync;</code> somewhere before the function, in your <code>.eleventy.js</code>.</p>
<p><strong>Update 24/07/23</strong>: If you have a lot (read: ~3000) of pages like I do then you might find the build crashes trying to build the index. If that's the case, do the pagefind command <em>after</em> your Eleventy site build script has finished instead of in the <code>after</code> event.</p>
<p>Note the <code>_site</code> source option - if your site is built to a different directory then change this. This outputs a <code>_pagefind</code> directory to the build folder.</p>
<h3>Add a Search Box</h3>
<p>PageFind has <a href="https://pagefind.app/docs/api/">an API</a> if you want to make your own search interface but for this we'll use the built-in UI. Add the following to wherever you want the search box to appear, in the case of this demo it's going on the home page.</p>
<p>Add the PageFind stylesheet either in the head or above your search box element. The additional styles are optional and only needed if you need a dark theme/mode.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/_pagefind/pagefind-ui.css<span class="token punctuation">"</span></span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><br />  <span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">prefers-color-scheme</span><span class="token punctuation">:</span> dark<span class="token punctuation">)</span></span> <span class="token punctuation">{</span><br />    <span class="token selector">:root</span> <span class="token punctuation">{</span><br />      <span class="token property">--pagefind-ui-primary</span><span class="token punctuation">:</span> #eeeeee<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-text</span><span class="token punctuation">:</span> #eeeeee<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-background</span><span class="token punctuation">:</span> #152028<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-border</span><span class="token punctuation">:</span> #152028<span class="token punctuation">;</span><br />      <span class="token property">--pagefind-ui-tag</span><span class="token punctuation">:</span> #152028<span class="token punctuation">;</span><br />    <span class="token punctuation">}</span><br />  <span class="token punctuation">}</span><br /></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre>
<p>PageFind requires an element with an ID which can then be passed to the script.</p>
<pre class="language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>search<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><br /><br /><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>/_pagefind/pagefind-ui.js<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onload</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token keyword">new</span> <span class="token class-name">PagefindUI</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">element</span><span class="token operator">:</span> <span class="token string">'#search'</span><span class="token punctuation">,</span> <span class="token literal-property property">showImages</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span><span class="token punctuation">"</span></span></span><span class="token punctuation">></span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span></code></pre>
<p>Run your Eleventy serve script and if everything has worked, you should have a functioning search that searches all your posts:</p>
<p><img alt="Search box with McFly as the search term and three results" src="https://rknightuk.s3.amazonaws.com/site/pagefind-eleventy.png" />
The code for this is <a href="https://github.com/rknightuk/eleventy-pagefind-demo">on GitHub</a> and there is a <a href="https://rknightuk.github.io/eleventy-pagefind-demo">live demo here</a>.</p>
]]></content:encoded>
<pubDate>2023-01-04T00:00:00+00:00</pubDate>
</item>
<item>
<title>Just 2022 Things</title>
<link>https://rknight.me/just-2022-things/</link>
<guid>https://rknight.me/just-2022-things/</guid>
<content:encoded><![CDATA[
<p>Inspired by <a href="https://localghost.dev/blog/2022-the-year-in-lists/">Sophie's post</a> I decided to do a little roundup of things I've done the year.</p>
<h3>House Project</h3>
<p>We purchased our house in November 2021 and it hadn't been decorated since 1971 so everything needed doing; most of this year has been spent getting all the rooms fixed up. In July, we found out my partner was pregnant (🎉) which is very exciting but also added an extra bit of stress to making sure the house was done by the end of this year. Things I learnt how to do:</p>
<ul>
<li><a href="https://toot.rknight.me/2022/11/06/its-finally-finished.html">Fitting laminate flooring</a> - This isn't difficult per se, but it is <em>hard</em> work.</li>
<li><a href="https://toot.rknight.me/2022/08/07/my-first-and.html">Wallpapering</a> - This is a pain in the arse, I hate it, and will never do it again. I do like the finished wall <a href="https://toot.rknight.me/2022/12/27/final-floor-in.html">now it has the mirror and radiator though</a>.</li>
<li><a href="https://toot.rknight.me/2022/11/24/in-better-news.html">Installing skirting boards</a> - Again, a bit of a pain but with a decent mitre saw and some <a href="https://trade.evo-stik.co.uk/products/grab-adhesives/gripfill">Gripfill</a> it doesn't take too long.</li>
<li><a href="https://toot.rknight.me/2022/04/06/im-like-ron.html">Building a desk from scratch</a> - This was a fun woodworking project. I'm pretty happy with <a href="https://toot.rknight.me/2022/04/22/i-heard-were.html">how it turned out.</a></li>
</ul>
<h3>Travel</h3>
<p>In February we went to Rome, visited all the normal sites, and ate so much <a href="https://toot.rknight.me/2022/02/24/pizza.html">incredible pizza</a>. We stayed right near <a href="https://en.wikipedia.org/wiki/Pantheon,_Rome">The Pantheon</a> which was perfect for walking everywhere we needed to go.</p>
<p>In April we went to Bournemouth for a few days and saw <a href="https://en.wikipedia.org/wiki/Bowling_for_Soup">Bowling for Soup</a> on the last day.</p>
<p>Right before Christmas we went to Edinburgh to visit the Christmas market (which was a bit disappointing) but we did a tour of the <a href="https://en.wikipedia.org/wiki/Edinburgh_Vaults">Edinburgh Vaults</a>, rubbed the nose of <a href="https://toot.rknight.me/2022/12/19/edinburgh-day.html">Greyfriar's Bobby</a>, and visited some great book shops.</p>
<p>We saw a bunch of theatre shows this year as well:</p>
<ul>
<li><a href="https://www.hamiltonwestendshop.com">Hamilton</a></li>
<li><a href="https://www.sixthemusical.com">Six</a></li>
<li><a href="https://thebookofmormonmusical.com/london/?utm_source=search&amp;utm_medium=google&amp;campaign_id=17961066709&amp;adset_id=&amp;ad_id=&amp;gclid=Cj0KCQiAtbqdBhDvARIsAGYnXBPs12fWJd3GhcOAKGkJVZVY33b3MIfGN8yz0HqLDzKh0NCaommr2GQaAgAPEALw_wcB">Book of Mormon</a></li>
<li><a href="https://www.backtothefuturemusical.com">Back to the Future: The Musical</a></li>
<li><a href="https://en.wikipedia.org/wiki/Cinderella_(Lloyd_Webber_musical)">Cinderella</a> - This was an interesting one because the front 8 rows rotate with the stage so you're facing everyone else. This got cancelled right after we saw it.</li>
</ul>
<h3>Web</h3>
<p>I made a bunch of little plugins/webapps for <a href="https://mbtools.rknight.me">Micro.blog</a> and the <a href="https://potimages.rknight.me">Monzo Pot Image Generator</a> hit over 40k images generated. I stopped using Twitter so I'm <a href="https://rknight.me/two-social-networks-in-this-economy/">using a combination</a> of <a href="https://micro.blog">Micro.blog</a> and Mastodon - the latter is run by <a href="https://home.omg.lol/referred-by/robb">omg.lol</a>. omg.lol is such a fun site and has a bunch of services, including a Mastodon instance. You can get it for $5 a year until tomorrow.</p>
<h3>Games</h3>
<p>I didn't play many games due to the aforementioned home project but I did manage to play through the <a href="https://store.rockstargames.com/game/buy-grand-theft-auto-the-trilogy-the-definitive-edition">GTA Trilogy</a> as well as <a href="https://www.playstation.com/en-gb/games/horizon-forbidden-west/">Horizon Forbidden West</a>.</p>
<h4>Movies</h4>
<p>According to <a href="https://letterboxd.com/rknightuk/films/diary/for/2022/">Letterboxd</a> I've watched 103 movies this year. Of those, 12 of them came out this year. My favourites of those are:</p>
<ul>
<li><a href="https://letterboxd.com/rknightuk/film/thor-love-and-thunder/1/">Thor: Love and Thunder</a> - This movie is a bit divisive but I loved it.</li>
<li><a href="https://letterboxd.com/rknightuk/film/glass-onion-a-knives-out-mystery/">Glass Onion: A Knives Out Mystery</a> - An excellent sequel to Knives Out.</li>
<li><a href="https://letterboxd.com/rknightuk/film/the-guardians-of-the-galaxy-holiday-special/">The Guardians of the Galaxy Holiday Special</a> - This was so much fun and <a href="https://www.youtube.com/watch?v=-E1ULv6LcOk">the main song</a> is a banger.</li>
</ul>
<h3>TV</h3>
<p>I didn't watch all that much TV this year but the two stands outs were:</p>
<ul>
<li><a href="https://toot.rknight.me/2022/07/14/finished-the-first.html">Reacher</a> -  As a fan of the books, I was impressed how closely this matched up. A really great adaptation.</li>
<li><a href="https://toot.rknight.me/2022/08/16/cant-believe-better.html">Better Call Saul</a> - This show is perfect in every way.</li>
<li><a href="https://toot.rknight.me/2022/09/09/for-all-mankind.html">For All Mankind</a> - No other show builds suspense like For All Mankind does</li>
</ul>
<h2>Books</h2>
<p>I read zero books this year which is embarrassing, I hope to change this next year. I did start <a href="https://micro.blog/books/9781728236254">Men Who Hate Women</a> and hopefully will finish it soon.</p>
]]></content:encoded>
<pubDate>2022-12-30T00:00:00+00:00</pubDate>
</item>
<item>
<title>Building a Podcast Site with Eleventy</title>
<link>https://rknight.me/bulding-podcast-site-eleventy/</link>
<guid>https://rknight.me/bulding-podcast-site-eleventy/</guid>
<content:encoded><![CDATA[
<p>When me and John started <a href="https://ruminatepodcast.com">Ruminate</a>, we didn't know much about hosting podcasts so we decided to go with <a href="https://simplecast.com">Simplecast</a> to host and manage the podcast. Seven years later, Simplecast has changed quite a bit to the point that it's hindering rather than helping me post the show. It's not a bad service, but it's overkill for posting one episode every two weeks.</p>
<p>I <a href="https://toot.rknight.me/2022/12/23/has-anyone-moved.html">asked</a> last week if anyone had self-hosted a podcast and a few people I trust said it should be easy enough to do so I got to work. As with most of my projects, I used <a href="https://www.11ty.dev/">Eleventy</a>. Eleventy is a very powerful static site generator that this site is built with. <a href="https://www.marclittlemore.com/create-an-eleventy-podcast-feed/">This post</a> was very helpful in pointing me in the right direction.</p>
<h2>Importing existing posts</h2>
<p>The first step was to import the existing 156 episodes into the new site. I had a look at the RSS feed to see what metadata each episode would need. Here is an example from <a href="https://ruminatepodcast.com/156/">episode 156</a>:</p>
<pre class="language-yaml"><code class="language-yaml"><span class="token key atrule">layout</span><span class="token punctuation">:</span> episode<br /><span class="token key atrule">guid</span><span class="token punctuation">:</span> ff7d5a18<span class="token punctuation">-</span>c87c<span class="token punctuation">-</span>4420<span class="token punctuation">-</span>a6dd<span class="token punctuation">-</span>965be716aa12<br /><span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">"156 - For Listeners Only"</span><br /><span class="token key atrule">published</span><span class="token punctuation">:</span> <span class="token string">"Wed, 7 Dec 2022 20:55:06 +0000"</span><br /><span class="token key atrule">permalink</span><span class="token punctuation">:</span> 156/index.html<br /><span class="token key atrule">file</span><span class="token punctuation">:</span> <span class="token string">"https://ruminatepod.s3-us-west-2.amazonaws.com/156.mp3"</span><br /><span class="token key atrule">length</span><span class="token punctuation">:</span> <span class="token number">10993430</span><br /><span class="token key atrule">duration</span><span class="token punctuation">:</span> <span class="token datetime number">00:22:49</span><br /><span class="token key atrule">summary</span><span class="token punctuation">:</span> <span class="token string">"Baguettes and Obsidian."</span><br /><span class="token key atrule">episodeNumber</span><span class="token punctuation">:</span> <span class="token number">156</span></code></pre>
<p>I created a new script called <a href="https://github.com/rknightuk/ruminate/blob/main/scripts/feedtomarkdown.js"><code>feedtomarkdown.js</code></a>, used <a href="https://www.npmjs.com/package/node-fetch"><code>node-fetch</code></a> and <a href="https://www.npmjs.com/package/xml2json"><code>xml2json</code></a>  to parse the feed, and then looped through each episode to get the data. For the shownotes, I needed to covert that back to markdown with <a href="https://www.npmjs.com/package/turndown"><code>turndown</code></a>. I also learnt about <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart"><code>padStart/padEnd</code></a> to pad the episode numbers from <code>21</code> to <code>021</code>:</p>
<pre class="language-js"><code class="language-js"><span class="token string">'21'</span><span class="token punctuation">.</span><span class="token function">padStart</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">'0'</span><span class="token punctuation">)</span> <span class="token comment">// 021</span></code></pre>
<p>Finally I output all the file names into <code>filenames.sh</code> to download all the episodes with <code>wget</code> with consistent naming:</p>
<pre class="language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><br /><span class="token function">wget</span> http://path.to/file <span class="token parameter variable">-O</span> 001.mp3<br /><span class="token function">wget</span> http://path.to/file <span class="token parameter variable">-O</span> 002.mp3<br /><span class="token comment"># and so on</span></code></pre>
<h2>Creating new episodes</h2>
<p>I'm hosting the episode files on S3 and I didn't want to have to manually get the filesize, duration, and generate a UUID for each episode so I wrote <a href="https://github.com/rknightuk/ruminate/blob/main/scripts/new.js"><code>new.js</code></a>. This script takes an episode number, finds the mp3 file, reads the duration, title, and summary from the mp3 and outputs a new episode (with a UUID as well). This uses <a href="https://www.npmjs.com/package/mp3-duration"><code>mp3-duration</code></a> and <a href="https://www.npmjs.com/package/node-id3"><code>node-id3</code></a> to extract that data. I can then fill in the shownotes and push the new episode.</p>
<h2>RSS feed</h2>
<p>I was able to replicate <a href="https://ruminatepodcast.com/feed.xml">the RSS feed</a> from Simplecast with this new setup but for some reason Safari doesn't auto-recognise it as a feed that can be opened in Podcasts/NetNewsWire. If anyone knows what attribute triggers this, I'd love to know.</p>
<p>All of the code for this is <a href="https://github.com/rknightuk/ruminate">on GitHub</a> and you can see see the <a href="https://ruminatepodcast.com">new website here</a>.</p>
]]></content:encoded>
<pubDate>2022-12-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>Two Social Networks? In This Economy?</title>
<link>https://rknight.me/two-social-networks-in-this-economy/</link>
<guid>https://rknight.me/two-social-networks-in-this-economy/</guid>
<content:encoded><![CDATA[
<p>The past few months Micro.blog (M.b.) has improved its support for Mastodon and thanks to Space Karen doing what he does best, I've been following more and more people from there as they join via M.b.</p>
<p>This has led to my timeline being busy which <em>is</em> good, but the way people post on Mastodon is very different to M.b. Threads (write a damn blog post please), posts with content that warnings (which rightly in my opinion M.b doesn't support), boosts (again not supported on M.b.), as well as hashtags have made the timeline feel messy and disconnected from the rest of M.b.</p>
<p>Enter <a href="https://omg.lol">omg.lol</a>. omg.lol is a service that has a whole bunch of features, one of which is a Mastodon instance for users, <a href="https://rknight.me/social.lol">social.lol</a>. As a side note, until the end of the year it's only $5 a year (going up to $20 in 2023) so now is a good time to <a href="https://home.omg.lol/referred-by/robb">sign up</a>.</p>
<p>One thing that had put me off signing up on any given instance is what if it shuts down because most of them are free and although some have Patreons, I'm not sure that's a sustainable model for smaller instances in the long run. Because social.lol is linked directly to a service I'm paying for I feel confident it's not going anywhere any time soon.</p>
<p>After <a href="https://toot.rknight.me/2022/12/16/those-of-you.html">asking on M.b</a> about how people use both I made the decision to cross-post everything to Mastodon, keeping M.b as the source of truth. This has worked pretty well the past week, although I did hit some cross-posting issues of my own doing but I should be able to iron these out as I go. I'm also boosting some posts on Mastodon and may even do a <a href="https://social.lol/@sophie/109550690932963078">bit of shitposting</a> from time to time.</p>
<p>I don't really have a conclusion here other than I'm using both things for now. I might even checkout <a href="https://pixelfed.org/">Pixelfed</a> at some point.</p>
<p>If you want to follow me you can do so on <a href="https://micro.blog/rknightuk">Micro.blog</a> or on <a href="https://social.lol/@robb">social.lol/@robb</a>. But probably don't follow me on both lest you see every post twice.</p>
]]></content:encoded>
<pubDate>2022-12-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Prami's Challenge</title>
<link>https://rknight.me/pramis-challenge/</link>
<guid>https://rknight.me/pramis-challenge/</guid>
<content:encoded><![CDATA[
<p><a href="https://social.lol/@prami/109530090151262300">Prami posted a challenge on social.lol</a> to decode this string and win a lifetime subscription to <a href="https://home.omg.lol/referred-by/robb">omg.lol</a>.</p>
<blockquote>
<p>The string below is an encoded lifetime omg.lol gift code:</p>
<p>eoad1o1fpoawctnjeiri11dmj7rir6d8ehadkt4seo6u4</p>
<p>[...]</p>
<p>in this format: XXXX-XXXX-XXXX-XXXX</p>
</blockquote>
<p>I figured I'd have a go which ended up being a good few hours. Then I <a href="https://toot.rknight.me/2022/12/17/this-challenge-from.html">kind of lost my mind a bit</a>. Then went to bed having given up (and needing to be up for a flight this morning).</p>
<p>Overnight, <a href="https://social.lol/@jmj">Joanna</a> solved it and I felt like I'd been presented with a sock, I was free. <a href="https://social.lol/@prami/109531877004198974">The solution</a> was 3 schemes: <code>z-base-32</code> then <code>rot13</code> then <code>base64</code>. I googled <em>a lot</em> last night and not once did I see <a href="https://en.wikipedia.org/wiki/Base32#z-base-32"><code>z-base-32</code></a> so I had no chance (although I <em>was</em> <a href="https://cryptii.com/pipes/z-base-32">on a website that supports it</a> but clearly didn't see it).</p>
<p>Other things I tried:</p>
<ul>
<li>Various different cypher detectors</li>
<li>Asking <a href="https://chat.openai.com/chat">ChatGPT</a> nicely</li>
<li><a href="https://hashcat.net/hashcat/">hashcat</a></li>
<li><a href="https://github.com/Ciphey/Ciphey">Ciphey</a> - this one crashed my computer trying to run overnight</li>
</ul>
]]></content:encoded>
<pubDate>2022-12-18T07:43:47.235+00:00</pubDate>
</item>
<item>
<title>ChatCGT and mySQL Database Schemas</title>
<link>https://rknight.me/chatcgt-and-mysql-database-schemas/</link>
<guid>https://rknight.me/chatcgt-and-mysql-database-schemas/</guid>
<content:encoded><![CDATA[
<p><a href="https://chat.openai.com/chat">ChatCGT</a> is wild. I entered &quot;<em>Describe a mysql database schema for tracking the owned books of multiple people</em>&quot; and it came back with the queries to write the tables including foreign keys:</p>
<pre class="language-sql"><code class="language-sql"><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> people <span class="token punctuation">(</span><br />  id <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span><br />  name <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> books <span class="token punctuation">(</span><br />  id <span class="token keyword">INTEGER</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span><span class="token punctuation">,</span><br />  title <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  author <span class="token keyword">VARCHAR</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  <span class="token keyword">year</span> <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span><br /><br /><span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> owned_books <span class="token punctuation">(</span><br />  person_id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  book_id <span class="token keyword">INTEGER</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span><br />  <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>person_id<span class="token punctuation">,</span> book_id<span class="token punctuation">)</span><span class="token punctuation">,</span><br />  <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>person_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> people<span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">,</span><br />  <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>book_id<span class="token punctuation">)</span> <span class="token keyword">REFERENCES</span> books<span class="token punctuation">(</span>id<span class="token punctuation">)</span><br /><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre>
<p>I do things like this regularly so I <em>can</em> do this no problem but having a rough draft dumped in front of me within seconds is handy. It even gives examples of what queries you could run with the data, so I followed up with &quot;<em>What would the query for how many books each person owns look like?</em>&quot;</p>
<pre class="language-sql"><code class="language-sql"><span class="token keyword">SELECT</span> p<span class="token punctuation">.</span>name<span class="token punctuation">,</span> <span class="token function">COUNT</span><span class="token punctuation">(</span>ob<span class="token punctuation">.</span>book_id<span class="token punctuation">)</span> <span class="token keyword">AS</span> num_books<br /><span class="token keyword">FROM</span> people p<br /><span class="token keyword">JOIN</span> owned_books ob <span class="token keyword">ON</span> p<span class="token punctuation">.</span>id <span class="token operator">=</span> ob<span class="token punctuation">.</span>person_id<br /><span class="token keyword">GROUP</span> <span class="token keyword">BY</span> p<span class="token punctuation">.</span>id</code></pre>
<p>I'm not convinced I'm getting replaced <em>yet</em> but I'm a tiny bit more worried than I was a few weeks ago.</p>
]]></content:encoded>
<pubDate>2022-12-16T19:38:40.307+00:00</pubDate>
</item>
<item>
<title>Lite YouTube for Micro.blog</title>
<link>https://rknight.me/lite-youtube-for-micro-blog/</link>
<guid>https://rknight.me/lite-youtube-for-micro-blog/</guid>
<content:encoded><![CDATA[
<p>I've published a new <a href="https://micro.blog">Micro.blog</a> plugin called <a href="https://github.com/rknightuk/micro-blog-lite-youtube">Lite YouTube</a> which does one thing: finds YouTube links in posts and appends a <a href="https://github.com/paulirish/lite-youtube-embed">lite-youtube-embed</a> to the post. Example before and after below:</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/lite-youtube-before.png" /></p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/lite-youtube-after.png" /></p>
<p>You can see it working on <a href="https://toot.rknight.me/2022/12/04/last-of-us.html">this post about The Last of Us</a> or on <a href="https://toot.rknight.me/2022/11/22/i-just-realised.html">this post with two videos</a>.</p>
<p>Why did I do this instead of using <a href="https://discourse.gohugo.io/t/embed-youtube-video/2692/7">YouTube shortcodes</a>? Two reasons:</p>
<ol>
<li>Shortcodes are great but what if I change where my site is hosted? Those links won't work any more</li>
<li>(This is the real reason) I will forget, I'm too lazy to do it, this is automatic.</li>
</ol>
<p>You can install it <a href="https://micro.blog/account/plugins/view/83">from the plug-in directory</a> and <a href="https://github.com/rknightuk/micro-blog-lite-youtube">view the code on GitHub</a>.</p>
]]></content:encoded>
<pubDate>2022-12-06T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Office Setup</title>
<link>https://rknight.me/office-setup/</link>
<guid>https://rknight.me/office-setup/</guid>
<content:encoded><![CDATA[
<p><em>My office setup as of April 2022. (This post originally appeared in <a href="https://club.macstories.net/posts/reader-setup-2">MacStories Weekly)</a>.</em></p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/office-setup-tv.jpg" /></p>
<p>A couple of weeks ago I posted a photo in the MacStories Discord and Federico <s>demanded</s> asked very nicely if I would write about it, so here we are. I have a lot of consoles which means I have a lot of games and controllers. I’ve never been one to sell games after I’ve finished them so I always had a collection of some sort. I worked at a second hand game shop while I was at university so my collection grew rapidly in the 11 months I was there and I have continued to pick up games here and there over the years. As of right now I have 315 games across 12 systems, a third of which are for the PlayStation 2. A lot of my all-time favourite games are for the PS2 including:</p>
<ul>
<li>Tony Hawk Pro Skater 3 and 4</li>
<li>Jak and Daxter</li>
<li>Grand Theft Auto: Vice City (side note: despite the launch bugs, the remaster version of this is excellent)</li>
<li>Mashed: Fully Loaded</li>
</ul>
<p>I’m a big fan of single-player story-driven games so the majority of my collection are those types of games. I’m currently playing through Horizon Forbidden West which I am loving.</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/office-setup-cupboard.jpg" /></p>
<p>My setup consists of a PS5, a PS3, a pink PS2 which I adore, an Xbox 360, and an Xbox One all hooked up to a HiSense 4K 43&quot; TV that I bought a few years ago. I’m not sure in 2022 if I would even be able to buy a TV with this many inputs. The modern consoles use HDMI and the PS2 and 360 use <a href="https://en.wikipedia.org/wiki/SCART">SCART cables</a> which was widely used on TVs in the UK and Europe and is somewhat better than using component input.</p>
<p>I use <a href="https://gameye.app/">GameEye</a> to keep track of my the games and consoles I own. I log the games I’ve played with Almanac, a custom blogging system I made for tracking things I’ve watched and played. (Update: I now use <a href="https://micro.blog/rknightuk">Micro.blog</a> for this). In my attic I have a Sega Master System, Nintendo 64, and a Nintendo Wii, plus there is a Nintendo Switch in the living room.</p>
<p>Until I add shelves to my office to have at least some of my games on display, I’m using the built-in cupboard as storage for my games. I built the shelves in there myself so they are a perfect size for double-stacking games. I added an <a href="https://www.ikea.com/gb/en/p/skadis-pegboard-combination-white-s09216595/">Ikea Skadis</a> to the inside of the door to various gaming-related things like cables, controllers, and memory cards for the older consoles.</p>
<p>I have some ideas for the office including a custom controller holder, shelves to display my games and my many collector’s edition statues (these are also in storage right now), and I’m also considering wall-mounting the TV. I also need to alphabetise the games instead of dumping them in the cupboard like they are right now.</p>
]]></content:encoded>
<pubDate>2022-12-05T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Favourite Albums of 2022</title>
<link>https://rknight.me/my-favourite-albums-of-2022/</link>
<guid>https://rknight.me/my-favourite-albums-of-2022/</guid>
<content:encoded><![CDATA[
<p>It's been a really good year for music especially for artists I've been listening to for years.</p>
<ul>
<li><a href="https://music.apple.com/gb/album/love-sux-deluxe/1655449416">Avril Lavinge - Love Sux</a> - This is the link to the deluxe version which contains some excellent acoustic versions of some of the tracks.</li>
<li><a href="https://music.apple.com/gb/album/kings-of-the-new-age/1607207409">State Champs - Kings of the New Age</a></li>
<li><a href="https://music.apple.com/us/album/harder-than-it-looks/1600965603">Simple Plan - Hard Than It Looks</a> - This is as good an album as they've ever made.</li>
<li><a href="https://music.apple.com/gb/album/holy-fvck/1628440994">Demi Levato - HOLY FVCK</a> - this was a suprise entry for me, I didn't expect to like it as much as I do.</li>
<li><a href="https://music.apple.com/gb/album/just-woke-up/1603918127">Jaret Jay Reddick - Just Woke Up</a></li>
<li><a href="https://music.apple.com/gb/album/super-relatable/1637732324">Beefy - Super Relatable</a></li>
<li><a href="https://music.apple.com/gb/album/a-whole-new-wurst-2/1625667455">Punk Rock Factory - A Whole New Wurst 2</a> - Their  cover of <em>Surface Pressure</em> is amazing.</li>
</ul>
<p>The released tracks on <a href="https://music.apple.com/gb/album/tear-me-to-pieces/1647133854">Story of the Year's new album</a> are fantastic. I can't wait to hear the rest of them.</p>
<p>Finally I discovered <a href="https://music.apple.com/gb/album/never-look-back-deluxe/1634447768">Never Look Back by Goldfinger</a>. Apparently it came out in 2020 and I completely missed it. There's a great version of <em>Here In Your Bedroom</em> featuring Avril on this deluxe version of the album.</p>
]]></content:encoded>
<pubDate>2022-12-02T19:50:00.081+00:00</pubDate>
</item>
<item>
<title>How to Copy Gifs to Clipboard Programatically</title>
<link>https://rknight.me/how-not-to-copy-gif-to-clipboard-programatically/</link>
<guid>https://rknight.me/how-not-to-copy-gif-to-clipboard-programatically/</guid>
<content:encoded><![CDATA[
<p><strong>Update 1</strong></p>
<p><a href="https://github.com/edwellbrook/grabgif">Ed Wellbrook solved this with grabgif</a> like the absolute hero he is.</p>
<p><strong>Update 2</strong></p>
<p>Turns out in my frustrated state, some of the things I tried <em>did</em> work but I just didn't notice (or I did something like clear the clipboard by accident). After looking at Ed's solution it clicked. This solution <em>does</em> work:</p>
<pre class="language-bash"><code class="language-bash">osascript <span class="token parameter variable">-e</span> 'set the clipboard to POSIX <span class="token function">file</span> <span class="token string">"/path/to/animated.gif"</span></code></pre>
<p>I will leave the rest of the article but everything below is kind of useless now.</p>
<hr />
<p>If you've come to this post to find out how to copy an animated gif to the clipboard programatically: I'm sorry. All I have is many solutions that either don't work at all, or only partially work.</p>
<p>Why was I doing this? I've had an idea for an <a href="https://www.alfredapp.com/">Alfred</a> workflow for a while that would list all the gifs in my gif folder then copy it to the clipboard so I can paste in to Slack (or anywhere that supports copy/pasting animated gifs). I like to keep things as simple as possible with <a href="https://github.com/rknightuk/alfred-workflows">my Alfred workflows</a> so I figured I'd try AppleScript/JXA first.</p>
<h2>AppleScript and JXA</h2>
<p>There are loads of StackOverflow posts describing how to copy <em>images</em>, some of which even say it works with gifs. They do not. At best, some of them will copy the first frame of the gif to the clipboard, at worst they flat out don't work.</p>
<pre class="language-bash"><code class="language-bash"><span class="token comment"># these work but will only get the first frame</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to (read (POSIX file "/path/to/animated.gif") as {«class GIFf»})'</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to (read "/path/to/animated.gif" as GIF picture)'</span><br /><br /><br /><span class="token comment"># these do not work at all</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to (read (POSIX file "/path/to/animated.gif")'</span><br /><br />osascript <span class="token parameter variable">-e</span> <span class="token string">'set the clipboard to POSIX file "/path/to/animated.gif"'</span></code></pre>
<h2>Command Line Tools</h2>
<p>I found a number of CLI tools that looked promising. The first of these I came across was <a href="https://gist.github.com/mwender/49609a18be41b45b2ae4"><code>impbcopy</code></a> but this only works with <code>png</code> files. Perhaps there's a way to modify this to work but I wasn't able to see how to do that. Likewise with <a href="https://github.com/moicci/pngpaste"><code>pngpaste</code></a> which claims to support gifs.</p>
<h2>Conclusion</h2>
<p>Having spent a good few hours on this at this point I am assuming this can't be done. If someone knows of a way to do this I would be very interested to see a solution.</p>
]]></content:encoded>
<pubDate>2022-12-01T00:00:00+00:00</pubDate>
</item>
<item>
<title>Music Replay 2022</title>
<link>https://rknight.me/music-replay-2022/</link>
<guid>https://rknight.me/music-replay-2022/</guid>
<content:encoded><![CDATA[
<p><a href="http://replay.music.apple.com">Apple Music Replay</a> is a vast improvement on last year. I grabbed some of the data so I have a record of it (I have no idea if you can access a previous years data or not).</p>
<p>No suprises Hamilton is top again with Lin-Manuel Miranda and Leslie Odom, Jr. taking 2 of the top artist spots. Combined, they take the real top spot.</p>
<p>I was in the top 100 listeners for Punk Rock Factory and Goldfinger.</p>
<p><strong>3695 songs</strong></p>
<p><strong>696 Artists</strong></p>
<p>Top artists:</p>
<ol>
<li><a href="https://music.apple.com/us/artist/punk-rock-factory/975678831">Punk Rock Factory</a> - 4,447 minutes</li>
<li><a href="https://music.apple.com/us/artist/goldfinger/2089079">Goldfinger</a> - 3,354 minutes</li>
<li><a href="https://music.apple.com/us/artist/lin-manuel-miranda/329027198">Lin-Manuel Miranda</a> - 3,292 minutes</li>
<li><a href="https://music.apple.com/us/artist/linkin-park/148662">Linkin Park</a> - 3,046 minutes</li>
<li><a href="https://music.apple.com/us/artist/leslie-odom-jr/580650079">Leslie Odom, Jr.</a> - 2,886 minutes</li>
<li><a href="https://music.apple.com/us/artist/simple-plan/150861">Simple Plan</a> - 2,303 minutes</li>
<li><a href="https://music.apple.com/us/artist/bowling-for-soup/1650849">Bowling for Soup</a> - 2,015 minutes</li>
<li><a href="https://music.apple.com/us/artist/machine-gun-kelly/465954501">Machine Gun Kelly</a> - 1,920 minutes</li>
<li><a href="https://music.apple.com/us/artist/avril-lavigne/459885">Avril Lavigne</a> - 1,837 minutes</li>
<li><a href="https://music.apple.com/us/artist/mc-lars/45378751">MC Lars</a> - 1,772 minutes</li>
</ol>
<p><strong>231 Albums</strong></p>
<p>I have no idea how it works out the play count on albums but I assume this is individual tracks so I've worked out the times I've played an album based on this. Apple doesn't give numbers for albums 6-10.</p>
<p>Top Albums:</p>
<ol>
<li><a href="https://music.apple.com/us/album/hamilton-an-american-musical-original-broadway-cast/1025210938">Hamilton: An American Musical (Original Broadway Cast Recording)</a> - 1,581 plays / ~35 times</li>
<li><a href="https://music.apple.com/us/album/never-look-back-deluxe/1634447768">Never Look Back (Deluxe) - Goldfinger</a> - 1,099 plays / ~57 times</li>
<li><a href="https://music.apple.com/us/album/harder-than-it-looks/1600965603">Harder Than It Looks - Simple Plan</a> 503 plays / ~50 times</li>
<li><a href="https://music.apple.com/us/album/love-sux-deluxe/1655449416">Love Sux - Avril Lavigne</a> - 464 plays / ~38 times</li>
<li><a href="https://music.apple.com/us/album/just-woke-up/1603918127">Just Woke Up - Jaret Ray Reddick</a> - 448 plays / ~37 times</li>
<li><a href="https://music.apple.com/us/album/tickets-to-my-downfall-sold-out-deluxe/1533882860">Tickets to My Downfall (SOLD OUT Deluxe)</a></li>
<li><a href="https://music.apple.com/us/album/recharged/701162375">RECHARGED - Linkin Park</a></li>
<li><a href="https://music.apple.com/us/album/kings-of-the-new-age/1607207409">Kings of the New Age - State Champs</a></li>
<li><a href="https://music.apple.com/us/album/with-sprinkles/372936293">With Sprinkles - Beefy</a></li>
<li><a href="https://music.apple.com/us/album/single-and-famous/328126452">Single and Famous - K.Flay and MC Lars</a></li>
</ol>
]]></content:encoded>
<pubDate>2022-11-29T16:33:59.480+00:00</pubDate>
</item>
<item>
<title>Importing Tweets into Micro.blog</title>
<link>https://rknight.me/importing-tweets-into-microblog/</link>
<guid>https://rknight.me/importing-tweets-into-microblog/</guid>
<content:encoded><![CDATA[
<p>I wanted to import a bunch of tweets from my archive (mostly cat photos and a few other bits) but I didn't want to have to manually go through each tweet, copy the text and download the photos. So I wrote a script to do it for me once I had the IDs (which I got with my <a href="https://rknight.me/get-safari-tabs-shortcut/">Safari shortcut</a>).</p>
<p>One thing that had annoyed me for a while is I didn't keep a diary/note of things that happened and my thoughts during the first year of so of the pandemic but thanks to going through my archive I now <a href="https://toot.rknight.me/categories/covid/">have that</a>. On a cheerier note I have a lovely collection of animals in the <a href="https://toot.rknight.me/categories/pets/">pets category</a>. These additional categories were done manually (with the help of <a href="https://github.com/sbarex/QLMarkdown">QLMarkdown</a>) as I couldn't think of a way to automate this.</p>
<p>Once I had the IDs it was a case of getting the format correctly (for example, Micro.blog will fail an import with empty categories in the YAML). I was able to take ~450 tweets, convert them to markdown and <a href="https://toot.rknight.me/categories/imported-tweets/">import them into Micro.blog</a>. For example, this tweet:</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/boristweet.png" /></p>
<p>becomes:</p>
<pre><code>---
date: 2022-10-20T13:56:19+00:00
categories: Imported Tweets
---

&quot;You could not live with your own failure. Where did that bring you? Back to me&quot;

![](https://pbs.twimg.com/media/Ffg6jkDXkAARD4p.jpg)
</code></pre>
<p>The script isn't perfect. It doesn't do anything with hashtags or usernames, nor does it check if a tweet is a reply or a retweet. The <a href="https://github.com/rknightuk/twitter-to-micro-blog">project readme.md</a> has steps for using it on your own archive.</p>
]]></content:encoded>
<pubDate>2022-11-17T00:00:00+00:00</pubDate>
</item>
<item>
<title>The "Best" Tweets</title>
<link>https://rknight.me/the-best-tweets/</link>
<guid>https://rknight.me/the-best-tweets/</guid>
<content:encoded><![CDATA[
<p>A few days ago <a href="https://twitter.com/jamesthomson/status/1591538731756191745">James Thomson posted</a> that you can find your tweets based on how many likes they got with the following link (switching my username for yours):</p>
<p><a href="https://twitter.com/search?q=from%3Arknightuk%20min_faves%3A1000&amp;src=typed_query&amp;f=live">https://twitter.com/search?q=from%3Arknightuk%20min_faves%3A1000&amp;src=typed_query&amp;f=live</a></p>
<p>I think it's very likely my account will be deleted at some point so I figured I'd have a little look at my best tweets and archive them here (I am using &quot;best&quot; in the loosest possible way here).</p>
<p><strong>Back to the Future Day tweet - 2015-10-21 (<a href="https://hellsite.rknight.me/656762307494682624">link</a></strong>)</p>
<p>This has a typo that will haunt me forever (should be &quot;Emmett&quot; not &quot;Emmet&quot;).</p>
<blockquote>
<p>“Are you Marty McFly? I’ve got something for you”</p>
<p><em>opens letter</em></p>
<p>“Emmet Brown would like you to join his professional network on LinkedIn”</p>
</blockquote>
<p>I also did <s>the same tweet</s> a totally original tweet when GDPR caused everyone to send a thousand emails (<a href="https://hellsite.rknight.me/999648514534764544">link</a>).</p>
<blockquote>
<p>“Are you Marty McFly? I’ve got something for you”</p>
<p><em>opens letter</em></p>
<p>“Please confirm you want to continue to receive letters from Dr. Emmett Brown”</p>
</blockquote>
<p><strong>Alt Key - 2016-08-21 (<a href="https://hellsite.rknight.me/767337245133144064">link</a>)</strong></p>
<blockquote>
<p>The alt symbol (⌥) is like a track switch. An alternate route. Alt.</p>
<p>Mind blown.</p>
</blockquote>
<p><strong>Dark Pattern - 2018-05-27 (<a href="https://hellsite.rknight.me/1000748036367310848">link</a>)</strong></p>
<blockquote>
<p>This “no I hate myself” pattern is horrible.</p>
</blockquote>
<img alt="" height="282" src="https://rknightuk.s3.amazonaws.com/site/hate_discounts.jpg" width="600" />
<p><strong>Boris × Thanos - 2022-10-20 (<a href="https://hellsite.rknight.me/1583079656760410112">link</a>)</strong></p>
<p>I didn't make this image. I had the idea and then grabbed the image from <a href="https://twitter.com/mattlcapon/status/1421631601902039043">this tweet</a>.</p>
<blockquote>
<p>&quot;You could not live with your own failure. Where did that bring you? Back to me&quot;</p>
</blockquote>
<img alt="" height="332" src="https://rknightuk.s3.amazonaws.com/site/boris_thanos.jpg" width="600" />
]]></content:encoded>
<pubDate>2022-11-15T00:00:00+00:00</pubDate>
</item>
<item>
<title>Year of Renovation</title>
<link>https://rknight.me/year-of-renovation/</link>
<guid>https://rknight.me/year-of-renovation/</guid>
<content:encoded><![CDATA[
<p>We moved into our house November 3rd 2021, just over a year ago. Most of the house hadn't been decorated since it was built in the '70s so everything needed redoing. With the exception of a few carpets and a bit of painting, everything is now done.</p>
<h2>Bathroom</h2>
<img src="https://rknightuk.s3.amazonaws.com/site/house/bathroom_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/bathroom_after.jpg" />
<h2>Main Bedroom</h2>
<img src="https://rknightuk.s3.amazonaws.com/site/house/main_bedroom_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/main_bedroom_after.jpg" />
<h2>Spare Room</h2>
<img src="https://rknightuk.s3.amazonaws.com/site/house/spare_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/spare_after.jpg" />
<h2>Office</h2>
<img src="https://rknightuk.s3.amazonaws.com/site/house/office_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/office_after.jpg" />
<h2>Nursery</h2>
<img src="https://rknightuk.s3.amazonaws.com/site/house/nursery_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/nursery_after.jpg" />
<h2>Kitchen</h2>
<p>This was the biggest project. We extended into the garage to make a kitchen/diner and add a utility room.</p>
<img src="https://rknightuk.s3.amazonaws.com/site/house/kitchen_before.jpg" />
<img src="https://rknightuk.s3.amazonaws.com/site/house/kitchen_after.jpg" />
<p>Update: <a href="https://toot.rknight.me/2022/11/24/in-better-news.html">Living Room</a></p>
]]></content:encoded>
<pubDate>2022-11-08T00:00:00+00:00</pubDate>
</item>
<item>
<title>Follow Mastodon User on Micro.blog Shortcut</title>
<link>https://rknight.me/follow-mastodon-user-on-micro.blog-shortcut/</link>
<guid>https://rknight.me/follow-mastodon-user-on-micro.blog-shortcut/</guid>
<content:encoded><![CDATA[
<p><a href="https://micro.blog">Micro.blog</a> has support for following and replying to Mastodon users but getting from someone's profile on Mastodon to the follow page on Micro.blog can be a pain. To search for a user you need have it in the format of <code>cooluser@mastodon.instance</code> which isn't the same as the profile URLs. To make this easier I made a shortcut that does the following:</p>
<ol>
<li>Takes the current Safari URL, for example <code>https://mastodon.instance/@cooluser</code></li>
<li>Gets the domain (<code>mastodon.instance</code>) and the path (<code>@cooluser</code>)</li>
<li>Swaps those round to become <code>cooluser@mastodon.instance</code></li>
<li>Opens the page on Micro.blog to be able to follow that user (<code>https://micro.blog/cooluser@mastodon.instance</code>)</li>
</ol>
<p>It will also check to see if the path/username contains an <code>@</code> symbol and if it doesn't will show an alert instead. This isn't ideal but given that Mastodon can have any domain, it's much harder to detect if it's a Mastodon site or not.</p>
<p>There is a meta tag in the HTML with <code>profile:username</code> as the property name but I don't know enough about Shortcuts to do this.</p>
<p><a href="https://www.icloud.com/shortcuts/fe47f7e4ed104f7dbb8202b49c3482c4">Download Follow Mastodon User on Micro.blog shortcut v1.1</a></p>
<h3>Previous Versions</h3>
<ul>
<li><a href="https://www.icloud.com/shortcuts/c055237a4b744d9eb5b120fe017b8356">v1.0</a> - this version won't work if the user hasn't been seen before by Micro.blog</li>
</ul>
]]></content:encoded>
<pubDate>2022-11-03T00:00:00+00:00</pubDate>
</item>
<item>
<title>Fix for Bluetooth Audio Cutting Out on the Mac</title>
<link>https://rknight.me/fix-for-bluetooth-audio-cutting-out-on-the-mac/</link>
<guid>https://rknight.me/fix-for-bluetooth-audio-cutting-out-on-the-mac/</guid>
<content:encoded><![CDATA[
<p>Bluetooth cutting out randomly on my Mac when using wireless headphones has been an issue for me for ages. I assumed it was because of everyones BT devices in the office but I'm here by myself this morning and it was still happening.</p>
<p>Had a google around and found <a href="https://www.reddit.com/r/MacOSBeta/comments/qjgqjx/i_think_ive_found_a_fix_for_the_bluetooth/">this thread</a> on Reddit and it solved it. Settings &gt; Sharing &gt; Turn off AirPlay Reciever.</p>
<p>I wish I'd looked for a solution sooner.</p>
<p><img alt="" src="https://rknightuk.s3.amazonaws.com/site/settings_airplay.png" /></p>
<p>Update for Ventura: System Settings &gt; General &gt; AirDrop &amp; Handoff. Thanks <a href="https://www.trevorkay.me">Trevor</a>.</p>
]]></content:encoded>
<pubDate>2022-09-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on Micro.blog</title>
<link>https://rknight.me/thoughts-on-micro-blog/</link>
<guid>https://rknight.me/thoughts-on-micro-blog/</guid>
<content:encoded><![CDATA[
<p>A couple of weeks ago I signed up to <a href="https://micro.blog">Micro.blog</a> and stopped using Twitter, Instagram, and Pocket.</p>
<h3>Twitter</h3>
<p>Micro.blog (MB for the rest of the post) has no likes, no follower counts, no retweets, and no <s>post dunking</s> quote tweets. If I post something, I don't know who saw it or who enjoyed it but it doesn't matter; I'm posting it because I want to. Might be <a href="https://toot.rknight.me/2022/05/12/stripe-have-opensourced.html">something interesting</a> or me <a href="https://toot.rknight.me/2022/05/13/mcr-released-a.html">being nostalgic for a time when I thought I was, but definitely wasn't, cool</a> but none of it is being posted to try and &quot;go viral&quot; or get likes.</p>
<p>The lack of follower count, or even knowing if someone follows you, means there's no guilt for unfollowing someone or wondering why someone unfollowed you. No likes means if someone really does like a post a lot, they can reply and say so. <a href="https://blog.ayjay.org/a-bit-of-advice/">Alan Jacobs has an excellent post</a> about this.</p>
<p>I've looked at Twitter a few times in the past month and I was reminded just how negative it is. I'm as guilty as anyone for dunking on politicians, crypto bros, and general idiots. They probably deserve it but it is <em>exhausting</em> and it's pretty much every other tweet. I don't follow news sites or &quot;brands&quot; on Twitter, these are all just normal people but we're all (rightly) angry about <em>the things</em>. I just don't think it's good for my mental health to be that annoyed about a thousand things all the time.</p>
<h3>Instagram</h3>
<p>I hadn't posted to Instagram for a long time. I'd felt uneasy about feeding content to the beast that is Facebook for a while but I also thought perhaps I didn't have anything <em>worth</em> posting. A few days after I signed up, MB were running the <a href="https://micro.welltempered.net/2022/04/30/the-may-photoblogging.html">May Photoblogging challenge</a>. 30 days, 30 prompts, post a photo each day. Turns out I do have things to post and you can <a href="https://toot.rknight.me/categories/may-2022-photoblogging-challenge/">view my challenge photos here</a>. Challenge photos are collected in this <a href="http://micro.blog/discover/mbmay/grid">nice grid view</a> and it's been a great way to find all the cat people.</p>
<h3>Pocket</h3>
<p>This one is less &quot;stick it to the man&quot; and more &quot;just use one service for a bunch of things&quot;. MB has a bookmarking feature that works for exactly my needs and I <a href="https://rknight.me/save-bookmark-to-micro-blog-shortcut/">whipped together a shortcut</a> as well as making a <a href="https://micromarks.rknight.me">little web app to manage my bookmarks</a>.</p>
<h3>Other things I like about Micro.blog</h3>
<p>Editable posts. What a concept.</p>
<p>The <a href="https://micro.blog/discover">discover timeline</a> is a manually curated timeline of features posts from real people and is an excellent starting point to find users to follow. <a href="https://micro.blog/jean">Jean</a> does an excellent job of curating posts for the discover page as well as helping new people to the service. The other way to find interesting posts are the automatic timelines based on <a href="https://help.micro.blog/t/emoji-in-discover/34">emoji topics</a>.</p>
<p>You can follow Mastodon users from MB which mean I can still get updates from <a href="https://duck.haus/about">the duck haus</a> or any other Mastodon instance. Mastodon users can follow MB users as well. When using a custom domain with MB you can set a Mastodon-compatible username. For example mine is <a href="https://micro.blog/rknightuk?remote_follow=1">robb@toot.rknight.me</a>.</p>
<p>There's <a href="https://help.micro.blog/t/json-api/97">an API</a> which I'm sure I'll be using more in the future.</p>
<h3>Missing Pieces</h3>
<p>As much as I've complained about Twitter, there are people who I still want to subscribe to. Of course Twitter doesn't have RSS feeds any more but thankfully <a href="https://netnewswire.com">NetNewsWire</a> allows me to subscribe to specific people so I'm &quot;following&quot; a handful of Twitter accounts there instead.</p>
]]></content:encoded>
<pubDate>2022-05-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Get Safari Tabs Shortcut</title>
<link>https://rknight.me/get-safari-tabs-shortcut/</link>
<guid>https://rknight.me/get-safari-tabs-shortcut/</guid>
<content:encoded><![CDATA[
<p>For <a href="https://www.macstories.net/stories/introducing-automation-april/">Automation April</a> MacStories ran a <a href="https://www.macstories.net/stories/introducing-the-2022-automation-april-shortcuts-contest-winners/">contest</a> where people could submit a shortcut and be in with a chance of winning an Analogue Pocket and a Stream Deck.</p>
<p>Until the announcement of the contest I had never made a shortcut but I wanted to enter just for the fun of it (and that sweet role icon <a href="http://plus.club">in the members Discord</a>). I decided to convert my existing <a href="https://rknight.me/alfred-workflows/#085F8761-9FB4-492D-B466-D7CE943DCE60"><em>Get Safari Tabs</em> Alfred workflow</a> to a shortcut.</p>
<p>The shortcut gets all currently open tabs in Safari and converts them into one of 6 formats and then copies them to the clipboard</p>
<ul>
<li>Markdown list: <code>- [Robb Knight](https://rknight.me)</code></li>
<li>Markdown links: <code>[Robb Knight](https://rknight.me)</code></li>
<li>Links only: <code>https://rknight.me</code></li>
<li>Titles only <code>Robb Knight</code></li>
<li>Titles with links <code>Robb Knight https://rknight.me</code></li>
</ul>
<p>I use the workflow, and now the shortcut, fairly regularly for making <a href="https://ruminatepodcast.com">shownotes for Ruminate</a> and for adding links to <a href="https://intersect.rknight.me">the Intersect</a>.</p>
<p>The shortcut is MacOS only because it uses <a href="https://developer.apple.com/library/archive/releasenotes/InterapplicationCommunication/RN-JavaScriptForAutomation/Articles/Introduction.html#//apple_r">JXA</a> to get the current tabs and formatting them. I'm sure this could be done with shortcut actions but I already had the existing logic from the workflow and I couldn't see any advantage in converting the logic to actions.</p>
<p><a href="https://www.icloud.com/shortcuts/bfe5827f709a47909e6e81d098d5e507">Download Get Safari Links Shortcut for MacOS</a></p>
]]></content:encoded>
<pubDate>2022-05-13T00:00:00+00:00</pubDate>
</item>
<item>
<title>Save Bookmark to Micro.blog Shortcut</title>
<link>https://rknight.me/save-bookmark-to-micro-blog-shortcut/</link>
<guid>https://rknight.me/save-bookmark-to-micro-blog-shortcut/</guid>
<content:encoded><![CDATA[
<p>I recently signed up (again) to <a href="https://micro.blog">Micro.blog</a> in an attempt to move away from services run by <a href="https://en.wikipedia.org/wiki/Elon_Musk">billionare shitposters</a>. I will probably write up a full post about it soon but you can hear me talk about it on <a href="https://ruminatepodcast.com/episodes/144">episode 144 of Ruminate</a> or <a href="https://toot.rknight.me">view my micro blog here</a>.</p>
<p>One of the features Micro.blog offers is bookmarking of posts and links. After a <a href="https://micro.blog/rknightuk/12770616">conversation about using micro.blog as a read later service</a> and finding the correct API I put together a shortcut to save bookmarks. You'll need to get an access token from <a href="https://micro.blog/account/apps">the apps settings page</a>.</p>
<p><a href="https://www.icloud.com/shortcuts/876d4c98272c4deb9f155a656a6929ec">Download Bookmark on Micro.blog</a></p>
<p>MacOS shortcuts lacks support for using the sharesheet without a <a href="https://apps.apple.com/us/app/sharebot-for-shortcuts/id1597340986?mt=12">third-party app</a> so instead you can run this shortcut whenever and it gets the current Safari page URL. The iOS version shows up in the share sheet so it can be used wherever you share links.</p>
<p><s>If there's a way to combine these so one shortcut works for both MacOS and iOS, I'd love to hear it.</s> Thanks to <a href="https://micro.blog/pratik/12775485">Pratik</a> for showing me how to check the device type and make this one shortcut for both platforms.</p>
]]></content:encoded>
<pubDate>2022-04-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>Building a PiSight</title>
<link>https://rknight.me/building-a-pisight/</link>
<guid>https://rknight.me/building-a-pisight/</guid>
<content:encoded><![CDATA[
<p><img alt="My finished PiSight" src="https://rknightuk.s3.amazonaws.com/site/pisight.jpg" /></p>
<p>During the pandemic Max Braun managed to squeeze a Pi Zero with camera module <a href="https://debugger.medium.com/todays-webcams-are-boring-so-i-brought-back-a-classic-291cc7c94c76">into an Apple iSight camera</a>. I came across the post a few weeks ago and decided to have a go myself.</p>
<p>Despite the <a href="https://www.raspberrypi.com/news/supply-chain-shortages-and-our-first-ever-price-increase/">Rapsberry Pi shortage</a> I was able to order a Pi Zero, the <a href="https://shop.pimoroni.com/products/raspberry-pi-camera-module-v2?variant=19833929735">camera module</a>, the <a href="https://shop.pimoroni.com/products/camera-cable-raspberry-pi-zero-edition?variant=32092803891283">Pi Zero camera cable</a>, and an <a href="https://en.wikipedia.org/wiki/ISight">iSight</a>. I ordered the <a href="https://github.com/maxbbraun/pisight/blob/master/PiSight.stl">3D-printed internal chassis</a> and <a href="https://github.com/maxbbraun/pisight/issues/16">this USB adaptor</a> from <a href="https://sgd3d.co.uk">SGD3D</a> which took about a week to arrive.</p>
<p>I followed these <a href="https://www.ifixit.com/Device/Apple_iSight_Webcam">iFixIt teardowns</a> to work out how to take the iSight apart, then looked at the <a href="https://github.com/maxbbraun/pisight/issues">issues on the PiSight repo</a>, and <a href="https://muffinresearch.co.uk/building-a-pisight/">this blog post</a>, to see other people putting theirs together. The main issue I had was having to trimming off the bottom two corners of the camera module to be able to fit it inside the iSight tube. I used <a href="https://github.com/showmewebcam/showmewebcam"><code>showmewebcam</code></a> for the software, which boots incredibly quickly and makes it very easy to get going.</p>
<p>Once I'd wrangled it all together I used <a href="https://handmirror.app">Hand Mirror</a> to check everything was working (the lighting is terrible in this temporary office hence why it's looks so bad):</p>
<center><img src="https://rknightuk.s3.amazonaws.com/site/pisight-hand-mirror.png" /></center>
<p><img alt="The chassis" src="https://rknightuk.s3.amazonaws.com/site/pisight-chassis.jpg" /></p>
<p>It may not be the best webcam in the world, but it's easily as good as the one I have in my MacBook, and I can move it around wherever I want.</p>
<h3>Additional Links</h3>
<ul>
<li><a href="https://debugger.medium.com/todays-webcams-are-boring-so-i-brought-back-a-classic-291cc7c94c76">Today’s Webcams Are Boring, so I Brought Back a Classic | by Max Braun | Debugger</a></li>
<li><a href="https://www.youtube.com/watch?v=8l0kpQ_2rj4">Apple FireWire iSight Teardown - YouTube</a></li>
<li><a href="https://muffinresearch.co.uk/building-a-pisight/">Building a PiSight</a></li>
<li><a href="https://github.com/maxbbraun/pisight/tree/26c4cef49d1f5b3d396f66f86c58a1d579e686a7/monitor_stand">PiSight Monitor Stand</a></li>
<li><a href="https://www.thingiverse.com/thing:11761">iSight Clamp for ToM by quadrivia - Thingiverse</a></li>
<li><a href="https://handmirror.app/">Hand Mirror, for Mac</a></li>
<li><a href="https://github.com/peterbay/camera-control">peterbay/camera-control: Simple command-line application for controlling camera settings through V4L2.</a></li>
</ul>
]]></content:encoded>
<pubDate>2022-02-10T00:00:00+00:00</pubDate>
</item>
<item>
<title>Monzo Pot Image Generator Version Two</title>
<link>https://rknight.me/monzo-pot-image-generator-version-2/</link>
<guid>https://rknight.me/monzo-pot-image-generator-version-2/</guid>
<content:encoded><![CDATA[
<p>It's been a while since I <a href="https://rknight.me/monzo-pot-image-generator/">released the first version</a> of the <a href="https://potimages.rknight.me/">Monzo pot image generator</a> and there's been a <a href="https://community.monzo.com/t/monzo-pot-image-generator/102120">lot of requests</a> on the Monzo forum for various new features.</p>
<p>So I spent some time adding and updating the site:</p>
<ul>
<li>New about modal with credits for the new icons:
<ul>
<li>Nearly 2000 brand logos from <a href="https://simpleicons.org/">Simple Icons</a></li>
<li>Country flags from <a href="https://github.com/lipis/flag-icon-css">lipis/flag-icon-css</a></li>
<li>Country icons from <a href="https://github.com/djaiss/mapsicon">djaiss/mapsicon</a></li>
<li>Full set of emoji from <a href="https://openmoji.org/library/">Openmoji</a></li>
</ul>
</li>
<li>Premium backgrounds from <a href="https://community.monzo.com/t/monzo-pot-image-generator/102120/178">Ben in the forums</a></li>
<li>Upload your own background image</li>
<li>New coloured Monzo logo from the Monzo press kit</li>
<li>Offline support</li>
</ul>
<p>Try the <a href="https://potimages.rknight.me/">Monzo Pot Image Generator</a>.</p>
]]></content:encoded>
<pubDate>2021-08-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>Intersect</title>
<link>https://rknight.me/intersect/</link>
<guid>https://rknight.me/intersect/</guid>
<content:encoded><![CDATA[
<p>I came across <a href="https://wiki.nikitavoloboev.xyz/">Nikita Volodoev's wiki</a> recently when looking for other things and realised this was exactly the type of things I'd been looking for to store snippets, links, and other notes about various things that don't justify a full blog post. And because I'm an idiot I ended up <a href="https://hellsite.rknight.me/1426307649365286921">building my own solution</a> with <a href="https://11ty.dev">Eleventy</a>. The result is <a href="https://intersect.rknight.me">Intersect</a>.</p>
<p>Aside from just rendering a bunch of markdown files it has a number of additional features.</p>
<ul>
<li>Table of contents and breadcrumbs</li>
<li>Syntax highlight for code blocks with copy code button</li>
<li>Full search of content and links</li>
<li>Highlight search queries on navigation to a result</li>
<li>Popular pages using the <a href="https://usefathom.com/ref/IXCLSF">Fathom API</a></li>
<li>Recently updated pages by parsing the git log</li>
</ul>
<p>There are a bunch of pages where you can read about what Intersect is and how it works on Intersect itself:</p>
<ul>
<li><a href="https://intersect.rknight.me">The introduction page</a> has some more details about the why</li>
<li><a href="https://intersect.rknight.me/meta">The meta page</a> sets out what the purpose of the site is</li>
<li><a href="https://intersect.rknight.me/meta/readme">The readme page</a> has installation instructions, and more technical information about how it was built</li>
</ul>
<p>The <a href="https://github.com/rknightuk/intersect">source code is on GitHub</a> but to paraphrase <a href="https://github.com/andy-piccalilli/11ty-base">Andy Bell</a> it's not open source so much as it is free. I doubt this will meet the requirements of anyone else, it's a good base to start with, but any features I add will be because I want them.</p>
<p>There is a companion <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/intersect">Alfred workflow</a> that also searches the content and links and can also open the page in VSCode for editing.</p>
<p>I even went full <a href="http://devsdodesign.com">#devsdodesign</a> and made a logo:</p>
<p><img alt="Intersect Logo" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/intersect-logo.png" /></p>
]]></content:encoded>
<pubDate>2021-08-23T00:00:00+00:00</pubDate>
</item>
<item>
<title>Calendar Events Alfred Workflow</title>
<link>https://rknight.me/calendar-events-alfred-workflow/</link>
<guid>https://rknight.me/calendar-events-alfred-workflow/</guid>
<content:encoded><![CDATA[
<p>NB: This workflow has been deprecated and replaced with the <a href="https://github.com/rknightuk/alfred-workflows/raw/main/workflows/agenda">Agenda Workflow</a></p>
<p>tl;dr: Calendar events workflow for Alfred. <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/calendar-events">Download it here</a>.</p>
<p>I released a <a href="https://rknight.me/reminders-alfred-workflow/">Reminders workflow</a> a few days ago and while working on that I realised a lot of the code would be reusable for a version to manage calendar events. So I went at it tonight while it was too hot to sleep (it's 3am).</p>
<p><img alt="Calendar Events workflow for Alfred" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/calendar-events.png" /></p>
<p>Like the reminders one, it uses an only-for-this-use-case CLI tool which you <a href="https://github.com/rknightuk/alfred-calendars-helper">can view on Github here</a>.</p>
<p>One difference with this one is opening and creating events. I wanted the workflow to stand on it's own but I use Fantastical as my calender so it has two modes: one for default Calendar.app and one for Fantastical. By changing the <code>usefantastical</code> workflow variable events will be opened and created in Fantastical. This is the recommended way of using it.</p>
<p>With this workflow you can:</p>
<ul>
<li>View upcoming events for the next 5 days (all or a specific calendar)</li>
<li>Open events in Calendar.app or Fantastical</li>
<li>Set a default calendar for creating events</li>
</ul>
<p><a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/calendar-event">Download Calendar Events for Alfred</a>.</p>
]]></content:encoded>
<pubDate>2021-07-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Reminders Alfred Workflow</title>
<link>https://rknight.me/reminders-alfred-workflow/</link>
<guid>https://rknight.me/reminders-alfred-workflow/</guid>
<content:encoded><![CDATA[
<p>NB: This workflow has been deprecated and replaced with the <a href="https://github.com/rknightuk/alfred-workflows/raw/main/workflows/agenda">Agenda Workflow</a></p>
<p>tl;dr: Reminders workflow for Alfred. <a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/reminders">Download it here</a>.</p>
<p>There are a number of workflows available for <a href="https://www.alfredapp.com">Alfred</a> to manage Reminders on the Mac and I've tried most of them; none of them do everything I want. Most of them have one of these problems:</p>
<ul>
<li>They don't order reminders based on due date</li>
<li>You can create reminders but can't view them</li>
<li>They rely on a default list for creating with no option to choose</li>
</ul>
<p>I decided to have a go at building my own this weekend (and this evening). I tried a number of approaches including Javascript for automation (JXA) which was too slow and AppleScript which opens the app to access your reminders so is also slow. I then found <a href="https://github.com/keith/reminders-cli">reminders-cli</a> which is a command line tool written in Swift.</p>
<p>This tool was as close as I was able to get in terms of accessing reminders but it didn't order them by due date, and didn't allow me to view reminders from all lists, only specific ones. I cloned the repo and starting changing some stuff to do what I wanted; I've never written Swift before, so the code is <em>bad</em>. <em>Really bad</em>. I also modified the date parsing script from <a href="https://github.com/surrealroad/alfred-reminders">alfred-reminders</a>, which uses (an admittedly older version of) <a href="https://github.com/wanasit/chrono">Chrono</a> but works for this purpose.</p>
<p>After a bit more wrangling of various things like bash, AppleScript, and Alfred's various features like script filters and workflow variables I was able to get something I'm happy with.</p>
<p><img alt="Reminders workflow for Alfred" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/reminders-for-alfred.png" /></p>
<p>With this workflow you can:</p>
<ul>
<li>View all upcoming reminders</li>
<li>View upcoming reminders from a specific list</li>
<li>Mark reminders complete</li>
<li>Set a default list for creating reminders (or create for a specific list)</li>
<li>Create new reminders with natural language (e.g. &quot;Lunch with John tomorrow 1pm&quot;)</li>
</ul>
<p><a href="https://github.com/rknightuk/alfred-workflows/tree/main/workflows/reminders">Download Reminders for Alfred</a>.</p>
]]></content:encoded>
<pubDate>2021-07-19T00:00:00+00:00</pubDate>
</item>
<item>
<title>Monzo Pot Image Generator</title>
<link>https://rknight.me/monzo-pot-image-generator/</link>
<guid>https://rknight.me/monzo-pot-image-generator/</guid>
<content:encoded><![CDATA[
<p>While browsing <a href="https://community.monzo.com/t/custom-pot-images-to-use/62748/325">this thread on the Monzo forums</a> I came up with an idea to generate Monzo pot images whenever I want so I created the <a href="https://potimages.rknight.me/">Monzo Pot Image Generator</a>.</p>
<p><img alt="Monzo Pot Image Generator" src="https://rknightuk.s3.us-east-1.amazonaws.com/site/preview-image.png" /></p>
<p>First thing was to work out how to generate and download the images. This turned out to be relatively easy with a combination of <a href="https://github.com/tsayen/dom-to-image">dom-to-image</a> and <a href="https://github.com/eligrey/FileSaver.js">FileSaver</a>. To generate a list of the <a href="https://fontawesome.com/">Font Awesome icons</a> output in the search, I grabbed <a href="https://github.com/FortAwesome/Font-Awesome/blob/master/metadata/icons.json">the JSON config</a>, did a little bit of manipulating in Sublime and used <a href="https://www.11ty.dev/">Eleventy's global data files</a> to use that data when building the site.</p>
<p>I wanted to keep everything as simple as possible; no crazy build scripts and as few files as possible. I used <a href="https://watercss.kognise.dev/">Water.css</a> for the base css and the rest of the css is in a <code>style</code> tag in the <code>head</code> (is that legal?). I also learnt that there is a <code>type=&quot;color&quot;</code> input - although I might replace this at some point because it's not particularly nice on mobile Safari.</p>
<p>You can also share you pot images with a link <a href="https://potimages.rknight.me/?i=chess-queen&amp;ip=fas&amp;c=333333&amp;bg=b7edd0">like this</a>. I initially used url hashes to keep the url updated all the time, but when sharing these to Twitter they get stripped out so I switched to using query strings instead.</p>
]]></content:encoded>
<pubDate>2020-07-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>Game FAQs</title>
<link>https://rknight.me/fifa-street-ps2-game-faqs/</link>
<guid>https://rknight.me/fifa-street-ps2-game-faqs/</guid>
<content:encoded><![CDATA[
<p>Before YouTube was the go-to place for game tutorials, <a href="https://gamefaqs.com">GameFAQs</a> was one of the only decent places online to get in-depth guides on how to complete games or get cheat codes. GameFAQs only allowed text posts on the site so people came up with interesting ways to navigate chapters and sections in what feels like a precursor to <a href="https://daringfireball.net/projects/markdown/">Markdown</a>.</p>
<p>Every guide would have an ASCII art heading and a table of contents with some unique key so you could use CMD/CTRL+F to find the relevant section. Today I remembered my only contribution to GameFAQs was a <a href="https://gamefaqs.gamespot.com/gamecube/924938-fifa-street/faqs/36247">Fifa Street PS2 guide</a>. I'm pretty sure a lot of it was just copied from magazines and other websites but I wanted to grab a copy of it just in case it ever removed or GameFAQs shuts down. So if that link doesn't work, I've also uploaded <a href="https://rknight.me/files/fifa-street-guide.txt">the original text file</a>.</p>
<p>I haven't used GameFAQs in a <em>long</em> time but it's nice to know all those guides are still available.</p>
<p><img alt="GTAIII ASCII Heading" src="https://rmlewisuk.s3.us-east-1.amazonaws.com/gta3-ascii.png" /></p>
<p>Image from <a href="https://gamefaqs.gamespot.com/ps2/466217-grand-theft-auto-iii/faqs/14620">this GTA III guide</a> I remember using <em>a lot</em>.</p>
]]></content:encoded>
<pubDate>2020-02-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>Changing Your Name by Deed Poll</title>
<link>https://rknight.me/changing-your-name-by-deed-poll/</link>
<guid>https://rknight.me/changing-your-name-by-deed-poll/</guid>
<content:encoded><![CDATA[
<p>I changed my name (and my email) a couple of weeks ago and I have a few thoughts about the process. Most of this should also apply if you've changed your name because of marriage.</p>
<h3>Make a List</h3>
<p>Before you do anything else, make a list of everywhere you need to change your name, along with the process to do it (letter, email, in branch). If it's a letter or email, I used this to send to each of them:</p>
<blockquote>
<p>Please be advised that on {name change date} my name was legally changed from {old name} to {new name}.</p>
</blockquote>
<blockquote>
<p>My new name should be reflected on my {credit card|account|whatever}, account number {12345}, previously held in the name of {old name}.</p>
</blockquote>
<blockquote>
<p>I have included a copy of my Deed Poll. If you have further questions, please contact me at {phone number} or {email}.</p>
</blockquote>
<blockquote>
<p>Sincerely,
{New Name} (previously {Old Name})</p>
</blockquote>
<p>You'll also need to sign that letter with your old and new signature. Becuase signatures are proof of...something?</p>
<p>I won't list everywhere I had to change my name, but here's a good list of places to start:</p>
<ul>
<li>HMRC. You can do this online through the government gateway.</li>
<li>Passport. Again, it can be done online, but you'll need to send your deed poll and another &quot;proof&quot;. I used a bank statement in my new name.</li>
<li>Driving Licence. Requires a new application form, order online or pickup in a Post Office.</li>
<li>Bank. Depends on the bank, check their website.</li>
<li>Credit Cards.</li>
<li>Insurance (house, car, phone, etc)</li>
<li>Utilities (water, gas, electric)</li>
<li>Mortgage/Landlord</li>
<li>Electoral Register. You can do this online by registering to vote and it will ask if you've changed your name.</li>
<li>Council Tax</li>
<li>Paypal. They require additional proof including photo ID and a bank statement.</li>
</ul>
<h3>Make Multiple Deed Polls</h3>
<p>I used <a href="https://freedeedpoll.org.uk/">Free UK Deed Poll</a> to make my deed poll, printed on some certificate paper I got on Amazon. This is 100% legal and any company that charges you for a deed poll is just printing a piece of paper for you. I would suggest getting at least four or five deed polls signed (you need two witnesses); I currently have three in the mail and a final one at home which won't be leaving my sight until at least one has been returned.</p>
<h3>Do Your Passport or Driving Licence as Soon as Possible</h3>
<p>Despite a deed poll being a legal document, there are some places that won't accept that as proof without additional documentation, namely a photo ID of some kind. Getting either your passport or driving licence done quickly will make the process a lot easier. If you don't have either of those, you'll have to argue with them like I did with my mortgage company while I was waiting for my new passport.</p>
<h3>Try Live Chat First</h3>
<p>A lot of companies have pages explaining how to change your name with them, which is usually something like &quot;Send us a letter in the post with a copy of your deed poll&quot; but if you ask them on live chat, a lot of them will do it without having to send them a physical letter like a caveman.</p>
<h3>You Won't Get Confirmation</h3>
<p>Of the seven places I've sent letters to, only one of them has actually confirmed that the change has happened, I had to call the others to confirm the change.</p>
<h3>Everyone Sucks Except Monzo</h3>
<p>I was able to change my name on Monzo within five minutes using the in-app chat. A week later, I'm still waiting for my high street bank to change even though I went in branch to make the change, which they force you to do.</p>
<h3>If All Else Fails, Say the Magic Word</h3>
<p>I also changed my email at the same time as my name, so I had to go through all my online accounts to change it.</p>
<p>If you find a company who refuses to change your name or email, say the magic word: GDPR. There are multiple companies who won't change your email address at all so it almost always ended in me sending an email something like this:</p>
<blockquote>
<p>You have an obligation under GDPR to keep my personal information correct and up to date. If you're unable or unwilling to change my {name|email}, please delete my account as soon as possible.</p>
</blockquote>
<p>For the most part, these companies would &quot;suddenly&quot; find a way to change it or, in a few cases, they would delete the account.</p>
]]></content:encoded>
<pubDate>2019-09-08T00:00:00+00:00</pubDate>
</item>
<item>
<title>Convert a Spotify Account From Facebook to Email Login</title>
<link>https://rknight.me/convert-spotify-facebook-to-email-login/</link>
<guid>https://rknight.me/convert-spotify-facebook-to-email-login/</guid>
<content:encoded><![CDATA[
<p>This morning <a href="https://hellsite.rknight.me/976392265374535680">I tweeted</a> that there's no way to convert a Spotify account from Facebook login to email and password login. I even spoke to Spotify support who said:</p>
<blockquote>
<p>As your account was created via Facebook, it can't be unlinked. Don't worry, we can free up your email address so you can create a new account. Once that's done, we'll transfer all of your tunes and student details across.</p>
</blockquote>
<p>I complained about this in one the Slack groups I'm in, and Nathaniel suggested I try doing a &quot;forgot password&quot; to set a password on the account and it worked. After that I was able to disconnect Spotify from the <a href="https://facebook.com/settings?tab=applications">Facebook settings page</a>.</p>
<ol>
<li>On the <a href="https://www.spotify.com/">Spotify website</a>, log out</li>
<li>Go to the login page and choose &quot;forgot password&quot; and use the email associated with your Facebook account</li>
<li>Reset your password from the email link</li>
<li>Disconnect Spotify in Facebook</li>
<li>Log in with your new password</li>
</ol>
<p>The above steps that I followed have also been confirmed to work by <a href="https://iwader.co.uk">Wade</a>.</p>
]]></content:encoded>
<pubDate>2018-03-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Home Screen (November 2017)</title>
<link>https://rknight.me/homescreen-november-2017/</link>
<guid>https://rknight.me/homescreen-november-2017/</guid>
<content:encoded><![CDATA[
<p><em>My iPhone home screen as of November 2017. This post originally appeared in <a href="https://club.macstories.net/posts/home-screen-robb-lewis">issue 104 of MacStories Weekly</a>.</em></p>
<p><a href="https://rmlewisuk.s3.amazonaws.com/homescreen-november-2017.jpg" target="_blank"><img height="auto" src="https://rmlewisuk.s3.amazonaws.com/homescreen-november-2017.jpg" style="float: left; padding: 10px;" width="250" /></a></p>
<p>A lot of things have changed for me since I last <a href="https://robblewis.me/homescreen-september-2015/">shared my Home screen in 2015</a>. Last year I switched to Android, using a Pixel XL as my phone because I had become frustrated with some of the interface changes to iOS. Just under a year later I was as irked with Android as I previously was with iOS, but for different reasons (Seriously Android? No way to choose audio output is ridiculous). I also missed my Apple Watch and I wanted to try out AirPods which, surprising no one, I love.</p>
<p>One of the things I did like about Android is that every app you install doesn't have to be on the Home screen. I got pretty use to this so I now have my most used apps on first screen, everything else in a folder on the second, and I use spotlight to find those apps. This did have its downsides on Android though; some apps I would simply forget to check, or post to, so I've made an effort to put those apps on the Home screen on my iPhone, namely Instagram, Reddit, and Buzzfeed.</p>
<p>Starting with my dock, Overcast and Tweetbot were the apps I missed the most. The plethora of great podcast, and to some extent Twitter, clients on iOS isn't mirrored on Android and Pocketcasts is basically the only decent option. As much as I like Pocketcasts, Overcast works better for the way I like to listen and subscribe to podcasts. I do still have Pocketcasts and Castro installed so I can check out any new features and switch easily if I want to.</p>
<p>Mac counterparts isn't something offered by a lot of Android apps so coming back to iOS I was happy download Fantastical and PCalc although the latter isn't as much a calculator for me as it is a game that can also do calculations.</p>
<p>Before I used Android I was a plug-in-and-sync-from-iTunes person but I signed up for Spotify the day I got my Pixel and I've been using it ever since. I have considered Apple Music but it doesn't integrate with my Amazon Echo so that's a no-go, at least for now.</p>
<p>The rest of the apps are fairly self-explanatory; Amazon, eBay, and my bank's <a href="https://hellsite.rknight.me/927502202914123776">terrible app</a> because <a href="https://hellsite.rknight.me/701068051840630784">I buy a lot of Lego</a>, Google Inbox because email is a necessary evil, and notes because I like the simplicity of it.</p>
<p>Spending a year on Android gave me an appreciation for the things I really like about iOS as well as the areas I hope they improve on in the future like the Home screen layout and notifications.</p>
]]></content:encoded>
<pubDate>2018-03-15T15:25:45+00:00</pubDate>
</item>
<item>
<title>Notes About Setting up RetroPie</title>
<link>https://rknight.me/notes-about-setting-up-retropie/</link>
<guid>https://rknight.me/notes-about-setting-up-retropie/</guid>
<content:encoded><![CDATA[
<p>Setting up <a href="https://retropie.org.uk/">RetroPie</a> on a Raspberry Pi is fairly easy but I did come up against a couple of issues that I needed to fix. This post is just a collection of quick fixes for those issues.</p>
<h3>Remove underscored games when transferring from a Mac</h3>
<p>When copying ROMs from a Mac, you may end up with a bunch of files that start with an underscore. To remove them all, run the following:</p>
<pre><code>find /home/pi/RetroPie -name &quot;._*&quot; -exec rm -rf {} \;
</code></pre>
<p>[<a href="https://retropie.org.uk/forum/topic/4348/removing-_-files-from-rom/10">source</a>]</p>
<h3>Finding Installed Themes</h3>
<p>For the theme I'm using, I wanted to edit the SNES background image to use the non-US SNES (read: the one true SNES). Installed themes are stored in <code>/etc/emulationstation/themes</code>.</p>
<h3>Finding decent ROMs</h3>
<p>The best site I've found for searching for specific ROMs is <a href="http://www.completeroms.com/">Complete ROMS</a>. They don't have <em>everything</em> but the site is clean and easy to find exactly what you're looking for.</p>
]]></content:encoded>
<pubDate>2017-07-04T10:14:15+00:00</pubDate>
</item>
<item>
<title>Getting Closer to the Perfect TV</title>
<link>https://rknight.me/getting-closer-to-the-perfect-tv/</link>
<guid>https://rknight.me/getting-closer-to-the-perfect-tv/</guid>
<content:encoded><![CDATA[
<p>In 2015, Pieter Siekerman <a href="http://technology.siekerman.nl/post/133644449664/the-perfect-tv">wrote a blog post</a> describing what the perfect TV should be:</p>
<blockquote>
<p>For two years now I’ve closely watched various TV manufacturers trying to find their way in the changing landscape of TV platforms and I just don’t get it.</p>
</blockquote>
<p>In September, (and again this week), I ordered the <a href="https://hisense.co.uk/electronics/tvs/m3000/43">Hisense H43M3000</a> despite it being a relatively unknown brand in the UK and I was pleasantly surprised at how good it was given the price of ~£300. This is the closest I've come to the perfect TV thus far, but it still has a long way to go based on Peter's list.</p>
<blockquote>
<p>First of all and most importantly, it should not be a TV platform.</p>
</blockquote>
<p>Unfortunately, it is. It has built-in apps but no app store to download other apps. It's slow to load anything including switching inputs, which is infuriating. The remote is a hot mess of useless buttons including app-specific buttons like Netflix, YouTube and Wuaki which can't be changed to open a different app.</p>
<blockquote>
<p>A large number of HDMI ports</p>
</blockquote>
<p>The TV has 4 HDMI ports but annoyingly only two of them support UHD/4K/HDR/whatever. I assume this is a cost-saving measure but if they removed the TV tuner or the &quot;common interface&quot; slot, whatever the hell that is, this would cover it. It does have a SCART socket, component, and 3 USB ports but I'd prefer to replace all of those with HDMI if I could. I can <a href="https://hellsite.rknight.me/863400075338371072">rename the inputs though</a> which is the best feature of this TV by a long shot.</p>
<blockquote>
<p>The display should be great</p>
</blockquote>
<p>The display is so nice I bought another one to replace my aging HDTV from ~5 year ago. Even with non-4K content, everything looks fantastic.</p>
<p>There are a number of other points on Peter's list which I care less about than the ones listed above and there's still a long way to go before I can buy the perfect TV. However, if you're looking for a good value 4K TV this is a pretty good option. Just buy yourself a Fire TV box to go with it so you can avoid thier &quot;smart&quot; software.</p>
]]></content:encoded>
<pubDate>2017-05-15T00:00:00+00:00</pubDate>
</item>
<item>
<title>Enable HDR with PS4 on Hisense H43M3000</title>
<link>https://rknight.me/hdr-hisense-tv-ps4/</link>
<guid>https://rknight.me/hdr-hisense-tv-ps4/</guid>
<content:encoded><![CDATA[
<p>My Hisense TV (<a href="https://hisense.co.uk/electronics/tvs/m3000/43">H43M3000</a>) recently received an update to support HDR, which is something the PS4 supports for some games. After plugging the console in, the PS4 told me my TV doesn't support HDR but after some playing around with settings and ports I managed to get it to work:</p>
<ol>
<li>The PS4 must be using either HDMI port 3 or 4</li>
<li>Open the TV settings and go to System then the &quot;HDMI &amp; CEC Function&quot; section</li>
<li>Select &quot;Adjust&quot; on the HDMI 2.0 Format setting and choose &quot;Enhanced Format&quot;</li>
</ol>
<p>Once I restarted the PS4 and TV, HDR was supported (and looked beautiful in <a href="http://media.rbbl.ws/game/2017/05/01/horizon-zero-dawn/">Horizon Zero Dawn</a>) 🎉.</p>
<p><s><em>nb: I have an <a href="https://hellsite.rknight.me/736500604705591297">original PS4</a> so I can't confirm if this TV works with 4K on the PS4 Pro.</em></s></p>
<p><strong>24/01/2018 Update: I now have a PS4 Pro and can confirm it works with 4K as well.</strong></p>
]]></content:encoded>
<pubDate>2017-05-05T00:00:00+00:00</pubDate>
</item>
<item>
<title>Jekyll Post Archive Grouped by Year</title>
<link>https://rknight.me/jekyll-category-year-archive/</link>
<guid>https://rknight.me/jekyll-category-year-archive/</guid>
<content:encoded><![CDATA[
<pre class="language-html"><code class="language-html"><br />    <span class="token comment">&lt;!-- Check if the date has been output --></span><br />    {% assign datePrinted = false %}<br />    <span class="token comment">&lt;!-- Assign year to something we're not using --></span><br />    {% assign currentYear = 1000 %}<br />    <span class="token comment">&lt;!-- Get number of posts --></span><br />    {% assign postCount = archivePosts | size %}<br />    <br />    <span class="token comment">&lt;!-- If no posts, say that --></span><br />    {% if postCount == 0 %}<br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>No posts yet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />    {% endif %}<br /><br />    <span class="token comment">&lt;!--  Loop thrugh posts --></span><br />    {% for post in archivePosts %}<br /><br />        {% assign postYear = post.date | date: "%Y" %}<br /><br />        <span class="token comment">&lt;!-- Output posts if this is a new year --></span><br />        {% unless postYear == currentYear %}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>{{ postYear }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><br />        {% endunless %}<br /><br />        {% assign currentYear = postYear %}<br /><br />        <span class="token comment">&lt;!-- Output post --></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><br />            {{ post.date | date: "%d/%m" }} - <br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>{{ post.url }}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><br />                {{ post.title }}<br />            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><br />        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><br />        <br />    {% endfor %}<br /></code></pre>
]]></content:encoded>
<pubDate>2017-01-12T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on OnePlus 3 and Switching to Android</title>
<link>https://rknight.me/oneplus-3-and-switching-to-android/</link>
<guid>https://rknight.me/oneplus-3-and-switching-to-android/</guid>
<content:encoded><![CDATA[
<p><em>If you want to hear more about this, or just prefer listening over reading (hi Myke), I spoke about this with John on episode 30 of our podcast, <a href="http://ruminatepodcast.com/31">Ruminate</a>. Find it in <a href="https://overcast.fm/itunes1033235350/ruminate-podcast">Overcast</a>, <a href="http://pca.st/ruminate">Pocketcasts</a>, or <a href="https://itunes.apple.com/gb/podcast/ruminate-podcast/id1033235350">iTunes</a>, or any other podcast app you use.</em></p>
<hr />
<p>I wrote about <a href="http://robblewis.me/replacing-apps-on-android">replacing all my apps on Android</a> just under a week ago, but I wanted to lay out some of my thoughts about the <a href="https://oneplus.net/uk/3">OnePlus 3</a> and Android in general.</p>
<p>Firstly, I've had a few people ask <em>why</em> I switched to Android. There wasn't a single reason but a plethora of little things that started to bug me about iOS. First off, as I <a href="http://www.ruminatepodcast.com/30">discussed here</a>, I'm no longer using iTunes because of how buggy it is when downloading music, as well as it constantly messing up my album artwork. Without iTunes, the only thing locking me into iOS was iMessage and I realised I could live without it. After the &quot;upgrade&quot; to iOS10 a lot of things bugged me about it. In no particular order:</p>
<ul>
<li>Pressing notifications would sometimes not open the related app, they would just disappear</li>
<li>The feature where it would show Overcast on the lock screen when I plugged my headphones in no longer worked</li>
<li>Because iOS10 splits control center into two panels, whenever I opened it to use something it was inevitably on the wrong panel</li>
<li>No way to clear all notifications from the lock screen without 3D touch (without swiping down notification center which you can only do from the widget lock screen)</li>
<li>Widgets can't be placed wherever I want</li>
<li>Actions on notifications (reply, archive, etc) take twice as many presses to get to as before without 3D touch</li>
<li>Even with <a href="http://www.howtogeek.com/262837/how-to-unlock-your-ios-10-device-with-a-single-click-like-in-ios-9/">rest to unlock</a> enabled, my iPhone still wouldn't always unlock properly, or at all</li>
<li>Fucking iMessage stickers and apps</li>
</ul>
<p>All of the above made me hate using my phone and on top of all that the way I use my phone has changed significantly in the past year so I decided the best thing for me to do was to switch to Android.</p>
<h3>OnePlus 3</h3>
<p>I won't be going in depth into the phone but <a href="https://www.youtube.com/watch?v=ycIpOZY03OM">MKBHD reviewed it here</a>. The OnePlus is similar in size to the iPhone 7 plus and after a few days of using it my iPhone 6 felt ridiculously small; turns out Myke was right.</p>
<p>The OnePlus build quality is not quite as nice as an iPhone, which I expected, but it is still a really nice device. The thing I love the most about it is the fingerprint unlock. Not only has it never failed to read my fingerprint but it's also <em>really</em> fast, as you can see in <a href="https://www.youtube.com/watch?v=fOIfTNfdZUk">this video</a>.</p>
<div style="text-align: center;">
    
</div>
<p>Dash is OnePlus's quick charging feature that uses their <a href="https://oneplus.net/uk/3/dashcharge">dash charger and cable</a>. I'm able to charge my phone from ~15% to 70% in about 30 minutes, and another 15 to reach the full 100%. Because of this I've started charging my phone in the evening before I go to bed and the battery lasts the entirety of the next day well into the late evening before I need to charge again. It's worth noting that dash charging only works with both the USB plug <em>and</em> the dash cable, so it won't work with third-party USB cables.</p>
<p>OnePlus 3, like the previous models, has an alert slider on the side to switch between silent, priority notifications, and all notifications. This is really useful and not something that appears on a lot of Android phones (although the modes exist as a software feature). By default priority includes alarms, music, messages, and phone calls but any app can be treated as priority in the global notification settings. Coming from an iPhone, it's nice to have a physical switch and as someone who had a lot of <a href="https://en.wikipedia.org/wiki/Nokia_3310">old Nokia phones</a> I love having a modern equivalent of profiles. I use silent for when I'm sleeping, priority for when I'm at work, and all for any other time.</p>
<p>The OnePlus runs <a href="https://en.wikipedia.org/wiki/OxygenOS">OxygenOS</a> which is a slightly modified version of stock Android, currently on 6.0 Marshmallow. Although it's frustrating to not have the latest version of Android, I'm pretty happy with it and OnePlus have confirmed they are working on an Android N update which should be out in the next few months.</p>
<p>The camera is no iPhone competitor but the photos it takes <a href="http://rmlewisuk.s3.amazonaws.com/one-plus-sample-cat.jpg">are pretty good</a>. I don't take a lot of photos with my phone so this isn't massively important to me, but your mileage may vary.</p>
<p><img alt="One Plus cat sample image" src="http://rmlewisuk.s3.amazonaws.com/one-plus-sample-cat-preview.jpg" /></p>
<p>Lets be honest, it's a slab of glass with some buttons next to it. It's not the world's greatest device but it's nowhere near the worst and for £330, you can't go wrong.</p>
<h3>Android</h3>
<p>Android is much as you'd expect; it's a mobile operating system that has apps, widgets, notifications, just like iOS. There are, however, some significant differences. Some of them I like, some not so much.</p>
<p>Being able to install an app from the Google Play store from my Mac (and choose which device to install to) is so natural, and works so well, that I'm amazed Apple hasn't implemented this. Opening iTunes seems archaic in comparison. Once I'd downloaded a few apps, I was impressed with Google's ability to suggest apps tailored to my interests, something which Apple have been trying to do for years on the App Store with little success (remember <a href="http://appleinsider.com/articles/12/09/03/apple_turns_on_app_store_genius_recommendations_for_developers">Genius for Apps</a>?).</p>
<p>The home screen(s) is where Android differs significantly; I can put apps wherever I want, and have widgets all over the place. This is the biggest improvement using my phone day-to-day because if I only want four apps on the home screen, they don't have to be right at the top of the screen. The left-most home screen is Google Now which shows weather, news, and a host of other &quot;cards&quot; based on emails and apps I use (for example, it now shows me my eBay saved searches). It's supposed to show me delivery information based on my emails, but this <a href="http://www.droid-life.com/2015/07/06/gmail-google-now-package-tracking-card-is-showing-up-or-some-google-apps-users/">might be disabled for Google Apps accounts</a> so I don't get the benefit of this. I currently have two home screen; one with my most used apps and the <a href="https://pocketcasts.com">Pocketcasts</a> widget, and one with some lesser used apps and the <a href="https://spotify.com">Spotify</a> widget. Apps that aren't on either home screen can be accessed through search or from the app drawer.</p>
<p>Setting default apps is great (I swapped out the default SMS app for <a href="https://play.google.com/store/apps/details?id=com.textra&amp;hl=en_GB">Textra</a>) but the best part about setting defaults is opening specific type of links and files in specific apps. For example, all Twitter links open in Fenix and all Reddit links open in Relay. This is <em>so</em> much better than ending up on the mobile Twitter site when I have a perfectly good Twitter client installed. Talking of opening links, <a href="https://play.google.com/store/apps/details?id=com.linkbubble.playstore&amp;hl=en_GB">Link Bubble</a> is fantastic. When I click a link in Twitter, for example, it shows a floating bubble on my screen which will expand once the page has loaded. Being able to scroll through Twitter, open a bunch of links, and then review them all at once is amazing.</p>
<p><img alt="Default links and Link Bubble" src="http://rmlewisuk.s3.amazonaws.com/default-links-and-link-bubble.png" /></p>
<p>One of the things I thought I'd miss most is sending messages from my Mac through the Messages app. <a href="https://www.pushbullet.com/">Push Bullet</a> fixes this by allowing me to mirror all notifications to my Mac, send messages, send files between devices, and interact with the notifications just like I can on the phone. It also has a <a href="https://www.pushbullet.com/pro">bunch of other really useful features</a>. I was concerned that apps like this might massively affect battery life, but this hasn't been the case.</p>
<p>Something I wasn't able to work out was how to choose where to output audio when I'm connected to a Bluetooth device. On iOS, the &quot;AirPlay&quot; menu serves this function. I looked around for a solution to this but came up short so if anyone knows of an app that might fix this, let me know. Speaking of Bluetooth, unlike iOS, there is no way to see the battery life of Bluetooth devices like headphones. Although not a huge problem, it's frustrating that Android lacks this feature.</p>
<p>On iOS both the banking apps I used, HSBC and Lloyds, allowed me to use TouchID to login. On Android, this isn't the case, despite Android having support for such a system (PayPal use it). This, I assume, is because not all Android phones have fingerprint sensors so there's a smaller market for it. Again, not something I can't deal with, but a pain none the less.</p>
<p>I'd be remiss if I didn't mention the clusterfuck that is Amazon's presence on Android. I wanted to download the Amazon Video app but the Play Store said it wasn't compatible with my device, which seemed odd. When I asked <a href="https://danharper.me">Dan</a>, he informed me I should download it through the normal Amazon app. Except my Amazon app didn't have the option he showed me because I downloaded the Amazon app from the Play Store and not the <a href="https://www.amazon.co.uk/Amazon-com-Amazon-Underground/dp/B004GJDQT8">Amazon Underground</a> app which is a combination of the standard shopping app, plus an app store. To download the Underground app, I had to turn off the security setting to only allow apps from trusted sources. Then, and only then, was I able to download the Amazon Video app from inside <em>that</em> app. What.</p>
<p>I'm pretty happy with using Android. I don't do Real Work™ on my phone and mostly use it for Twitter, phone calls, and buying stuff on Amazon when I'm not at my Mac. Almost any problem or tweak I want to make I can through apps or widgets; Android definitely feels like it's geared more towards power users and people who want to tinker with settings or &quot;fix&quot; things but that's perfect for me.</p>
<p>Finally, because the Apple Watch doesn't work with Android, I'm getting rid of it. As I <a href="https://hellsite.rknight.me/783674253807845376">said on Twitter</a> the only thing I miss is not being able to quickly see the time so I'm currently eyeing up <a href="http://www.nixon.com/uk/en/sentry-leather-sw/A105SW.html?dwvar_A105SW_color=2244&amp;dwvar_A105SW_size=00#gclid=Cj0KEQjw1ee_BRD3hK6x993YzeoBEiQA5RH_BHLZjplqhtoBrlGuj7TgwFVJGVScjX9UVaU9d1tOVwgaAmee8P8HAQ&amp;start=1">one of these</a>.</p>
]]></content:encoded>
<pubDate>2016-10-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>Replacing Apps on Android</title>
<link>https://rknight.me/replacing-apps-on-android/</link>
<guid>https://rknight.me/replacing-apps-on-android/</guid>
<content:encoded><![CDATA[
<p><img alt="" src="http://rmlewisuk.s3.amazonaws.com/home-screen-tiles.png" /></p>
<p>If you follow me on Twitter, you probably already know I've ditched my iPhone in favour of a <a href="https://oneplus.net/uk/3">OnePlus 3</a>. The biggest hurdle to switching is the apps I used regularly (and some not-so-regularly). After <a href="http://rmlewisuk.s3.amazonaws.com/apps.md">making a list of apps I had installed</a> on my iPhone, I was able to filter it down to just two lists: ones with no equivalent, and ones I needed to find an Android alternative for. The three with no equivalent were:</p>
<ul>
<li>Apple Store</li>
<li>Blink</li>
<li>Plot</li>
</ul>
<p>None of these will make a massive difference to my life, but I will definitely miss <a href="http://squibner.com/blink/">Blink</a> and <a href="http://plotapp.io/">Plot</a>. The following apps are ones I need replacements for:</p>
<ul>
<li>Apple Notes</li>
<li><a href="https://geo.itunes.apple.com/gb/app/clear-tasks-reminders-to-do/id493136154?mt=8&amp;at=1001l3gY&amp;ct=twitter">Clear</a></li>
<li><a href="http://junecloud.com/support/deliveries-ios/">Deliveries</a></li>
<li><a href="http://www.dueapp.com/">Due</a></li>
<li><a href="https://flexibits.com/fantastical">Fantastical</a></li>
<li><a href="http://www.itvshowsapp.com/">iTV Shows</a></li>
<li><a href="https://itunes.apple.com/gb/app/narwhal-for-reddit/id845422455?mt=8">Narwhal</a></li>
<li><a href="https://overcast.fm">Overcast</a></li>
<li><a href="http://tapbots.com/tweetbot/">Tweetbot</a></li>
</ul>
<p>I haven't been able to find anything that is as easy for creating lists as Clear but <a href="https://keep.google.com">Google Keep</a>'s lists feature does the job reasonably well and also doubles as a good replacement for Apple's notes app.</p>
<p><img alt="Google Inbox' inline delivery information" src="http://rmlewisuk.s3.amazonaws.com/google-inbox-inline-delivery.jpg" /></p>
<p>I switched to <a href="https://inbox.google.com">Google Inbox</a> prior to buying the OnePlus and it manages to show delivery tracking inline with the email so I decided I didn't need Deliveries anymore. <a href="https://danharper.me">Dan</a> also told me Google Now should tell me about my deliveries based on my email, but I haven't seen that working yet. Google Now also has a reminders feature, which has mostly replaced Due.</p>
<p>The stock <a href="https://play.google.com/store/apps/details?id=com.google.android.calendar&amp;hl=en_GB">Google calendar</a> app and widget replaced Fantastical for what I needed with no problems.</p>
<p>Tweetbot is a solid app and I knew finding a decent alternative would be hard given Twitter's disdain for third party developers. <a href="https://play.google.com/store/apps/details?id=it.mvilla.android.fenix">Fenix for Twitter</a> has most of the features I want from a Twitter app, and the design is fantastic.</p>
<p><a href="https://play.google.com/store/apps/details?id=fema.serietv2">TV Series</a>, as of right now, seems like a pretty good app although I'll need a few more weeks to know if it works as well as iTV Shows which I was using on iOS. Overcast and Narwhal are both fantastic apps, but also reasonably easy to find quality Android equivalents. I replaced them with <a href="https://play.pocketcasts.com/web/podcasts/index">Pocketcasts</a> and <a href="https://play.google.com/store/apps/details?id=free.reddit.news&amp;hl=en_GB">Relay</a> respectively.</p>
<p>Overall, I'm really pleased so many of the apps I used have Android and iOS versions, because it made switching <em>much</em> easier. And, despite what some in the Apple community have you believe, the Android-only apps that I've tried are really great quality and on par with their iOS equivalents. And someone should show Apple how great installing apps from the Google Play site is, because it's a damn sight easier than opening iTunes.</p>
]]></content:encoded>
<pubDate>2016-10-06T00:00:00+00:00</pubDate>
</item>
<item>
<title>Amazon Echo Initial Thoughts</title>
<link>https://rknight.me/amazon-echo-initial-thoughts/</link>
<guid>https://rknight.me/amazon-echo-initial-thoughts/</guid>
<content:encoded><![CDATA[
<p>I have no self control so I bought an <a href="https://www.amazon.co.uk/Amazon-SK705DI-Echo-Black/dp/B01GAGVIE4/ref=sr_1_1?sr=8-1&amp;ie=UTF8&amp;keywords=echo&amp;qid=1475139825">Echo</a> while Amazon were offering £50 off for Prime members last week. Here's a brain dump of my initial thoughts on the device.</p>
<h3>Setup</h3>
<p>Setup is pretty easy using the <a href="https://geo.itunes.apple.com/us/app/amazon-alexa/id944011620?mt=8&amp;at=1001l3gY&amp;ct=twitter">Alexa app</a>. The Echo creates it's own wifi network which you need to connect to so you can choose your home wifi network. Once that's done, you can connect services and products like Spotify and Hue lights from within the app, as well as add additional &quot;skills&quot; (Skills are what Amazon call apps for the Echo).</p>
<h3>Spotify</h3>
<p><strong>Update</strong>: As <a href="https://www.reddit.com/r/amazonecho/comments/551frl/my_initial_thoughts_on_the_amazon_echo_uk/d88129p?context=3">/u/jennorocks pointed out</a>, if you say the word &quot;playlist&quot; when asking for a playlist, it works pretty well.</p>
<p>I linked my Spotify account in the Alexa app and once setup, I was able to do a two things with it: either tell Alexa to play music on Spotify (playlist, artist, album, genre) or start playing through <a href="https://www.spotify.com/us/connect/">Spotify Connect</a> which sees the Echo as a device from within the Spotify app. Getting Alexa to play one of my saved playlists was difficult as it seems to just search Spotify and play the first search result. For example, I have a playlist called &quot;90s Hits&quot; but it kept playing a similarly named playlist. I don't know if there's some trick to force it play my playlists, but I haven't found it yet.</p>
<h3>Bluetooth</h3>
<p>The Echo also functions as a bluetooth speaker. Saying &quot;Alexa, pair my device&quot; will turn on the Echo's discovery mode which I could then select from my phone's bluetooth settings. The Echo can then control my phone playback by asking Alexa to play or pause. If my phone is disconnected from the Echo (e.g. if I leave the house), when I come back I can say &quot;Alexa, connect to my phone&quot; and the Echo will reconnect.</p>
<h3>Everything else</h3>
<p>Alexa understood every command I gave her <a href="https://hellsite.rknight.me/781140637089423360">including when we played around with it in the office</a> and you can see a list of commands you've asked in the Alexa app, which has Google Now-style cards with extra information for some things like traffic, timers, or shopping lists.</p>
<p>I was looking forward to using <a href="https://ifttt.com">IFTTT</a> to automate some tasks such as moving my Alexa shopping list items to <a href="https://todoist.com">Todoist</a> but IFTTT doesn't currently support Echo in the UK which is disappointing, but IFTTT say they're working on it. Hopefully this will be fixed soon.</p>
<p>The Alexa app is pretty slow and janky (it's a web app in a wrapper) but it's only used for setup of the device, and adding new skills. You can access the &quot;app&quot; from <a href="http://alexa.amazon.com">alexa.amazon.com</a> as well if you prefer to setup from a browser.</p>
<p>I don't currently have any smart home devices so I wasn't able to try these features out, but given how well everything else works I'm sure this will work equally well. The Echo does feel like somewhat of a novelty right now, but it works as a Spotify device, bluetooth speaker, and for timers while I'm cooking so I'm pretty happy with it.</p>
]]></content:encoded>
<pubDate>2016-09-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>Saving Money on Lego in the UK</title>
<link>https://rknight.me/saving-money-on-lego-in-the-uk/</link>
<guid>https://rknight.me/saving-money-on-lego-in-the-uk/</guid>
<content:encoded><![CDATA[
<p>Although there always seems to be some great Lego bargains to be had in the US from the likes of Walmart and Target, the UK doesn't really have equivalent stores that do reductions like those stores do. But there are a number of ways to save significant money on Lego in the UK.</p>
<h3>Lego VIP Points</h3>
<p>Lego's <a href="http://shop.lego.com/en-GB/VIP">VIP points</a> is a points system where for every £1 you spend (either online or in an official Lego store) you get 1 point. When you have 100 points, you get £5 off a purchase. Usually twice a year (around March and September), Lego run a double points promotion, so for every pound, you get 2 points; these promotions are a good time (if you have the willpower to wait) to order larger, Lego-exclusive sets or place a large order. So depending on how and when you order, you can get 5%-10% back in money off of other purchases. Being a VIP member also allows you early-access to exclusive sets, normally a few weeks early.</p>
<p>Although VIP is an always-on promotion, I personally buy from Lego for two reasons:</p>
<ul>
<li>A double VIP points promotion is running</li>
<li>When a free gift with a purchase is being offered — if the free gift (normally a polybag) is difficult, or not available, elsewhere they tend to sell for between £10-£15 on eBay. Personally, I would rather buy extra Lego with that money and get the polybag free, rather than spending the money on the polybag on it's own.</li>
</ul>
<p>Disadvantages:</p>
<ul>
<li>Delivery times when buying online can be anywhere from a few days to nearly two weeks.</li>
<li>Discounts and sales are few and far between so saving money on a specific set can be difficult</li>
</ul>
<p><a href="http://shop.lego.com/en-GB/VIP/registration/index.jsp?joinow=true">Sign up to become a VIP member here</a></p>
<h3>Amazon, CamelCamelCamel and Brickset</h3>
<p>A significant portion of the Lego I buy comes from Amazon for one reason: discounts. Lego sets sold by Amazon <em>always</em> become discounted by at least 10%; with non-licensed themes like City or Friends, the discounts can go as high as 30%.</p>
<p>To guarantee I save money on Lego bought from Amazon, I do two things: add all the sets I want to a wish list (so I can manually check the prices every week) and install the <a href="https://chrome.google.com/webstore/detail/the-camelizer/ghnomdcacenbmilgjigehppbamfndblo?hl=en">CamelCamelCamel Chrome extension</a>. <a href="http://uk.camelcamelcamel.com/">CamelCamelCamel</a> (herein referred to as CCC) is a site that tracks prices on Amazon and can alert you when a product reaches a certain price.</p>
<p>To setup a price watch on Amazon, go to the product page and click the CCC button in the Chrome toolbar. This will show a price history graph for the product, and below that you can set a price that you want to be alerted at. CCC will send you an email when the product is available at that price.</p>
<p><img alt="" src="http://studshq.s3.amazonaws.com/camelcamelcamel.jpg" /></p>
<p>If you use Brickset's wanted sets functionality (<a href="https://rknight.me/posts/manage-your-lego-collection-with-brickset">read our guide to Brickset here</a>), visit their <a href="http://brickset.com/buy/amazon">Amazon shopper page</a>, check the &quot;Sets on my wanted list only&quot; checkbox and Brickset will show you the current Amazon price for sets from your wanted list.</p>
<p>Disadvantages:</p>
<ul>
<li>Amazon doesn't generally sell the Lego-exclusive sets (although sometimes third-parties sell them but they're usually above retail price)</li>
<li>If you don't subscribe to Amazon Prime, you have to pay postage for orders under £20.</li>
</ul>
<h3>Hot UK Deals and Retailer Promotions</h3>
<p>The <a href="http://www.hotukdeals.com/">Hot UK Deals</a> app allows you to setup notifications based on keywords. By setting &quot;Lego&quot; as one of your keywords, any time a deal is posted containing the word Lego, you'll get a notifications.</p>
<p>A lot of the UK supermarkets sell Lego, so when they get reduced, someone always posts it pretty quickly to Hot UK Deals. Something to look out for here is that some of the deals will be store specific so may not be applicable to you. However, when a retailer is doing 3 for 2 on Lego (like Tesco did recently), this can be a great time to save a significant amount of money on sets you want.</p>
<p>Disadvantages:</p>
<ul>
<li>Notifications can be hit or miss; there are a lot of deals on the Lego video games so those will show up as well.</li>
</ul>
<p><img alt="" src="http://studshq.s3.amazonaws.com/hot-uk-deals.png" /></p>
<h3>Flubit</h3>
<p><a href="https://flubit.com">Flubit</a> is a site that tries to get you a better price than Amazon are currently offering. You give them a link to a product on Amazon, and they come back with a better offer. Read their <a href="https://flubit.com/about#!/how-it-works">How it Works</a> page to find out more. I've only used Flubit once, but I saved 20% on a set that was full-price on Amazon.</p>
<p>Disadvantages:</p>
<ul>
<li>Your order could come from any retailer so delivery might not be very quick.</li>
</ul>
<h3>eBay: Sets with no minifigures</h3>
<p>If a set you want it out of your price range, you're not interested in the minifigures, or you particularly like a specific vehicle from a set, eBay can be a great place to pick these up. Lots of people buy sets, take out the minifgures, and then sell the sets on their without them. For example, I picked up <a href="https://www.reddit.com/r/lego/comments/38wvv6/i_wasnt_planning_on_getting_any_jurassic_world/">all these Jurassic World sets</a> with no figures/dinosaurs for £35. Even used for spares, this was a great price. Set up eBay saved searches for what you're looking for, be patient, and you can get some great deals.</p>
<h3>Individual Minifigures</h3>
<p>There are three places I buy individual minifigures:</p>
<ul>
<li><a href="http://www.theminifigurestore.co.uk?affiliates=18">The Minifigure Store</a>: Prices are competitive with Bricklink and they run money off promotions through their Twitter account on a regular basis.</li>
<li><a href="http://bricklink.com">Bricklink</a>: Bricklink is best place to pick up spare pieces as well as individual minifigures. If you're buying just one minifigure, the price with postage can be the same as the Minifigure store/eBay, but buying a few at a time can have some good savings. Read our <a href="http://guidetobricklink.com">Guide to Bricklink</a> to find out about buying from Bricklink.</li>
<li><a href="http://ebay.co.uk">eBay</a>: Prices are slightly higher than Bricklink, but most of the times postage is free and just-released minifigures are generally available within a few days.</li>
</ul>
<p>Disadvantages:</p>
<ul>
<li>For smaller sets, it can be more economical to just buy the complete set, even if you only want the minifigures</li>
</ul>
<h3>Collectible Series Minifigures</h3>
<p><a href="http://brickset.com/sets/theme-Collectable-Minifigures">Lego's collectible minifigures</a> are hugely popular but have one large disadvantage: they come in blind bags so unless you can get really good at feeling for a specific one (I'm terrible at it), you can end up with a lot of duplicates.</p>
<p>If you want individual minifigures from a series, see the advice above. But if, like me, you like to collect the whole series, I've found that by watching auctions on eBay, I can pick up a whole series for around £45 (I never pay more than £48), which works out at just under £3 a minifigure. The collectible minifigures are usually priced at £2.50 so this might not seem like a money-saving tip, but if you end up with more than two duplicates when trying to buy the blind bags, then this will save you money.</p>
<h3>Miscellaneous</h3>
<p>If there is a specific set you're looking for that is recently retired, or isn't discounted in the places listed above, these are the retailers I tend to look at:</p>
<ul>
<li><a href="http://www.debenhams.com/">Debenhams</a></li>
<li><a href="http://www.smythstoys.com/">Smyths</a></li>
<li><a href="http://www.toysrus.com/">Toys R Us</a></li>
<li><a href="http://www.johnlewis.com/">John Lewis</a></li>
<li><a href="https://www.ocado.com/">Ocado</a></li>
</ul>
<p>I've had some luck checking Tesco's reduced section (assuming your local Tesco sells Lego) where some store-specific reductions can happen on smaller Lego sets and Sainsbury's tend to reduce all their Lego once every 3 months or so as well.</p>
]]></content:encoded>
<pubDate>2016-03-31T00:00:00+00:00</pubDate>
</item>
<item>
<title>Convert LXF to Bricklink XML</title>
<link>https://rknight.me/convert-lxf-to-bricklink-xml/</link>
<guid>https://rknight.me/convert-lxf-to-bricklink-xml/</guid>
<content:encoded><![CDATA[
<p>When you've created a model in Lego Digital Designer, you likely want get those parts into a Bricklink wanted list so you can order them. Unfortunately, LDD doesn't have an option to export to the required <a href="http://www.bricklink.com/help.asp?helpID=207">Bricklink XML format</a>. Thankfully, <a href="http://rebrickable.com">Rebrickable</a> has the ability to convert an LDD model to Bricklink XML. You'll need a Rebrickable account to do this, so if you haven't got one yet, <a href="http://rebrickable.com/signup">register for one</a>, and sign in.</p>
<p>Once you're signed in, choose &quot;My Private MOCs&quot; from the account dropdown menu and click &quot;Add New Private MOC&quot;, give it a name, and then press &quot;Save Details&quot;. Below this you will see a number of import options, but for the purposes of this article, we'll be focusing only on the LXF import. Click &quot; Import from MPD/LDR/LXF file&quot;, choose your LXF file from your computer, and press &quot;import&quot;.</p>
<p><img alt="" src="http://studshq.s3.amazonaws.com/rebrickable-import.jpg" /></p>
<p>Rebrickable will then show all the parts from the model and indicate if any colours you've used don't exist. To fix any errornous colours, click on the part and choose a valid colour from the dropdown, and hit &quot;Save&quot;. This is also a good time to change the colour of any parts that Rebrickable marks as &quot;rare&quot; — you may want to switch to a more common colour to make it easier to buy.</p>
<p>Once you're happy with your part list, click &quot;Add to your Bricklink Wanted List&quot;. A window will popup allowing you to login to Bricklink. You can choose to add them to an existing list, or create a new one from this window. Once you click &quot;Add parts&quot;, a message will confirm that the parts have been added, and there will be a button to view your wanted list.</p>
<p><img alt="" src="http://studshq.s3.amazonaws.com/rebrickable-add-to-list.jpg" /></p>
<p>Want to learn more about buying on Bricklink? Check out my in-depth guide at <a href="http://guidetobricklink.com">GuideToBricklink.com</a>.</p>
<hr />
<p><strong>Update: When this post was written, I didn't realise Rebrickable had a feature to automatically add parts to a Bricklink wanted list.</strong></p>
<p><s>Once you're happy with your part list, click &quot;Export to Bricklink (XML)&quot; and your parts list will be downloaded in the correct format to import into Bricklink.</s></p>
<p>If you want to upload the parts list to a specific wanted list on Bricklink, you will need to edit the XML file in a text editor (I recommend <a href="https://www.sublimetext.com/">Sublime Text</a>). You'll need to add <code>&lt;WANTEDLISTID&gt;12345&lt;/WANTEDLISTID&gt;</code> to every part in the XML file, where <code>12345</code> refers to your Bricklink wanted list ID.</p>
<p>Once all that is done, you can <a href="http://www.bricklink.com/wantedXML.asp">upload it to Bricklink</a>.</p>
]]></content:encoded>
<pubDate>2016-03-22T00:00:00+00:00</pubDate>
</item>
<item>
<title>Third Party Apple Watch Bands Review</title>
<link>https://rknight.me/third-party-apple-watch-bands/</link>
<guid>https://rknight.me/third-party-apple-watch-bands/</guid>
<content:encoded><![CDATA[
<p><img alt="" src="http://rmlewisuk.s3.amazonaws.com/apple-watch-bands.jpg" /></p>
<p>When I first saw the <a href="http://www.apple.com/pr/library/2015/09/09Apple-and-Herm-s-Unveil-the-Apple-Watch-Herm-s-Collection.html">Hermès Cuff for Apple Watch</a> I thought it looked like a great watch band but also knew that there was no way I was going to pay upwards of a thousand pounds for one. So I kept an eye on eBay, looking for third party manufacturers making similar bands. These became available for purchase about a month after the announcement so I decided to order one. The seller also had some other copies of Apple's bands and I ordered a blue sport band, a black Milanese loop, as well as a pair of black adaptors to better match my space grey sport watch.</p>
<h3>Leather Cuff (£20)</h3>
<p><a href="http://www.ebay.co.uk/itm/301765700770?_trksid=p2057872.m2749.l2649&amp;var=600584661853&amp;ssPageName=STRK%3AMEBIDX%3AIT">eBay link</a></p>
<p>I haven't seen the Hermès band in real life so I can only compare against photos but this band is more or less identical in design to the Hermès version. But as you might imagine, it feels cheap. The leather is pretty thin, not particularly soft, and it's generally uncomfortable to wear. The buckle feels like a toy from a Christmas cracker. There are some third party version that are around the £100 mark that would likely not have these issues but something I did notice whilst wearing the band, is that because of the way the band is designed my Apple Watch sits significantly higher on my wrist then when I using a sport band. I found this to be annoying and it's possible that the Hermès version has the same problem.</p>
<h3>Black Milanese (£20)</h3>
<p><a href="http://www.ebay.co.uk/itm/301743856877?_trksid=p2057872.m2749.l2649&amp;var=600570788016&amp;ssPageName=STRK%3AMEBIDX%3AIT">eBay link</a></p>
<p>Apple only makes the Milanese loop milanese loop in one colour, so for someone like me with the space grey watch, my only option for a milanese loop is third party. The band I ordered is comfortable, but it <em>does</em> feel like it costs. There are some more expensive options available but I can't speak for how these compare to this one. The magnet is strong, but the materials used for the band itself just aren't that great and can get uncomfortable with continued use.</p>
<h3>Blue Sport Band (£5)</h3>
<p><a href="http://www.ebay.co.uk/itm/301743860511?_trksid=p2057872.m2749.l2649&amp;var=600570790558&amp;ssPageName=STRK%3AMEBIDX%3AIT">eBay link</a></p>
<p>After trying the leather cuff and seeing how cheap it felt, I was surprised to find that the sport band from the same seller felt great. The design is identical in every way to the official version and feels more or less the same when wearing it. The only noticeable difference between this one and the Apple version is that Apple's feels a little bit thicker and sturdier. The band doesn't fit quite as snugly is the slots as it's official counterpart, but it's still feels sturdy. It's just as comfy as Apple's and at £5, it's a bargain.</p>
<p>These bands are fine if you want something that's not a sport band and aren't willing to spend out the money for the offical onces but overall, you get what you pay for. I think, as usual, <a href="http://www.relay.fm/upgrade/56">Myke was right</a>. I'm going to stick to sport bands for the forseeable future. They're much more comfortable to wear for an extended period and that's more important to me than anything else.</p>
]]></content:encoded>
<pubDate>2015-11-16T00:00:00+00:00</pubDate>
</item>
<item>
<title>Game Controller Double Standards</title>
<link>https://rknight.me/game-controller-double-standards/</link>
<guid>https://rknight.me/game-controller-double-standards/</guid>
<content:encoded><![CDATA[
<p>The new Apple TV supports game controllers which is great. What's not so great is the fact that developers can't require them. By not allowing developers to require a game controller, what Apple have done is limited the platform and the games produced for it. I bought a <a href="http://www.apple.com/uk/shop/product/HJ162ZM/A/steelseries-nimbus-wireless-gaming-controller">Nimbus controller</a> so I could play games like <a href="https://itunes.apple.com/nz/app/rayman-adventures./id973020044?mt=8&amp;at=1001l3gY&amp;ct=twitter">Rayman Adventures</a> and <a href="https://itunes.apple.com/gb/app/asphalt-8-airborne/id610391947?mt=8&amp;at=1001l3gY&amp;ct=twitter">Asphalt 8</a> but I only ever use 1 or 2 buttons on the controller in any given game. It's unreasonable to expect developers to have one set of controls for the Siri remote and another for a controller, without changing the game significantly to support this.</p>
<p>Guitar Hero, however, is allowed to require a controller but not a standard MFi controller; Guitar Hero requires a purpose-built controller that presumably won't be able to be used for other games on Apple TV (except more Guitar Hero games). This kind of double standard is frustrating for both developers and owners of the Apple TV and I hope Apple decide to reverse their decision on not requiring game controllers soon.</p>
]]></content:encoded>
<pubDate>2015-11-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>Tips for Apple TV App Developers</title>
<link>https://rknight.me/tips-for-apple-tv-app-developers/</link>
<guid>https://rknight.me/tips-for-apple-tv-app-developers/</guid>
<content:encoded><![CDATA[
<p>Since the Apple TV got released I have been running <a href="http://atvapps.net">Apple TV Apps</a>, a blog and Twitter account showcasing the best Apple TV apps available. With discoverability being sub-par compared to the iOS app store, the site has been moderately successful and I've been contacted by a number of developers with iTunes links to their apps asking me to feature them, but there's a problem. Those links don't go anywhere; no web previews, no way to view these apps in iTunes.</p>
<p><img alt="Connecting to iTunes" src="http://rmlewisuk.s3.amazonaws.com/connecting-to-itunes.png" /></p>
<p>Graham Spencer summed up what is needed from developers really well:</p>
<blockquote>
<p>Apple TV developers, <em>please</em> make sure you have a landing page with screenshots, info, price and press kit!</p>
</blockquote>
<p>The page doesn't have to be the most beautiful website in the world but the information needs to be available if you expect your app to be featured anywhere. There are a number of options to get a simple website up and running with very little effort.</p>
<h3>Free options</h3>
<ul>
<li><a href="https://wordpress.com/">Wordpress</a></li>
<li><a href="http://tumblr.com">Tumblr</a></li>
</ul>
<p>Although Wordpress and Tumblr are both blogging platforms, they can be used as landing pages with a little bit of tweaking in the settings.</p>
<ul>
<li><a href="https://pages.github.com/">GitHub Pages</a> - If you know some HTML and CSS, you can get a GitHub pages site up in a matter of minutes.</li>
</ul>
<h3>Paid options</h3>
<ul>
<li><a href="http://squarespace.com/coverpage">Squarespace</a> - Their cover page starts at just $5 a month and is perfect for an app landing page.</li>
<li>Roll your own - If you're comfortable with setting everything up yourself, you can build and host your own website. <a href="https://hover.com/scHIv4WR">Hover</a> is a great option for domains and <a href="https://www.digitalocean.com/?refcode=8e1d8283bd20">Digital Ocean</a> offer one-click installs for loads of web applications like Wordpress and <a href="https://ghost.org/">Ghost</a>.</li>
</ul>
<h3>Checklist</h3>
<p>At a minimum, you should have:</p>
<ul>
<li>A few screenshots of the various parts of your apps (ideally the same ones featured in the store)</li>
<li>A description of your app (again, the same description as you have in the app store is ideal)</li>
<li>The price — this is a more difficult one because of pricing in different countries, but put the price in at least one currency.</li>
</ul>
<p>Some other things that will help market your app:</p>
<ul>
<li>A video of your app. This is useful for helping people decide whether they want to but your app or not.</li>
<li>A press kit. This is normally a zip file which includes all the the above information (screenshots, description, video) as well as your app icon and any other marketing materials you might have.</li>
</ul>
<p>For an example that fits all of these criteria, check out the <a href="http://almostimpossible.co/">landing page for Almost Impossible!</a>.</p>
<p><img alt="Almost Impossible Landing Page" src="http://rmlewisuk.s3.amazonaws.com/almost-impossible.png" /></p>
<p>Until Apple allows web previews for Apple TV apps, your goal should be to replicate all of the information you have in the app store. If you at least some of the above, your app is much more likely to be featured and also it will help customers decide if they want to buy your app.</p>
]]></content:encoded>
<pubDate>2015-11-09T00:00:00+00:00</pubDate>
</item>
<item>
<title>The Best Apple TV Apps</title>
<link>https://rknight.me/the-best-apple-tv-apps/</link>
<guid>https://rknight.me/the-best-apple-tv-apps/</guid>
<content:encoded><![CDATA[
<p>I've started a new blog to highlight some the best and most interesting Apple TV apps available. If you're interested you can <a href="http://twitter.com/_atvapps">follow @_atvapps on Twitter</a> or check out the blog at <a href="http://atvapps.net">http://atvapps.net</a>.</p>
]]></content:encoded>
<pubDate>2015-10-28T00:00:00+00:00</pubDate>
</item>
<item>
<title>My Home Screen (September 2015)</title>
<link>https://rknight.me/homescreen-september-2015/</link>
<guid>https://rknight.me/homescreen-september-2015/</guid>
<content:encoded><![CDATA[
<p><em>My iPhone home screen as of September 2015. This post originally appeared in the <a href="https://www.macstories.net/club/">MacStories newsletter (now Club MacStories)</a>.</em></p>
<p><a href="http://rmlewisuk.s3.amazonaws.com/homescreen-september-2015.jpg" target="_blank"><img height="auto" src="http://rmlewisuk.s3.amazonaws.com/homescreen-september-2015.jpg" style="float: left; padding: 10px;" width="250" /></a></p>
<p>I like to try and keep all of my apps on one page, hence the large number of folders. In the fight between quick access to apps and tidiness, tidiness always wins. Having said that, I do still like to keep my most used apps one tap away. The empty bottom row is used primarly for apps that I'm trying out which, at the moment, happens to be <a href="https://itunes.apple.com/gb/app/bf-news/id981609476?mt=8&amp;at=1001l3gY&amp;ct=blog">BuzzFeed News</a>.</p>
<p>Because I only have one screen of apps, my dock is less important than if I had multiple pages. I have always kept phone and Safari in those spots and as I've added more messaging apps (<a href="https://itunes.apple.com/us/app/facebook/id284882215?mt=8&amp;at=1001l3gY&amp;ct=blog">Facebook</a>, <a href="https://itunes.apple.com/us/app/slack-team-communication/id618783545?mt=8&amp;at=1001l3gY&amp;ct=blog">Slack</a>, <a href="https://itunes.apple.com/us/app/snapchat/id447188370?mt=8&amp;at=1001l3gY&amp;ct=blog">Snapchat</a>) the Messages app has been replaced by a folder to contain them all. Similarly, because I switch between listening to podcasts in <a href="https://itunes.apple.com/us/app/overcast-podcast-player/id888422857?mt=8&amp;at=1001l3gY&amp;ct=blog">Overcast</a> and music, all media-related apps go into the media folder in the dock.</p>
<p>The app I use the most is definitely <a href="https://itunes.apple.com/us/app/tweetbot-3-for-twitter.-elegant/id722294701?mt=8&amp;at=1001l3gY&amp;ct=blog">Tweetbot</a>; I spend a lot of time on Twitter so I need to be able to get to it quickly. I also regulary catch on a number of subreddits and <a href="https://itunes.apple.com/us/app/narwhal-for-reddit/id845422455?mt=8&amp;at=1001l3gY&amp;ct=blog">Narwhal</a> is easily the best Reddit client I've found as the official one is far too confusing. <a href="https://itunes.apple.com/us/app/clear-tasks-reminders-to-do/id493136154?mt=8&amp;at=1001l3gY&amp;ct=blog">Clear</a> and <a href="https://itunes.apple.com/us/app/fantastical-2-for-iphone-calendar/id718043190?mt=8&amp;at=1001l3gY&amp;ct=blog">Fantastical</a> are the best apps in their respective categories and I wouldn't even considering removing them from the home screen. Although I don't use it as much as Tweetbot or Narwhal, <a href="https://itunes.apple.com/us/app/plot-discover-track-movies/id922985808?mt=8&amp;at=1001l3gY&amp;ct=blog">Plot</a> is a fantastic app for keeping track of movies I want to watch and ones that I have watched.</p>
<p><a href="https://simplecast.fm">Simplecast</a> is a saved web site and not a native application, but I like to check up on the download numbers for <a href="http://ruminatepodcast.com">my podcast</a> so that earns a spot on my home screen. Some of the other apps that are hidden away that I use regularly include <a href="https://itunes.apple.com/us/app/due-reminders-countdown-timers/id390017969?mt=8&amp;at=1001l3gY&amp;ct=blog">Due</a>, a simple but really powerful reminders app, <a href="https://itunes.apple.com/us/app/blink-better-affiliate-links/id946766863?mt=8&amp;at=1001l3gY&amp;ct=blog">Blink</a> for generating iTunes affiliate links and <a href="https://itunes.apple.com/us/app/deliveries-a-package-tracker/id290986013?mt=8&amp;at=1001l3gY&amp;ct=blog">Deliveries</a> for tracking parcels.</p>
<p>The background is a Star-Lord wallpaper (that I also use <a href="https://hellsite.rknight.me/635851605364051968">on my desktop</a>) and you can <a href="http://justinmaller.com/project/helmetica/">download it here</a>.</p>
]]></content:encoded>
<pubDate>2015-09-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>Ruminate Podcast</title>
<link>https://rknight.me/ruminate-podcast/</link>
<guid>https://rknight.me/ruminate-podcast/</guid>
<content:encoded><![CDATA[
<p><a href="https://johnvoorhees.co/">John Voorhees</a> and I decided to have a go at creating out own podcast. The current description of the show is:</p>
<blockquote>
<p>A podcast about the opportunities and challenges that technology presents us with every day</p>
</blockquote>
<p>This might change in the future (podcasts are harder than they seem) but for now we'll be talking about how technology helps solve problems, as well as some non-tech related topics like terrible food, and why you would save a pair of shoes for 10 years.</p>
<p>~You can subscribe and listen to the first episode at <a href="http://ruminatepodcast.com/1">http://ruminatepodcast.com/1</a> and follow us <s>on Twitter</s> on <a href="https://social.lol/@ruminate">Mastodon</a>.</p>
]]></content:encoded>
<pubDate>2015-08-24T00:00:00+00:00</pubDate>
</item>
<item>
<title>Manage Your LEGO Collection with Brickset</title>
<link>https://rknight.me/manage-your-lego-collection-with-brickset/</link>
<guid>https://rknight.me/manage-your-lego-collection-with-brickset/</guid>
<content:encoded><![CDATA[
<p><a href="http://brickset.com/">Brickset</a>, as well as being a great source for LEGO news and reviews, is a also an excellent service for keeping a list of all the sets and minifigures that you own. Brickset also has some more advanced features for marking sets that you own without minifigures and custom flags to make managing your collection even easier. Once you've set up your collection, you can also share it publicly if you desire. For example, <a href="http://brickset.com/sets/ownedby-rmlewisuk">here is my collection</a>. If you haven't already, <a href="http://brickset.com/signup">signup for a Brickset account</a>.</p>
<h2>Sets</h2>
<p>There are a number of different ways you can search for sets to add them to your collection: by set number, by set name or by tag. To add a set to your collection, type the set name or number into the search box and once you've found the set you want to add, simply check the &quot;I own&quot; checkbox and it will be added to your collection. A large number of sets on Brickset are also tagged to make searching for a set easier; if you type <code>Emmet</code> into the search box you will see <code>Emmet Brickowski [Tag]</code> as one of the suggestions. Selecting this option will show you <a href="http://brickset.com/sets/tag-Emmet-Brickowski">all sets that contain an Emmet minifigure</a>. You can then view a list of all the sets you by selecting <code>Sets you own</code> from the <code>My sets</code> menu. You can also set up a wanted list of sets by checking the <code>I want</code> checkbox: your wanted list can be found by selecting <code>Sets you want</code> from the <code>My sets</code> menu.</p>
<p><a href="http://studshq.s3.amazonaws.com/brickset-search.png"><img alt="brickset-search.png" src="http://studshq.s3.amazonaws.com/brickset-search.png" /></a></p>
<p>Once you've added a set, you will also be able to view a list of all the minifigures you own by going to <a href="http://brickset.com/minifigs/mycollection-owned">brickset.com/minifigs/mycollection-owned</a>. Brickset will automatically work out which minifigures you have based on the sets you own. However, if you're like me, you may on occasion buy a set without the minifigures and Brickset has a feature to cope with this: flags.</p>
<h3>Custom Flags and No Minifigures</h3>
<p>Flags are a way for you to add extra metadata to the sets you own. To set up flags, go to <a href="http://brickset.com/mycollection">brickset.com/mycollection</a> and select <code>Set up flags</code>. Brickset allows you up to four custom flags: I have a <code>Bricklinked</code> flag for noting when I bought the parts of a set from <a href="https://www.bricklink.com/">Bricklink</a>, a <code>To build</code> flag to note when I haven't yet opened a set and a <code>Maybe</code> flag to use in conjunction with my wanted list. The blue flag has an extra checkbox to make the flag indicate that you don't own the minifigures for a set. By using this flag, Brickset will not show that you own the minifigures from any set with this flag applied.</p>
<p><a href="http://studshq.s3.amazonaws.com/brickset-flags.png"><img alt="brickset-flags.png" src="http://studshq.s3.amazonaws.com/brickset-flags.png" /></a></p>
<h2>Loose Minifigures</h2>
<p>If you have purchased a minifigure individually, there are two ways you can add this to your minifigures collection. The first is to find the set the minifigure comes from, select the <code>minifigures</code> tab from the set page, and check the <code>I own</code> checkbox. These will be added to your minifigure collection. The second method is to search by the name of the minifigure: simply change the search dropdown to <code>minifigs</code>. Once you have found the minifigure you want to add to your collection, simple check the  <code>I own</code> checkbox.</p>
<h2>Custom lists</h2>
<p>Once you've set up your collection, you can filter by theme, year and sort it by various different methods (e.g. number of pieces). This is great for sets that are directly linked together by something official like a theme, but if you want to create a custom list  of sets, or BrickLists as Brickset calls them, you can. For example, I've made <a href="http://brickset.com/sets/list-12524">a list of the sets given away with the Daily Mail last year</a> for my own reference. To create a new BrickList, select <code>BrickLists</code> from <code>My Menu</code> and then select <code> Create new BrickList</code>. Give your list a title and description and then you can start adding sets to it. You can choose to make it public or keep it private.</p>
<h2>Find out if you own a specific part</h2>
<p>As an additional bonus of having catalogued your collection, if you are looking for a specific part, Brickset will tell you which sets that you own contain that part you are looking for. Change the search dropdown to <code>part</code>, find the part you want to find, choose a colour and then select <code>View sets in your collection that contain this part</code>.</p>
<h2>Collection Summary</h2>
<p>Now you've added all your sets and minifigures, you can view your collection summary by selecting <code>Collection summary</code> from the <code>My Sets</code> menu. This summary will show you, by theme, the total cost of the sets you own, the total numbers of sets in a theme and how many of them you own as well as a number of other data points. Fair warning: if you don't want to know how much you've spent on LEGO, avoid this page.</p>
]]></content:encoded>
<pubDate>2015-04-16T00:00:00+00:00</pubDate>
</item>
<item>
<title>Simple Git Deploy</title>
<link>https://rknight.me/simple-git-deploy/</link>
<guid>https://rknight.me/simple-git-deploy/</guid>
<content:encoded><![CDATA[
<p>This is a simple way to deploy to a remote server, more for my reference than anything else.</p>
<p>Create a new folder on the server and initialise a bare git repository in it.</p>
<pre><code>mkdir /root/repos/project-name
cd /root/repos/project-name
git init --bare
</code></pre>
<p>Create a post-receive hook (<code>nano /hooks/post-receive</code>) with this as the contents:</p>
<pre><code>#!/bin/sh
REPO=/root/repos/project-name
TMP_GIT_CLONE=/tmp/project-name
PUBLIC_DIR=/var/www/project-name

git clone $REPO $TMP_GIT_CLONE
cp -rp $TMP_GIT_CLONE/* $PUBLIC_DIR
rm -rf $TMP_GIT_CLONE
</code></pre>
<p>Make sure to create the public directory if it doesn't already exist. Then add the remote to your local repo.</p>
<pre><code>git remote add live ssh@server:/root/repos/project-name
</code></pre>
]]></content:encoded>
<pubDate>2015-03-29T00:00:00+00:00</pubDate>
</item>
<item>
<title>Remove Laravel Homestead Environment Variables</title>
<link>https://rknight.me/remove-homestead-environment-variables/</link>
<guid>https://rknight.me/remove-homestead-environment-variables/</guid>
<content:encoded><![CDATA[
<p>When you add environment variables to Laravel homestead, they get added so you can access them within your applications. The problem is, if you delete a varaible from your <code>homestead.yaml</code> file, it doesn't get deleted within Homestead. If you need to remove them, you can delete them from <code>php-fpm.conf</code> located at <code>/etc/php5/fpm/php-fpm.conf</code>.</p>
]]></content:encoded>
<pubDate>2015-03-27T00:00:00+00:00</pubDate>
</item>
<item>
<title>Stig Quote Generator</title>
<link>https://rknight.me/stig-quote-generator/</link>
<guid>https://rknight.me/stig-quote-generator/</guid>
<content:encoded><![CDATA[
<p>This morning, I was watching Top Gear and decided it would be fun to create the <a href="http://code.robblewis.me/stig-quotes/">Stig quote generator</a>. I grabbed all the &quot;some say&quot; quotes from the <a href="http://en.wikiquote.org/wiki/Top_Gear">Top Gear Wikiquote</a> page and split them into two parts (the &quot;some say&quot; part and the &quot;and that&quot; parts). The generator then grabs two of them at random, one of each type, and joins them together. Example:</p>
<blockquote>
<p>Some say that his heart is in upside down, and that if he felt like it he could fire Alan Sugar.</p>
</blockquote>
<p>The <a href="https://github.com/rmlewisuk/stig-quotes">code is on GitHub</a> if that's your thing.</p>
]]></content:encoded>
<pubDate>2015-03-26T00:00:00+00:00</pubDate>
</item>
<item>
<title>UltraViolet: Everything is Not Awesome</title>
<link>https://rknight.me/ultraviolet/</link>
<guid>https://rknight.me/ultraviolet/</guid>
<content:encoded><![CDATA[
<p>Joe Steel <a href="http://joe-steel.com/2015-02-20-Discs-not-Included.html">wrote about digital content</a> following an interview with a Kevin Tsujihara, CEO of Warner Bros. Entertainment:</p>
<blockquote>
<p>Incredibly, he highlights that they’re still trying to push hard on UltraViolet. Consumers have roundly rejected this as any kind of solution. Disney, Google, and Apple won’t participate — but sure, let’s prop this sucker up, Weekend at Bernie’s style! It is a farce of a system that has wronged many that dare to use it.</p>
</blockquote>
<p>Joe and Dan also spoke about how bad UltraViolet is on <a href="http://defocused.co/defocused/ep-36-youre-a-soldier-arry.html">this week's Defocused</a> so I thought I would take the oppurtunity to get an UltraViolet copy of The Lego Movie that came with the blu ray I bought. The UltraViolet slip in the blu ray suggests to &quot;instantly stream or download&quot; it takes &quot;3 easy steps&quot;.</p>
<ol>
<li>Go to <a href="http://flixter.com/getuv">http://flixter.com/getuv</a></li>
<li>Enter the code</li>
<li>Follow the instructions</li>
</ol>
<p>Step one and two went smoothly. The page at stage two noted that the UltraViolet download is for the &quot;cinema version&quot; only although it wasn't clear if the blu ray version was different. I was informed I would have to create <em>two</em> accounts, Flixter and UltraViolet. These are for &quot;<em>storing your film and TV collection in the cloud</em>&quot; and to &quot;<em>stream and download your UltraViolet Digital Collection to your favourite compatible screens</em>&quot; respectively.</p>
<p>Signing up for a Flixter account requires a name, email addrees and date of birth; this data can be used for the UltraViolet account as well, which is convenient. Alternatively, you can login with Facebook which asks for access to your profile, friends list and email address, or Google Plus which requests access to a list of all the people in your circles. To finalise the account(s) creation, the terms and conditions that you must agree to state (emphasis mine):</p>
<blockquote>
<p>I accept UltraViolet's Terms of Use and Privacy Policy; agree to allow Flixster to link to my UltraViolet account and allow me to manage it through Flixster; and <strong>request that Flixster and Warner Bros. send me offers</strong> and make product recommendations and use my UltraViolet account information for such purposes.</p>
</blockquote>
<p>On submission an error told me &quot;<em>The UV username is not valid.</em>&quot;. I subsequently received an email asking me to confirm my Flixter account. Ignoring the error, I confirmed the account and was prompted to link my UltraViolet account, which I'm pretty sure didn't exist. It didn't.&quot;<em>Your connection to UltraViolet needs to be reset. Please click here to resolve this issue.</em>&quot; Flixter told me. The same UltraViolet linking page was presented with no way to sign up for a new account so I Googled for the <a href="https://www.uvvu.com/signup">sign up page</a> and filled in the form. Success. Back to Flixter to link my brand new UltraViolet account, which worked this time and then redirected back to Flixter where I can finally view my collection. Of no movies. Nothing there. The code I originally entered hadn't worked so I selected &quot;redeem&quot; from the main menu.</p>
<p>Redemption of a code on Flixter requires searching for the movie in their database rather than just entering the code directly. Then back to the UltraViolet site to enter the code again. After a few minutes of &quot;updating my collection&quot; I finally had the Lego Movie available to watch in my collection.</p>
<p>This whole process took me about 40 minutes for &quot;3 easy steps&quot;. Everything is not awesome, Mr. Tsujihara. Not even close.</p>
]]></content:encoded>
<pubDate>2015-02-20T00:00:00+00:00</pubDate>
</item>
<item>
<title>Fix Gmail SMTP Offline Error in Yosemite Mail</title>
<link>https://rknight.me/fix-gmail-offline-os-x-yosemite-mail/</link>
<guid>https://rknight.me/fix-gmail-offline-os-x-yosemite-mail/</guid>
<content:encoded><![CDATA[
<p>Yosemite Mail will sometimes show Gmail outgoing mail as being offline when you first setup a Gmail account. To fix this open up Mail and do the following steps:</p>
<ol>
<li>Open preferences and go to Accounts.</li>
<li>Select &quot;Edit SMTP Server List&quot; from the &quot;Outgoing Mail Server Dropdown&quot;.</li>
<li>Select &quot;Advanced&quot; and put your account password in the password input.</li>
<li>Voila, all fixed.</li>
</ol>
<p>For some reason, Mail doesn't always save the password here on setup, so these are steps required to fix it.</p>
]]></content:encoded>
<pubDate>2014-10-17T00:00:00+00:00</pubDate>
</item>
<item>
<title>Apple Privacy Statement</title>
<link>https://rknight.me/apple-privacy-statement/</link>
<guid>https://rknight.me/apple-privacy-statement/</guid>
<content:encoded><![CDATA[
<p><a href="http://www.apple.com/privacy/government-information-requests/">Apple:</a></p>
<blockquote>
<p>On devices running iOS 8, your personal data such as photos, messages (including attachments), email, contacts, call history, iTunes content, notes, and reminders is placed under the protection of your passcode. Unlike our competitors, Apple cannot bypass your passcode and therefore cannot access this data. So it's not technically feasible for us to respond to government warrants for the extraction of this data from devices in their possession running iOS 8.</p>
</blockquote>
<p>This is excellent news.</p>
]]></content:encoded>
<pubDate>2014-09-18T00:00:00+00:00</pubDate>
</item>
<item>
<title>Relay FM</title>
<link>https://rknight.me/relay-fm/</link>
<guid>https://rknight.me/relay-fm/</guid>
<content:encoded><![CDATA[
<p><a href="http://relay.fm">Myke and Stephen</a>:</p>
<blockquote>
<p>Relay FM is our new home on the Internet, and where you can find all of our podcasts. The shows you have known and loved for years are being rebooted as part of the new network. Everything we have done so far in our podcasting careers has led us here, and we're pouring all of our love, knowledge and attention into this thing.</p>
</blockquote>
<p>I've already listened to the <a href="http://relay.fm/analogue/1">first episode of Analog(ue)</a> and <a href="http://relay.fm/inquisitive/1">Inquisitive</a> and, as with everything Myke produces, they are fantastic. I wish him, Stephen and all the other hosts the best of luck.</p>
]]></content:encoded>
<pubDate>2014-08-18T00:00:00+00:00</pubDate>
</item>
<item>
<title>Bionic</title>
<link>https://rknight.me/bionic/</link>
<guid>https://rknight.me/bionic/</guid>
<content:encoded><![CDATA[
<div style="text-align: center;">
<p>Things Are Happening,<br />
Is This The End?,<br />
It's What Panda's Must Feel Like,<br />
All The Time.</p>
<p>Stop Belling Yourself,<br />
What's The Point,<br />
Do You Remember Rogif Moore?,<br />
Too Sad.</p>
<p>World's Latest Podcast,<br />
Our Non-Specific Internet Phone Calls​,<br />
To Our Child Bionique,<br />
The Magnificent Meese​.</p>
<p>You, I and Our Love Child,<br />
I Put A Bell On The End,<br />
Not Even a Full Ding,<br />
I've Got To Get It All In.</p>
<p>I Want To Sell You Clothes,<br />
Potential, That's What It's Loaded With​,<br />
It's A Team Effort, I'd Like to Say,<br />
Tinkerbell Button.</p>
<p>This Show Isn't About Ecosystems,<br />
One Star,<br />
It's Probably Swearing​,<br />
Fuck You, Everyone.</p>
<p>They Come In Sets of Two,<br />
Did It Hard and Fast,<br />
World's Greatest Finale,<br />
<a href="http://vlcnr.com">VLCNR forever</a>.</p>
</div>
]]></content:encoded>
<pubDate>2014-07-09T00:00:00+00:00</pubDate>
</item>
<item>
<title>How to Install iOS8 Beta Without a Developer Account</title>
<link>https://rknight.me/how-to-install-ios8-without-a-developer-account/</link>
<guid>https://rknight.me/how-to-install-ios8-without-a-developer-account/</guid>
<content:encoded><![CDATA[
<p>No no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no no.</p>
<p>If you're not a developer, this is not for you. If you do install it, don't go reviewing apps in the App Store because they don't work. Don't complain when shit breaks. Don't moan when the beta expires. Don't be surprised if your phone becomes unusable.</p>
<p>Just don't.</p>
]]></content:encoded>
<pubDate>2014-06-03T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on Google Chromecast</title>
<link>https://rknight.me/thoughts-on-chromecast/</link>
<guid>https://rknight.me/thoughts-on-chromecast/</guid>
<content:encoded><![CDATA[
<p>The Chromecast got released in the UK on Wednesday and I bought one, in the hopes it will be better than the plethora of other streaming devices I have (Apple TV, Google TV, Xbox 360, PS3). As a side note, the Google TV, specifically <a href="https://www.sony.co.uk/support/en/product/NSZ-GS7">this model</a> is the worst peice of equipment I've ever owned.</p>
<h3>Setup</h3>
<p>The Chromecast is really easy to setup; plug in the dongle into an HDMI port, plug in the power cable (either USB or mains) and turn your TV on. Then go to <a href="http://chromecast.com/setup">chromecast.com/setup</a> and follow the instructions. I set it up on my Mac so I can't vouch for the Windows setup, but I think it'd be pretty similar. Download and run the companion Mac app, setup your preferred wifi network, let any Chromecast updates run and you're good to go. None of the setup is done on the Chromecast itself, so there's no bullshit of trying to put in your wifi password with an on screen keyboard.</p>
<h3>Apps</h3>
<p>Google lists a number of apps <a href="http://chromecast.com/apps">on the Chromecast site</a> that have support for the Chromecast but the ones I am most interested in were BBC iPlayer, Netflix, Plex and YouTube.
If you've ever used AirPlay on an iOS device, using Chromecast is just as simple. In any supported app, select the &quot;cast button&quot;, choose your Chromecast from the list and the video will start playing through your TV.</p>
<p>YouTube, Netflix and BBC iPlayer were fairly straight forward and worked without a hitch. Plex required me to update the server on my Mac to the latest version (I hadn't updated it for over a year). You can also use the Chromecast within Chrome on the desktop by installing the <a href="https://chrome.google.com/webstore/detail/google-cast/boadgeojelhgndaghljhdicfkmllpafd">Chromecast extension</a>.</p>
<p>One of the biggest advantages of Chromecast over AirPlay to an Apple TV is the ability to leave the app your streaming from and do other things. When AirPlaying video, the app your streaming from has to be open the whole time, whereas the Chromecast loads the stream to the device itself, allowing you to check Twitter, Facebook or whatever else you want to do.</p>
<p>If you use any of the apps listed on the Chromecast site on a regular basis, for £30 you really can't go wrong.</p>
]]></content:encoded>
<pubDate>2014-03-21T00:00:00+00:00</pubDate>
</item>
<item>
<title>New York</title>
<link>https://rknight.me/new-york/</link>
<guid>https://rknight.me/new-york/</guid>
<content:encoded><![CDATA[
<p>I visited my friend over Christmas who is currently working in New York. I had an amazing time and I thought I would recommend some places I visited for anyone who is planning on visiting in the future, as well as to keep a record of what I got up to.</p>
<h3>Restaurants</h3>
<p>We ate at quite a few restaurants and these three are the ones I would recommend to anyone:</p>
<ul>
<li><a href="http://roguenyc.com">Rogue</a> - Rogue is a sports bar but the food is absolutely fantastic. As long as you can put up with all the sports (I counted seven simultaneous games on one occasion) being shown on their 14+ televisions, it's well worth a visit.</li>
<li><a href="http://www.rubytuesday.com/">Ruby Tuesday, Times Square</a> - Ruby Tuesday is exactly what you'd expect from an American restaurant; huge portions, lots of meat and amazing buffalo chicken.</li>
<li><a href="http://bellanapoli.com/">Bella Napoli, 7th Avenue</a> - An excellent Italian restaurant, great service and reasonably priced.</li>
</ul>
<h3>Attractions</h3>
<p>Ignoring the obvious, well-known attractions such as Times Square and the Empire State Building, <a href="http://thehighline.org">the High Line</a> was a personal highlight. The High Line is <em>&quot;a public park built on an historic freight rail line elevated above the streets on Manhattan’s West Side&quot;</em> and definitely makes a nice change of pace from barging past people on the streets. We took a ride on the <a href="http://www.circlelinedowntown.com/">Circleline Downtown Cruise</a> which gives great views of the Statue of Liberty, the Manhattan skyline as well as Ellis Island and Governor's Island. We also did a helicoptor tour which gave spectacular views, but it is a little on the pricy side (~£100 p/person for 15 minutes). And I turned into a little kid when I visited the <a href="http://www.nintendoworldstore.com/">Nintendo Store</a> at the Rockefeller Center.</p>
<h3>Photos</h3>
<p><a href="http://edpoole.me">Ed</a> was kind enough to lend me his Canon 650D to take photos which was an interesting experience. Apparently, a good camera <em>doesn't</em> make you a good photographer. I got used to it after a couple of days and managed to get a few nice photos which I have <a href="https://rmlewisuk.exposure.so/new-york-2013">posted on Exposure</a>.</p>
]]></content:encoded>
<pubDate>2014-01-05T00:00:00+00:00</pubDate>
</item>
<item>
<title>Create a Table in Markdown with No Headers</title>
<link>https://rknight.me/create-a-blank-no-header-markdown-table/</link>
<guid>https://rknight.me/create-a-blank-no-header-markdown-table/</guid>
<content:encoded><![CDATA[
<p>Whilst creating a document which requires me to put some data (which isn't in the slightest way tabular data) into a table, I wanted to create the table with no headers. However the way markdown works mean it requires you to set a header for it to create a table in the first place. By using the HTML non-breaking space entity it can be done:</p>
<pre class="language-markdown"><code class="language-markdown"><span class="token table"><span class="token table-header-row"><span class="token table-header important"><span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span> </span><span class="token punctuation">|</span><span class="token table-header important"> <span class="token entity named-entity" title="&nbsp;">&amp;nbsp;</span></span><br /></span><span class="token table-line"><span class="token punctuation">------</span> <span class="token punctuation">|</span> <span class="token punctuation">-----</span><br /></span><span class="token table-data-rows"><span class="token table-data">Stuff  </span><span class="token punctuation">|</span><span class="token table-data"> More things</span></span></span></code></pre>
<p>Simple.</p>
]]></content:encoded>
<pubDate>2013-11-12T00:00:00+00:00</pubDate>
</item>
<item>
<title>Parents: Take Some Fucking Responsibility</title>
<link>https://rknight.me/parents-take-some-responsibility/</link>
<guid>https://rknight.me/parents-take-some-responsibility/</guid>
<content:encoded><![CDATA[
<p>The <a href="http://www.telegraph.co.uk/technology/apple/10346236/Twins-rack-up-1000-iPad-bill-buying-virtual-pets.html">Telegraph reported this morning</a> that two six-year-olds racked up a £1000 bill through in app purchases because they knew their parents iTunes password. And of course the parents are placing the blame entirely on the developers of apps that include in-app purchases.</p>
<h3>Parental controls</h3>
<p>iOS has built in parental controls that allow for restrictions on downloading apps and when a password is required (either every 15 minutes, or always) among other settings. The problem is, there is no mention of these controls in the initial setup process, presumably to keep setup as simple as possible.</p>
<p>Parents may not be aware these settings exist and therefore just assume they can't restrict access to purchases or other features of the operating system. For reference, restrictions are in settings:</p>
<p>settings&gt;general&gt;restrictions</p>
<h3>The Blame Game</h3>
<p>The parents of the twins claim they knew the password for the account:</p>
<blockquote>
<p>...his children knew the password after using the iPad for schoolwork and games.</p>
</blockquote>
<p>&quot;Using the iPad for schoolwork&quot;? In what way would that involve needing the password for the iTunes account? So because they couldn't be bothered to check what their children were purchasing, they just gave them the password. Perhaps give them the pin number to your credit card so they can go and do their own shopping? They're six years old.</p>
<p>This is not the first time this has happened. Back in March an eight-year-old <a href="http://www.belfasttelegraph.co.uk/breakingnews/offbeat/boy-racks-up-a-1000-ipad-bill-29128775.html">spent £980 on The Simpsons: Tapped Out</a>. The parents responded by saying:</p>
<blockquote>
<p>I appreciate children are their target audience but it is not right and there needs to be specific controls in place to stop this from happening.</p>
</blockquote>
<p>Specific controls? Perhaps like the ones in settings?</p>
<p>In both cases, Apple refunded the money to the parents as a gesture of good will. Jim Darymple nails it in this peice entitled &quot;<a href="http://www.loopinsight.com/2013/03/05/its-not-apples-job-to-be-a-parent-to-your-kids/">It's not Apple's Job to be a parent to your kids</a>&quot;:</p>
<blockquote>
<p>The simple fact is, as parents, it’s up to us to monitor what our kids do with technology or any toy. If you choose not to use the included controls because they are a hassle, then that’s your choice. You made that decision.</p>
</blockquote>
<p>Parents: take some fucking responsibility, stop blaming everyone else and use some common sense instead of letting your kids do whatever the hell they want.</p>
]]></content:encoded>
<pubDate>2013-10-01T00:00:00+00:00</pubDate>
</item>
<item>
<title>Pub Hack #1</title>
<link>https://rknight.me/pub-hack-1/</link>
<guid>https://rknight.me/pub-hack-1/</guid>
<content:encoded><![CDATA[
<p>The first <a href="http://pubhack.co.uk">Pub Hack</a> took place yesterday. Jo and Lillian did an excellent job of organising everything including food, t-shirts, trophies as well as all the other behind-the-scenes stuff that needed doing.</p>
<p>The theme was &quot;post-apocolypse&quot; so pretty much everyone, including our team, took that to mean zombies. We wasted the first hour on an idea that we found had already been done and then got to work on &quot;<a href="http://blownover.meteor.com">Has It Blown Over Yet?</a>&quot;. Blown Over takes inspiration from <a href="http://uksnowmap.com">UK Snow Map</a>, and Shaun of the Dead, and allows people to report a zombie attack on Twitter (using the hashtag #pompeyzombie) or on the website. And of course it will show you pubs close to your location to wait for this to all blow over.</p>
<p>We only had 10 hours to build it so the Twitter integration is a little bit buggy and the map pins just keep building up forever. But overall I'm really happy with what we built.</p>
<p>There were some excellent entries including &quot;Apocalhipster&quot; which used an iPhone accelarometer and web sockets to control a zombie-shooting hipster, &quot;Last Man Standing&quot; which used the battery level API to allow people to set off alarms on the laptops of those plugged into power and a first-person game set in the <a href="http://brewhouseandkitchen.com/">Brewhouse &amp; Kitchen</a>, where Pub Hack took place. There was also a similiar entry to ours tracking disasters across the world on a map and a directory of &quot;forts&quot; (read: pubs) in which to stay safe from the apocolypse.</p>
<p>Our team won &quot;Most Likely to Commercially Suceed&quot; which was awesome, Apocalhipster won &quot;Best Design&quot; and the 3D game won overall. It was a really great day and I can't wait for the next one.</p>
<p><strong>Update:</strong> <a href="https://vimeo.com/75569166">Pub Hack on Vimeo</a></p>
]]></content:encoded>
<pubDate>2013-09-18T00:00:00+00:00</pubDate>
</item>
<item>
<title>Thoughts on the iPhone 5S and 5C</title>
<link>https://rknight.me/thoughts-on-the-iphone-5s-and-5c/</link>
<guid>https://rknight.me/thoughts-on-the-iphone-5s-and-5c/</guid>
<content:encoded><![CDATA[
<p>So Apple had their iPhone event. <a href="http://www.apple.com/iphone-5s/">iPhone 5S</a>. <a href="http://www.apple.com/iphone-5c/">iPhone 5C</a>. Nothing particularly surprising but interesting nonetheless.</p>
<h2>iPhone 5S</h2>
<p>The same solid design of the iPhone 5 with an improved camera, A7 chip and fingerprint scanner system called Touch ID. Touch ID is the feature I'm most excited about. Not because I find inputting a pin code &quot;cumbersome&quot;, as Phil Schiller said, but because I don't have to enter my password for iTunes purchases. And <a href="http://www.loopinsight.com/2013/09/10/hands-on-with-the-iphone-5c-and-iphone-5s/">according to Jim Darymple</a>, it works well:</p>
<blockquote>
<p>I went through the process of adding my fingerprint to the 5S and then unlocking the phone using the fingerprint. It’s pretty seamless to do, just following the onscreen instructions.</p>
</blockquote>
<p>The 5S comes in three colours, including the now-infamous &quot;gold&quot;. From what I've seen of it, this isn't some flashy over-the-top monstrosity but a more subtle gold finish. I still won't be buying a gold one though.</p>
<p>The camera has a lot of improvements including video recording at 120fps, a new burst mode for capturing action shots and a dual LED flash to &quot;light your subject perfectly&quot;.</p>
<h2>iPhone 5C</h2>
<p>The 5C is more or less an iPhone 5, with a slightly bigger battery and plastic back. It comes in five colours and you can get a <a href="http://store.apple.com/uk/product/MF035/iphone-5c-case-blue">hideous case</a> for it, if you so choose.</p>
<p>The interesting part about this model is it's not &quot;cheap&quot; per se. Yes, it £80 cheaper than the 5S but that's still not what I would call cheap. But it's cheap enough that it'll likely be free on most contracts in the UK.</p>
<p>Taking a quick look around some carriers websites today, I can't seem to find a mention of the 5S, but the 5C is on all the home pages. It seems to me that this is the phone they're going to be trying to sell over the 5S for obvious reasons.</p>
<h2>iWork, iMovie and iPhoto</h2>
<p>From now on, when you buy a new iPhone or iPad, you're going to get the complete iOS iWork suite, as well as iMovie and iPhoto, for free. This is a great move by Apple and I wouldn't be surprised if the same deal was announced for iWork for Mac when Mavericks is released.</p>
<h2>Release dates</h2>
<p>Pre orders for the 5C and 5S <a href="http://store.apple.com/uk">open on Friday</a>. iOS7 will be released the the public on 18th September, two days before the new iPhones.</p>
<p>You can <a href="http://www.apple.com/apple-events/september-2013/">watch the announcement here</a>.</p>
]]></content:encoded>
<pubDate>2013-09-11T00:00:00+00:00</pubDate>
</item>
<item>
<title>JustDelete.me: One Million Page Views</title>
<link>https://rknight.me/just-delete-me-one-million-page-views/</link>
<guid>https://rknight.me/just-delete-me-one-million-page-views/</guid>
<content:encoded><![CDATA[
<p>When I wrote <a href="https://rknight.me/24-hours-of-just-delete-me/">this post</a> about <a href="http://justdelete.me">justdelete.me</a> I assumed that would pretty much be the best I could hope for in terms of traffic. 3000 visitors in 24 hours was an amazing response to get.The last few days? We’ve been doing that in half an hour.</p>
<h2>News coverage</h2>
<p>The coverage in the news has been insane. We were picked up by <a href="http://minimalmac.com/post/58698882020/robb-lewis-just-delete-me">Minimal Mac</a> on Monday and the traffic stayed pretty steady for the next couple of days. Then we were <a href="http://www.wired.com/gadgetlab/2013-08-just-delete-me/">featured in WIRED</a> which skyrocketed traffic. From there, many of the other tech blogs picked up the story and we ended up at number one on Hacker News, trending on GitHub, number one on <a href="https://pinboard.in/popular/">Pinboard popular</a> and Christina Warren was interviewed about the site on <a href="http://www.foxbusiness.com/on-air/varney-co/index.html">Varney and Co on Fox Business</a>. Other sites that picked it up include <a href="http://techcrunch.com/2013-08-23/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">TechCrunch</a>, <a href="http://mashable.com/2013-08-24/justdelete-me/?utm_cid=mash-com-fb-main-link">Mashable</a> and <a href="http://gigaom.com/2013-08-23/painlessly-erase-your-internet-life-with-justdelete-me/">Gigaom</a>. I was also interviewed for <a href="http://thetechtailor.com/justdeleteme">The Tech Tailor podcast</a>. All of the links I have found about the site are <a href="https://pinboard.in/search/u:rmlewisuk?query=justdeleteme">on Pinboard</a> tagged as justdeleteme.</p>
<h2>Hosting</h2>
<p>I’ve got a little confession to make. I’ve never had more than 10 visitors on my site at the same time (except that one time Panic linked to me and the site died immediately). My hosting was costing me $1.50 a month. The server held up until around Thursday night when CPU usage was at 100%. <a href="http://edpoole.me">Ed</a>, <a href="http://mikerogers.io">Mike</a> and myself all jumped on a Skype call to work out what to do. Stupidly, I hadn’t even made the site static (thinking that hardly anyone would be interested) so we immediately converted it to static. We then cloned the site to <a href="http://mdtm.pl/17Wu4ia">MediaTemple</a>, changed the name servers and waited. It took about 2 days for it to fully transfer over but the majority of traffic was going to MT which has held up really well. Since we moved the site, we’ve used over 80gb of bandwidth even though the site is only around 200kb.</p>
<h2>Contributors and Future plans</h2>
<p>We’re going to continue adding services from pull requests (We’ve done 130 from 61 different contributors so far) and I will open email submission again soon. We now have over 180 services listed (the current count is shown in the console on page load if you’re interested) which I’m sure will expand in the coming weeks. In terms of making some money to cover hosting and analytics costs we’re going to see how the traffic is in a week or two when the frenzy has died down and make a decision then.</p>
<p><a href="http://tosdr.org">Terms of Service; Didn’t Read</a> are looking at integrating our data with theirs to keep as much information up to date as possible. The <a href="https://chrome.google.com/webstore/detail/justdeleteme/hfpofkfbabpbbmchmiekfnlcgaedbgcf">JustDelete.me Chrome Extension</a> is receiving some great feedback and Mike is currently considering creating versions for Firefox and Safari.</p>
<h2>Statistics</h2>
<p>We have been tracking visitor numbers with <a href="https://www.gosquared.com/r/NjE0MzM4">GoSquared</a>. GoSquared are a real-time analytics company and they have been awesome in terms of supporting us and helping with upgrades. I can’t recommended, and thank, them enough. The top sources of traffic for the last 10 days are:</p>
<ul>
<li><a href="http://www.spiegel.de/netzwelt/web/online-account-webseite-mit-anleitungen-um-profil-zu-loeschen-a-918850.html">Spiegel.de</a></li>
<li><a href="http://mashable.com/2013-08-24/justdelete-me/?utm_cid=mash-com-fb-main-link">Mashable</a></li>
<li><a href="https://rknight.me/wired.com/gadgetlab/2013-08-just-delete-me/">Wired</a></li>
<li>Tumblr (<a href="http://tumblr.thefjp.org/post/59394819304/delete-yourself-from-web-services-with-justdelete-me">likely this post</a>)</li>
<li><a href="http://techcrunch.com/2013-08-23/justdelete-me-wants-to-help-you-pull-the-plug-on-all-those-pesky-online-accounts/">TechCrunch</a></li>
</ul>
<p>We’ve had visitors from at least 150 countries with United States, Germany and Italy making up the top three. Here’s a chart showing the last 10 day’s visitors, uniques and page views:</p>
<p><img alt="chart_1" src="http://rmlewisuk.s3.amazonaws.com/just-delete-me-one-million-page-views-chart.png" /></p>
<p>Some other random snippets of information about the site:</p>
<ul>
<li>Over 13k likes on Facebook.</li>
<li>The most used browser was Chrome.</li>
<li>There have been over 6500 tweets about the site.</li>
<li>The most used operating system was Windows 7.</li>
<li>Half a million pages views were served on Monday and Tuesday alone.</li>
<li>The average time spent on the site is around four minutes.</li>
<li>The most used monitor size was 1366 x 768.</li>
<li>Someone made a copy of the site trying to cash in on the press attention. As soon as we created an official Twitter account, he stopped getting mentioned. BOOM.</li>
<li>The highest amount of people on the site at one time was 1842, on Tuesday.</li>
<li>The Twitter account has more followers than me and Ed combined.</li>
</ul>
]]></content:encoded>
<pubDate>2013-08-29T08:04:32+00:00</pubDate>
</item>
<item>
<title>24 Hours of Just Delete Me</title>
<link>https://rknight.me/24-hours-of-just-delete-me/</link>
<guid>https://rknight.me/24-hours-of-just-delete-me/</guid>
<content:encoded><![CDATA[
<p>“<em>I’m sure I’ll get a couple of hundred visitors</em>”. That’s what I was thinking yesterday when I launched <a href="http://justdelete.me">justdelete.me</a>. I wasn’t completely wrong.</p>
<p>The response to justdelete.me has been incredible. In just 24 hours it was linked to by <a href="http://minimalmac.com/post/58698882020/robb-lewis-just-delete-me">Minimal Mac</a> (swoon!), tweeted and retweeted by hundreds of people and had over 3000 visitors.</p>
<p>Since launch five additional services have been added: Reddit, Lovefilm, MySpace, Amazon and Klout. To add Klout, I had to sign up for it to immediately delete my account. I saw things. Crazy, strange things. How’s that for dedication?</p>
<p>Other stats of note:</p>
<ul>
<li>Visitors from over 70 different countries</li>
<li>Around 30% of people were using Chrome</li>
<li>Someone from <a href="http://d.pr/i/I8JN">Apple visited</a></li>
<li>The top three operating systems were OS X 10.8, iOS 6.1 and Windows 7</li>
</ul>
<p>Also Ed, who designed the site, isn’t getting anywhere near enough credit for the project so <a href="http://edpoole.me/portfolio">go visit his portfolio</a>.</p>
]]></content:encoded>
<pubDate>2013-08-20T13:49:57+00:00</pubDate>
</item>
<item>
<title>Just Delete Me</title>
<link>https://rknight.me/just-delete-me/</link>
<guid>https://rknight.me/just-delete-me/</guid>
<content:encoded><![CDATA[
<p>After seeing a few tweets about how difficult it can be to delete your Skype account and then hearing that Netflix flat-out <em>won’t</em> delete your details I decided to build <a href="http://justdelete.me">JustDelete.me</a>.</p>
<p>JustDelete.Me is a directory of urls to delete your account from web services. (Yes, I am aware how terrible that description is. If you’ve got a better one, <a href="https://rknight.me/contact">let me know</a>). Services are marked either easy, medium or hard depending on how difficult it is to delete that account. Those marked as hard have additional information on how to completely remove your account, such as Skype which requires you to contact customer services to do so.</p>
<p>A lot of inspiration for the site came from Steve Streza’s <a href="http://devcenter.me">DevCenter.me</a> and the search functionality is modified from the repository. I thought about just forking the repo and modifying it but the sites are different enough to warrant the time to build it myself. Also, where would have been the fun in that? <a href="http://edpoole.me">Ed Poole</a> did a great on job on taking the initial concept and making it look a hell of a lot nicer than what I &quot;designed&quot;.</p>
<p>At present there are 16 services listed. If you want to add a new service, <a href="https://rknight.me/contact">drop me an email</a> and let me know. Alternatively, <a href="https://github.com/rmlewisuk/justdelete.me">fork the repo</a> on GitHub, add the site to the json file and submit a pull request.</p>
<p>Update: <a href="https://rknight.me/24-hours-of-just-delete-me/">24 Hours of Just Delete Me</a></p>
]]></content:encoded>
<pubDate>2013-08-19T08:00:34+00:00</pubDate>
</item>
<item>
<title>How PF Meet Helped Me Get a Placement</title>
<link>https://rknight.me/how-pf-meet-helped-me-get-a-placement/</link>
<guid>https://rknight.me/how-pf-meet-helped-me-get-a-placement/</guid>
<content:encoded><![CDATA[
<p>I <a href="http://www.pfmeet.co.uk/how-pf-meet-helped-me-get-a-placement">wrote a post over on the PF Meet blog</a> about how the event helped me get an industrial placement. Worth a read if you're going to be applying for placements or wondering about the benefits of events like PF Meet.</p>
]]></content:encoded>
<pubDate>2013-08-16T16:03:13+00:00</pubDate>
</item>
<item>
<title>Lego Back to The Future Set Review</title>
<link>https://rknight.me/lego-back-to-the-future-set-review/</link>
<guid>https://rknight.me/lego-back-to-the-future-set-review/</guid>
<content:encoded><![CDATA[
<p><img alt="" src="http://rmlewisuk.s3.amazonaws.com/lego-back-to-the-future-set-review.png" /></p>
<p>I <em>love</em> Back to The Future. I even have a <a href="http://instagram.com/p/HZnNqHMrQx/">DeLorean tattoo</a>. Back in December of last year, <a href="http://blog.lego.cuusoo.com/2012-12-20/results-of-the-summer-lego-review/">Lego announced that </a> that they were going to be making a Back to The Future themed set. On Saturday my Back to The Future Lego set arrived and I opened it like a kid on Christmas morning.</p>
<p>The set has 401 pieces, plus the usual random selection of spares, and a <em>huge</em> instruction manual. A majority of the manual is to construct the DeLorean from the first film with the last few pages showing the modifications needed to make the other two versions. You get both the “OUTATIME” licence plate as well as the barcode one from the future.</p>
<p>The flux capacitor custom brick is great and the time circuit states the destination time, rather than 1955, as 1958 which is the year the first Lego brick was introduced. The gull-wing doors are particularly fun to use, despite not having actual windows in them. They can be a little fragile and tend to fall off if I try and move the set whilst holding them.</p>
<p>The Marty and Doc minifigures have double-sided faces (happy and shocked) and Doc has a double sided body; one side is his lab coat and one is a radiation suit. The figures are slightly too big to fit comfortably into the car, making it somewhat frustrating to close the doors. Although the finished product doesn’t look <em>exactly</em> like the films, it’s pretty close considering it’s made of Lego and if you’re a fan of Back to The Future, you’re going to want this set. I got mine from <a href="http://shop.lego.com/en-GB/The-DeLorean-time-machine-21103">the Lego online store</a> but it’s available pretty much anywhere Lego sets are sold.</p>
]]></content:encoded>
<pubDate>2013-08-12T10:00:52+00:00</pubDate>
</item>
<item>
<title>Instapaper Beta</title>
<link>https://rknight.me/instapaper-beta/</link>
<guid>https://rknight.me/instapaper-beta/</guid>
<content:encoded><![CDATA[
<p>Instapaper, having been <a href="http://www.marco.org/2013-04-25/instapaper-next-generation">sold to Betaworks</a> in April, has a <a href="http://beta.instapaper.com">shiny new beta</a> for the web interface which is long overdue. Not that the site wasn’t usable, but it was starting to feel very dated when compared to the likes of <a href="http://getpocket.com">Pocket</a>. Despite this I had stuck with Instapaper as it had the one thing Pocket still doesn’t have: a way for me to pay them for the service, but that’s a topic for another day.</p>
<p>The new interface is a complete overhaul of the old site and looks great. There are a number of things that could do with improvement (too much whitespace, not great on smaller screens) but it’s still in beta so I’m sure things will get better before the public release.</p>
<p>It’s nice, for once, to see something be sold and not just left to fade into internet history. Although it was fairly certain this wouldn’t happen based on what Marco Arment said in this announcement of the sale:</p>
<blockquote>
<p>We’ve structured the deal with Instapaper’s health and longevity as the top priority, with incentives to keep it going well into the future.</p>
</blockquote>
<p>On top of the web beta, <a href="http://blog.instapaper.com/post/57817543037">Betaworks said in a blog post</a> that there will be “<em>..new versions of the Instapaper iOS and Android apps</em>”. This is an exciting time for Instapaper users and the future looks great for the service.</p>
]]></content:encoded>
<pubDate>2013-08-10T00:00:00+00:00</pubDate>
</item>
<item>
<title>Automatically Rename TV Shows with Hazel and TVNamer</title>
<link>https://rknight.me/automatically-rename-tv-shows-with-hazel-and-tvnamer/</link>
<guid>https://rknight.me/automatically-rename-tv-shows-with-hazel-and-tvnamer/</guid>
<content:encoded><![CDATA[
<p>I download a lot of TV shows (all legal of course) and have been renaming the files using <a href="https://github.com/tvrenamer/tvrenamer">TVRenamer</a>. After using TVRenamer manually for months I got fed up with having to do it, or the much more likely scenario happened where I would just leave them to build up in my downloads folder. I recently started using <a href="http://www.noodlesoft.com/hazel.php">Hazel</a> to automatically rename and organise my photos. This works well because Hazel simply changes the filename to the date they were taken. TV shows are a little more complex than that as they have season and episode numbers as well as titles. Enter <a href="https://github.com/dbr/tvnamer">TVNamer</a>.</p>
<p>TVNamer is a command line utility that takes a TV episode with an ugly filename (show.name.3x20.720[HD].avi) and changes it to something much more readable (ShowName S03E20 - Episode Title.avi). To install TVNamer follow the simple instructions in the <a href="https://github.com/dbr/tvnamer/blob/master/readme.md">readme</a>, it only takes a couple of minutes. Once it’s installed to can use it by simple typing:</p>
<p>tvnamer </p>
<p>TVNamer will then parse the file, look for episode information and, if it finds more than one result, will prompt you to choose the correct one and confirm the rename. When I tested this the correct result was always the first one which makes using Hazel to automate the process much easier.</p>
<p>If you’re not familiar with Hazel, it’s a preference pane for Mac that monitors folders and matches files based on rules much like iTunes smart playlists. You can then set actions to perform when your rules are matched such as move files, rename them or run shell scripts.</p>
<p>To setup automatic renaming, open Hazel, select the folder where your TV shows download to, then add a new rule. Obviously rules will entirely depend on the type of files you choose to download but personally I set Hazel to find any files that have the extension <em>mkv</em>, <em>avi</em> or <em>mp4</em>. Then choose to run a shell script on the matched files and choose <em>“embedded script”</em>.</p>
<p><img alt="Hazel Screenshot" src="http://rmlewisuk.s3.amazonaws.com/automatically-rename-tv-shows-with-hazel-and-tvnamer-sshot.png" /></p>
<p>Select edit script and paste in the following:</p>
<p>/usr/local/bin/tvnamer --batch &quot;$1&quot;</p>
<p>The <em>–batch</em> option tells TVNamer to automatically choose the first result and rename it and the <em>$1</em> refers to the matched file Hazel found. To test your rule is working select the cog dropdown in the main Hazel screen and select <em>&quot;Run rules now&quot;</em>. Any files that match your Hazel rule should be renamed.</p>
<p>Initially I found that Hazel can sometimes have issues with running TVNamer if you’re matching files within subdirectories of your downloads folder. To remedy this I have Hazel move matched files to another folder and rename them from there. Refer to <a href="http://mac.tutsplus.com/tutorials/app-training/9-hazel-rules-to-increase-your-productivity/">this Tuts+ guide</a> to find out how to use Hazel to move files automatically.</p>
]]></content:encoded>
<pubDate>2013-08-08T00:00:00+00:00</pubDate>
</item>
<item>
<title>Hold Alt When Resizing to Center Windows on OS X</title>
<link>https://rknight.me/hold-alt-when-resizing-to-center-windows-on-os-x/</link>
<guid>https://rknight.me/hold-alt-when-resizing-to-center-windows-on-os-x/</guid>
<content:encoded><![CDATA[
<p>Spotted this tip on Twitter (I can't remember/find who tweeted it, sorry!) and it blew my mind. When resizing a window in OS X, hold down alt. The window will stay centered on the screen. Amazing.</p>
]]></content:encoded>
<pubDate>2013-03-20T00:00:00+00:00</pubDate>
</item>
<item>
<title>Google Reader and Alternatives</title>
<link>https://rknight.me/google-reader-and-alternatives/</link>
<guid>https://rknight.me/google-reader-and-alternatives/</guid>
<content:encoded><![CDATA[
<p>Google have announced that they're shutting down Google Reader come July 1st:</p>
<blockquote>
<p>We launched Google Reader in 2005 in an effort to make it easy for people to discover and keep tabs on their favorite websites. While the product has a loyal following, over the years usage has declined. So, on July 1, 2013, we will retire Google Reader. Users and developers interested in RSS alternatives can export their data, including their subscriptions, with Google Takeout over the course of the next four months</p>
</blockquote>
<p>They call it usage decline but it's more likely that most users are simply using it as a sync engine to access their feeds through apps like <a href="http://reederapp.com/">Reeder</a>. Whatever the reasons, this leaves many of us at a dead end in terms of reading RSS. You can of course export your data and Dave Caolo has <a href="http://52tiger.net/daily-tip-export-your-feeds-from-google-reader/">outlined the process on 52Tiger</a>. Other have mentioned using services like <a href="http://flipboard.com/">Flipboard</a> or <a href="https://www.pulse.me/">Pulse</a> but I've always found these apps to be a little bloated and they don't really fit with how I like to consume news. The only viable alternative as of right now is <a href="http://www.feedafever.com/">Fever</a>. Fever is a self-hosted aggregator and is supported on iOS by the aforementioned Reeder as well as <a href="https://itunes.apple.com/ca/app/sunstroke/id488564806?mt=8">Sunstroke</a>. Of course, being self-hosted means you're going to have to have somewhere to install it and at least some knowledge of server-side tech. <a href="http://www.macstories.net/tutorials/how-anyone-can-install-fever-in-ten-minutes/">MacStories</a> have got a great tutorial to get you started. There is hope, however, in the form of <a href="http://feedwrangler.net/">Feed Wrangler</a> a project by <a href="https://alpha.app.net/davidsmith">David Smith</a>:</p>
<blockquote>
<p>This project is already well along in development, with a working web interface and native apps. I was expecting to launch early this summer but Google has announced that they are closing down Reader July 1. That accelerates my plans and I am now working to get ready for public consumption as soon as possible.</p>
</blockquote>
<p>Between Fever, Feed Wrangler as well as projects that haven't been announced yet June might not be so bad for RSS after all.</p>
]]></content:encoded>
<pubDate>2013-03-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>70Decibels and 5by5</title>
<link>https://rknight.me/70decibels-and-5by5/</link>
<guid>https://rknight.me/70decibels-and-5by5/</guid>
<content:encoded><![CDATA[
<p><a href="http://www.70decibels.com/blog/2013/3/13/were-moving-to-5by5.html">70Decibels is merging with 5by5</a> which is great news for everyone involved, including listeners. Myke has worked incredibly hard to get 70Decibels to where it is today, starting with The Bro Show and expanding to the packed list of shows now:</p>
<blockquote>
<p>70Decibels is nearly 18 months old. It's amazing what has happened in that time and we all know that we owe it all to you, the listeners. Without you tuning in every week, getting involved, asking questions, promoting us and letting us know when we fall short, we wouldn't be here. I just want to thank you all from the bottom of my heart for everything you've done to get us to this point. All of us at the network cannot wait to share what comes next. Thank you all so much.</p>
</blockquote>
<p>I'm not only a fan of 70Decibels and 5by5 but also, I'm glad to say, Myke's friend. I couldn't be happier for him and this merger is one step closer to him going full time as a podcaster extraordinaire. Myke and Dan announced and talked at length about the merger, as well as podcasting in general on <a href="http://www.70decibels.com/cmdspace/2013/3/13/033-a-big-announcement-with-dan-benjamin.html">CMD+Space 033</a>.</p>
]]></content:encoded>
<pubDate>2013-03-14T00:00:00+00:00</pubDate>
</item>
<item>
<title>DIY Game Controller Rack</title>
<link>https://rknight.me/diy-game-controller-rack/</link>
<guid>https://rknight.me/diy-game-controller-rack/</guid>
<content:encoded><![CDATA[
<p>Two Playstation 2, two GameCube, four N64, two Xbox, four Wii, two Guitar Hero. You get the idea, I have lots of controllers. So does <a href="http://mattgemmell.com/2013/03-02-playing-nintendo-games-on-a-mac/">Matt Gemmell</a>. And I'm sure, so do a lot of other people. My solution for organising them is a fairly simple one, but I haven't seen it documented elsewhere on the web. So here it is.</p>
<p>I had an old DVD rack not being used for anything so I figured using that would be a good start (and avoid any cost to me). I purchased some blank DVD cases and popped them in every forth slot. This gave me enough spaces to house all of my controllers as well as a couple of spaces for Wii Nunchucks. I also left a larger space at the bottom for those damn Wii wheels and a mug which holds all of my controller extension cables, extra memory cards for the PS2 and GameCube.</p>
<p><img alt="Whole game controller rack" src="http://rmlewisuk.s3.amazonaws.com/diy-game-controller-rack-whole.png" /> For the Guitar Hero controllers, I put some screws in each side of the rack (measuring the width before, of course) and wrapped them in Cellotape although electrical tape, which I didn't have, would have been better. The Guitars slot nicely into these and hang out the way. I also stuck one screw in the front of the rack for the Wii Zapper.</p>
<p><img alt="guiter hero controller holder" src="http://rmlewisuk.s3.amazonaws.com/diy-game-controller-rack-guitar.png" /></p>
<p>And that's all there is to it.</p>
]]></content:encoded>
<pubDate>2013-03-11T10:00:31+00:00</pubDate>
</item>
<item>
<title>I am a Tool</title>
<link>https://rknight.me/i-am-a-tool/</link>
<guid>https://rknight.me/i-am-a-tool/</guid>
<content:encoded><![CDATA[
<p>As many of you noticed, moments ago my timeline (and yours) was filled with tweets from every single blog post I've ever written. I apologise, I am a tool. Pro tip: Import posts <em>before</em> setting up Wordpress to Twitter.</p>
]]></content:encoded>
<pubDate>2013-03-05T17:46:51+00:00</pubDate>
</item>
<item>
<title>The Difference Between Fact and Trivia</title>
<link>https://rknight.me/the-difference-between-fact-and-trivia/</link>
<guid>https://rknight.me/the-difference-between-fact-and-trivia/</guid>
<content:encoded><![CDATA[
<p>This morning I took a practice exam for one of the web units I’m studying. Most of the questions were fairly easy but one of them in particular annoyed me. The question was:</p>
<blockquote>
<p>“PageRank is so named because it was created by Larry Page, not because it ranks pages”</p>
</blockquote>
<p>I incorrectly marked this as <em>false</em>. When I asked how much trivia we would be asked in the exam, my lecturer told me (quite agressively) that the question is not trivia but a fact that is useful to know. I argued the counterpoint, saying a fact is something useful to developing my understanding of a specific topic or technology, in this case, PageRank. She disagreed.</p>
<p>Here is a quote from an archived version of a <a href="http://web.archive.org/web/20090424093934/http://www.google.com/press/funfacts.html">Google Fun Facts Page</a>:</p>
<blockquote>
<p>The basis of Google’s search technology is called PageRank™, and assigns an “importance” value to each page on the web and gives it a rank to determine how useful it is. However, that’s not why it’s called PageRank. It’s actually named after Google co-founder Larry Page.</p>
</blockquote>
<p>The first part of that statement is the fact. The last sentence is trivia. It holds no bearing on my understanding of PageRank. Should we really be tested on trivial facts about Google, or any other company for that matter? In my opinion, no.</p>
<p>Rant over.</p>
]]></content:encoded>
<pubDate>2013-02-27T13:11:01+00:00</pubDate>
</item>
<item>
<title>What to Do When Your iTunes Account Gets Hacked</title>
<link>https://rknight.me/what-to-do-when-your-itunes-account-gets-hacked/</link>
<guid>https://rknight.me/what-to-do-when-your-itunes-account-gets-hacked/</guid>
<content:encoded><![CDATA[
<p>Early Saturday morning, 2a.m. to be exact, I recieved an email from Apple confirming my lastest purchase. Nothing unusual, I buy apps all the time. Didn’t bother checking it, just marked it as read and archived it. Then I started thinking about what I had bought that day from the iTunes store. I couldn’t think of anything, so I checked the email: £149.99 for an in-app purchase of NBA Season Pass. “Shit” was my first reaction. My account had been comprimised.</p>
<p>As someone with a keen interested in technology and specifically Apple, I’ve read about this stuff countless times and yet I had no idea what to do. So I had to wing it. First thing was fairly obvious: change my password. If your account gets comprimised, this is the first thing you need to do. To do this go to <a href="http://iforgot.apple.com">http://iforgot.apple.com</a> and reset your password.</p>
<p>Once I had done that, I had no idea how to go about getting Apple to stop/refund the charge. I Googled around and came across <a href="http://www.apple.com/support/contact/">this contact page</a> on Apple’s site. I went through the various options and eventually got to a point where I could request a support call. No sooner had I selected for Apple to call me, than my phone rang.</p>
<p>Trying to sound reasonably calm, I explained to the lady on the phone that the purchase was not me and I needed a refund. She very clearly told me what she was doing at all times, confirmed with me that I had changed my password and told me I would get a refund within 24 hours.</p>
<p>At this point (around 3am) I went to sleep. When I woke up I had an email from both Apple, and Click and Buy, confirming that the refund had been sucessfully processed. And breath. To clarify, for anyone who is reading this because their account has been comprimised:</p>
<ol>
<li>Change you password immediately <a href="http://iforgot.apple.com">http://iforgot.apple.com</a></li>
<li>Request a support call from <a href="http://www.apple.com/support/contact/">http://www.apple.com/support/contact/</a></li>
<li>Relax</li>
</ol>
<p>The most annoying part about the whole thing? Because I’m in the UK, I couldn’t have purchased the season pass even if I wanted to, as it’s US only. It was a scary moment that I hope not to have to repeat. However, Apple’s fast response time and the helpfulness of the representative who I spoke to on the phone are exactly the reason why I buy into Apple’s ecosystem.</p>
]]></content:encoded>
<pubDate>2012-11-26T20:30:49+00:00</pubDate>
</item>
<item>
<title>The State of Passbook in the UK</title>
<link>https://rknight.me/the-state-of-passbook-in-the-uk/</link>
<guid>https://rknight.me/the-state-of-passbook-in-the-uk/</guid>
<content:encoded><![CDATA[
<p>As you probably know, Passbook support is a little bit sparse in the UK at the moment.</p>
<p>Yesterday, the Eventbrite app got <a href="http://blog.eventbrite.com/add-eventbrite-tickets-to-passbook-on-ios-6/">updated to support Passbook</a> which is great news for anyone who uses the service. But what about the somewhat more day-to-day apps? I searched around, or asked directly, to get some answers.</p>
<p><a href="https://twitter.com/UKTesco/status/253465105130479616">Tesco</a>:</p>
<blockquote>
<p>”We don’t have any information as yet”</p>
</blockquote>
<p><a href="https://twitter.com/nectar/status/253477171304226816">Nectar</a>:</p>
<blockquote>
<p>”Hi James, passbook on ios6 does look exciting and we’re looking into it’s opportunities, so watch this space :) ^SD”</p>
</blockquote>
<p><a href="https://twitter.com/AskAmex/status/252113756950249472">American Express </a> (which already has Passbook support in the US):</p>
<blockquote>
<p>”Hi there Andy! Regrets, at this time we do not have any information in regards to AMEX Pass in the UK. We will update you if avail.”</p>
</blockquote>
<p><a href="https://twitter.com/CostaCoffee/status/251300909336903680">Costa Coffee</a>:</p>
<blockquote>
<p>”not as yet :-( this is something we are reviewing - Thanks Hannah”</p>
<p>”this is not something that has been confirmed unfortunately, hopefully it may be something that is implemented in the future.”</p>
</blockquote>
<p><a href="https://twitter.com/British_Airways/status/251324123026964480">British Airways</a>:</p>
<blockquote>
<p>”…That’s something our team are currently looking into. Thanks.”</p>
</blockquote>
<p>Promising, but when asked about an ETA:</p>
<blockquote>
<p>”Not yet but we are certainly aware of the interest.”</p>
</blockquote>
<p><a href="https://twitter.com/Starbucks/status/249202870891728896">Starbucks (US account)</a>:</p>
<blockquote>
<p>”Updated to iOS 6? Our Passbook update is coming at the end of this month! 00111010 00101001”</p>
</blockquote>
<p>That was on the 21st of September. Although judging by some of their tweets, it seems it might be stuck in review. I have been unable to find any information as to whether this update will support the UK as well. From the <a href="https://twitter.com/StarbucksUK/status/250958138176569344">Starbucks UK account</a>:</p>
<blockquote>
<p>”Not too much to ask! We’re working on it.”</p>
</blockquote>
<p>Somewhat inconclusive.</p>
<p>There is some hope, however. Amsys are <a href="http://www.amsys.co.uk/2012/blog/passbook-comes-to-amsys-apple-training/">sending Passbook passes</a> when you book a training course with them and I did find an online <a href="http://www.odeon.co.uk/film30/">Passbook coupon from Odeon</a>, so there are a couple of companies who “get it”. Hopefully, more companies will begin to understand how important this could be to thier business, we’ll start to see the Passbook page populated with more than just airlines and that one hotel company. If there’s any apps, services or other Passbook related paraphernalia I may have missed, drop me a message <a href="http://twitter.com/rmlewisuk">on Twitter</a> or <a href="http://alpha.app.net/rmlewisuk">App.net</a>.</p>
]]></content:encoded>
<pubDate>2012-10-03T14:16:50+00:00</pubDate>
</item>
<item>
<title>Delivery Companies: The Antithesis of Convenience</title>
<link>https://rknight.me/delivery-companies-the-antithesis-of-convenience/</link>
<guid>https://rknight.me/delivery-companies-the-antithesis-of-convenience/</guid>
<content:encoded><![CDATA[
<p>I wrote about delivery companies a couple of weeks ago and I have been thinking about the issues surrounding this and how it could be fixed (in an ideal world).</p>
<p><strong>Operating hours</strong></p>
<p>The thing that annoys me the most is the operating hours of delivery companies. As an example, my local Domino’s is open from midday until midnight every day. The opening hours are set based on when people would most likely want pizza. McDonald’s opens at 7am for people who want breakfast. Newsagents open early to be able to sell newspapers while they’re still relevant. And yet, delivery companies continue to maintain a schedule that is the antithesis of convenience.</p>
<p><strong>Notification and tracking</strong></p>
<p>Most delivery companies offer some kind of order tracking, but rarely is this as useful in real life as it is in theory. Telling me every time someone scans my parcel at some middle-of-nowhere sorting office is not helpful. Here’s what I actually want to know:</p>
<ul>
<li>When my parcel is dispatched</li>
<li>When my parcel is on the delivery van</li>
<li>When my parcel is an hour away, or at least an estimated delivery slot</li>
</ul>
<p>That’s all. Whether it’s by phone, email, text or Twitter, just let me know when my parcel is going be arriving, within a reasonable time slot.</p>
<p><strong>Solutions</strong></p>
<p><a href="http://www.amazon.co.uk/gp/help/customer/display.html?nodeId=200742950">Amazon Locker</a> goes some way to solving at least some of the issues. But at the moment, it can only be used for specific items that Amazon sell. It’s a start, but we’re a long way off of a seamless online buying experience. As a side note, I used Amazon Locker for the first time this week, and was very impressed with the entire process.</p>
<p><strong>The problem</strong></p>
<p>As a business, your operating hours should match the hours that are convenient to your customers. You should want to make the experience as seamless and easy as possible for your customers. The problem is, we are not the customers. Much like Facebook’s customers are their advertisers and not the users, delivery companies are accountable only to thier customers: the businesses that are sending us our latest toys that we’ve ordered online. The problem is the delivery companies don’t care how the experience is for us, how difficult is it to take a day off work just to sign for a parcel or how annoying it is to go to the “local” sorting office between similarly inconvenient hours. We don’t pay them, we are not thier customers. And that’s the problem.</p>
]]></content:encoded>
<pubDate>2012-08-20T18:26:47+00:00</pubDate>
</item>
<item>
<title>Get Custom Screensavers on the Kindle 4 on OS X</title>
<link>https://rknight.me/get-custom-screensavers-on-the-kindle-4-mac-osx/</link>
<guid>https://rknight.me/get-custom-screensavers-on-the-kindle-4-mac-osx/</guid>
<content:encoded><![CDATA[
<p>This guide is for getting custom screensavers onto the new Kindle (Non-Touch) using Mac OSX.</p>
<p>The first thing you need to do is plug your Kindle into your Mac via USB. Then create a file with the name <code>ENABLE_DIAGS</code> and make sure it has <em>no extension</em> (e.g. .txt, .jpg). Copy this file to the root of your Kindle and then eject. Now go into settings and restart your Kindle and it should enter diagnostics mode.</p>
<p>Once your in the diagnostics mode, go to <code>Misc individual diagnostics &gt; Utilities &gt; Enable USBnet</code> and press the right arrow to confirm. You are now ready to create the folder you'll need to add custom screensavers.  Connect your Kindle to your Mac and open up network preferences.</p>
<p>On the left hand side you should see <code>RNDIS/…Gadget</code> in the connections list. Select this and then change <code>Configure Ipv4</code> to &quot;manually&quot;. Change the IP address to <code>192.168.15.1</code>. Now open up the Terminal (Applications &gt; Terminal). From the terminal you will need to enter each of these commands one by one either by typing them out, or copying and pasting each one. I would suggest using <a href="http://pastebin.com/17czdUS7">this pastebin dump</a> to copy from to avoid any weird issues. The root password is <code>mario</code>, enter this when prompted (after the first command).</p>
<p>The commands you need to enter are as follows:</p>
<p><code>ssh root@192.168.15.1</code></p>
<p><code>enter password if/when prompted</code></p>
<p><code>mntroot rw mkdir /mnt/us/screensaver mount /dev/mmcblk0p1 /mnt/base-mmc mv /mnt/base-mmc/opt/amazon/screen_saver/600x800 /mnt/base-mmc/opt/amazon/screen_saver/600x800.old ln -sfn /mnt/us/screensaver /mnt/base-mmc/opt/amazon/screen_saver/600x800</code></p>
<p>Now you can disconnect your Kindle and exit the diagnostics mode. To do this, simply press the right arrow to exit each menu until you see <code>Exit, Reboot or Disable Diags</code>. Select this and then choose <code>Disable diags</code> and confirm with the left arrow and your Kindle should reboot. Once your Kindle has rebooted, connect it back up to your Mac and open it in Finder. There should be a new folder called &quot;Screensavers&quot;. Simply put your custom screensavers in that folder and restart your Kindle. And voila, custom screensavers!</p>
<p>If you need screensavers, I found most of the ones I'm using from <a href="http://kindlewallpapers.tumblr.com/">here</a>. If you want to create your own, screensavers must be in .jpg or .png format and have dimensions of 600 x 800. Have fun!</p>
]]></content:encoded>
<pubDate>2012-03-21T01:17:56+00:00</pubDate>
</item>
</channel>
</rss>